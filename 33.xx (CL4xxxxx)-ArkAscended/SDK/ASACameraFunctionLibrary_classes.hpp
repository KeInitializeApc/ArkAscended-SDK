#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass ASACameraFunctionLibrary.ASACameraFunctionLibrary_C
class UASACameraFunctionLibrary_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UASACameraFunctionLibrary_C* GetDefaultObj();

	void FinalOverridePivotLocation(class APrimalCharacter* CameraOwnerCharacter, struct FVector* CurrentPivotLocation, struct FVector* DesiredPivotLocation, class UObject** __WorldContext);
	bool ShouldApplyAnyPitchBasedModifier(class APrimalCharacter* CameraOwnerCharacter, class UObject** __WorldContext, bool* CallFunc_IsTargeting_ReturnValue);
	double ApplyPitchBasedModifierToArmLengthInterp(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, class UObject** __WorldContext, double PitchModifierAlpha, int32* FoundEntryIndex, bool* CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue_1, double* CallFunc_Lerp_ReturnValue, double* CallFunc_Lerp_ReturnValue_1, double* CallFunc_Lerp_ReturnValue_2, struct FPrimalCameraInterpParams* K2Node_MakeStruct_PrimalCameraInterpParams, double CallFunc_SelectFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast, float* K2Node_MakeStruct_TargetVelocity_ImplicitCast, float* K2Node_MakeStruct_SpringStiffness_ImplicitCast, float* K2Node_MakeStruct_CriticalDamping_ImplicitCast);
	void DebugPitchBasedModifier(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraPitchBasedModifier& PitchBasedModifier, int32 EntryIndex, double ModifierAlpha, class UObject** __WorldContext, bool* CallFunc_IsValid_ReturnValue);
	TArray<struct FPrimalCameraPitchBasedModifier> FinalOverridePivotOffset(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, struct FVector* DesiredPivotOffset, class UObject** __WorldContext);
	float ApplyPitchBasedModifierToPivotOffset(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, struct FVector* DesiredPivotOffset, class UObject** __WorldContext, double PitchModifierAlpha, int32* FoundEntryIndex, bool* CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue, double CallFunc_SelectFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	double ApplyPitchBasedModifierToArmLength(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, double* CurrentArmLength, double* DesiredArmLength, class UObject** __WorldContext, double PitchModifierAlpha, int32* FoundEntryIndex, bool* CallFunc_IsValid_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double* K2Node_VariableGet_DesiredArmLength_ImplicitCast, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue_1, double* CallFunc_Lerp_ReturnValue, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, float K2Node_VariableSetRef_Target_ImplicitCast, double CallFunc_SelectFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast);
	double ShouldApplyPitchBasedModifier(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraPitchBasedModifier& PitchBasedModifier, class UObject** __WorldContext, double LerpAlpha, bool* CallFunc_IsValid_ReturnValue, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, double CallFunc_FMax_ReturnValue, double CallFunc_FMax_ReturnValue_1, float* CallFunc_BreakRotator_Roll, float* CallFunc_BreakRotator_Pitch, float* CallFunc_BreakRotator_Yaw, double* CallFunc_MapRangeClamped_ReturnValue);
	double ApplyPitchBasedModifierToInterpParams(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, struct FPrimalCameraInterpParams* InterpParamsX, struct FPrimalCameraInterpParams* InterpParamsY, struct FPrimalCameraInterpParams* InterpParamsZ, class UObject** __WorldContext, double PitchModifierAlpha, struct FPrimalCameraInterpParams* InterpParamsToModify, int32* FoundEntryIndex, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool* CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue_1, double* CallFunc_Lerp_ReturnValue, double* CallFunc_Lerp_ReturnValue_1, double* CallFunc_Lerp_ReturnValue_2, struct FPrimalCameraInterpParams* K2Node_MakeStruct_PrimalCameraInterpParams, double CallFunc_SelectFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast, float* K2Node_MakeStruct_SpringStiffness_ImplicitCast, float* K2Node_MakeStruct_TargetVelocity_ImplicitCast, float* K2Node_MakeStruct_CriticalDamping_ImplicitCast);
	struct FPrimalCameraInterpParams FinalOverrideCameraArmLengthInterpParams(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, class UObject** __WorldContext);
	bool FinalOverrideCameraArmLength(class APrimalCharacter* CharacterToKeepOnScreen, const struct FPrimalCameraParams& CameraParams, class APrimalCharacter* CameraOwnerCharacter, class UObject** __WorldContext, double ScreenAreaToUse, bool VelocityIsNearlyZero, struct FVector* WorldLocationToProject, double CharacterScreenAreaY, double CharacterScreenAreaX);
	double Final_Override_Pivot_Interp_Params(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, const struct FPrimalCameraInterpParams& LastPivotInterpParamsX, const struct FPrimalCameraInterpParams& LastPivotInterpParamsY, const struct FPrimalCameraInterpParams& LastPivotInterpParamsZ, const struct FPrimalCameraInterpParams& PivotInterpParamsX, const struct FPrimalCameraInterpParams& PivotInterpParamsY, const struct FPrimalCameraInterpParams& PivotInterpParamsZ, class UObject** __WorldContext, double PrintModifierAlpha, double TheScreenArea, double* CharScreenAreaY, double CharScreenAreaX, int32* EntryIndexForLerping, double LerpAlpha, bool* CallFunc_IsValid_ReturnValue, bool* CallFunc_IsValid_ReturnValue_1, double CallFunc_GetWorldDeltaSeconds_ReturnValue, struct FPrimalCameraInterpParams* K2Node_MakeStruct_PrimalCameraInterpParams, double CallFunc_Less_DoubleDouble_B_ImplicitCast, float* K2Node_MakeStruct_TargetVelocity_ImplicitCast, float* K2Node_MakeStruct_CriticalDamping_ImplicitCast, float* K2Node_MakeStruct_SpringStiffness_ImplicitCast);
	double ApplyModifiersToInterpParams(class APrimalCharacter* CameraOwnerCharacter, const struct FPrimalCameraParams& CameraParams, struct FPrimalCameraInterpParams* InterpParams, TArray<struct FPrimalCameraInterpScreenAreaModifier>* InterpParamsModifiers, class FName* DebugScreenModifierId, class UObject** __WorldContext, const struct FPrimalCameraInterpScreenAreaModifier& ScreenModifierForDebug, double PrintModifierAlpha, double TheScreenArea, double* CharScreenAreaY, double CharScreenAreaX, int32* EntryIndexForLerping, double LerpAlpha, bool* CallFunc_IsValid_ReturnValue, bool* CallFunc_IsValid_ReturnValue_1, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, double CallFunc_FMax_ReturnValue, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, double CallFunc_FMax_ReturnValue_1, double* CallFunc_MapRangeClamped_ReturnValue, double CallFunc_WorldLocationToScreenArea_ScreenAreaX, double CallFunc_WorldLocationToScreenArea_ScreenAreaY, double CallFunc_WorldLocationToScreenArea_ViewportSizeX, double CallFunc_WorldLocationToScreenArea_ViewportSizeY, double CallFunc_WorldLocationToScreenArea_ScreenRawPosX, double CallFunc_WorldLocationToScreenArea_ScreenRawPosY, bool* Temp_bool_Variable, struct FPrimalCameraInterpParams* K2Node_Select_Default, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue, double* CallFunc_Subtract_DoubleFloat_ReturnValue_1, double* CallFunc_Lerp_ReturnValue, double* CallFunc_Lerp_ReturnValue_1, double* CallFunc_Lerp_ReturnValue_2, struct FPrimalCameraInterpParams* K2Node_MakeStruct_PrimalCameraInterpParams, double CallFunc_SelectFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast, float* K2Node_MakeStruct_SpringStiffness_ImplicitCast, float* K2Node_MakeStruct_TargetVelocity_ImplicitCast, float* K2Node_MakeStruct_CriticalDamping_ImplicitCast);
	bool WorldLocationToScreenArea(class APrimalCharacter* CameraOwnerCharacter, struct FVector* WorldLocationToProject, class UObject** __WorldContext, double ScreenAreaX, double ScreenAreaY, double ViewportSizeX, double* ViewportSizeY, double ScreenRawPosX, double ScreenRawPosY, bool* CallFunc_IsValid_ReturnValue, class APlayerController* CallFunc_CastToPlayerController_ReturnValue, double* CallFunc_BreakVector2D_X, double* CallFunc_BreakVector2D_Y, bool* CallFunc_IsValid_ReturnValue_1, double* CallFunc_BreakVector2D_X_1, double* CallFunc_BreakVector2D_Y_1, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue, bool CallFunc_EqualEqual_DoubleDouble_ReturnValue_1, float CallFunc_Divide_DoubleFloat_B_ImplicitCast, float CallFunc_Divide_DoubleFloat_B_ImplicitCast_1);
};

}


