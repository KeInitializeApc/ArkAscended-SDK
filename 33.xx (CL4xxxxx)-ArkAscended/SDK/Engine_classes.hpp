#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// Class Engine.PrimalReplicationDriver
class UPrimalReplicationDriver : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPrimalReplicationDriver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ReplicationDriver
class UReplicationDriver : public UPrimalReplicationDriver
{
public:

	static class UClass* StaticClass();
	static class UReplicationDriver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ReplicationConnectionDriver
class UReplicationConnectionDriver : public UObject
{
public:

	static class UClass* StaticClass();
	static class UReplicationConnectionDriver* GetDefaultObj();

};

// 0x208 (0x230 - 0x28)
// Class Engine.PrimalActor
class UPrimalActor : public UObject
{
public:
	uint8                                        Pad_1A4[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_3 : 7;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventSaving : 1;                                // Mask: 0x80, PropSize: 0x10x30(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnableMultiUse : 1;                               // Mask: 0x1, PropSize: 0x10x31(0x1)(ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bBlueprintMultiUseEntries : 1;                     // Mask: 0x2, PropSize: 0x10x31(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_5 : 6;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1A8[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseCanMoveThroughActor : 1;                       // Mask: 0x1, PropSize: 0x10x34(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPFilterMultiUseEntries : 1;                   // Mask: 0x2, PropSize: 0x10x34(0x1)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_6 : 6;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1AA[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPGetMultiUseCenterText : 1;                   // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bMultiUseCenterHUD : 1;                            // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseNetworkSpatialization : 1;                     // Mask: 0x4, PropSize: 0x10x38(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetworkSpatializationForceRelevancyCheck : 1;     // Mask: 0x8, PropSize: 0x10x38(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetUseClientRelevancy : 1;                        // Mask: 0x10, PropSize: 0x10x38(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAttachmentReplicationUseNetworkParent : 1;        // Mask: 0x20, PropSize: 0x10x38(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPChangedActorTeam : 1;                        // Mask: 0x40, PropSize: 0x10x38(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceNetworkSpatialization : 1;                   // Mask: 0x80, PropSize: 0x10x38(0x1)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForcedHudDrawingRequiresSameTeam : 1;             // Mask: 0x1, PropSize: 0x10x39(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsMapActor : 1;                                   // Mask: 0x2, PropSize: 0x10x39(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseOnlyPointForLevelBounds : 1;                   // Mask: 0x4, PropSize: 0x10x39(0x1)(Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPCheckForErrors : 1;                          // Mask: 0x8, PropSize: 0x10x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHasHighVolumeRPCs : 1;                            // Mask: 0x10, PropSize: 0x10x39(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAutoStasis : 1;                                   // Mask: 0x20, PropSize: 0x10x39(0x1)(BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bClimbable : 1;                                    // Mask: 0x40, PropSize: 0x10x39(0x1)(Net, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_7 : 1;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1BF[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseBPDrawEntry : 1;                               // Mask: 0x1, PropSize: 0x10x3C(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_8 : 7;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C0[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPreventCliffPlatforms : 1;                        // Mask: 0x1, PropSize: 0x10x40(0x1)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPOverrideUILocation : 1;                      // Mask: 0x2, PropSize: 0x10x40(0x1)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bStasised : 1;                                     // Mask: 0x4, PropSize: 0x10x40(0x1)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventActorStasis : 1;                           // Mask: 0x8, PropSize: 0x10x40(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPGetBonesToHideOnAllocation : 1;              // Mask: 0x10, PropSize: 0x10x40(0x1)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bReplicateHidden : 1;                              // Mask: 0x20, PropSize: 0x10x40(0x1)(ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_9 : 1;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHibernateChange : 1;                              // Mask: 0x80, PropSize: 0x10x40(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSavedWhenStasised : 1;                            // Mask: 0x1, PropSize: 0x10x41(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLoadedFromSaveGame : 1;                           // Mask: 0x2, PropSize: 0x10x41(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventCharacterBasing : 1;                       // Mask: 0x4, PropSize: 0x10x41(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bPreventCharacterBasingAllowSteppingUp : 1;        // Mask: 0x8, PropSize: 0x10x41(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoreNetworkRangeScaling : 1;                    // Mask: 0x10, PropSize: 0x10x41(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_A : 3;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C5[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceReplicateDormantChildrenWithoutSpatialRelevancy : 1; // Mask: 0x1, PropSize: 0x10x44(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_B : 7;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1C7[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForcePreventSeamlessTravel : 1;                   // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventLevelBoundsRelevant : 1;                   // Mask: 0x2, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPInventoryItemUsed : 1;                       // Mask: 0x4, PropSize: 0x10x48(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPInventoryItemDropped : 1;                    // Mask: 0x8, PropSize: 0x10x48(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPOverrideTargetingLocation : 1;               // Mask: 0x10, PropSize: 0x10x48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceAllowNetMulticast : 1;                       // Mask: 0x20, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bBPInventoryItemUsedHandlesDurability : 1;         // Mask: 0x40, PropSize: 0x10x48(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPForceAllowsInventoryUse : 1;                 // Mask: 0x80, PropSize: 0x10x48(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAlwaysRelevantPrimalStructure : 1;                // Mask: 0x1, PropSize: 0x10x49(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventNPCSpawnFloor : 1;                         // Mask: 0x2, PropSize: 0x10x49(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceHiddenReplication : 1;                       // Mask: 0x4, PropSize: 0x10x49(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetCritical : 1;                                  // Mask: 0x8, PropSize: 0x10x49(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOnlyReplicateOnNetForcedUpdate : 1;               // Mask: 0x10, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreventRegularForceNetUpdate : 1;                 // Mask: 0x20, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOnlyInitialReplication : 1;                       // Mask: 0x40, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bPreventOnDedicatedServer : 1;                     // Mask: 0x80, PropSize: 0x10x49(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bUseAttachmentReplication : 1;                     // Mask: 0x1, PropSize: 0x10x4A(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bStasisComponentRadiusForceDistanceCheck : 1;      // Mask: 0x2, PropSize: 0x10x4A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoredByCharacterEncroachment : 1;               // Mask: 0x4, PropSize: 0x10x4A(0x1)(BlueprintReadOnly, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_C : 5;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseBPGetHUDDrawLocationOffset : 1;                // Mask: 0x1, PropSize: 0x10x4B(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPPreventAttachments : 1;                      // Mask: 0x2, PropSize: 0x10x4B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPGetShowDebugAnimationComponents : 1;         // Mask: 0x4, PropSize: 0x10x4B(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUnstreamComponentsUseEndOverlap : 1;              // Mask: 0x8, PropSize: 0x10x4B(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bWantsPerformanceThrottledTick : 1;                // Mask: 0x10, PropSize: 0x10x4B(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_D : 2;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWantsServerThrottledTick : 1;                     // Mask: 0x80, PropSize: 0x10x4B(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_E : 1;                                      // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBPPreInitializeComponents : 1;                    // Mask: 0x2, PropSize: 0x10x4C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bBPPostInitializeComponents : 1;                   // Mask: 0x4, PropSize: 0x10x4C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPCustomIsRelevantForClient : 1;               // Mask: 0x8, PropSize: 0x10x4C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseStasisGrid : 1;                                // Mask: 0x10, PropSize: 0x10x4C(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAlwaysCreatePhysicsState : 1;                     // Mask: 0x20, PropSize: 0x10x4C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bForceInfiniteDrawDistance : 1;                    // Mask: 0x40, PropSize: 0x10x4C(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsFromChildActorComponent : 1;                    // Mask: 0x80, PropSize: 0x10x4C(0x1)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsDestroyedFromChildActorComponent : 1;           // Mask: 0x1, PropSize: 0x10x4D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsValidUnstasisCaster : 1;                        // Mask: 0x2, PropSize: 0x10x4D(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseBPAllowActorSpawn : 1;                         // Mask: 0x4, PropSize: 0x10x4D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_10 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D5[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnTargetingTeamChanged;                            // 0x50(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1D6[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TargetingTeam;                                     // 0x78(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        CustomActorFlags;                                  // 0x7C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1D9[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorUsingQuickAction;                             // 0x88(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CustomTag;                                         // 0x90(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        CustomData;                                        // 0x98(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1DA[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnActorCustomEvent;                                // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastThrottledTickTime;                             // 0xB0(0x8)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bWantsRealtimeThrottledTick : 1;                   // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_11 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bRealtimeThrottledTickUseNativeTick : 1;           // Mask: 0x4, PropSize: 0x10xB8(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseActorNotifyCustomEventBP : 1;                  // Mask: 0x8, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_12 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DB[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnMatineeUpdated;                                  // 0xC0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1DC[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EReplicationGraphBehavior         RepGraphBehavior;                                  // 0xE8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EReplicationGraphBehavior         DesiredRepGraphBehavior;                           // 0xE9(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bDesiredRepGraphBehaviorHasBeenSet;                // 0xEA(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1DD[0x5];                                      // Fixing Size After Last Property  > TateDumper <
	double                                       ForceMaximumReplicationRateUntilTime;              // 0xF0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastActorForceReplicationTime;                     // 0xF8(0x8)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1DE[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        NetworkAndStasisRangeMultiplier;                   // 0x104(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NetworkRangeMultiplier;                            // 0x108(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NetCullDistanceSquaredDormant;                     // 0x10C(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1DF[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        NetworkSpatializationChildren;                     // 0x120(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        NetworkSpatializationChildrenDormant;              // 0x130(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                NetworkSpatializationParent;                       // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DefaultStasisComponentOctreeFlags;                 // 0x148(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DefaultStasisedOctreeFlags;                        // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DefaultUnstasisedOctreeFlags;                      // 0x150(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OverrideStasisComponentRadius;                     // 0x154(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimitiveComponent*                   StasisCheckComponent;                              // 0x158(0x8)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       UnstasisLastInRangeTime;                           // 0x160(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastPreReplicationTime;                            // 0x168(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastEnterStasisTime;                               // 0x170(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastExitStasisTime;                                // 0x178(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                LastSelectedWindSourceComponentName;               // 0x180(0x10)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E0[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class UActorComponent>> StasisUnRegisteredComponents;                      // 0x1A8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReplicationIntervalMultiplier;                     // 0x1B8(0x4)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ClientReplicationSendNowThreshold;                 // 0x1BC(0x4)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E1[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class USoundBase>             LastPostProcessVolumeSound;                        // 0x1C4(0x8)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E2[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnSemaphoreTaken;                                  // 0x1D0(0x10)(ConstParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceNonBlockingHits;                             // 0x1E0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E3[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	double                                       OriginalCreationTime;                              // 0x1E8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_1E4[0x20];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AMatineeActor*>                 ControllingMatineeActors;                          // 0x210(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NetCriticalPriorityAdjustment;                     // 0x220(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E5[0xC];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalActor* GetDefaultObj();

	void Unstasis();
	int32 TryMultiUse(int32* HitBodyIndex, bool ReturnValue);
	void ThrottledTick();
	void TargetingTeamChanged();
	bool SetTickFunctionEnabled();
	enum class EReplicationGraphBehavior SetDesiredRepGraphBehavior();
	void RecieveMatineeUpdated();
	double RealtimeThrottledTick();
	class USoundBase* PreventNotifySound(bool ReturnValue);
	class USoundCue* PlaySoundOnActor(float* VolumeMultiplier, float* PitchMultiplier);
	void PerformanceThrottledTick();
	void OnInventoryItemGrind();
	class AHUD* OffsetHUDFromCenterScreenY(float ReturnValue);
	class AHUD* OffsetHUDFromBottomScreenY(float ReturnValue);
	bool MulticastPropertyToPlayer(class FName PropertyName);
	bool MulticastProperty(class FName PropertyName);
	class APlayerController* ModifyHudMultiUseLoc(int32* Index);
	void MatineeUpdated();
	void K2_GetWorld(class UWorld* ReturnValue);
	class APawn* IsValidLockOnTarget(bool ReturnValue);
	void IsTargetable(bool ReturnValue);
	void IsShooterWeapon(bool ReturnValue);
	void IsShooterPlayerController(bool ReturnValue);
	void IsShooterCharacter(bool ReturnValue);
	void IsPrimalStructureTurret(bool ReturnValue);
	void IsPrimalStructureItemContainer(bool ReturnValue);
	void IsPrimalStructureExplosive(bool ReturnValue);
	void IsPrimalStructure(bool ReturnValue);
	void IsPrimalDino(bool ReturnValue);
	void IsPrimalCharacterOrStructure(bool ReturnValue);
	void IsPrimalCharacter(bool ReturnValue);
	void IsNetworkStressTestClientMode(bool ReturnValue);
	void IsLocallyControlledByPlayer(bool ReturnValue);
	void IsInstancedFoliage(bool ReturnValue);
	void IsFirstPersonMeshVisible(bool ReturnValue);
	void IsFirstPersonCamera(bool ReturnValue);
	void IsDead(bool ReturnValue);
	void IsARaft(bool ReturnValue);
	class APlayerController* InputDismissPOI_BP(int32* Index);
	class APlayerController* InputDismissPOI(int32* Index);
	int32 GetWheelOptionInfoBP(const struct FMultiUseWheelOption& ReturnValue);
	int32 GetWheelOptionInfo(const struct FMultiUseWheelOption& ReturnValue);
	class APlayerController* GetWheelOptionByUseIndex(int32* Index, const struct FMultiUseWheelOption& ReturnValue);
	void GetUsablePriority(float ReturnValue);
	class AActor* GetTargetingLocation(const struct FVector& ReturnValue);
	void GetSecondaryMountedActor(class AActor* ReturnValue);
	class APlayerController* GetMultiUseIconBP(struct FMultiUseEntry* MultiUseEntry, class UTexture2D* ReturnValue);
	class APlayerController* GetMultiUseIcon(struct FMultiUseEntry* MultiUseEntry, class UTexture2D* ReturnValue);
	TArray<struct FMultiUseEntry> GetMultiUseEntries(int32* HitBodyIndex);
	void GetInterpolatedVelocity(const struct FVector& ReturnValue);
	void GetInterpolatedRotation(const struct FRotator& ReturnValue);
	void GetInterpolatedLocation(const struct FVector& ReturnValue);
	int32 GetEditTextString(const class FString& ReturnValue);
	void GetCharacterController(class AController* ReturnValue);
	void GetAttachedSoundVolumeMultiplier(float ReturnValue);
	void GetAttachedSoundPitchMultiplier(float ReturnValue);
	TArray<class USceneComponent*> GetAllSceneComponents();
	void GetAimedTutorialHintString(const class FString& ReturnValue);
	void GetActorViewDirection(const struct FVector& ReturnValue);
	void ForceReplicateNowIfNoChannel();
	bool ForceReplicateNow();
	class AHUD* DrawBasicFloatingHUD();
	class AHUD* DrawActorFloatingHUD();
	void CurrentlyHasRider(bool ReturnValue);
	int32 ClientMultiUse(int32* HitBodyIndex);
	void CheckRegisterCharacterMesh();
	class APawn* CheckBPAllowActorSpawn(class UWorld* World, bool ReturnValue);
	int32 ChangeActorTeam();
	void CanMoveThroughActor(class AActor** Actor, bool ReturnValue);
	int32 BPTryMultiUse(bool ReturnValue);
	void BPSetNetworkAndStasisRangeMultiplier(float* Value);
	class UObject* BPPreventAttachments(bool ReturnValue);
	void BPPreInitializeComponents();
	void BPPostInitializeComponents();
	class APlayerController* BPOverrideUILocation(const struct FVector& ReturnValue);
	void BPOverrideServerMultiUseAcceptRange(float ReturnValue);
	void BPIsMarkedForSeamlessTravel(bool ReturnValue);
	class UObject* BPInventoryItemUsed();
	class UObject* BPInventoryItemDropped();
	TArray<class USkeletalMeshComponent*> BPGetShowDebugAnimationComponents();
	class APlayerController* BPGetQuickActionUseEntry(const struct FQuickActionOption& ReturnValue);
	TArray<struct FMultiUseEntry> BPGetMultiUseEntries(const TArray<struct FMultiUseEntry>& ReturnValue);
	struct FLinearColor BPGetMultiUseCenterText(bool ReturnValue);
	int32 BPGetExtraSpecialBlueprintInt(int32 ReturnValue);
	struct FBPNetExecParams BPGetCustomBlueprintData(class FName DataName, bool ReturnValue);
	void BPGetBonesToHideOnAllocation(const TArray<class FName>& ReturnValue);
	void BPGetActorEyesViewPoint(struct FVector* Location, struct FRotator* Rotation);
	class UObject* BPForceAllowsInventoryUse(bool ReturnValue);
	TArray<struct FMultiUseEntry> BPFilterMultiUseEntries(const TArray<struct FMultiUseEntry>& ReturnValue);
	struct FVector2D BPDrawMultiUseEntry();
	struct FVector2D BPDrawMultiUseCustomEntry(int32* Index, class FName* Text);
	class APlayerController* BPCustomIsRelevantForClient(bool ReturnValue);
	struct FVector BPControlRigNotify(class FName NotifyName, const struct FHitResult& WorldSpaceHitResult);
	bool BPConsumeUsePinCode(bool ReturnValue);
	int32 BPConsumeSetPinCode(bool ReturnValue);
	int32 BPClientDoMultiUse();
	void BPCheckForErrors(const TArray<struct FBPMapCheckEntry>& ReturnValue);
	void BPChangedActorTeam();
	void BPAttachedRootComponent();
	class APawn* BPAllowActorSpawn(bool ReturnValue);
	class AActor* BP_OverrideTargetingLocation(const struct FVector& ReturnValue);
	class FName BP_GetHUDWorldDrawLocation(const struct FVector& ReturnValue);
	class APlayerController* AllowManualMultiUseActivation(bool ReturnValue);
	class AActor* AllowIgnoreCharacterEncroachment(bool ReturnValue);
	void AllowGrappling(bool ReturnValue);
	void AllowEmulatedMovement(bool ReturnValue);
	class UAnimNotifyState* ActorAnimNotifyCustomState_TickBP();
	class UAnimNotifyState* ActorAnimNotifyCustomState_EndBP();
	class UAnimNotifyState* ActorAnimNotifyCustomState_BeginBP();
	class UAnimNotify* ActorAnimNotifyCustomEventBP();
};

// 0x298 (0x4C8 - 0x230)
// Class Engine.Actor
class AActor : public UPrimalActor
{
public:
	struct FActorTickFunction                    PrimaryActorTick;                                  // 0x230(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetTemporary : 1;                                 // Mask: 0x1, PropSize: 0x10x268(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_27 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOnlyRelevantToOwner : 1;                          // Mask: 0x4, PropSize: 0x10x268(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bAlwaysRelevant : 1;                               // Mask: 0x8, PropSize: 0x10x268(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bReplicateMovement : 1;                            // Mask: 0x10, PropSize: 0x10x268(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCallPreReplication : 1;                           // Mask: 0x20, PropSize: 0x10x268(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCallPreReplicationForReplay : 1;                  // Mask: 0x40, PropSize: 0x10x268(0x1)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHidden : 1;                                       // Mask: 0x80, PropSize: 0x10x268(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, Config)
	uint8                                        bTearOff : 1;                                      // Mask: 0x1, PropSize: 0x10x269(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceNetAddressable : 1;                          // Mask: 0x2, PropSize: 0x10x269(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bExchangedRoles : 1;                               // Mask: 0x4, PropSize: 0x10x269(0x1)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetLoadOnClient : 1;                              // Mask: 0x8, PropSize: 0x10x269(0x1)(Edit, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNetUseOwnerRelevancy : 1;                         // Mask: 0x10, PropSize: 0x10x269(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bRelevantForNetworkReplays : 1;                    // Mask: 0x20, PropSize: 0x10x269(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bRelevantForLevelBounds : 1;                       // Mask: 0x40, PropSize: 0x10x269(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bReplayRewindable : 1;                             // Mask: 0x80, PropSize: 0x10x269(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAllowTickBeforeBeginPlay : 1;                     // Mask: 0x1, PropSize: 0x10x26A(0x1)(ConstParm, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceHighQualityViewerReplication : 1;            // Mask: 0x2, PropSize: 0x10x26A(0x1)(BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bActorPreventPhysicsSceneRegistration : 1;         // Mask: 0x4, PropSize: 0x10x26A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAutoDestroyWhenFinished : 1;                      // Mask: 0x8, PropSize: 0x10x26A(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCanBeDamaged : 1;                                 // Mask: 0x10, PropSize: 0x10x26A(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bBlockInput : 1;                                   // Mask: 0x20, PropSize: 0x10x26A(0x1)(OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCollideWhenPlacing : 1;                           // Mask: 0x40, PropSize: 0x10x26A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFindCameraComponentWhenViewTarget : 1;            // Mask: 0x80, PropSize: 0x10x26A(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bGenerateOverlapEventsDuringLevelStreaming : 1;    // Mask: 0x1, PropSize: 0x10x26B(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoresOriginShifting : 1;                        // Mask: 0x2, PropSize: 0x10x26B(0x1)(Edit, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnableAutoLODGeneration : 1;                      // Mask: 0x4, PropSize: 0x10x26B(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsEditorOnlyActor : 1;                            // Mask: 0x8, PropSize: 0x10x26B(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bActorSeamlessTraveled : 1;                        // Mask: 0x10, PropSize: 0x10x26B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDisableRigidBodyAnimNodes : 1;                    // Mask: 0x20, PropSize: 0x10x26B(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bReplicates : 1;                                   // Mask: 0x40, PropSize: 0x10x26B(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bCanBeInCluster : 1;                               // Mask: 0x80, PropSize: 0x10x26B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAllowReceiveTickEventOnDedicatedServer : 1;       // Mask: 0x1, PropSize: 0x10x26C(0x1)(Edit, ExportObject, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_28 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bReplicateUsingRegisteredSubObjectList : 1;        // Mask: 0x4, PropSize: 0x10x26C(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_29 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_2A : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bActorEnableCollision : 1;                         // Mask: 0x10, PropSize: 0x10x26D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bActorIsBeingDestroyed : 1;                        // Mask: 0x20, PropSize: 0x10x26D(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2B : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_2C : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAsyncPhysicsTickEnabled : 1;                      // Mask: 0x8, PropSize: 0x10x26E(0x1)(BlueprintVisible, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2D : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	enum class EActorUpdateOverlapsMethod        UpdateOverlapsMethodDuringLevelStreaming;          // 0x26F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EActorUpdateOverlapsMethod        DefaultUpdateOverlapsMethodDuringLevelStreaming;   // 0x270(0x1)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_47A[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        InitialLifeSpan;                                   // 0x278(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        CustomTimeDilation;                                // 0x27C(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          RemoteRole;                                        // 0x280(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_47B[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        RayTracingGroupId;                                 // 0x284(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	struct FRepAttachment                        AttachmentReplication;                             // 0x288(0x60)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRepMovement                          ReplicatedMovement;                                // 0x2E8(0x70)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                Owner;                                             // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	class FName                                  NetDriverName;                                     // 0x360(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          Role;                                              // 0x368(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	enum class ENetDormancy                      NetDormancy;                                       // 0x369(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ESpawnActorCollisionHandlingMethod SpawnCollisionHandlingMethod;                      // 0x36A(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EAutoReceiveInput                 AutoReceiveInput;                                  // 0x36B(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        InputPriority;                                     // 0x36C(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       CreationTime;                                      // 0x370(0x8)(Edit, Net, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class UInputComponent*                       InputComponent;                                    // 0x378(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, EditConst, DuplicateTransient)
	float                                        NetCullDistanceSquared;                            // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NetTag;                                            // 0x384(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NetUpdateFrequency;                                // 0x388(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinNetUpdateFrequency;                             // 0x38C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        NetPriority;                                       // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47E[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	double                                       LastRenderTime;                                    // 0x398(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastRenderTimeOnScreen;                            // 0x3A0(0x8)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       LastRenderTimeIgnoreShadow;                        // 0x3A8(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class APawn*                                 Instigator;                                        // 0x3B0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        Children;                                          // 0x3B8(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class USceneComponent*                       RootComponent;                                     // 0x3C8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_480[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          Layers;                                            // 0x3D8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TWeakObjectPtr<class UChildActorComponent>   ParentComponent;                                   // 0x3E8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FName>                          Tags;                                              // 0x3F0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config)
	uint8                                        Pad_481[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastSparseDelegateProperty_            OnTakeAnyDamage;                                   // 0x404(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnTakePointDamage;                                 // 0x405(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnTakeRadialDamage;                                // 0x406(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnActorBeginOverlap;                               // 0x407(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnActorEndOverlap;                                 // 0x408(0x1)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnBeginCursorOver;                                 // 0x409(0x1)(Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnEndCursorOver;                                   // 0x40A(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnClicked;                                         // 0x40B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnReleased;                                        // 0x40C(0x1)(Edit, ExportObject, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchBegin;                                 // 0x40D(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchEnd;                                   // 0x40E(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchEnter;                                 // 0x40F(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchLeave;                                 // 0x410(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnActorHit;                                        // 0x411(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnDestroyed;                                       // 0x412(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnEndPlay;                                         // 0x413(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_483[0x84];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UActorComponent*>               InstanceComponents;                                // 0x498(0x10)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UActorComponent*>               BlueprintCreatedComponents;                        // 0x4A8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_484[0x10];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AActor* GetDefaultObj();

	float WasRecentlyRendered(bool ReturnValue);
	void UserConstructionScript();
	void TearOff();
	float StopActorSound();
	enum class ETickingGroup SetTickGroup();
	bool SetTickableWhenPaused();
	bool SetReplicates();
	bool SetReplicateMovement();
	int32 SetRayTracingGroupId();
	class AActor* SetOwner();
	enum class ENetDormancy SetNetDormancy();
	float SetLifeSpan();
	bool SetAutoDestroyWhenFinished();
	float SetActorTickInterval();
	bool SetActorTickEnabled();
	struct FVector SetActorScale3D();
	struct FVector SetActorRelativeScale3D();
	bool SetActorHiddenInGame();
	bool SetActorEnableCollision();
	bool ServerSendSimpleExecCommandToEveryone();
	bool ServerSendExecCommandToPlayer();
	bool ServerSendExecCommandToEveryone();
	void ReregisterAllComponents();
	class UActorComponent* RemoveTickPrerequisiteComponent();
	class AActor* RemoveTickPrerequisiteActor();
	float ReceiveTick();
	class AActor* ReceiveRadialDamage();
	struct FHitResult ReceivePointDamage(float Damage, struct FVector* HitNormal, class FName* BoneName);
	struct FHitResult ReceiveHit(struct FVector* HitNormal, struct FVector* NormalImpulse);
	enum class EEndPlayReason ReceiveEndPlay();
	void ReceiveDestroyed();
	void ReceiveBeginPlay();
	float ReceiveAsyncPhysicsTick();
	class AActor* ReceiveAnyDamage(float Damage);
	struct FKey ReceiveActorOnReleased();
	enum class ETouchIndex ReceiveActorOnInputTouchLeave();
	enum class ETouchIndex ReceiveActorOnInputTouchEnter();
	enum class ETouchIndex ReceiveActorOnInputTouchEnd();
	enum class ETouchIndex ReceiveActorOnInputTouchBegin();
	void ReceiveActorOnClicked(struct FKey* ButtonPressed);
	void ReceiveActorEndOverlap(class AActor** OtherActor);
	void ReceiveActorEndCursorOver();
	void ReceiveActorBeginOverlap(class AActor** OtherActor);
	void ReceiveActorBeginCursorOver();
	bool PrestreamTextures(int32 CinematicTextureGroups);
	void OnRep_ReplicateMovement();
	void OnRep_ReplicatedMovement();
	void OnRep_Owner();
	void OnRep_Instigator();
	void OnRep_AttachmentReplication();
	void NetSpawnedActor(class AActor* SpawnedActor);
	class AActor* NetActorSpawnActorUnreliable(class FName* BoneName);
	class AActor* NetActorSpawnActor(class FName* BoneName);
	bool MulticastDrawDebugString(const struct FVector& TextLocation, class FString* Text, class AActor* TestBaseActor, const struct FLinearColor& TextColor);
	bool MulticastDrawDebugSphere(struct FVector* Center, float* Radius);
	bool MulticastDrawDebugPoint(struct FVector* Position, const struct FLinearColor& PointColor);
	bool MulticastDrawDebugPlane(struct FVector* Location, const struct FLinearColor& PlaneColor);
	bool MulticastDrawDebugLineTraceHitResult();
	bool MulticastDrawDebugLine();
	bool MulticastDrawDebugCylinder(float* Radius);
	bool MulticastDrawDebugCoordinateSystem(float* Scale);
	bool MulticastDrawDebugCapsuleWithExtents(const struct FVector& Top, const struct FVector& Bottom, float* Radius);
	bool MulticastDrawDebugCapsule(struct FVector* Center, float* HalfHeight, float* Radius, struct FRotator* Rotation);
	bool MulticastDrawDebugCamera();
	bool MulticastDrawDebugBox(struct FVector* Center, struct FRotator* Rotation);
	bool MulticastDrawDebugArrow();
	class FName MakeNoise(float* Loudness, float MaxRange);
	bool K2_TeleportTo(bool ReturnValue);
	bool K2_SetActorTransform(struct FTransform* NewTransform, const struct FHitResult& SweepHitResult, bool ReturnValue);
	bool K2_SetActorRotation(bool ReturnValue);
	bool K2_SetActorRelativeTransform(const struct FHitResult& SweepHitResult);
	bool K2_SetActorRelativeRotation(const struct FHitResult& SweepHitResult);
	bool K2_SetActorRelativeLocation(const struct FVector& NewRelativeLocation, const struct FHitResult& SweepHitResult);
	bool K2_SetActorLocationAndRotation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult, bool ReturnValue);
	bool K2_SetActorLocation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult, bool ReturnValue);
	void K2_OnReset();
	class APlayerController* K2_OnEndViewTarget();
	class APlayerController* K2_OnBecomeViewTarget();
	void K2_GetRootComponent(class USceneComponent* ReturnValue);
	void K2_GetComponentsByClass(class UClass* ComponentClass, const TArray<class UActorComponent*>& ReturnValue);
	void K2_GetActorRotation(const struct FRotator& ReturnValue);
	void K2_GetActorLocation(const struct FVector& ReturnValue);
	void K2_DetachFromActor(enum class EDetachmentRule* LocationRule, enum class EDetachmentRule* RotationRule, enum class EDetachmentRule* ScaleRule);
	void K2_DestroyActor();
	void K2_AttachToComponent(class USceneComponent** Parent, class FName* SocketName, enum class EAttachmentRule* LocationRule, enum class EAttachmentRule* RotationRule, enum class EAttachmentRule* ScaleRule, bool bWeldSimulatedBodies, bool ReturnValue);
	class AActor* K2_AttachToActor(class FName* SocketName, enum class EAttachmentRule* LocationRule, enum class EAttachmentRule* RotationRule, enum class EAttachmentRule* ScaleRule, bool bWeldSimulatedBodies, bool ReturnValue);
	enum class EAttachLocation K2_AttachRootComponentToActor(class FName InSocketName, bool bWeldSimulatedBodies);
	enum class EAttachLocation K2_AttachRootComponentTo(class USceneComponent** InParent, class FName InSocketName, bool bWeldSimulatedBodies);
	bool K2_AddActorWorldTransformKeepScale(const struct FTransform& DeltaTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddActorWorldTransform(const struct FTransform& DeltaTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddActorWorldRotation(const struct FRotator& DeltaRotation, const struct FHitResult& SweepHitResult);
	bool K2_AddActorWorldOffset(const struct FHitResult& SweepHitResult);
	bool K2_AddActorLocalTransform(struct FTransform* NewTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddActorLocalRotation(const struct FRotator& DeltaRotation, const struct FHitResult& SweepHitResult);
	bool K2_AddActorLocalOffset(const struct FHitResult& SweepHitResult);
	class AActor* IsOwnedOrControlledBy(bool ReturnValue);
	class AActor* IsOverlappingActor(bool ReturnValue);
	void IsChildActor(bool ReturnValue);
	void IsActorTickEnabled(bool ReturnValue);
	void IsActorBeingDestroyed(bool ReturnValue);
	void HasAuthority(bool ReturnValue);
	void GetVisibleUnhiddenComponentByClass(class UClass* ComponentClass, class UPrimitiveComponent* ReturnValue);
	void GetVisibleComponentByClass(class UClass* ComponentClass, class UPrimitiveComponent* ReturnValue);
	void GetVerticalDistanceTo(class AActor** OtherActor, float ReturnValue);
	bool GetVelocity(const struct FVector& ReturnValue);
	void GetTransform(const struct FTransform& ReturnValue);
	void GetTickableWhenPaused(bool ReturnValue);
	void GetSquaredHorizontalDistanceTo(class AActor** OtherActor, float ReturnValue);
	void GetSquaredDistanceTo(class AActor** OtherActor, float ReturnValue);
	void GetRemoteRole(enum class ENetRole ReturnValue);
	void GetRayTracingGroupId(int32 ReturnValue);
	void GetParentComponent(class UChildActorComponent* ReturnValue);
	void GetParentActor(class AActor* ReturnValue);
	void GetOwnerController(class APlayerController* ReturnValue);
	void GetOwner(class AActor* ReturnValue);
	void GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OverlappingComponents);
	void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
	void GetLocalRole(enum class ENetRole ReturnValue);
	void GetLifeSpan(float ReturnValue);
	void GetLevelTransform(const struct FTransform& ReturnValue);
	void GetLevel(class ULevel* ReturnValue);
	void GetInstigatorController(class AController* ReturnValue);
	void GetInstigator(class APawn* ReturnValue);
	struct FKey GetInputVectorAxisValue(const struct FVector& ReturnValue);
	class FName GetInputAxisValue(float ReturnValue);
	struct FKey GetInputAxisKeyValue(float ReturnValue);
	void GetHorizontalDotProductTo(class AActor** OtherActor, float ReturnValue);
	void GetHorizontalDistanceTo(class AActor** OtherActor, float ReturnValue);
	void GetGameTimeSinceCreation(float ReturnValue);
	void GetDotProductTo(class AActor** OtherActor, float ReturnValue);
	void GetDistanceTo(class AActor** OtherActor, float ReturnValue);
	class FName GetComponentsByTag(class UClass* ComponentClass, const TArray<class UActorComponent*>& ReturnValue);
	void GetComponentsByInterface(class UClass* Interface, const TArray<class UActorComponent*>& ReturnValue);
	class FName GetComponentsByCustomTag(const TArray<class UActorComponent*>& ReturnValue);
	class FName GetComponentByCustomTag(class UActorComponent* ReturnValue);
	void GetComponentByClass(class UClass* ComponentClass, class UActorComponent* ReturnValue);
	void GetAttachParentSocketName(class FName ReturnValue);
	void GetAttachParentActor(class AActor* ReturnValue);
	bool GetAttachedActors();
	bool GetAllChildActors();
	void GetActorUpVector(const struct FVector& ReturnValue);
	void GetActorTimeDilation(float ReturnValue);
	void GetActorTickInterval(float ReturnValue);
	void GetActorScale3D(const struct FVector& ReturnValue);
	void GetActorRightVector(const struct FVector& ReturnValue);
	void GetActorRelativeScale3D(const struct FVector& ReturnValue);
	void GetActorForwardVector(const struct FVector& ReturnValue);
	struct FRotator GetActorEyesViewPoint();
	void GetActorEnableCollision(bool ReturnValue);
	bool GetActorBounds(const struct FVector& BoxExtent);
	bool ForceNetUpdate();
	void ForceDestroy();
	void FlushNetDormancy();
	struct FTransform FinishAddComponent(class UActorComponent* Component);
	void EnableInput(class APlayerController** PlayerController);
	void DisableInput(class APlayerController** PlayerController);
	void DetachRootComponentFromParent(bool bMaintainWorldPosition);
	class UClass* CreateInputComponent();
	bool CalculateComponentsBoundingBoxInLocalSpace(const struct FBox& ReturnValue);
	struct FBPNetExecParams BPServerHandleNetExecCommand(bool ReturnValue);
	class UClass* BPIsA(bool ReturnValue);
	class APlayerController* BPClientHandleNetExecCommand(bool ReturnValue);
	class UActorComponent* AddTickPrerequisiteComponent();
	class AActor* AddTickPrerequisiteActor();
	bool AddComponentByClass(class UClass* Class, class UActorComponent* ReturnValue);
	bool AddComponent(class UActorComponent* ReturnValue);
	struct FVector ActorPlaySoundUnreliable(class FName* BoneName);
	struct FVector ActorPlaySound(class FName* BoneName);
	class FName ActorHasTag(bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintFunctionLibrary
class UBlueprintFunctionLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBlueprintFunctionLibrary* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class Engine.StreamableRenderAsset
class UStreamableRenderAsset : public UObject
{
public:
	uint8                                        Pad_4A1[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ForceMipLevelsToBeResidentTimestamp;               // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        NumCinematicMipLevels;                             // 0x48(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	struct FPerQualityLevelInt                   NoRefStreamingLODBias;                             // 0x50(0x68)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        StreamingIndex;                                    // 0xB8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        NeverStream : 1;                                   // Mask: 0x1, PropSize: 0x10xBC(0x1)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, GlobalConfig, InstancedReference)
	uint8                                        bGlobalForceMipLevelsToBeResident : 1;             // Mask: 0x2, PropSize: 0x10xBC(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bHasStreamingUpdatePending : 1;                    // Mask: 0x4, PropSize: 0x10xBC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bForceMiplevelsToBeResident : 1;                   // Mask: 0x8, PropSize: 0x10xBC(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreStreamingMipBias : 1;                       // Mask: 0x10, PropSize: 0x10xBC(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bUseCinematicMipLevels : 1;                        // Mask: 0x20, PropSize: 0x10xBC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5[0xB];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStreamableRenderAsset* GetDefaultObj();

	int32 SetForceMipLevelsToBeResident();
};

// 0x110 (0x1D8 - 0xC8)
// Class Engine.Texture
class UTexture : public UStreamableRenderAsset
{
public:
	uint8                                        Pad_4AF[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 LightingGuid;                                      // 0xD8(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        LevelIndex;                                        // 0xE8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       LODBias;                                           // 0xEC(0x4)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference)
	enum class ETextureCompressionSettings       CompressionSettings;                               // 0xF0(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, InstancedReference)
	enum class ETextureFilter                    Filter;                                            // 0xF1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config)
	enum class ETextureMipLoadOptions            MipLoadOptions;                                    // 0xF2(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	enum class ETextureCookPlatformTilingSettings CookPlatformTilingSettings;                        // 0xF3(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	enum class ETextureGroup                     LODGroup;                                          // 0xF4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference)
	uint8                                        Pad_4B1[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	struct FPerPlatformFloat                     Downscale;                                         // 0xF8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ETextureDownscaleOptions          DownscaleOptions;                                  // 0xFC(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        SRGB : 1;                                          // Mask: 0x1, PropSize: 0x10xFD(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference)
	uint8                                        bNoTiling : 1;                                     // Mask: 0x2, PropSize: 0x10xFD(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        VirtualTextureStreaming : 1;                       // Mask: 0x4, PropSize: 0x10xFD(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	uint8                                        CompressionYCoCg : 1;                              // Mask: 0x8, PropSize: 0x10xFD(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNotOfflineProcessed : 1;                          // Mask: 0x10, PropSize: 0x10xFD(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAsyncResourceReleaseHasBeenStarted : 1;           // Mask: 0x20, PropSize: 0x10xFD(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4B3[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x100(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_4B4[0xC8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTexture* GetDefaultObj();

	struct FLinearColor ComputeTextureSourceChannelMinMax(bool ReturnValue);
	int64 Blueprint_GetTextureSourceDiskAndMemorySize();
	void Blueprint_GetMemorySize(int64 ReturnValue);
};

// 0x90 (0xB8 - 0x28)
// Class Engine.ActorComponent
class UActorComponent : public UObject
{
public:
	uint8                                        Pad_4F6[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FActorComponentTickFunction           PrimaryComponentTick;                              // 0x30(0x38)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, SubobjectReference)
	TArray<class FName>                          ComponentTags;                                     // 0x68(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x78(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_4F7[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        UCSSerializationIndex;                             // 0x8C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_32 : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNetAddressable : 1;                               // Mask: 0x8, PropSize: 0x10x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bReplicateUsingRegisteredSubObjectList : 1;        // Mask: 0x10, PropSize: 0x10x90(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bReplicates : 1;                                   // Mask: 0x20, PropSize: 0x10x90(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_33 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4F9[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_34 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAutoActivate : 1;                                 // Mask: 0x2, PropSize: 0x10x92(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bIsActive : 1;                                     // Mask: 0x4, PropSize: 0x10x92(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bEditableWhenInherited : 1;                        // Mask: 0x8, PropSize: 0x10x92(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bOnlyRelevantToOwner : 1;                          // Mask: 0x10, PropSize: 0x10x92(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_35 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanEverAffectNavigation : 1;                      // Mask: 0x40, PropSize: 0x10x92(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_36 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsEditorOnly : 1;                                 // Mask: 0x1, PropSize: 0x10x93(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_37 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4FA[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	enum class EComponentCreationMethod          CreationMethod;                                    // 0x95(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentActivated;                              // 0x96(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentDeactivated;                            // 0x97(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4FB[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bStasisPreventUnregister : 1;                      // Mask: 0x1, PropSize: 0x10xA8(0x1)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bOnlyInitialReplication : 1;                       // Mask: 0x2, PropSize: 0x10xA8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bPreventOnDedicatedServer : 1;                     // Mask: 0x4, PropSize: 0x10xA8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bPreventOnConsoles : 1;                            // Mask: 0x8, PropSize: 0x10xA8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bPreventOnClient : 1;                              // Mask: 0x10, PropSize: 0x10xA8(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bPreventOnNonDedicatedHost : 1;                    // Mask: 0x20, PropSize: 0x10xA8(0x1)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bDedicatedForceTickingEveryFrame : 1;              // Mask: 0x40, PropSize: 0x10xA8(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bAlwaysReplicatePropertyConditional : 1;           // Mask: 0x80, PropSize: 0x10xA8(0x1)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bUseBPOnComponentTick : 1;                         // Mask: 0x1, PropSize: 0x10xA9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bUseBPOnComponentDestroyed : 1;                    // Mask: 0x2, PropSize: 0x10xA9(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        bUseBPOnComponentCreated : 1;                      // Mask: 0x4, PropSize: 0x10xA9(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_38 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_501[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	class FName                                  CustomTag;                                         // 0xAC(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        CustomData;                                        // 0xB4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UActorComponent* GetDefaultObj();

	void ToggleActive();
	enum class ETickingGroup SetTickGroup();
	bool SetTickableWhenPaused();
	class AActor* SetOwner();
	bool SetIsReplicated();
	float SetComponentTickIntervalAndCooldown();
	float SetComponentTickInterval();
	bool SetComponentTickEnabled();
	bool SetAutoActivate();
	bool SetActive();
	void ReregisterComponent();
	class UActorComponent* RemoveTickPrerequisiteComponent();
	class AActor* RemoveTickPrerequisiteActor();
	float ReceiveTick();
	enum class EEndPlayReason ReceiveEndPlay();
	void ReceiveBeginPlay();
	float ReceiveAsyncPhysicsTick();
	void OnRep_IsActive();
	void K2_DestroyComponent(class UObject** Object);
	void IsComponentTickEnabled(bool ReturnValue);
	void IsBeingDestroyed(bool ReturnValue);
	void IsActive(bool ReturnValue);
	void GetOwner(class AActor* ReturnValue);
	void GetComponentTickInterval(float ReturnValue);
	void Deactivate();
	class FName ComponentHasTag(bool ReturnValue);
	float BPTickComponent();
	float BPOnComponentTick();
	void BPOnComponentDestroyed();
	void BPOnComponentCreated();
	class UActorComponent* AddTickPrerequisiteComponent();
	class AActor* AddTickPrerequisiteActor();
	void AddedAsPrimalItemAttachment();
	bool Activate();
};

// 0x210 (0x2C8 - 0xB8)
// Class Engine.SceneComponent
class USceneComponent : public UActorComponent
{
public:
	uint8                                        Pad_661[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class APhysicsVolume>         PhysicsVolume;                                     // 0xC0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, DuplicateTransient)
	class USceneComponent*                       AttachParent;                                      // 0xC8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  AttachSocketName;                                  // 0xD0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<class USceneComponent*>               AttachChildren;                                    // 0xD8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<class USceneComponent*>               ClientAttachedChildren;                            // 0xE8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_667[0x48];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RelativeLocation;                                  // 0x140(0x18)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              RelativeRotation;                                  // 0x158(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeScale3D;                                   // 0x170(0x18)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               ComponentVelocity;                                 // 0x188(0x18)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bClientSyncAlwaysUpdatePhysicsCollision : 1;       // Mask: 0x1, PropSize: 0x10x1A0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_49 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_670[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bComponentToWorldUpdated : 1;                      // Mask: 0x1, PropSize: 0x10x1A4(0x1)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_4A : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAbsoluteLocation : 1;                             // Mask: 0x4, PropSize: 0x10x1A4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bAbsoluteRotation : 1;                             // Mask: 0x8, PropSize: 0x10x1A4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bAbsoluteScale : 1;                                // Mask: 0x10, PropSize: 0x10x1A4(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bVisible : 1;                                      // Mask: 0x20, PropSize: 0x10x1A4(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bShouldBeAttached : 1;                             // Mask: 0x40, PropSize: 0x10x1A4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bShouldSnapLocationWhenAttached : 1;               // Mask: 0x80, PropSize: 0x10x1A4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bShouldSnapRotationWhenAttached : 1;               // Mask: 0x1, PropSize: 0x10x1A5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bShouldSnapScaleWhenAttached : 1;                  // Mask: 0x2, PropSize: 0x10x1A5(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bShouldUpdatePhysicsVolume : 1;                    // Mask: 0x4, PropSize: 0x10x1A5(0x1)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bHiddenInGame : 1;                                 // Mask: 0x8, PropSize: 0x10x1A5(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config)
	uint8                                        BitPad_4B : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_676[0x2];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAttachedSoundsForceHighPriority : 1;              // Mask: 0x1, PropSize: 0x10x1A8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_4C : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_678[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bBoundsChangeTriggersStreamingDataRebuild : 1;     // Mask: 0x1, PropSize: 0x10x1AC(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bUseAttachParentBound : 1;                         // Mask: 0x2, PropSize: 0x10x1AC(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bComputeFastLocalBounds : 1;                       // Mask: 0x4, PropSize: 0x10x1AC(0x1)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bComputeBoundsOnceForGame : 1;                     // Mask: 0x8, PropSize: 0x10x1AC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bComputedBoundsOnceForGame : 1;                    // Mask: 0x10, PropSize: 0x10x1AC(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bIsNotRenderAttachmentRoot : 1;                    // Mask: 0x20, PropSize: 0x10x1AC(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_4D : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_67B[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	enum class EComponentMobility                Mobility;                                          // 0x1AE(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst)
	enum class EDetailMode                       DetailMode;                                        // 0x1AF(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	FMulticastSparseDelegateProperty_            PhysicsVolumeChangedDelegate;                      // 0x1B0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_67C[0x10F];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIgnoreParentTransformUpdate : 1;                  // Mask: 0x1, PropSize: 0x10x2C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bUpdateChildOverlaps : 1;                          // Mask: 0x2, PropSize: 0x10x2C0(0x1)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_4E : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_67D[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        AttachmentChangedIncrementer;                      // 0x2C4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USceneComponent* GetDefaultObj();

	bool ToggleVisibility();
	float StopSound();
	struct FVector SetWorldScale3D();
	bool SetVisibility(bool* bSetChildrenRenderState);
	bool SetShouldUpdatePhysicsVolume();
	struct FVector SetRelativeScale3D();
	enum class EComponentMobility SetMobility();
	bool SetHiddenInGame(bool* bSetChildrenRenderState);
	void SetAbsolute(bool* bNewAbsoluteLocation, bool* bNewAbsoluteRotation, bool* bNewAbsoluteScale);
	void ResetRelativeTransform();
	void OnRep_Visibility(bool* OldValue);
	void OnRep_Transform();
	void OnRep_AttachSocketName();
	void OnRep_AttachParent();
	void OnRep_AttachChildren();
	bool K2_SetWorldTransform(struct FTransform* NewTransform, const struct FHitResult& SweepHitResult);
	bool K2_SetWorldRotation(const struct FHitResult& SweepHitResult);
	bool K2_SetWorldLocationAndRotation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult);
	bool K2_SetWorldLocation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult);
	bool K2_SetRelativeTransform(struct FTransform* NewTransform, const struct FHitResult& SweepHitResult);
	bool K2_SetRelativeRotation(const struct FHitResult& SweepHitResult);
	bool K2_SetRelativeLocationAndRotation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult);
	bool K2_SetRelativeLocation(struct FVector* NewLocation, const struct FHitResult& SweepHitResult);
	void K2_GetComponentToWorld(const struct FTransform& ReturnValue);
	void K2_GetComponentScale(const struct FVector& ReturnValue);
	void K2_GetComponentRotation(const struct FRotator& ReturnValue);
	void K2_GetComponentLocation(const struct FVector& ReturnValue);
	void K2_DetachFromComponent(enum class EDetachmentRule* LocationRule, enum class EDetachmentRule* RotationRule, enum class EDetachmentRule* ScaleRule, bool bCallModify);
	void K2_AttachToComponent(class USceneComponent** Parent, class FName* SocketName, enum class EAttachmentRule* LocationRule, enum class EAttachmentRule* RotationRule, enum class EAttachmentRule* ScaleRule, bool bWeldSimulatedBodies, bool ReturnValue);
	void K2_AttachTo(class USceneComponent** InParent, class FName InSocketName, enum class EAttachLocation AttachType, bool bWeldSimulatedBodies, bool ReturnValue);
	bool K2_AddWorldTransformKeepScale(const struct FTransform& DeltaTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddWorldTransform(const struct FTransform& DeltaTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddWorldRotation(const struct FRotator& DeltaRotation, const struct FHitResult& SweepHitResult);
	bool K2_AddWorldOffset(const struct FHitResult& SweepHitResult);
	bool K2_AddRelativeRotation(const struct FRotator& DeltaRotation, const struct FHitResult& SweepHitResult);
	bool K2_AddRelativeLocation(const struct FHitResult& SweepHitResult);
	bool K2_AddLocalTransform(const struct FTransform& DeltaTransform, const struct FHitResult& SweepHitResult);
	bool K2_AddLocalRotation(const struct FRotator& DeltaRotation, const struct FHitResult& SweepHitResult);
	bool K2_AddLocalOffset(const struct FHitResult& SweepHitResult);
	void IsVisible(bool ReturnValue);
	void IsSimulatingPhysics(class FName* BoneName, bool ReturnValue);
	void IsAnySimulatingPhysics(bool ReturnValue);
	void GetUpVector(const struct FVector& ReturnValue);
	void GetSocketTransform(class FName InSocketName, enum class ERelativeTransformSpace TransformSpace, const struct FTransform& ReturnValue);
	void GetSocketRotation(class FName InSocketName, const struct FRotator& ReturnValue);
	void GetSocketQuaternion(class FName InSocketName, const struct FQuat& ReturnValue);
	void GetSocketLocation(class FName InSocketName, const struct FVector& ReturnValue);
	void GetShouldUpdatePhysicsVolume(bool ReturnValue);
	void GetRightVector(const struct FVector& ReturnValue);
	void GetRelativeTransform(const struct FTransform& ReturnValue);
	void GetPhysicsVolume(class APhysicsVolume* ReturnValue);
	void GetParentComponents(const TArray<class USceneComponent*>& Parents);
	void GetNumChildrenComponents(int32 ReturnValue);
	void GetForwardVector(const struct FVector& ReturnValue);
	void GetComponentVelocity(const struct FVector& ReturnValue);
	TArray<class USceneComponent*> GetChildrenComponents(bool bIncludeAllDescendants);
	void GetChildComponent(int32 ChildIndex, class USceneComponent* ReturnValue);
	void GetAttachSocketName(class FName ReturnValue);
	void GetAttachParent(class USceneComponent* ReturnValue);
	void GetAllSocketNames(const TArray<class FName>& ReturnValue);
	void DoesSocketExist(class FName InSocketName, bool ReturnValue);
	void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify);
};

// 0x3D0 (0x698 - 0x2C8)
// Class Engine.PrimitiveComponent
class UPrimitiveComponent : public USceneComponent
{
public:
	uint8                                        Pad_941[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDrawDistance;                                   // 0x2E0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        LDMaxDrawDistance;                                 // 0x2E4(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        CachedMaxDrawDistance;                             // 0x2E8(0x4)(Edit, Net, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class ESceneDepthPriorityGroup          DepthPriorityGroup;                                // 0x2EC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class ESceneDepthPriorityGroup          ViewOwnerDepthPriorityGroup;                       // 0x2ED(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	enum class EIndirectLightingCacheQuality     IndirectLightingCacheQuality;                      // 0x2EE(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	enum class ELightmapType                     LightmapType;                                      // 0x2EF(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	enum class EHLODBatchingPolicy               HLODBatchingPolicy;                                // 0x2F0(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bEnableAutoLODGeneration : 1;                      // Mask: 0x1, PropSize: 0x10x2F1(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsActorTextureStreamingBuiltData : 1;             // Mask: 0x2, PropSize: 0x10x2F1(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsValidTextureStreamingBuiltData : 1;             // Mask: 0x4, PropSize: 0x10x2F1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bNeverDistanceCull : 1;                            // Mask: 0x8, PropSize: 0x10x2F1(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_5D : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_5E : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAlwaysCreatePhysicsState : 1;                     // Mask: 0x2, PropSize: 0x10x2F2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bGenerateOverlapEvents : 1;                        // Mask: 0x4, PropSize: 0x10x2F2(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bMultiBodyOverlap : 1;                             // Mask: 0x8, PropSize: 0x10x2F2(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bTraceComplexOnMove : 1;                           // Mask: 0x10, PropSize: 0x10x2F2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bReturnMaterialOnMove : 1;                         // Mask: 0x20, PropSize: 0x10x2F2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseViewOwnerDepthPriorityGroup : 1;               // Mask: 0x40, PropSize: 0x10x2F2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bAllowCullDistanceVolume : 1;                      // Mask: 0x80, PropSize: 0x10x2F2(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bVisibleInReflectionCaptures : 1;                  // Mask: 0x1, PropSize: 0x10x2F3(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bVisibleInRealTimeSkyCaptures : 1;                 // Mask: 0x2, PropSize: 0x10x2F3(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bVisibleInRayTracing : 1;                          // Mask: 0x4, PropSize: 0x10x2F3(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bRenderInMainPass : 1;                             // Mask: 0x8, PropSize: 0x10x2F3(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bRenderInDepthPass : 1;                            // Mask: 0x10, PropSize: 0x10x2F3(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bReceivesDecals : 1;                               // Mask: 0x20, PropSize: 0x10x2F3(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bHoldout : 1;                                      // Mask: 0x40, PropSize: 0x10x2F3(0x1)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bOwnerNoSee : 1;                                   // Mask: 0x80, PropSize: 0x10x2F3(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bOnlyOwnerSee : 1;                                 // Mask: 0x1, PropSize: 0x10x2F4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bTreatAsBackgroundForOcclusion : 1;                // Mask: 0x2, PropSize: 0x10x2F4(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseAsOccluder : 1;                                // Mask: 0x4, PropSize: 0x10x2F4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bSelectable : 1;                                   // Mask: 0x8, PropSize: 0x10x2F4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bForceMipStreaming : 1;                            // Mask: 0x10, PropSize: 0x10x2F4(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bHasPerInstanceHitProxies : 1;                     // Mask: 0x20, PropSize: 0x10x2F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        CastShadow : 1;                                    // Mask: 0x40, PropSize: 0x10x2F4(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        bEmissiveLightSource : 1;                          // Mask: 0x80, PropSize: 0x10x2F4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bAffectDynamicIndirectLighting : 1;                // Mask: 0x1, PropSize: 0x10x2F5(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bAffectIndirectLightingWhileHidden : 1;            // Mask: 0x2, PropSize: 0x10x2F5(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bAffectDistanceFieldLighting : 1;                  // Mask: 0x4, PropSize: 0x10x2F5(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastDynamicShadow : 1;                            // Mask: 0x8, PropSize: 0x10x2F5(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastStaticShadow : 1;                             // Mask: 0x10, PropSize: 0x10x2F5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_5F : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	enum class EShadowCacheInvalidationBehavior  ShadowCacheInvalidationBehavior;                   // 0x2F6(0x1)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastVolumetricTranslucentShadow : 1;              // Mask: 0x1, PropSize: 0x10x2F7(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastContactShadow : 1;                            // Mask: 0x2, PropSize: 0x10x2F7(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bSelfShadowOnly : 1;                               // Mask: 0x4, PropSize: 0x10x2F7(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastFarShadow : 1;                                // Mask: 0x8, PropSize: 0x10x2F7(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastInsetShadow : 1;                              // Mask: 0x10, PropSize: 0x10x2F7(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastCinematicShadow : 1;                          // Mask: 0x20, PropSize: 0x10x2F7(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastHiddenShadow : 1;                             // Mask: 0x40, PropSize: 0x10x2F7(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bCastShadowAsTwoSided : 1;                         // Mask: 0x80, PropSize: 0x10x2F7(0x1)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bLightAsIfStatic : 1;                              // Mask: 0x1, PropSize: 0x10x2F8(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bLightAttachmentsAsGroup : 1;                      // Mask: 0x2, PropSize: 0x10x2F8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bExcludeFromLightAttachmentGroup : 1;              // Mask: 0x4, PropSize: 0x10x2F8(0x1)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bReceiveMobileCSMShadows : 1;                      // Mask: 0x8, PropSize: 0x10x2F8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bSingleSampleShadowFromStationaryLights : 1;       // Mask: 0x10, PropSize: 0x10x2F8(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoreRadialImpulse : 1;                          // Mask: 0x20, PropSize: 0x10x2F8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoreRadialForce : 1;                            // Mask: 0x40, PropSize: 0x10x2F8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bApplyImpulseOnDamage : 1;                         // Mask: 0x80, PropSize: 0x10x2F8(0x1)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bReplicatePhysicsToAutonomousProxy : 1;            // Mask: 0x1, PropSize: 0x10x2F9(0x1)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bFillCollisionUnderneathForNavmesh : 1;            // Mask: 0x2, PropSize: 0x10x2F9(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        AlwaysLoadOnClient : 1;                            // Mask: 0x4, PropSize: 0x10x2F9(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        AlwaysLoadOnServer : 1;                            // Mask: 0x8, PropSize: 0x10x2F9(0x1)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseEditorCompositing : 1;                         // Mask: 0x10, PropSize: 0x10x2F9(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsBeingMovedByEditor : 1;                         // Mask: 0x20, PropSize: 0x10x2F9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bRenderCustomDepth : 1;                            // Mask: 0x40, PropSize: 0x10x2F9(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bVisibleInSceneCaptureOnly : 1;                    // Mask: 0x80, PropSize: 0x10x2F9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bHiddenInSceneCapture : 1;                         // Mask: 0x1, PropSize: 0x10x2FA(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bRayTracingFarField : 1;                           // Mask: 0x2, PropSize: 0x10x2FA(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_60 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasNoStreamableTextures : 1;                      // Mask: 0x8, PropSize: 0x10x2FA(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bStaticWhenNotMoveable : 1;                        // Mask: 0x10, PropSize: 0x10x2FA(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_61 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIgnoreUpdatingOwnersLastRenderTime : 1;           // Mask: 0x80, PropSize: 0x10x2FA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_96A[0x1D];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EHasCustomNavigableGeometry       bHasCustomNavigableGeometry;                       // 0x318(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_96B[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	enum class ECanBeCharacterBase               CanCharacterStepUpOn;                              // 0x31A(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FLightingChannels                     LightingChannels;                                  // 0x31B(0x1)(Net, Parm, ZeroConstructor, ReturnParm, EditConst)
	int32                                        RayTracingGroupId;                                 // 0x31C(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	int32                                        VisibilityId;                                      // 0x320(0x4)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	int32                                        CustomDepthStencilValue;                           // 0x324(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	struct FCustomPrimitiveData                  CustomPrimitiveData;                               // 0x328(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst)
	struct FCustomPrimitiveData                  CustomPrimitiveDataInternal;                       // 0x338(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_96D[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        TranslucencySortPriority;                          // 0x350(0x4)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        TranslucencySortDistanceOffset;                    // 0x354(0x4)(BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	TArray<class URuntimeVirtualTexture*>        RuntimeVirtualTextures;                            // 0x358(0x10)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	int8                                         VirtualTextureLodBias;                             // 0x368(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	int8                                         VirtualTextureCullMips;                            // 0x369(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	int8                                         VirtualTextureMinCoverage;                         // 0x36A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	enum class ERuntimeVirtualTextureMainPassType VirtualTextureRenderPassType;                      // 0x36B(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_96F[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BoundsScale;                                       // 0x37C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_970[0x20];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        MoveIgnoreActors;                                  // 0x3A0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	TArray<class UPrimitiveComponent*>           MoveIgnoreComponents;                              // 0x3B0(0x10)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_973[0x60];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBodyInstance                         BodyInstance;                                      // 0x420(0x150)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	FMulticastSparseDelegateProperty_            OnComponentHit;                                    // 0x570(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentBeginOverlap;                           // 0x571(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentEndOverlap;                             // 0x572(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentWake;                                   // 0x573(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnComponentSleep;                                  // 0x574(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_976[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	FMulticastSparseDelegateProperty_            OnComponentPhysicsStateChanged;                    // 0x576(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnBeginCursorOver;                                 // 0x577(0x1)(Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnEndCursorOver;                                   // 0x578(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnClicked;                                         // 0x579(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnReleased;                                        // 0x57A(0x1)(Edit, ExportObject, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchBegin;                                 // 0x57B(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchEnd;                                   // 0x57C(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchEnter;                                 // 0x57D(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            OnInputTouchLeave;                                 // 0x57E(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	enum class ERayTracingGroupCullingPriority   RayTracingGroupCullingPriority;                    // 0x57F(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	enum class ERendererStencilMask              CustomDepthStencilWriteMask;                       // 0x580(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_97D[0x1F];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        ExcludeFromHLODLevels;                             // 0x5A0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_97F[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   LODParentPrimitive;                                // 0x5A8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bForcePreventBlockingProjectiles : 1;              // Mask: 0x1, PropSize: 0x10x5B0(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bForceOverlapEvents : 1;                           // Mask: 0x2, PropSize: 0x10x5B0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIsInForeground : 1;                               // Mask: 0x4, PropSize: 0x10x5B0(0x1)(BlueprintVisible, Net, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseInternalOctree : 1;                            // Mask: 0x8, PropSize: 0x10x5B0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseInternalOctreeOnClient : 1;                    // Mask: 0x10, PropSize: 0x10x5B0(0x1)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_62 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceDynamicPhysics : 1;                          // Mask: 0x40, PropSize: 0x10x5B0(0x1)(Edit, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bPreventCharacterBasing : 1;                       // Mask: 0x80, PropSize: 0x10x5B0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_63 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsAbstractBasingComponent : 1;                    // Mask: 0x2, PropSize: 0x10x5B1(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bClimbable : 1;                                    // Mask: 0x4, PropSize: 0x10x5B1(0x1)(Net, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bUseAbsoluteMaxDrawDisatance : 1;                  // Mask: 0x8, PropSize: 0x10x5B1(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bMovableUseDynamicDrawDistance : 1;                // Mask: 0x10, PropSize: 0x10x5B1(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIncludeBoundsRadiusInDrawDistances : 1;           // Mask: 0x20, PropSize: 0x10x5B1(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bExcludeFromLevelBounds : 1;                       // Mask: 0x40, PropSize: 0x10x5B1(0x1)(Edit, Net, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoredByCharacterEncroachment : 1;               // Mask: 0x80, PropSize: 0x10x5B1(0x1)(BlueprintReadOnly, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bPreventDamage : 1;                                // Mask: 0x1, PropSize: 0x10x5B2(0x1)(ExportObject, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_64 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_982[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        ObjectLayer;                                       // 0x5B4(0x4)(Edit, Parm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        OverrideStepHeight;                                // 0x5B8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_984[0x98];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        InternalOctreeMask;                                // 0x654(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_985[0x1C];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       ProxyMeshID;                                       // 0x674(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	bool                                         bIsProxyMeshParent;                                // 0x678(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_988[0x1F];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimitiveComponent* GetDefaultObj();

	void WasRecentlyVisible(bool ReturnValue);
	float WasRecentlyRendered(bool ReturnValue);
	void WakeRigidBody(class FName* BoneName);
	void WakeAllRigidBodies();
	struct FWalkableSlopeOverride SetWalkableSlopeOverride();
	void SetVisibleInSceneCaptureOnly(bool* bValue);
	bool SetVisibleInRayTracing();
	void SetVectorParameterForDefaultCustomPrimitiveData(class FName ParameterName, struct FVector4* Value);
	void SetVectorParameterForCustomPrimitiveData(class FName ParameterName, struct FVector4* Value);
	void SetUseCCD(bool InUseCCD, class FName* BoneName);
	int32 SetTranslucentSortPriority();
	float SetTranslucencySortDistanceOffset();
	bool SetStaticWhenNotMoveable();
	void SetSingleSampleShadowFromStationaryLights(bool* bNewSingleSampleShadowFromStationaryLights);
	void SetSimulatePhysics(bool* bSimulate);
	void SetScalarParameterForDefaultCustomPrimitiveData(class FName ParameterName, float* Value);
	void SetScalarParameterForCustomPrimitiveData(class FName ParameterName, float* Value);
	void SetRenderInMainPass(bool* bValue);
	void SetRenderInDepthPass(bool* bValue);
	void SetRenderCustomDepth(bool* bValue);
	void SetReceivesDecals(bool* bNewReceivesDecals);
	void SetPhysMaterialOverride(class UPhysicalMaterial** NewPhysMaterial);
	void SetPhysicsMaxAngularVelocityInRadians(float* NewMaxAngVel, bool* bAddToCurrent, class FName* BoneName);
	void SetPhysicsMaxAngularVelocityInDegrees(float* NewMaxAngVel, bool* bAddToCurrent, class FName* BoneName);
	void SetPhysicsLinearVelocity(struct FVector* NewVel, bool* bAddToCurrent, class FName* BoneName);
	void SetPhysicsAngularVelocityInRadians(struct FVector* NewAngVel, bool* bAddToCurrent, class FName* BoneName);
	void SetPhysicsAngularVelocityInDegrees(struct FVector* NewAngVel, bool* bAddToCurrent, class FName* BoneName);
	void SetOwnerNoSee(bool* bNewOwnerNoSee);
	void SetOnlyOwnerSee(bool* bNewOnlyOwnerSee);
	void SetNotifyRigidBodyCollision(bool* bNewNotifyRigidBodyCollision);
	void SetMaterialByName(class FName* MaterialSlotName, class UMaterialInterface* Material);
	void SetMaterial(int32 ElementIndex, class UMaterialInterface* Material);
	void SetMassScale(class FName* BoneName, float* InMassScale);
	float SetMassOverrideInKg(class FName* BoneName, bool* bOverrideMass);
	void SetLinearDamping(float InDamping);
	void SetLightingChannels(bool* bChannel0, bool* bChannel1, bool* bChannel2);
	void SetLightAttachmentsAsGroup(bool* bInLightAttachmentsAsGroup);
	void SetInternalOctreeMask(int32* InOctreeMask, bool* bReregisterWithTree);
	void SetHoldout(bool* bNewHoldout);
	void SetHiddenInSceneCapture(bool* bValue);
	void SetGenerateOverlapEvents(bool* bInGenerateOverlapEvents);
	void SetExcludeFromLightAttachmentGroup(bool* bInExcludeFromLightAttachmentGroup);
	void SetExcludeForSpecificHLODLevels(TArray<int32>* InExcludeForSpecificHLODLevels);
	void SetExcludedFromHLODLevel(enum class EHLODLevelExclusion HLODLevel, bool* bExcluded);
	void SetEnableGravity(bool* bGravityEnabled);
	void SetEmissiveLightSource(bool* NewEmissiveLightSource);
	void SetDefaultCustomPrimitiveDataVector4(int32* DataIndex, struct FVector4* Value);
	void SetDefaultCustomPrimitiveDataVector3(int32* DataIndex, struct FVector* Value);
	void SetDefaultCustomPrimitiveDataVector2(int32* DataIndex, struct FVector2D* Value);
	void SetDefaultCustomPrimitiveDataFloat(int32* DataIndex, float* Value);
	void SetCustomPrimitiveDataVector4(int32* DataIndex, struct FVector4* Value);
	void SetCustomPrimitiveDataVector3(int32* DataIndex, struct FVector* Value);
	void SetCustomPrimitiveDataVector2(int32* DataIndex, struct FVector2D* Value);
	void SetCustomPrimitiveDataFloat(int32* DataIndex, float* Value);
	void SetCustomDepthStencilWriteMask(enum class ERendererStencilMask WriteMaskBit);
	void SetCustomDepthStencilValue(int32* Value);
	void SetCullDistance(float NewCullDistance);
	void SetConstraintMode(enum class EDOFMode ConstraintMode);
	enum class ECollisionChannel SetCollisionResponseToChannel(enum class ECollisionResponse NewResponse);
	void SetCollisionResponseToAllChannels(enum class ECollisionResponse NewResponse);
	void SetCollisionResponseSet(const struct FCollisionResponseSet& Responses);
	void SetCollisionProfileName(class FName InCollisionProfileName, bool bUpdateOverlaps);
	enum class ECollisionChannel SetCollisionObjectType();
	void SetCollisionEnabled(enum class ECollisionEnabled NewType);
	void SetCenterOfMass(const struct FVector& CenterOfMassOffset, class FName* BoneName);
	void SetCastShadow(bool NewCastShadow);
	void SetCastInsetShadow(bool bInCastInsetShadow);
	void SetCastHiddenShadow(bool NewCastHiddenShadow);
	void SetCastContactShadow(bool bInCastContactShadow);
	void SetBoundsScale(float NewBoundsScale);
	void SetAngularDamping(float InDamping);
	void SetAllUseCCD(bool InUseCCD);
	void SetAllPhysicsLinearVelocity(struct FVector* NewVel, bool* bAddToCurrent);
	void SetAllPhysicsAngularVelocityInRadians(struct FVector* NewAngVel, bool* bAddToCurrent);
	void SetAllPhysicsAngularVelocityInDegrees(struct FVector* NewAngVel, bool* bAddToCurrent);
	void SetAllMassScale(float* InMassScale);
	void SetAffectIndirectLightingWhileHidden(bool* bNewAffectIndirectLightingWhileHidden);
	void SetAffectDynamicIndirectLighting(bool* bNewAffectDynamicIndirectLighting);
	void SetAffectDistanceFieldLighting(bool* NewAffectDistanceFieldLighting);
	void ScaleByMomentOfInertia(struct FVector* InputVector, class FName* BoneName, const struct FVector& ReturnValue);
	void PutRigidBodyToSleep(class FName* BoneName);
	struct FHitResult K2_SphereTraceComponent(float SphereRadius, bool bTraceComplex, bool* bShowTrace, bool* bPersistentShowTrace, struct FVector* HitNormal, class FName* BoneName, bool ReturnValue);
	struct FHitResult K2_SphereOverlapComponent(struct FVector* InSphereCentre, float* InSphereRadius, bool bTraceComplex, bool* bShowTrace, bool* bPersistentShowTrace, struct FVector* HitNormal, class FName* BoneName, bool ReturnValue);
	struct FHitResult K2_LineTraceComponent(bool bTraceComplex, bool* bShowTrace, bool* bPersistentShowTrace, struct FVector* HitNormal, class FName* BoneName, bool ReturnValue);
	void K2_IsQueryCollisionEnabled(bool ReturnValue);
	void K2_IsPhysicsCollisionEnabled(bool ReturnValue);
	void K2_IsCollisionEnabled(bool ReturnValue);
	struct FHitResult K2_BoxOverlapComponent(struct FVector* InBoxCentre, struct FBox* InBox, bool bTraceComplex, bool* bShowTrace, bool* bPersistentShowTrace, struct FVector* HitNormal, class FName* BoneName, bool ReturnValue);
	class UPrimitiveComponent* IsOverlappingComponent(bool ReturnValue);
	class AActor* IsOverlappingActor(bool ReturnValue);
	void IsGravityEnabled(bool ReturnValue);
	void IsExcludedFromHLODLevel(enum class EHLODLevelExclusion HLODLevel, bool ReturnValue);
	void IsAnyRigidBodyAwake(bool ReturnValue);
	void InvalidateLumenSurfaceCache();
	void IgnoreComponentWhenMoving(class UPrimitiveComponent* Component, bool bShouldIgnore);
	void IgnoreActorWhenMoving(class AActor** Actor, bool bShouldIgnore);
	void GetWalkableSlopeOverride(const struct FWalkableSlopeOverride& ReturnValue);
	void GetStaticWhenNotMoveable(bool ReturnValue);
	struct FVector GetPhysicsLinearVelocityAtPoint(class FName* BoneName, const struct FVector& ReturnValue);
	void GetPhysicsLinearVelocity(class FName* BoneName, const struct FVector& ReturnValue);
	void GetPhysicsAngularVelocityInRadians(class FName* BoneName, const struct FVector& ReturnValue);
	void GetPhysicsAngularVelocityInDegrees(class FName* BoneName, const struct FVector& ReturnValue);
	void GetOverlappingComponents(const TArray<class UPrimitiveComponent*>& OutOverlappingComponents);
	void GetOverlappingActors(TArray<class AActor*>* OverlappingActors, class UClass* ClassFilter);
	void GetNumMaterials(int32 ReturnValue);
	int32 GetMaterialFromCollisionFaceIndex(int32 SectionIndex, class UMaterialInterface* ReturnValue);
	void GetMaterial(int32 ElementIndex, class UMaterialInterface* ReturnValue);
	void GetMassScale(class FName* BoneName, float ReturnValue);
	void GetMass(float ReturnValue);
	void GetLinearDamping(float ReturnValue);
	void GetInertiaTensor(class FName* BoneName, const struct FVector& ReturnValue);
	void GetGenerateOverlapEvents(bool ReturnValue);
	void GetExcludeForSpecificHLODLevels(const TArray<int32>& ReturnValue);
	void GetCustomPrimitiveDataIndexForVectorParameter(class FName ParameterName, int32 ReturnValue);
	void GetCustomPrimitiveDataIndexForScalarParameter(class FName ParameterName, int32 ReturnValue);
	enum class ECollisionChannel GetCollisionResponseToChannel(enum class ECollisionResponse ReturnValue);
	void GetCollisionResponseSet(const struct FCollisionResponseSet& OutResponses);
	void GetCollisionProfileName(class FName ReturnValue);
	void GetCollisionObjectType(enum class ECollisionChannel ReturnValue);
	void GetCollisionEnabled(enum class ECollisionEnabled ReturnValue);
	struct FVector GetClosestPointOnCollision(class FName* BoneName, float ReturnValue);
	void GetCenterOfMass(class FName* BoneName, const struct FVector& ReturnValue);
	bool GetBodyInstanceAsyncPhysicsTickHandle(class FName* BoneName, int32* Index, const struct FBodyInstanceAsyncPhysicsTickHandle& ReturnValue);
	void GetAngularDamping(float ReturnValue);
	class FName CreateDynamicMaterialInstance(int32 ElementIndex, class UMaterialInstanceDynamic* ReturnValue);
	void CreateAndSetMaterialInstanceDynamicFromMaterial(int32 ElementIndex, class UMaterialInterface** Parent, class UMaterialInstanceDynamic* ReturnValue);
	void CreateAndSetMaterialInstanceDynamic(int32 ElementIndex, class UMaterialInstanceDynamic* ReturnValue);
	void CopyArrayOfMoveIgnoreComponents(const TArray<class UPrimitiveComponent*>& ReturnValue);
	void CopyArrayOfMoveIgnoreActors(const TArray<class AActor*>& ReturnValue);
	void ClearMoveIgnoreComponents();
	void ClearMoveIgnoreActors();
	void CanCharacterStepUp(class APawn* Pawn, bool ReturnValue);
	struct FVector AddVelocityChangeImpulseAtLocation(struct FVector* Location, class FName* BoneName);
	bool AddTorqueInRadians(class FName* BoneName);
	bool AddTorqueInDegrees(class FName* BoneName);
	bool AddRadialImpulse(float* Radius);
	bool AddRadialForce(float* Radius);
	struct FVector AddImpulseAtLocation(struct FVector* Location, class FName* BoneName);
	bool AddImpulse(class FName* BoneName);
	struct FVector AddForceAtLocationLocal(struct FVector* Location, class FName* BoneName);
	struct FVector AddForceAtLocation(struct FVector* Location, class FName* BoneName);
	bool AddForce(class FName* BoneName);
	bool AddAngularImpulseInRadians(class FName* BoneName);
	bool AddAngularImpulseInDegrees(class FName* BoneName);
};

// 0x0 (0x698 - 0x698)
// Class Engine.FXSystemComponent
class UFXSystemComponent : public UPrimitiveComponent
{
public:

	static class UClass* StaticClass();
	static class UFXSystemComponent* GetDefaultObj();

	struct FVector SetVectorParameter(class FName ParameterName);
	bool SetUseAutoManageAttachment();
	int32 SetIntParameter(class FName ParameterName);
	float SetFloatParameter(class FName ParameterName);
	bool SetEmitterEnable(class FName EmitterName);
	struct FLinearColor SetColorParameter(class FName ParameterName);
	bool SetBoolParameter(class FName ParameterName);
	void SetAutoAttachmentParameters(class USceneComponent** Parent, class FName* SocketName, enum class EAttachmentRule* LocationRule, enum class EAttachmentRule* RotationRule, enum class EAttachmentRule* ScaleRule);
	class AActor* SetActorParameter(class FName ParameterName);
	void ReleaseToPool();
	void GetFXSystemAsset(class UFXSystemAsset* ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class Engine.BlueprintAsyncActionBase
class UBlueprintAsyncActionBase : public UObject
{
public:
	uint8                                        Pad_9F3[0x8];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBlueprintAsyncActionBase* GetDefaultObj();

	void Activate();
};

// 0x48 (0x70 - 0x28)
// Class Engine.FXSystemAsset
class UFXSystemAsset : public UObject
{
public:
	uint32                                       MaxPoolSize;                                       // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	uint32                                       PoolPrimeSize;                                     // 0x2C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_9F9[0x40];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFXSystemAsset* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.AnimNotifyState
class UAnimNotifyState : public UObject
{
public:
	uint8                                        Pad_A1E[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	bool                                         bIgnoreOnDediServer;                               // 0x29(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCanClobberEventReference;                         // 0x2A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A1F[0x5];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotifyState* GetDefaultObj();

	float Received_NotifyTick(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
	class UAnimSequenceBase* Received_NotifyEnd(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
	float Received_NotifyBegin(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
	void GetNotifyName(const class FString& ReturnValue);
	void GetDefaultTriggerWeightThreshold(float ReturnValue);
};

// 0x18 (0x40 - 0x28)
// Class Engine.AnimNotify
class UAnimNotify : public UObject
{
public:
	uint8                                        Pad_A36[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIgnoreOnDediServer;                               // 0x38(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCanClobberEventReference;                         // 0x39(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A38[0x6];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify* GetDefaultObj();

	class UAnimSequenceBase* Received_Notify(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
	void GetNotifyName(const class FString& ReturnValue);
	void GetDefaultTriggerWeightThreshold(float ReturnValue);
};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.TrueSkyActorParent
class ATrueSkyActorParent : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATrueSkyActorParent* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.Subsystem
class USubsystem : public UObject
{
public:
	uint8                                        Pad_A3D[0x8];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.DynamicSubsystem
class UDynamicSubsystem : public USubsystem
{
public:

	static class UClass* StaticClass();
	static class UDynamicSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.EngineSubsystem
class UEngineSubsystem : public UDynamicSubsystem
{
public:

	static class UClass* StaticClass();
	static class UEngineSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.OnlineBlueprintCallProxyBase
class UOnlineBlueprintCallProxyBase : public UBlueprintAsyncActionBase
{
public:

	static class UClass* StaticClass();
	static class UOnlineBlueprintCallProxyBase* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.Player
class UPlayer : public UObject
{
public:
	uint8                                        Pad_A45[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     PlayerController;                                  // 0x30(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        CurrentNetSpeed;                                   // 0x38(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        ConfiguredInternetSpeed;                           // 0x3C(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        ConfiguredLanSpeed;                                // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_A48[0xC];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlayer* GetDefaultObj();

};

// 0x1D98 (0x1DE8 - 0x50)
// Class Engine.NetConnection
class UNetConnection : public UPlayer
{
public:
	TArray<class UChildConnection*>              Children;                                          // 0x50(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	class UNetDriver*                            Driver;                                            // 0x60(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UClass*                                PackageMapClass;                                   // 0x68(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UPackageMap*                           PackageMap;                                        // 0x70(0x8)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<class UChannel*>                      OpenChannels;                                      // 0x78(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        SentTemporaries;                                   // 0x88(0x10)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class AActor*                                ViewTarget;                                        // 0x98(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                OwningActor;                                       // 0xA0(0x8)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        MaxPacket;                                         // 0xA8(0x4)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        InternalAck : 1;                                   // Mask: 0x1, PropSize: 0x10xAC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_6F : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_A4B[0xBB];                                     // Fixing Size After Last Property  > TateDumper <
	struct FUniqueNetIdRepl                      PlayerID;                                          // 0x168(0x30)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_A4C[0x48];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastReceiveTime;                                   // 0x1E0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A4D[0x11E0];                                   // Fixing Size After Last Property  > TateDumper <
	int32                                        DefaultMaxChannelSize;                             // 0x13C8(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A4E[0x304];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UChannel*>                      ChannelsToTick;                                    // 0x16D0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A51[0x700];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHasArkLoginLock : 1;                              // Mask: 0x1, PropSize: 0x10x1DE0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A52[0x7];                                      // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNetConnection* GetDefaultObj();

};

// 0x768 (0x790 - 0x28)
// Class Engine.NetDriver
class UNetDriver : public UObject
{
public:
	uint8                                        Pad_A57[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	class FString                                NetConnectionClassName;                            // 0x30(0x10)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	class FString                                ReplicationDriverClassName;                        // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class FString                                ReplicationBridgeClassName;                        // 0x50(0x10)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        MaxDownloadSize;                                   // 0x60(0x4)(Parm, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bClampListenServerTickRate : 1;                    // Mask: 0x1, PropSize: 0x10x64(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_71 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_A5A[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	int32                                        NetServerMaxTickRate;                              // 0x68(0x4)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        MaxNetTickRate;                                    // 0x6C(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        MaxInternetClientRate;                             // 0x70(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        MaxClientRate;                                     // 0x74(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        ServerTravelPause;                                 // 0x78(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        SpawnPrioritySeconds;                              // 0x7C(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        RelevantTimeout;                                   // 0x80(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        KeepAliveTime;                                     // 0x84(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        InitialConnectTimeout;                             // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        ConnectionTimeout;                                 // 0x8C(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        TimeoutMultiplierForUnoptimizedBuilds;             // 0x90(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_A5E[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	class UNetConnection*                        ServerConnection;                                  // 0x98(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class UNetConnection*>                ClientConnections;                                 // 0xA0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A60[0x60];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        RecentlyDisconnectedTrackingTime;                  // 0x110(0x4)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_A61[0x3C];                                     // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                World;                                             // 0x150(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class UPackage*                              WorldPackage;                                      // 0x158(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A63[0x20];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                NetConnectionClass;                                // 0x180(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UClass*                                ReplicationDriverClass;                            // 0x188(0x8)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UClass*                                ReplicationBridgeClass;                            // 0x190(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A65[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  NetDriverName;                                     // 0x1A8(0x8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FChannelDefinition>            ChannelDefinitions;                                // 0x1B0(0x10)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TMap<class FName, struct FChannelDefinition> ChannelDefinitionMap;                              // 0x1C0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class UChannel*>                      ActorChannelPool;                                  // 0x210(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A68[0x21];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_73 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNoTimeouts : 1;                                   // Mask: 0x40, PropSize: 0x10x241(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bNeverApplyNetworkEmulationSettings : 1;           // Mask: 0x80, PropSize: 0x10x241(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_A6B[0x4DE];                                    // Fixing Size After Last Property  > TateDumper <
	class UReplicationDriver*                    ReplicationDriver;                                 // 0x720(0x8)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_A6C[0x68];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNetDriver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.OnlineEngineInterface
class UOnlineEngineInterface : public UObject
{
public:

	static class UClass* StaticClass();
	static class UOnlineEngineInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.OnlineSession
class UOnlineSession : public UObject
{
public:

	static class UClass* StaticClass();
	static class UOnlineSession* GetDefaultObj();

};

// 0x40 (0x6D8 - 0x698)
// Class Engine.MeshComponent
class UMeshComponent : public UPrimitiveComponent
{
public:
	TArray<class UMaterialInterface*>            OverrideMaterials;                                 // 0x698(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UMaterialInterface*                    OverlayMaterial;                                   // 0x6A8(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	float                                        OverlayMaterialMaxDrawDistance;                    // 0x6B0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_ABD[0x14];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bEnableMaterialParameterCaching : 1;               // Mask: 0x1, PropSize: 0x10x6C8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_77 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_AC0[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageFXActorToSpawn;                              // 0x6D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMeshComponent* GetDefaultObj();

	void SetVectorParameterValueOnMaterials(class FName ParameterName, const struct FVector& ParameterValue);
	void SetScalarParameterValueOnMaterials(class FName ParameterName, float ParameterValue);
	void SetOverlayMaterialMaxDrawDistance(float InMaxDrawDistance);
	void SetOverlayMaterial(class UMaterialInterface* NewOverlayMaterial);
	float PrestreamTextures(bool bPrioritizeCharacterTextures, int32 CinematicTextureGroups);
	void MulticastShowInstance(int32 OriginalIndex);
	void MulticastHideInstance(int32 OriginalIndex, const struct FVector& HitDirection, float Damage, float TotalHealth, bool bCheckHideAttachedDecals);
	void IsMaterialSlotNameValid(class FName* MaterialSlotName, bool ReturnValue);
	void GetOverlayMaterial(class UMaterialInterface* ReturnValue);
	void GetMaterialSlotNames(const TArray<class FName>& ReturnValue);
	void GetMaterials(const TArray<class UMaterialInterface*>& ReturnValue);
	void GetMaterialIndex(class FName* MaterialSlotName, int32 ReturnValue);
};

// 0x88 (0xB0 - 0x28)
// Class Engine.MaterialExpression
class UMaterialExpression : public UObject
{
public:
	int32                                        MaterialExpressionEditorX;                         // 0x28(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        MaterialExpressionEditorY;                         // 0x2C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UEdGraphNode*                          GraphNode;                                         // 0x30(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UMaterialExpression*                   SubgraphExpression;                                // 0x38(0x8)(ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_AD4[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 MaterialExpressionGuid;                            // 0x50(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UMaterial*                             Material;                                          // 0x60(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class UMaterialFunction*                     Function;                                          // 0x68(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class FString                                Desc;                                              // 0x70(0x10)(Edit, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_AD6[0x4];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bRealtimePreview : 1;                              // Mask: 0x1, PropSize: 0x10x84(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bNeedToUpdatePreview : 1;                          // Mask: 0x2, PropSize: 0x10x84(0x1)(ExportObject, Net, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_78 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_AD9[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsParameterExpression : 1;                        // Mask: 0x1, PropSize: 0x10x88(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_79 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_ADC[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCommentBubbleVisible : 1;                         // Mask: 0x1, PropSize: 0x10x8C(0x1)(BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bShowOutputNameOnPin : 1;                          // Mask: 0x2, PropSize: 0x10x8C(0x1)(Edit, BlueprintVisible, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bShowMaskColorsOnPin : 1;                          // Mask: 0x4, PropSize: 0x10x8C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bHidePreviewWindow : 1;                            // Mask: 0x8, PropSize: 0x10x8C(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bCollapsed : 1;                                    // Mask: 0x10, PropSize: 0x10x8C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bShaderInputData : 1;                              // Mask: 0x20, PropSize: 0x10x8C(0x1)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bShowInputs : 1;                                   // Mask: 0x40, PropSize: 0x10x8C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bShowOutputs : 1;                                  // Mask: 0x80, PropSize: 0x10x8C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_AE3[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<class FText>                          MenuCategories;                                    // 0x90(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FExpressionOutput>             Outputs;                                           // 0xA0(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpression* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Engine.Channel
class UChannel : public UObject
{
public:
	class UNetConnection*                        Connection;                                        // 0x28(0x8)(Edit, ConstParm, Net, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_AE6[0x40];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UChannel* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.ControlChannel
class UControlChannel : public UChannel
{
public:
	uint8                                        Pad_AE7[0x18];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UControlChannel* GetDefaultObj();

};

// 0x198 (0x1C0 - 0x28)
// Class Engine.GameInstance
class UGameInstance : public UObject
{
public:
	uint8                                        Pad_B03[0x10];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class ULocalPlayer*>                  LocalPlayers;                                      // 0x38(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class UOnlineSession*                        OnlineSession;                                     // 0x48(0x8)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	TArray<class UObject*>                       ReferencedObjects;                                 // 0x50(0x10)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_B07[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPawnControllerChangedDelegates;                  // 0x78(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_B08[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnInputDeviceConnectionChange;                     // 0xA0(0x10)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnUserInputDevicePairingChange;                    // 0xB0(0x10)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_B0A[0x100];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UGameInstance* GetDefaultObj();

	void ReceiveShutdown();
	void ReceiveInit();
	void HandleTravelError(enum class ETravelFailure* FailureType);
	void HandleNetworkError(enum class ENetworkFailure* FailureType, bool* bIsServer);
	void DebugRemovePlayer(int32 ControllerId);
	void DebugCreatePlayer(int32 ControllerId);
};

// 0x0 (0x30 - 0x30)
// Class Engine.GameInstanceSubsystem
class UGameInstanceSubsystem : public USubsystem
{
public:

	static class UClass* StaticClass();
	static class UGameInstanceSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.WorldSubsystem
class UWorldSubsystem : public USubsystem
{
public:

	static class UClass* StaticClass();
	static class UWorldSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.RecentPlayersWorldSubsystemBase
class URecentPlayersWorldSubsystemBase : public UWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class URecentPlayersWorldSubsystemBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AssetImportData
class UAssetImportData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAssetImportData* GetDefaultObj();

};

// 0x368 (0xA40 - 0x6D8)
// Class Engine.SkinnedMeshComponent
class USkinnedMeshComponent : public UMeshComponent
{
public:
	uint8                                        Pad_C0D[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	class USkeletalMesh*                         SkeletalMesh;                                      // 0x6E0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	class USkinnedAsset*                         SkinnedAsset;                                      // 0x6E8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, SubobjectReference)
	TWeakObjectPtr<class USkinnedMeshComponent>  LeaderPoseComponent;                               // 0x6F0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<enum class ESkinCacheUsage>           SkinCacheUsage;                                    // 0x6F8(0x10)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetMeshDeformer;                                  // 0x708(0x1)(EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_C10[0x7];                                      // Fixing Size After Last Property  > TateDumper <
	class UMeshDeformer*                         MeshDeformer;                                      // 0x710(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	class UMeshDeformerInstanceSettings*         MeshDeformerInstanceSettings;                      // 0x718(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst)
	class UMeshDeformerInstance*                 MeshDeformerInstance;                              // 0x720(0x8)(BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_C12[0x178];                                    // Fixing Size After Last Property  > TateDumper <
	class UPhysicsAsset*                         PhysicsAssetOverride;                              // 0x8A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	int32                                        ForcedLodModel;                                    // 0x8A8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	int32                                        MinLodModel;                                       // 0x8AC(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_C13[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        StreamingDistanceMultiplier;                       // 0x8B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_C14[0xC];                                      // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSkelMeshComponentLODInfo>     LODInfo;                                           // 0x8C8(0x10)(Edit, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_C15[0x24];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EVisibilityBasedAnimTickOption    VisibilityBasedAnimTickOption;                     // 0x8FC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_C16[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_87 : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOverrideMinLod : 1;                               // Mask: 0x8, PropSize: 0x10x8FE(0x1)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseBoundsFromLeaderPoseComponent : 1;             // Mask: 0x10, PropSize: 0x10x8FE(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bForceWireframe : 1;                               // Mask: 0x20, PropSize: 0x10x8FE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDisableMorphTarget : 1;                           // Mask: 0x40, PropSize: 0x10x8FE(0x1)(BlueprintVisible, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bHideSkin : 1;                                     // Mask: 0x80, PropSize: 0x10x8FE(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPerBoneMotionBlur : 1;                            // Mask: 0x1, PropSize: 0x10x8FF(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bComponentUseFixedSkelBounds : 1;                  // Mask: 0x2, PropSize: 0x10x8FF(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bConsiderAllBodiesForBounds : 1;                   // Mask: 0x4, PropSize: 0x10x8FF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSyncAttachParentLOD : 1;                          // Mask: 0x8, PropSize: 0x10x8FF(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bCanHighlightSelectedSections : 1;                 // Mask: 0x10, PropSize: 0x10x8FF(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bRecentlyRendered : 1;                             // Mask: 0x20, PropSize: 0x10x8FF(0x1)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bCastCapsuleDirectShadow : 1;                      // Mask: 0x40, PropSize: 0x10x8FF(0x1)(BlueprintVisible, Net, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bCastCapsuleIndirectShadow : 1;                    // Mask: 0x80, PropSize: 0x10x8FF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bCPUSkinning : 1;                                  // Mask: 0x1, PropSize: 0x10x900(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableUpdateRateOptimizations : 1;                // Mask: 0x2, PropSize: 0x10x900(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bDisplayDebugUpdateRateOptimizations : 1;          // Mask: 0x4, PropSize: 0x10x900(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bRenderStatic : 1;                                 // Mask: 0x8, PropSize: 0x10x900(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreLeaderPoseComponentLOD : 1;                 // Mask: 0x10, PropSize: 0x10x900(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_88 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCachedLocalBoundsUpToDate : 1;                    // Mask: 0x80, PropSize: 0x10x900(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bCachedWorldSpaceBoundsUpToDate : 1;               // Mask: 0x1, PropSize: 0x10x901(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        BitPad_89 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bForceMeshObjectUpdate : 1;                        // Mask: 0x4, PropSize: 0x10x901(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bForceUpdateDynamicDataImmediately : 1;            // Mask: 0x8, PropSize: 0x10x901(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        BitPad_8A : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_8B : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bFollowerShouldTickPose : 1;                       // Mask: 0x2, PropSize: 0x10x902(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        BitPad_8C : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_C18[0x1];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        CapsuleIndirectShadowMinVisibility;                // 0x904(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_C19[0x38];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoxSphereBounds                      CachedWorldOrLocalSpaceBounds;                     // 0x940(0x38)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_C1A[0x8];                                      // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               CachedWorldToLocalTransform;                       // 0x980(0x80)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_C1B[0x18];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceUpdateKinematic : 1;                         // Mask: 0x1, PropSize: 0x10xA18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bChartDistanceFactor : 1;                          // Mask: 0x2, PropSize: 0x10xA18(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bFreeSpaceBasesOnUnregister : 1;                   // Mask: 0x4, PropSize: 0x10xA18(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bForceTickPoseWithinRange : 1;                     // Mask: 0x8, PropSize: 0x10xA18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysUpdateMeshForShadowRendering : 1;           // Mask: 0x10, PropSize: 0x10xA18(0x1)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bAddAttachedParentBounds : 1;                      // Mask: 0x20, PropSize: 0x10xA18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bBasedPawnsTriggerChildTick : 1;                   // Mask: 0x40, PropSize: 0x10xA18(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        BitPad_8D : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_C21[0x3];                                      // Fixing Size After Last Property  > TateDumper <
	float                                        ForceTickPoseWithinRangeSquared;                   // 0xA1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	class USkinnedMeshComponent*                 OverrideTickingVisiblityMesh;                      // 0xA20(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	float                                        ShadowedRecentlyRenderedBoundsScaleMultiplier;     // 0xA28(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_C22[0x14];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkinnedMeshComponent* GetDefaultObj();

	void UnsetMeshDeformer();
	class FName UnloadSkinWeightProfile();
	void UnHideBoneByName(class FName* BoneName);
	struct FRotator TransformToBoneSpace(class FName* BoneName, struct FVector* InPosition);
	struct FRotator TransformFromBoneSpace(class FName* BoneName, struct FVector* InPosition);
	int32 ShowMaterialSection(int32 MaterialID, int32 SectionIndex, bool bShow);
	int32 ShowAllMaterialSections();
	void ShouldTickPose(bool ReturnValue);
	int32 SetVertexOffsetUsage(int32* Usage);
	int32 SetVertexColorOverride_LinearColor(TArray<struct FLinearColor>* VertexColors);
	class FName SetSkinWeightProfile(bool ReturnValue);
	int32 SetSkinWeightOverride(TArray<struct FSkelMeshSkinWeightInfo>* SkinWeights);
	bool SetSkinnedAssetAndUpdate(class USkinnedAsset** NewMesh);
	void SetRenderStatic(bool* bNewValue);
	int32 SetPreSkinningOffsets(const TArray<struct FVector>& Offsets);
	int32 SetPostSkinningOffsets(const TArray<struct FVector>& Offsets);
	bool SetPhysicsAsset();
	int32 SetMinLOD();
	void SetMeshDeformer(class UMeshDeformer* InMeshDeformer);
	bool SetLeaderPoseComponent(class USkinnedMeshComponent* NewLeaderBoneComponent);
	int32 SetForcedLOD();
	void SetCastCapsuleIndirectShadow(bool* bNewValue);
	void SetCastCapsuleDirectShadow(bool* bNewValue);
	void SetCapsuleIndirectShadowMinVisibility(float* NewValue);
	void IsUsingSkinWeightProfile(bool ReturnValue);
	int32 IsMaterialSectionShown(int32 MaterialID, bool ReturnValue);
	void IsBoneHiddenByName(class FName* BoneName, bool ReturnValue);
	enum class EPhysBodyOp HideBoneByName(class FName* BoneName);
	int32 GetVertexOffsetUsage(int32 ReturnValue);
	float GetTwistAndSwingAngleOfDeltaRotationFromRefPose(class FName* BoneName, bool ReturnValue);
	void GetSocketBoneName(class FName InSocketName, class FName ReturnValue);
	void GetSkinnedAsset(class USkinnedAsset* ReturnValue);
	void GetSkeletalMesh_DEPRECATED(class USkeletalMesh* ReturnValue);
	void GetRefPoseTransform(int32* BoneIndex, const struct FTransform& ReturnValue);
	void GetRefPosePosition(int32* BoneIndex, const struct FVector& ReturnValue);
	void GetPredictedLODLevel(int32 ReturnValue);
	void GetParentBone(class FName* BoneName, class FName ReturnValue);
	void GetNumLODs(int32 ReturnValue);
	void GetNumBones(int32 ReturnValue);
	void GetMeshDeformerInstance(class UMeshDeformerInstance* ReturnValue);
	void GetForcedLOD(int32 ReturnValue);
	void GetDeltaTransformFromRefPose(class FName* BoneName, class FName* BaseName, const struct FTransform& ReturnValue);
	void GetCurrentSkinWeightProfileName(class FName ReturnValue);
	void GetBoneName(int32* BoneIndex, class FName ReturnValue);
	void GetBoneIndex(class FName* BoneName, int32 ReturnValue);
	bool FindClosestBone_K2(class FName ReturnValue);
	int32 ClearVertexColorOverride();
	void ClearSkinWeightProfile();
	int32 ClearSkinWeightOverride();
	class FName BoneIsChildOf(class FName* BoneName, bool ReturnValue);
};

// 0x9C8 (0x1408 - 0xA40)
// Class Engine.SkeletalMeshComponent
class USkeletalMeshComponent : public USkinnedMeshComponent
{
public:
	uint8                                        Pad_10EA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMesh*                         SkeletalMeshAsset;                                 // 0xA48(0x8)(Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                AnimBlueprintGeneratedClass;                       // 0xA50(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	class UClass*                                AnimClass;                                         // 0xA58(0x8)(Edit, BlueprintVisible, Parm, OutParm, Transient, InstancedReference, SubobjectReference)
	class UAnimInstance*                         AnimScriptInstance;                                // 0xA60(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	class UAnimInstance*                         PostProcessAnimInstance;                           // 0xA68(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	struct FSingleAnimationPlayData              AnimationData;                                     // 0xA70(0x18)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, SubobjectReference)
	uint8                                        Pad_10EF[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               RootBoneTranslation;                               // 0xA98(0x18)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	struct FVector                               LineCheckBoundsScale;                              // 0xAB0(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_10F0[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UAnimInstance*>                 LinkedInstances;                                   // 0xAF8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	TArray<struct FTransform>                    CachedBoneSpaceTransforms;                         // 0xB08(0x10)(Edit, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	TArray<struct FTransform>                    CachedComponentSpaceTransforms;                    // 0xB18(0x10)(Edit, BlueprintReadOnly, Net, OutParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_10F2[0xB0];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalAnimRateScale;                               // 0xBD8(0x4)(ConstParm, BlueprintVisible, Net, OutParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAllowKinematicUpdateStaggering : 1;               // Mask: 0x1, PropSize: 0x10xBDC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_99 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_10F3[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EKinematicBonesUpdateToPhysics    KinematicBonesUpdateType;                          // 0xBE8(0x1)(ExportObject, OutParm, Transient, InstancedReference, SubobjectReference)
	enum class EPhysicsTransformUpdateMode       PhysicsTransformUpdateMode;                        // 0xBE9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_10F5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ECollisionEnabled                 PreSleepingKinematicsCollisionType;                // 0xBEB(0x1)(ExportObject, Net, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	enum class EAnimationMode                    AnimationMode;                                     // 0xBEC(0x1)(Net, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_10F6[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDisablePostProcessBlueprint : 1;                  // Mask: 0x1, PropSize: 0x10xBEE(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9A : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUpdateOverlapsOnAnimationFinalize : 1;            // Mask: 0x4, PropSize: 0x10xBEE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9B : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHasValidBodies : 1;                               // Mask: 0x10, PropSize: 0x10xBEE(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bBlendPhysics : 1;                                 // Mask: 0x20, PropSize: 0x10xBEE(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bEnablePhysicsOnDedicatedServer : 1;               // Mask: 0x40, PropSize: 0x10xBEE(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bUpdateMeshWhenKinematic : 1;                      // Mask: 0x80, PropSize: 0x10xBEE(0x1)(BlueprintReadOnly, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bUpdateJointsFromAnimation : 1;                    // Mask: 0x1, PropSize: 0x10xBEF(0x1)(ConstParm, Parm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAllowClothActors : 1;                             // Mask: 0x2, PropSize: 0x10xBEF(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	uint8                                        bDisableClothSimulation : 1;                       // Mask: 0x4, PropSize: 0x10xBEF(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9C : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_10FC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDisableRigidBodyAnimNode : 1;                     // Mask: 0x1, PropSize: 0x10xBF4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAllowAnimCurveEvaluation : 1;                     // Mask: 0x2, PropSize: 0x10xBF4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9D : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCollideWithEnvironment : 1;                       // Mask: 0x20, PropSize: 0x10xBF4(0x1)(ConstParm, EditFixedSize, Transient, InstancedReference, SubobjectReference)
	uint8                                        bCollideWithAttachedChildren : 1;                  // Mask: 0x40, PropSize: 0x10xBF4(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Transient, InstancedReference, SubobjectReference)
	uint8                                        bForceCollisionUpdate : 1;                         // Mask: 0x80, PropSize: 0x10xBF4(0x1)(Edit, ConstParm, BlueprintVisible, Net, Transient, InstancedReference, SubobjectReference)
	uint8                                        bLocalSpaceSimulation : 1;                         // Mask: 0x1, PropSize: 0x10xBF5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Transient, InstancedReference, SubobjectReference)
	uint8                                        bResetAfterTeleport : 1;                           // Mask: 0x2, PropSize: 0x10xBF5(0x1)(BlueprintReadOnly, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9E : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDeferKinematicBoneUpdate : 1;                     // Mask: 0x8, PropSize: 0x10xBF5(0x1)(ConstParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bNoSkeletonUpdate : 1;                             // Mask: 0x10, PropSize: 0x10xBF5(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPauseAnims : 1;                                   // Mask: 0x20, PropSize: 0x10xBF5(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseRefPoseOnInitAnim : 1;                         // Mask: 0x40, PropSize: 0x10xBF5(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnablePerPolyCollision : 1;                       // Mask: 0x80, PropSize: 0x10xBF5(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bForceRefpose : 1;                                 // Mask: 0x1, PropSize: 0x10xBF6(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bOnlyAllowAutonomousTickPose : 1;                  // Mask: 0x2, PropSize: 0x10xBF6(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bIsAutonomousTickPose : 1;                         // Mask: 0x4, PropSize: 0x10xBF6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bOldForceRefPose : 1;                              // Mask: 0x8, PropSize: 0x10xBF6(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bShowPrePhysBones : 1;                             // Mask: 0x10, PropSize: 0x10xBF6(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bRequiredBonesUpToDate : 1;                        // Mask: 0x20, PropSize: 0x10xBF6(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAnimTreeInitialised : 1;                          // Mask: 0x40, PropSize: 0x10xBF6(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bIncludeComponentLocationIntoBounds : 1;           // Mask: 0x80, PropSize: 0x10xBF6(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableLineCheckWithBounds : 1;                    // Mask: 0x1, PropSize: 0x10xBF7(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPropagateCurvesToFollowers : 1;                   // Mask: 0x2, PropSize: 0x10xBF7(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bSkipKinematicUpdateWhenInterpolating : 1;         // Mask: 0x4, PropSize: 0x10xBF7(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSkipBoundsUpdateWhenInterpolating : 1;            // Mask: 0x8, PropSize: 0x10xBF7(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPreventDediServerAutoUnregistration : 1;          // Mask: 0x10, PropSize: 0x10xBF7(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_9F : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNeedsQueuedAnimEventsDispatched : 1;              // Mask: 0x80, PropSize: 0x10xBF7(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_110E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint16                                       CachedAnimCurveUidVersion;                         // 0xBFA(0x2)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        ClothBlendWeight;                                  // 0xBFC(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         bWaitForParallelClothTask;                         // 0xC00(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_1111[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DisallowedAnimCurves;                              // 0xC08(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UBodySetup*                            BodySetup;                                         // 0xC18(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)
	uint8                                        Pad_1113[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ClothMaxDistanceScale;                             // 0xC24(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnConstraintBroken;                                // 0xC28(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlasticDeformation;                              // 0xC38(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                ClothingSimulationFactory;                         // 0xC48(0x8)(ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_1118[0xF8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        TeleportDistanceThreshold;                         // 0xD48(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        TeleportRotationThreshold;                         // 0xD4C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_1119[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       LastPoseTickFrame;                                 // 0xD58(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_111A[0x94];                                    // Fixing Size After Last Property  > TateDumper <
	class UClothingSimulationInteractor*         ClothingInteractor;                                // 0xDF0(0x8)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_111C[0xC8];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAnimInitialized;                                 // 0xEC0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_111D[0x1B0];                                   // Fixing Size After Last Property  > TateDumper <
	double                                       PreventSoundCuesTime;                              // 0x1080(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_111E[0x14C];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        DinoIKAnimationLegZOffsetingMultiplier;            // 0x11D4(0x4)(Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        DinoIKDelayedTraceFreezeDurationMultiplier;        // 0x11D8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        DinoIKSlopeMatchingRootHeightOffset;               // 0x11DC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        DistanceFromGroundToStartIK;                       // 0x11E0(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        DistanceFromGroundToStartIKBias;                   // 0x11E4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        FeetAlignmentLimit;                                // 0x11E8(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        ForceUpdateValuesTimeLimit;                        // 0x11EC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkFabrikInterpSpeed;                               // 0x11F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkFeetAlignmentInterpSpeed;                        // 0x11F4(0x4)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkGroundPlaneInterpSpeed;                          // 0x11F8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkInterpSpeed;                                     // 0x11FC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkInterpSpeedUp;                                   // 0x1200(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_1124[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               IkRootLocationOffset;                              // 0x1208(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FRotator                              IkRootRotationOffset;                              // 0x1220(0x18)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkRootOffsetInterpSpeed;                           // 0x1238(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkRootOffsetInterpSpeedUp;                         // 0x123C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkRootWorldOffsetInterpSpeed;                      // 0x1240(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        IkRootWorldOffsetInterpSpeedUp;                    // 0x1244(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        LegLimitRatioFromCylinderHeight;                   // 0x1248(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MatchSlopeRotationSpeed;                           // 0x124C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        RootPitchRotationLimit;                            // 0x1250(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        RootRollRotationLimit;                             // 0x1254(0x4)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	int32                                        MaxIterations;                                     // 0x1258(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_112C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TwoLegVirtualHitLocationWS;                        // 0x1260(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               TwoLegVirtualHitLocationWSTarget;                  // 0x1278(0x18)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               TwoLegVirtualHitLocationCS;                        // 0x1290(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        RootOffset;                                        // 0x12A8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1130[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotationOffset;                                // 0x12B0(0x18)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceTickDisabled : 1;                            // Mask: 0x1, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bFreezeGroundPlaneIK : 1;                          // Mask: 0x2, PropSize: 0x10x12C8(0x1)(Net, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSuppressAnimNotifies : 1;                         // Mask: 0x4, PropSize: 0x10x12C8(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        UseWorldSpaceFeetAlignment : 1;                    // Mask: 0x8, PropSize: 0x10x12C8(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bRotateFeetToAlignWithGround : 1;                  // Mask: 0x10, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableMultiFabrik : 1;                            // Mask: 0x20, PropSize: 0x10x12C8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKUseExperimentalInvalidTraceZeroing : 1;     // Mask: 0x40, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAlignRootOnlyToGround : 1;                        // Mask: 0x80, PropSize: 0x10x12C8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKAnimationLegZOffseting : 1;                 // Mask: 0x1, PropSize: 0x10x12C9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bIKRotationEnabled : 1;                            // Mask: 0x2, PropSize: 0x10x12C9(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bMovedLastFrame : 1;                               // Mask: 0x4, PropSize: 0x10x12C9(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKLerpFeet : 1;                               // Mask: 0x8, PropSize: 0x10x12C9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKLerpLegs : 1;                               // Mask: 0x10, PropSize: 0x10x12C9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKRootWorldSpaceLerpZ : 1;                    // Mask: 0x20, PropSize: 0x10x12C9(0x1)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKSmoothGroundPlaneLerping : 1;               // Mask: 0x40, PropSize: 0x10x12C9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKSlopeMatchingRootHeightOffsetMultiplier : 1; // Mask: 0x80, PropSize: 0x10x12C9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bDinoIKUseLegLimits : 1;                           // Mask: 0x1, PropSize: 0x10x12CA(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableIkOnlyWhenIdle : 1;                         // Mask: 0x2, PropSize: 0x10x12CA(0x1)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableSimpleIK : 1;                               // Mask: 0x4, PropSize: 0x10x12CA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bForceSimpleIK : 1;                                // Mask: 0x8, PropSize: 0x10x12CA(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSetAttachmentMasterPoseComponent : 1;             // Mask: 0x10, PropSize: 0x10x12CA(0x1)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bInterpolateRootPhys : 1;                          // Mask: 0x20, PropSize: 0x10x12CA(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A0 : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1140[0x35];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                OriginalBonesOffsets;                              // 0x1300(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<struct FIKLegInfo>                    IkLegs;                                            // 0x1310(0x10)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<struct FIKGroundPlaneOverrideInfo>    IkGroundPlaneOverrides;                            // 0x1320(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<struct FIKRootAdjustmentInfo>         IkRootAdjustmentPoints;                            // 0x1330(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MinHitNormalZForFeetAlignment;                     // 0x1340(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        ComponentMassScale;                                // 0x1344(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        GroundBoneInstantSyncTillTime;                     // 0x1348(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MinLinearDamping;                                  // 0x134C(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        MinAngularDamping;                                 // 0x1350(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        CachedFootZDiff;                                   // 0x1354(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bOnlyTickWhenRenderedDontDisableOnDedicatedServer : 1; // Mask: 0x1, PropSize: 0x10x1358(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSkipUpdateTransformIfBlendedPhysics : 1;          // Mask: 0x2, PropSize: 0x10x1358(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        AnimationFrozen : 1;                               // Mask: 0x4, PropSize: 0x10x1358(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bInitOffset : 1;                                   // Mask: 0x8, PropSize: 0x10x1358(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUpdatedKinematics : 1;                            // Mask: 0x10, PropSize: 0x10x1358(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUpdatedKinematicsOnce : 1;                        // Mask: 0x20, PropSize: 0x10x1358(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSetKinematicsSleeping : 1;                        // Mask: 0x40, PropSize: 0x10x1358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bNeverTickOnDediServer : 1;                        // Mask: 0x80, PropSize: 0x10x1358(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysTeleportKinematic : 1;                      // Mask: 0x1, PropSize: 0x10x1359(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bForceDisablePhysicsOnDediServer : 1;              // Mask: 0x2, PropSize: 0x10x1359(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bForceDisablePhysicsOnDediServerAllowRagdoll : 1;  // Mask: 0x4, PropSize: 0x10x1359(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bSleepKinematicsWhenNotRefreshingBones : 1;        // Mask: 0x8, PropSize: 0x10x1359(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPhysicsRequiredOnDediServer : 1;                  // Mask: 0x10, PropSize: 0x10x1359(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysForceUpdateKinematicsOnDedicatedServer : 1; // Mask: 0x20, PropSize: 0x10x1359(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bRotateToMatchWalkingSlope : 1;                    // Mask: 0x40, PropSize: 0x10x1359(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bFootZDiffIsCached : 1;                            // Mask: 0x80, PropSize: 0x10x1359(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bShouldCacheFootZDiff : 1;                         // Mask: 0x1, PropSize: 0x10x135A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bEnableIKTraceFreezing : 1;                        // Mask: 0x2, PropSize: 0x10x135A(0x1)(Edit, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A1 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1155[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bModifyBoneAnimNodeUseCurrentBoneModifiers : 1;    // Mask: 0x1, PropSize: 0x10x1360(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A2 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bHumanIKUseBoneModiferLegScalars : 1;              // Mask: 0x4, PropSize: 0x10x1360(0x1)(ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bApplyGroundBoneModifiers : 1;                     // Mask: 0x8, PropSize: 0x10x1360(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A3 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1157[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bEnableIKCartGroundConforming : 1;                 // Mask: 0x1, PropSize: 0x10x1364(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A4 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1158[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RotOffset;                                         // 0x1368(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseRotOffset : 1;                                 // Mask: 0x1, PropSize: 0x10x1380(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseItemSlotAttachmentTranformOffsets : 1;         // Mask: 0x2, PropSize: 0x10x1380(0x1)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bInitializedArticulated : 1;                       // Mask: 0x4, PropSize: 0x10x1380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        BitPad_A5 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_115A[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BoneModifiersLegLengthPercentage;                  // 0x1390(0x4)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_115C[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	double                                       LastStartedRenderingTime;                          // 0x13B8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_115D[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkeletalMeshComponent* GetDefaultObj();

	class UClass* UnlinkAnimClassLayers();
	void UnbindClothFromLeaderPoseComponent(bool bRestoreSimulationSpace);
	void ToggleDisablePostProcessBlueprint();
	class FName TermBodiesBelow();
	void SuspendClothingSimulation();
	void Stop();
	void SnapshotPose(const struct FPoseSnapshot& Snapshot);
	void SetUpdateClothInEditor(bool NewUpdateState);
	void SetUpdateAnimationInEditor(bool NewUpdateState);
	void SetupBetweenAnimationBlueprintBlending();
	float SetTeleportRotationThreshold();
	float SetTeleportDistanceThreshold();
	void SetSkeletalMeshAsset(class USkeletalMesh** NewMesh);
	float SetPosition(bool* bFireNotifies);
	float SetPlayRate();
	float SetPhysicsBlendWeight();
	void SetNotifyRigidBodyCollisionBelow(bool* bNewNotifyRigidBodyCollision, class FName* BoneName, bool bIncludeSelf);
	class FName SetMorphTarget(float* Value, bool* bRemoveZeroWeight);
	void SetEnablePhysicsBlending(bool* bNewBlendPhysics);
	bool SetEnableGravityOnAllBodiesBelow(class FName* BoneName, bool bIncludeSelf);
	bool SetEnableBodyGravity(class FName* BoneName);
	void SetDisablePostProcessBlueprint(bool* bInDisablePostProcess);
	void SetDisableAnimCurves(bool* bInDisableAnimCurves);
	void SetConstraintProfileForAll(class FName ProfileName, bool* bDefaultIfNotFound);
	void SetConstraintProfile(class FName* JointName, class FName ProfileName, bool* bDefaultIfNotFound);
	void SetClothMaxDistanceScale(float* Scale);
	void SetBodyNotifyRigidBodyCollision(bool* bNewNotifyRigidBodyCollision, class FName* BoneName);
	class UClass* SetAnimClass();
	void SetAnimationMode(enum class EAnimationMode* InAnimationMode);
	void SetAnimation(class UAnimationAsset** NewAnimToPlay);
	void SetAngularLimits(class FName InBoneName, float* Swing1LimitAngle, float* TwistLimitAngle, float* Swing2LimitAngle);
	void SetAllowRigidBodyAnimNode(bool* bInAllow, bool* bReinitAnim);
	bool SetAllowedAnimCurvesEvaluation(TArray<class FName>* List);
	void SetAllowClothActors(bool* bInAllow);
	void SetAllowAnimCurveEvaluation(bool* bInAllow);
	void SetAllMotorsAngularVelocityDrive(bool* bEnableSwingDrive, bool* bEnableTwistDrive, bool bSkipCustomPhysicsType);
	void SetAllMotorsAngularPositionDrive(bool* bEnableSwingDrive, bool* bEnableTwistDrive, bool bSkipCustomPhysicsType);
	void SetAllMotorsAngularDriveParams(float* InSpring, float InDamping, float* InForceLimit, bool bSkipCustomPhysicsType);
	void SetAllBodiesSimulatePhysics(bool* bNewSimulate);
	float SetAllBodiesPhysicsBlendWeight(bool bSkipCustomPhysicsType);
	void SetAllBodiesBelowSimulatePhysics(class FName InBoneName, bool* bNewSimulate, bool bIncludeSelf);
	void SetAllBodiesBelowPhysicsDisabled(class FName InBoneName, bool* bDisabled, bool bIncludeSelf);
	float SetAllBodiesBelowPhysicsBlendWeight(class FName InBoneName, bool bSkipCustomPhysicsType, bool bIncludeSelf);
	struct FVector SetAllBodiesBelowLinearVelocity(class FName InBoneName, bool bIncludeSelf);
	void ResumeClothingSimulation();
	void ResetClothTeleportMode();
	enum class ETeleportType ResetAnimInstanceDynamics();
	void ResetAllowedAnimCurveEvaluation();
	void ResetAllBodiesSimulatePhysics();
	void PlayAnimation(class UAnimationAsset** NewAnimToPlay, bool bLooping);
	void Play(bool bLooping);
	bool OverrideAnimationData(class UAnimationAsset** InAnimToPlay, bool* bIsPlaying, float* Position, float* PlayRate);
	class UClass* LinkAnimGraphByTag(class FName* InTag);
	class UClass* LinkAnimClassLayers();
	float K2_GetClosestPointOnPhysicsAsset(struct FVector* ClosestWorldPosition, struct FVector* Normal, class FName* BoneName, bool ReturnValue);
	float IsPlayingMontage(class UAnimMontage** Montage, bool ReturnValue);
	class FName IsPlayingAnimationMontagesOnSlotName(bool ReturnValue);
	void IsPlaying(bool ReturnValue);
	void IsClothingSimulationSuspended(bool ReturnValue);
	void IsBodyGravityEnabled(class FName* BoneName, bool ReturnValue);
	void IncrementIKLegMute(int32 LegIndex);
	void HasValidAnimationInstance(bool ReturnValue);
	void GetTrueBasedPawns(const TArray<class APawn*>& ReturnValue);
	class FName GetTransformAttribute_Ref(class FName* BoneName, struct FTransform* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	class FName GetTransformAttribute(class FName* BoneName, struct FTransform* DefaultValue, struct FTransform* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	void GetTeleportRotationThreshold(float ReturnValue);
	void GetTeleportDistanceThreshold(float ReturnValue);
	class FName GetStringAttribute_Ref(class FName* BoneName, class FString* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	class FName GetStringAttribute(class FName* BoneName, class FString* DefaultValue, class FString* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	void GetSkeletalMeshAsset(class USkeletalMesh* ReturnValue);
	void GetSkeletalCenterOfMass(const struct FVector& ReturnValue);
	void GetPostProcessInstance(class UAnimInstance* ReturnValue);
	void GetPosition(float ReturnValue);
	void GetPlayRate(float ReturnValue);
	class FName GetMorphTarget(float ReturnValue);
	class FName GetLinkedAnimLayerInstanceByGroup(class UAnimInstance* ReturnValue);
	class UClass* GetLinkedAnimLayerInstanceByClass(class UAnimInstance* ReturnValue);
	void GetLinkedAnimGraphInstancesByTag(class FName* InTag, TArray<class UAnimInstance*>* OutLinkedInstances);
	void GetLinkedAnimGraphInstanceByTag(class FName* InTag, class UAnimInstance* ReturnValue);
	class FName GetIntegerAttribute_Ref(class FName* BoneName, int32* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	class FName GetIntegerAttribute(class FName* BoneName, int32* DefaultValue, int32* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	class FName GetFloatAttribute_Ref(class FName* BoneName, float* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	class FName GetFloatAttribute(class FName* BoneName, float* DefaultValue, float* OutValue, enum class ECustomBoneAttributeLookup* LookupType, bool ReturnValue);
	void GetFirstBoneWithChildren(class FName ReturnValue);
	void GetDisablePostProcessBlueprint(bool ReturnValue);
	void GetDisableAnimCurves(bool ReturnValue);
	void GetCurrentJointAngles(class FName InBoneName, float* Swing1Angle, float TwistAngle, float* Swing2Angle);
	class FName GetConstraintsFromBody(bool* bParentConstraints, bool* bChildConstraints, bool* bIncludesTerminated, TArray<struct FConstraintInstanceAccessor>* OutConstraints);
	void GetConstraints(bool* bIncludesTerminated, TArray<struct FConstraintInstanceAccessor>* OutConstraints);
	void GetConstraintByName(class FName* ConstraintName, bool* bIncludesTerminated, const struct FConstraintInstanceAccessor& ReturnValue);
	void GetClothMaxDistanceScale(float ReturnValue);
	void GetClothingSimulationInteractor(class UClothingSimulationInteractor* ReturnValue);
	void GetBoneMass(class FName* BoneName, bool* bScaleMass, float ReturnValue);
	void GetBoneLinearVelocity(class FName InBoneName, const struct FVector& ReturnValue);
	void GetAnimInstance(class UAnimInstance* ReturnValue);
	void GetAnimClass(class UClass* ReturnValue);
	void GetAnimationMode(enum class EAnimationMode ReturnValue);
	void GetAllowRigidBodyAnimNode(bool ReturnValue);
	void GetAllowedAnimCurveEvaluate(bool ReturnValue);
	void GetAllowClothActors(bool ReturnValue);
	void ForceClothNextUpdateTeleportAndReset();
	void ForceClothNextUpdateTeleport();
	int32 FindConstraintBoneName(class FName ReturnValue);
	void EnableRagdoll(struct FVector* WithVelocity);
	void DecrementIKLegMute(int32 LegIndex);
	void ClearMorphTargets();
	struct FVector BreakConstraint(class FName InBoneName);
	void BPValidBoneToUnhide(int32* BoneIndex, bool ReturnValue);
	float BPTickPose();
	void BPSetBoneModifiers(const TArray<struct FBoneModifierNamed>& NamedBoneModifiers);
	void BPRefreshBoneTransforms();
	void BindClothToLeaderPoseComponent();
	bool AllowAnimCurveEvaluation(class FName NameOfCurve);
	bool AddImpulseToAllBodiesBelow(class FName* BoneName, bool bIncludeSelf);
	bool AddForceToAllBodiesBelow(class FName* BoneName, bool bIncludeSelf);
	void AccumulateAllBodiesBelowPhysicsBlendWeight(class FName InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType);
};

// 0x320 (0x348 - 0x28)
// Class Engine.AnimInstance
class UAnimInstance : public UObject
{
public:
	class USkeleton*                             CurrentSkeleton;                                   // 0x28(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class ERootMotionMode                   RootMotionMode;                                    // 0x30(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseMultiThreadedAnimationUpdate : 1;              // Mask: 0x1, PropSize: 0x10x31(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bUsingCopyPoseFromMesh : 1;                        // Mask: 0x2, PropSize: 0x10x31(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_AE : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bReceiveNotifiesFromLinkedInstances : 1;           // Mask: 0x10, PropSize: 0x10x31(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPropagateNotifiesToLinkedInstances : 1;           // Mask: 0x20, PropSize: 0x10x31(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseMainInstanceMontageEvaluationData : 1;         // Mask: 0x40, PropSize: 0x10x31(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bQueueMontageEvents : 1;                           // Mask: 0x80, PropSize: 0x10x31(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_139C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnMontageBlendingOut;                              // 0x38(0x10)(Edit, ConstParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	FMulticastInlineDelegateProperty_            OnMontageStarted;                                  // 0x48(0x10)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnMontageEnded;                                    // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	FMulticastInlineDelegateProperty_            OnAllMontageInstancesEnded;                        // 0x68(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_139F[0xD8];                                    // Fixing Size After Last Property  > TateDumper <
	struct FAnimNotifyQueue                      NotifyQueue;                                       // 0x150(0x70)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FAnimNotifyEvent>              ActiveAnimNotifyState;                             // 0x1C0(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FAnimNotifyEventReference>     ActiveAnimNotifyEventReference;                    // 0x1D0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_13A0[0x168];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimInstance* GetDefaultObj();

	class UClass* WasAnimNotifyTriggeredInStateMachine(bool ReturnValue);
	class UClass* WasAnimNotifyTriggeredInSourceState(bool ReturnValue);
	class UClass* WasAnimNotifyTriggeredInAnyState(bool ReturnValue);
	class UClass* WasAnimNotifyStateActiveInStateMachine(bool ReturnValue);
	class UClass* WasAnimNotifyStateActiveInSourceState(bool ReturnValue);
	class UClass* WasAnimNotifyStateActiveInAnyState(bool ReturnValue);
	int32 WasAnimNotifyNameTriggeredInStateMachine(class FName NotifyName, bool ReturnValue);
	int32 WasAnimNotifyNameTriggeredInSourceState(class FName NotifyName, bool ReturnValue);
	void WasAnimNotifyNameTriggeredInAnyState(class FName NotifyName, bool ReturnValue);
	bool UnlockAIResources();
	class UClass* UnlinkAnimClassLayers();
	void TryGetPawnOwner(class APawn* ReturnValue);
	class FName StopSlotAnimation();
	void SnapshotPose(const struct FPoseSnapshot& Snapshot);
	bool SetUseMainInstanceMontageEvaluationData();
	void SetRootMotionMode(enum class ERootMotionMode* Value);
	bool SetReceiveNotifiesFromLinkedInstances();
	bool SetPropagateNotifiesToLinkedInstances();
	class FName SetMorphTarget(float* Value);
	void SavePoseSnapshot(class FName SnapshotName);
	enum class ETeleportType ResetDynamics();
	enum class ETransitionRequestOverwriteMode RequestTransitionEvent(class FName* EventName, bool ReturnValue);
	float RequestSlotGroupInertialization(class UBlendProfile* BlendProfile);
	void RemovePoseSnapshot(class FName SnapshotName);
	int32 QueryTransitionEvent(int32 TransitionIndex, class FName* EventName, bool ReturnValue);
	int32 QueryAndMarkTransitionEvent(int32 TransitionIndex, class FName* EventName, bool ReturnValue);
	float PlaySlotAnimationAsDynamicMontage_WithBlendSettings(class UAnimSequenceBase* Asset, int32* LoopCount, class UAnimMontage* ReturnValue);
	float PlaySlotAnimationAsDynamicMontage_WithBlendArgs(class UAnimSequenceBase* Asset, const struct FAlphaBlendArgs& BlendIn, int32* LoopCount, class UAnimMontage* ReturnValue);
	float PlaySlotAnimationAsDynamicMontage(class UAnimSequenceBase* Asset, float BlendInTime, float BlendOutTime, int32* LoopCount, class UAnimMontage* ReturnValue);
	struct FVector OnCharacterStepped(struct FVector* NewLocation);
	class UAnimMontage* MontageSync_StopFollowing();
	class UAnimMontage* MontageSync_Follow();
	struct FMontageBlendSettings Montage_StopWithBlendSettings(class UAnimMontage** Montage);
	struct FAlphaBlendArgs Montage_StopWithBlendOut(class UAnimMontage** Montage);
	class FName Montage_StopGroupByName();
	float Montage_Stop(class UAnimMontage** Montage);
	void Montage_SetPosition(class UAnimMontage** Montage, float NewPosition);
	float Montage_SetPlayRate(class UAnimMontage** Montage);
	class FName Montage_SetNextSection(class UAnimMontage** Montage);
	void Montage_Resume(class UAnimMontage** Montage);
	bool Montage_PlayWithBlendSettings(float ReturnValue);
	bool Montage_PlayWithBlendIn(const struct FAlphaBlendArgs& BlendIn, float ReturnValue);
	bool Montage_Play_WithBlending(float BlendInTime, float BlendOutTime, float ReturnValue);
	bool Montage_Play(float ReturnValue);
	void Montage_Pause(class UAnimMontage** Montage);
	class FName Montage_JumpToSectionsEnd(class UAnimMontage** Montage);
	class FName Montage_JumpToSection(class UAnimMontage** Montage);
	float Montage_IsPlaying(class UAnimMontage** Montage, bool ReturnValue);
	void Montage_IsActive(class UAnimMontage** Montage, bool ReturnValue);
	void Montage_GetPosition(class UAnimMontage** Montage, float ReturnValue);
	void Montage_GetPlayRate(class UAnimMontage** Montage, float ReturnValue);
	void Montage_GetIsStopped(class UAnimMontage** Montage, bool ReturnValue);
	void Montage_GetEffectivePlayRate(class UAnimMontage** Montage, float ReturnValue);
	float Montage_GetCurrentTime(class UAnimMontage** Montage, bool ReturnValue);
	void Montage_GetCurrentSection(class UAnimMontage** Montage, class FName ReturnValue);
	void Montage_GetBlendTime(class UAnimMontage** Montage, float ReturnValue);
	bool LockAIResources();
	class UClass* LinkAnimGraphByTag(class FName* InTag);
	class UClass* LinkAnimClassLayers();
	void IsUsingRootTransform(bool ReturnValue);
	void IsUsingMainInstanceMontageEvaluationData(bool ReturnValue);
	bool IsSyncGroupBetweenMarkers(bool ReturnValue);
	class FName IsPlayingSlotAnimation(class UAnimSequenceBase* Asset, bool ReturnValue);
	void IsAnyMontagePlaying(bool ReturnValue);
	class FName HasMarkerBeenHitThisFrame(bool ReturnValue);
	float GetTimeToClosestMarker(bool ReturnValue);
	class FName GetSyncGroupPosition(const struct FMarkerSyncAnimPosition& ReturnValue);
	int32 GetRelevantAnimTimeRemainingFraction(float ReturnValue);
	int32 GetRelevantAnimTimeRemaining(float ReturnValue);
	int32 GetRelevantAnimTimeFraction(float ReturnValue);
	int32 GetRelevantAnimTime(float ReturnValue);
	int32 GetRelevantAnimLength(float ReturnValue);
	void GetReceiveNotifiesFromLinkedInstances(bool ReturnValue);
	void GetPropagateNotifiesToLinkedInstances(bool ReturnValue);
	void GetOwningComponent(class USkeletalMeshComponent* ReturnValue);
	void GetOwningActor(class AActor* ReturnValue);
	class FName GetLinkedAnimLayerInstancesByGroup(TArray<class UAnimInstance*>* OutLinkedInstances);
	class UClass* GetLinkedAnimLayerInstanceByGroupAndClass(class UAnimInstance* ReturnValue);
	class FName GetLinkedAnimLayerInstanceByGroup(class UAnimInstance* ReturnValue);
	class UClass* GetLinkedAnimLayerInstanceByClass(class UAnimInstance* ReturnValue);
	void GetLinkedAnimGraphInstancesByTag(class FName* InTag, TArray<class UAnimInstance*>* OutLinkedInstances);
	void GetLinkedAnimGraphInstanceByTag(class FName* InTag, class UAnimInstance* ReturnValue);
	int32 GetInstanceTransitionTimeElapsedFraction(int32 TransitionIndex, float ReturnValue);
	int32 GetInstanceTransitionTimeElapsed(int32 TransitionIndex, float ReturnValue);
	int32 GetInstanceTransitionCrossfadeDuration(int32 TransitionIndex, float ReturnValue);
	int32 GetInstanceStateWeight(float ReturnValue);
	int32 GetInstanceMachineWeight(float ReturnValue);
	int32 GetInstanceCurrentStateElapsedTime(float ReturnValue);
	int32 GetInstanceAssetPlayerTimeFromEndFraction(float ReturnValue);
	int32 GetInstanceAssetPlayerTimeFromEnd(float ReturnValue);
	int32 GetInstanceAssetPlayerTimeFraction(float ReturnValue);
	int32 GetInstanceAssetPlayerTime(float ReturnValue);
	int32 GetInstanceAssetPlayerLength(float ReturnValue);
	void GetDeltaSeconds(float ReturnValue);
	class FName GetCurveValueWithDefault(float* DefaultValue, float* OutValue, bool ReturnValue);
	class FName GetCurveValue(float ReturnValue);
	int32 GetCurrentStateName(class FName ReturnValue);
	void GetCurrentActiveMontage(class UAnimMontage* ReturnValue);
	TArray<class FName> GetAllCurveNames();
	TArray<class FName> GetActiveCurveNames(enum class EAnimCurveType CurveType);
	struct FVector ControlRigNotify(class FName NotifyName, const struct FHitResult& WorldSpaceHitResult);
	void ClearTransitionEvents(class FName* EventName);
	void ClearMorphTargets();
	void ClearAllTransitionEvents();
	struct FRotator CalculateDirection(float ReturnValue);
	float BlueprintUpdateAnimation();
	float BlueprintTriggerAnimationEvent();
	float BlueprintThreadSafeUpdateAnimation();
	void BlueprintPostEvaluateAnimation();
	float BlueprintPlayAnimationEvent(float* PlayRate);
	void BlueprintLinkedAnimationLayersInitialized();
	void BlueprintInitializeAnimation();
	void BlueprintBeginPlay();
};

// 0x150 (0x370 - 0x220)
// Class Engine.BlueprintGeneratedClass
class UBlueprintGeneratedClass : public UClass
{
public:
	uint8                                        Pad_13BA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumReplicatedProperties;                           // 0x228(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bHasNativizedParent : 1;                           // Mask: 0x1, PropSize: 0x10x22C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bHasCookedComponentInstancingData : 1;             // Mask: 0x2, PropSize: 0x10x22C(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_AF : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_13BB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UDynamicBlueprintBinding*>      DynamicBindingObjects;                             // 0x230(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               ComponentTemplates;                                // 0x240(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class UTimelineTemplate*>             Timelines;                                         // 0x250(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FBPComponentClassOverride>     ComponentClassOverrides;                           // 0x260(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class USimpleConstructionScript*             SimpleConstructionScript;                          // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, SubobjectReference)
	class UInheritableComponentHandler*          InheritableComponentHandler;                       // 0x278(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	class UStructProperty*                       UberGraphFramePointerProperty;                     // 0x280(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_13BE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UFunction*                             UberGraphFunction;                                 // 0x290(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TMap<class FName, struct FGuid>              CookedPropertyGuids;                               // 0x298(0x50)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TMap<class FName, struct FBlueprintCookedComponentInstancingData> CookedComponentInstancingData;                     // 0x2E8(0x50)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_13BF[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBlueprintGeneratedClass* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.TimecodeProvider
class UTimecodeProvider : public UObject
{
public:
	float                                        FrameDelay;                                        // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_13D9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTimecodeProvider* GetDefaultObj();

	void GetTimecode(const struct FTimecode& ReturnValue);
	void GetSynchronizationState(enum class ETimecodeProviderSynchronizationState ReturnValue);
	void GetQualifiedFrameTime(const struct FQualifiedFrameTime& ReturnValue);
	void GetFrameRate(const struct FFrameRate& ReturnValue);
	void GetDelayedTimecode(const struct FTimecode& ReturnValue);
	void GetDelayedQualifiedFrameTime(const struct FQualifiedFrameTime& ReturnValue);
	struct FQualifiedFrameTime FetchTimecode(bool ReturnValue);
	void FetchAndUpdate();
};

// 0x0 (0x28 - 0x28)
// Class Engine.MeshDeformer
class UMeshDeformer : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMeshDeformer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MeshDeformerInstanceSettings
class UMeshDeformerInstanceSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMeshDeformerInstanceSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MeshDeformerInstance
class UMeshDeformerInstance : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMeshDeformerInstance* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.Info
class AInfo : public AActor
{
public:

	static class UClass* StaticClass();
	static class AInfo* GetDefaultObj();

};

// 0xA0 (0x568 - 0x4C8)
// Class Engine.GameModeBase
class AGameModeBase : public AInfo
{
public:
	class FString                                OptionsString;                                     // 0x4C8(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                GameSessionClass;                                  // 0x4D8(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                GameStateClass;                                    // 0x4E0(0x8)(ExportObject, EditFixedSize, Transient, DisableEditOnInstance, SubobjectReference)
	class UClass*                                PlayerControllerClass;                             // 0x4E8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                PlayerStateClass;                                  // 0x4F0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, SubobjectReference)
	class UClass*                                HUDClass;                                          // 0x4F8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                DefaultPawnClass;                                  // 0x500(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                SpectatorClass;                                    // 0x508(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                ReplaySpectatorPlayerControllerClass;              // 0x510(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UClass*                                ServerStatReplicatorClass;                         // 0x518(0x8)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class AGameSession*                          GameSession;                                       // 0x520(0x8)(BlueprintVisible, EditFixedSize, ReturnParm)
	class AGameStateBase*                        GameState;                                         // 0x528(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AServerStatReplicator*                 ServerStatReplicator;                              // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	class FText                                  DefaultPlayerName;                                 // 0x538(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bUseSeamlessTravel : 1;                            // Mask: 0x1, PropSize: 0x10x550(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bStartPlayersAsSpectators : 1;                     // Mask: 0x2, PropSize: 0x10x550(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bPauseable : 1;                                    // Mask: 0x4, PropSize: 0x10x550(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_146A[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AGameModeBase* GetDefaultObj();

	void StartPlay();
	class AActor* SpawnDefaultPawnFor(class APawn* ReturnValue);
	struct FTransform SpawnDefaultPawnAtTransform(class APawn* ReturnValue);
	class AActor* ShouldReset(bool ReturnValue);
	void ReturnToMainMenuHost();
	struct FTransform RestartPlayerAtTransform();
	class AActor* RestartPlayerAtPlayerStart();
	class AController* RestartPlayer();
	void ResetLevel();
	void PlayerCanRestart(class APlayerController** Player, bool ReturnValue);
	class APlayerController* MustSpectate(bool ReturnValue);
	class APlayerController* K2_PostLogin();
	class APlayerController* K2_OnSwapPlayerControllers();
	class AController* K2_OnRestartPlayer();
	class AController* K2_OnLogout();
	bool K2_OnChangeName(class FString* NewName);
	class FString K2_FindPlayerStart(class AController** Player, class AActor* ReturnValue);
	class AController* InitStartSpot();
	class APlayerController* InitializeHUDForPlayer();
	void HasMatchStarted(bool ReturnValue);
	void HasMatchEnded(bool ReturnValue);
	class APlayerController* HandleStartingNewPlayer();
	void GetNumSpectators(int32 ReturnValue);
	void GetNumPlayers(int32 ReturnValue);
	class AController* GetDefaultPawnClassForController(class UClass* ReturnValue);
	struct FRotator FinishRestartPlayer();
	class FString FindPlayerStart(class AController** Player, class AActor* ReturnValue);
	void ChoosePlayerStart(class AController** Player, class AActor* ReturnValue);
	bool ChangeName(class AController** Controller, class FString* NewName);
	class APlayerController* CanSpectate(class APlayerState** ViewTarget, bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.EngineCustomTimeStep
class UEngineCustomTimeStep : public UObject
{
public:

	static class UClass* StaticClass();
	static class UEngineCustomTimeStep* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.PartitionActor
class APartitionActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class APartitionActor* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.TickableWorldSubsystem
class UTickableWorldSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_1474[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTickableWorldSubsystem* GetDefaultObj();

};

// 0x38 (0x500 - 0x4C8)
// Class Engine.Brush
class ABrush : public AActor
{
public:
	enum class EBrushType                        BrushType;                                         // 0x4C8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_1479[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                BrushColor;                                        // 0x4CC(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        PolyFlags;                                         // 0x4D0(0x4)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bColored : 1;                                      // Mask: 0x1, PropSize: 0x10x4D4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bSolidWhenSelected : 1;                            // Mask: 0x2, PropSize: 0x10x4D4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bPlaceableFromClassBrowser : 1;                    // Mask: 0x4, PropSize: 0x10x4D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bNotForClientOrServer : 1;                         // Mask: 0x8, PropSize: 0x10x4D4(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B0 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_147D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UModel*                                Brush;                                             // 0x4D8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	class UBrushComponent*                       BrushComponent;                                    // 0x4E0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, SubobjectReference)
	uint8                                        bInManipulation : 1;                               // Mask: 0x1, PropSize: 0x10x4E8(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B1 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_147E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FGeomSelection>                SavedSelections;                                   // 0x4F0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABrush* GetDefaultObj();

};

// 0x18 (0x518 - 0x500)
// Class Engine.Volume
class AVolume : public ABrush
{
public:
	TArray<struct FBoxOptimization>              BoxOptimization;                                   // 0x500(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	bool                                         bAllowCollisionComponentWithZeroRadius;            // 0x510(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_148B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AVolume* GetDefaultObj();

	struct FVector BPEncompassesPoint(float* OutDistanceToPoint, float SphereRadius, bool ReturnValue);
};

// 0x3558 (0x3A20 - 0x4C8)
// Class Engine.PlayerCameraManager
class APlayerCameraManager : public AActor
{
public:
	class APlayerController*                     PCOwner;                                           // 0x4C8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class USceneComponent*                       TransformComponent;                                // 0x4D0(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1530[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultFOV;                                        // 0x4E0(0x4)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1531[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultOrthoWidth;                                 // 0x4E8(0x4)(Net, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1532[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultAspectRatio;                                // 0x4F0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1533[0x6C];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCameraCacheEntry                     CameraCache;                                       // 0x560(0x880)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FCameraCacheEntry                     LastFrameCameraCache;                              // 0xDE0(0x880)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FTViewTarget                          ViewTarget;                                        // 0x1660(0x890)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FTViewTarget                          PendingViewTarget;                                 // 0x1EF0(0x890)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1536[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCameraCacheEntry                     CameraCachePrivate;                                // 0x27B0(0x880)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FCameraCacheEntry                     LastFrameCameraCachePrivate;                       // 0x3030(0x880)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<class UCameraModifier*>               ModifierList;                                      // 0x38B0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        DefaultModifiers;                                  // 0x38C0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        FreeCamDistance;                                   // 0x38D0(0x4)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_153C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FreeCamOffset;                                     // 0x38D8(0x18)(EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               ViewTargetOffset;                                  // 0x38F0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnAudioFadeChangeEvent;                            // 0x3908(0x10)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_153D[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TScriptInterface<class ICameraLensEffectInterface>> CameraLensEffects;                                 // 0x3930(0x10)(Edit, Net, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UCameraModifier_CameraShake*           CachedCameraShakeMod;                              // 0x3940(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UCameraAnimInst*                       AnimInstPool[0x8];                                 // 0x3948(0x40)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<struct FPostProcessSettings>          PostProcessBlendCache;                             // 0x3988(0x10)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_153F[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UCameraAnimInst*>               ActiveAnims;                                       // 0x39A8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<class UCameraAnimInst*>               FreeAnims;                                         // 0x39B8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class ACameraActor*                          AnimCameraActor;                                   // 0x39C8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsOrthographic : 1;                               // Mask: 0x1, PropSize: 0x10x39D0(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bDefaultConstrainAspectRatio : 1;                  // Mask: 0x2, PropSize: 0x10x39D0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_B9 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bClientSimulatingViewTarget : 1;                   // Mask: 0x40, PropSize: 0x10x39D0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseClientSideCameraUpdates : 1;                   // Mask: 0x80, PropSize: 0x10x39D0(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_BA : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bGameCameraCutThisFrame : 1;                       // Mask: 0x4, PropSize: 0x10x39D1(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_BB : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1543[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ViewPitchMin;                                      // 0x39D4(0x4)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ViewPitchMax;                                      // 0x39D8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ViewYawMin;                                        // 0x39DC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ViewYawMax;                                        // 0x39E0(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ViewRollMin;                                       // 0x39E4(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        ViewRollMax;                                       // 0x39E8(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1547[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ServerUpdateCameraTimeout;                         // 0x39F0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_1548[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TPVCameraOffset;                                   // 0x3A00(0x18)(ConstParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        TPVCameraCollisionHeightScaler;                    // 0x3A18(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_154A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APlayerCameraManager* GetDefaultObj();

	void SwapPendingViewTargetWhenUsingClientSideCameraUpdates();
	bool StopCameraShake();
	void StopCameraFade();
	bool StopCameraAnimInst();
	bool StopAllInstancesOfCameraShakeFromSource(class UCameraShakeSourceComponent** SourceComponent);
	bool StopAllInstancesOfCameraShake();
	bool StopAllInstancesOfCameraAnim(class UCameraAnim** Anim);
	bool StopAllCameraShakesFromSource(class UCameraShakeSourceComponent** SourceComponent);
	bool StopAllCameraShakes();
	bool StopAllCameraAnims();
	struct FRotator StartMatineeCameraShakeFromSource(class UClass* ShakeClass, class UCameraShakeSourceComponent** SourceComponent, float* Scale, class UCameraShakeBase* ReturnValue);
	float StartMatineeCameraShake(class UClass* ShakeClass, float* Scale, class UCameraShakeBase* ReturnValue);
	struct FRotator StartCameraShakeFromSource(class UClass* ShakeClass, class UCameraShakeSourceComponent** SourceComponent, float* Scale, class UCameraShakeBase* ReturnValue);
	bool StartCameraShake(class UClass* ShakeClass, float* Scale, class UCameraShakeBase* ReturnValue);
	bool StartCameraFade(struct FLinearColor* Color);
	bool SetManualCameraFade(struct FLinearColor* Color);
	void SetGameCameraCutThisFrame();
	void RemoveGenericCameraLensEffect(TScriptInterface<class ICameraLensEffectInterface>* Emitter);
	class UCameraModifier* RemoveCameraModifier(bool ReturnValue);
	void RemoveCameraLensEffect(class AEmitterCameraLensEffectBase** Emitter);
	struct FRotator PlayCameraAnim(class UCameraAnim** Anim, float* Scale, float BlendInTime, float BlendOutTime, class UCameraAnimInst* ReturnValue);
	struct FVector PhotographyCameraModify();
	void OnPhotographySessionStart();
	void OnPhotographySessionEnd();
	void OnPhotographyMultiPartCaptureStart();
	void OnPhotographyMultiPartCaptureEnd();
	bool GetWorldCameraShakeScale(float ReturnValue);
	void GetOwningPlayerController(class APlayerController* ReturnValue);
	void GetFOVAngle(float ReturnValue);
	void GetCameraRotation(const struct FRotator& ReturnValue);
	void GetCameraLocation(const struct FVector& ReturnValue);
	class UClass* FindCameraModifierByClass(class UCameraModifier* ReturnValue);
	void ClearCameraLensEffects();
	float BlueprintUpdateCamera(bool ReturnValue);
	class UClass* AddNewCameraModifier(class UCameraModifier* ReturnValue);
	class UClass* AddGenericCameraLensEffect(TScriptInterface<class ICameraLensEffectInterface> ReturnValue);
	class UClass* AddCameraLensEffect(class AEmitterCameraLensEffectBase* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.DynamicBlueprintBinding
class UDynamicBlueprintBinding : public UObject
{
public:

	static class UClass* StaticClass();
	static class UDynamicBlueprintBinding* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InputDelegateBinding
class UInputDelegateBinding : public UDynamicBlueprintBinding
{
public:

	static class UClass* StaticClass();
	static class UInputDelegateBinding* GetDefaultObj();

};

// 0x88 (0x140 - 0xB8)
// Class Engine.InputComponent
class UInputComponent : public UActorComponent
{
public:
	uint8                                        Pad_1598[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCachedKeyToActionInfo>        CachedKeyToActionInfo;                             // 0x128(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, EditConst)
	uint8                                        Pad_1599[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputComponent* GetDefaultObj();

	struct FKey WasControllerKeyJustReleased(bool ReturnValue);
	struct FKey WasControllerKeyJustPressed(bool ReturnValue);
	enum class EEndPlayReason OnInputOwnerEndPlayed(class AActor* InOwner);
	struct FKey IsControllerKeyDown(bool ReturnValue);
	bool GetTouchState(float LocationX);
	struct FKey GetControllerVectorKeyState(const struct FVector& ReturnValue);
	float GetControllerMouseDelta();
	struct FKey GetControllerKeyTimeDown(float ReturnValue);
	float GetControllerAnalogStickState();
	struct FKey GetControllerAnalogKeyState(float ReturnValue);
};

// 0xFA8 (0xFD0 - 0x28)
// Class Engine.Engine
class UEngine : public UObject
{
public:
	uint8                                        Pad_15A1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 TinyFont;                                          // 0x30(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       TinyFontName;                                      // 0x38(0x20)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 SmallFont;                                         // 0x58(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FSoftObjectPath                       SmallFontName;                                     // 0x60(0x20)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 MediumFont;                                        // 0x80(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       MediumFontName;                                    // 0x88(0x20)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 LargeFont;                                         // 0xA8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       LargeFontName;                                     // 0xB0(0x20)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 SubtitleFont;                                      // 0xD0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       SubtitleFontName;                                  // 0xD8(0x20)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Transient, Config, SubobjectReference)
	TArray<class UFont*>                         AdditionalFonts;                                   // 0xF8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        AdditionalFontNames;                               // 0x108(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ConsoleClass;                                      // 0x118(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        ConsoleClassName;                                  // 0x120(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Config, SubobjectReference)
	class UClass*                                GameViewportClientClass;                           // 0x140(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        GameViewportClientClassName;                       // 0x148(0x20)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, SubobjectReference)
	class UClass*                                LocalPlayerClass;                                  // 0x168(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        LocalPlayerClassName;                              // 0x170(0x20)(Edit, BlueprintVisible, ExportObject, Net, Config, SubobjectReference)
	class UClass*                                WorldSettingsClass;                                // 0x190(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        WorldSettingsClassName;                            // 0x198(0x20)(ExportObject, BlueprintReadOnly, Net, Config, SubobjectReference)
	struct FSoftClassPath                        NavigationSystemClassName;                         // 0x1B8(0x20)(BlueprintVisible, EditFixedSize, Config, SubobjectReference)
	class UClass*                                NavigationSystemClass;                             // 0x1D8(0x8)(ConstParm, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        NavigationSystemConfigClassName;                   // 0x1E0(0x20)(ConstParm, BlueprintReadOnly, EditFixedSize, Config, SubobjectReference)
	class UClass*                                NavigationSystemConfigClass;                       // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        AvoidanceManagerClassName;                         // 0x208(0x20)(Edit, ConstParm, Net, EditFixedSize, Config, SubobjectReference)
	class UClass*                                AvoidanceManagerClass;                             // 0x228(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        AIControllerClassName;                             // 0x230(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Config, SubobjectReference)
	class UClass*                                PhysicsCollisionHandlerClass;                      // 0x250(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        PhysicsCollisionHandlerClassName;                  // 0x258(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Config, SubobjectReference)
	struct FSoftClassPath                        GameUserSettingsClassName;                         // 0x278(0x20)(Net, Parm, Config, SubobjectReference)
	class UClass*                                GameUserSettingsClass;                             // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UGameUserSettings*                     GameUserSettings;                                  // 0x2A0(0x8)(Net, EditFixedSize, OutParm, ReturnParm)
	class UClass*                                LevelScriptActorClass;                             // 0x2A8(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        LevelScriptActorClassName;                         // 0x2B0(0x20)(ConstParm, Parm, Config, SubobjectReference)
	struct FSoftClassPath                        DefaultBlueprintBaseClassName;                     // 0x2D0(0x20)(BlueprintReadOnly, Parm, Config, SubobjectReference)
	struct FSoftClassPath                        GameSingletonClassName;                            // 0x2F0(0x20)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, SubobjectReference)
	class UObject*                               GameSingleton;                                     // 0x310(0x8)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        AssetManagerClassName;                             // 0x318(0x20)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, SubobjectReference)
	class UAssetManager*                         AssetManager;                                      // 0x338(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, SubobjectReference)
	class UTexture2D*                            DefaultTexture;                                    // 0x340(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	struct FSoftObjectPath                       DefaultTextureName;                                // 0x348(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Config, SubobjectReference)
	class UTexture*                              DefaultDiffuseTexture;                             // 0x368(0x8)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FSoftObjectPath                       DefaultDiffuseTextureName;                         // 0x370(0x20)(Net, OutParm, Config, SubobjectReference)
	class UTexture2D*                            DefaultBSPVertexTexture;                           // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultBSPVertexTextureName;                       // 0x398(0x20)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, SubobjectReference)
	class UTexture2D*                            HighFrequencyNoiseTexture;                         // 0x3B8(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       HighFrequencyNoiseTextureName;                     // 0x3C0(0x20)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Config, SubobjectReference)
	class UTexture2D*                            DefaultBokehTexture;                               // 0x3E0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultBokehTextureName;                           // 0x3E8(0x20)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, SubobjectReference)
	class UTexture2D*                            DefaultBloomKernelTexture;                         // 0x408(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultBloomKernelTextureName;                     // 0x410(0x20)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, SubobjectReference)
	class UTexture2D*                            DefaultFilmGrainTexture;                           // 0x430(0x8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultFilmGrainTextureName;                       // 0x438(0x20)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Config, SubobjectReference)
	class UMaterial*                             WireframeMaterial;                                 // 0x458(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, InstancedReference, DuplicateTransient)
	class FString                                WireframeMaterialName;                             // 0x460(0x10)(Net, EditFixedSize, Parm, Config, SubobjectReference)
	class UMaterial*                             DebugMeshMaterial;                                 // 0x470(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	struct FSoftObjectPath                       DebugMeshMaterialName;                             // 0x478(0x20)(ConstParm, Parm, OutParm, Config, SubobjectReference)
	class UMaterial*                             NaniteHiddenSectionMaterial;                       // 0x498(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference)
	class FString                                NaniteHiddenSectionMaterialName;                   // 0x4A0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, SubobjectReference)
	class UMaterial*                             EmissiveMeshMaterial;                              // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FSoftObjectPath                       EmissiveMeshMaterialName;                          // 0x4B8(0x20)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, SubobjectReference)
	class UMaterial*                             LevelColorationLitMaterial;                        // 0x4D8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                LevelColorationLitMaterialName;                    // 0x4E0(0x10)(ConstParm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             LevelColorationUnlitMaterial;                      // 0x4F0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                LevelColorationUnlitMaterialName;                  // 0x4F8(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             LightingTexelDensityMaterial;                      // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                LightingTexelDensityName;                          // 0x510(0x10)(Edit, ConstParm, Net, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             ShadedLevelColorationLitMaterial;                  // 0x520(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ShadedLevelColorationLitMaterialName;              // 0x528(0x10)(BlueprintVisible, EditFixedSize, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             ShadedLevelColorationUnlitMaterial;                // 0x538(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ShadedLevelColorationUnlitMaterialName;            // 0x540(0x10)(BlueprintReadOnly, Net, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             RemoveSurfaceMaterial;                             // 0x550(0x8)(Edit, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference)
	struct FSoftObjectPath                       RemoveSurfaceMaterialName;                         // 0x558(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorMaterial;                               // 0x578(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorMaterialName;                           // 0x580(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorViewModeMaterial_ColorOnly;             // 0x590(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorViewModeMaterialName_ColorOnly;         // 0x598(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorViewModeMaterial_AlphaAsColor;          // 0x5A8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorViewModeMaterialName_AlphaAsColor;      // 0x5B0(0x10)(ExportObject, Parm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorViewModeMaterial_RedOnly;               // 0x5C0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorViewModeMaterialName_RedOnly;           // 0x5C8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorViewModeMaterial_GreenOnly;             // 0x5D8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorViewModeMaterialName_GreenOnly;         // 0x5E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             VertexColorViewModeMaterial_BlueOnly;              // 0x5F0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                VertexColorViewModeMaterialName_BlueOnly;          // 0x5F8(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, SubobjectReference)
	struct FSoftObjectPath                       DebugEditorMaterialName;                           // 0x608(0x20)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             ConstraintLimitMaterial;                           // 0x628(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialX;                          // 0x630(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialXAxis;                      // 0x638(0x8)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialY;                          // 0x640(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialYAxis;                      // 0x648(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialZ;                          // 0x650(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialZAxis;                      // 0x658(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ConstraintLimitMaterialPrismatic;                  // 0x660(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterial*                             InvalidLightmapSettingsMaterial;                   // 0x668(0x8)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       InvalidLightmapSettingsMaterialName;               // 0x670(0x20)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             PreviewShadowsIndicatorMaterial;                   // 0x690(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       PreviewShadowsIndicatorMaterialName;               // 0x698(0x20)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, SubobjectReference)
	class UMaterial*                             ArrowMaterial;                                     // 0x6B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              ArrowMaterialYellow;                               // 0x6C0(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       ArrowMaterialName;                                 // 0x6C8(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	struct FLinearColor                          LightingOnlyBrightness;                            // 0x6E8(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	TArray<struct FLinearColor>                  ShaderComplexityColors;                            // 0x6F8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	TArray<struct FLinearColor>                  QuadComplexityColors;                              // 0x708(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	TArray<struct FLinearColor>                  LightComplexityColors;                             // 0x718(0x10)(Edit, ConstParm, ReturnParm, Config, SubobjectReference)
	TArray<struct FLinearColor>                  StationaryLightOverlapColors;                      // 0x728(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, SubobjectReference)
	TArray<struct FLinearColor>                  LODColorationColors;                               // 0x738(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Config, SubobjectReference)
	TArray<struct FLinearColor>                  HLODColorationColors;                              // 0x748(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, SubobjectReference)
	TArray<struct FLinearColor>                  StreamingAccuracyColors;                           // 0x758(0x10)(Edit, ExportObject, Net, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationExcludedColor;            // 0x768(0x10)(Edit, EditFixedSize, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationIncludedColor;            // 0x778(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationRecomputeTangentsColor;   // 0x788(0x10)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Config, SubobjectReference)
	float                                        GPUSkinCacheVisualizationLowMemoryThresholdInMB;   // 0x798(0x4)(ConstParm, Parm, ReturnParm, Config, SubobjectReference)
	float                                        GPUSkinCacheVisualizationHighMemoryThresholdInMB;  // 0x79C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationLowMemoryColor;           // 0x7A0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationMidMemoryColor;           // 0x7B0(0x10)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          GPUSkinCacheVisualizationHighMemoryColor;          // 0x7C0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, SubobjectReference)
	TArray<struct FLinearColor>                  GPUSkinCacheVisualizationRayTracingLODOffsetColors; // 0x7D0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, SubobjectReference)
	float                                        MaxPixelShaderAdditiveComplexityCount;             // 0x7E0(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        MaxES3PixelShaderAdditiveComplexityCount;          // 0x7E4(0x4)(Edit, Net, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        MinLightMapDensity;                                // 0x7E8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        IdealLightMapDensity;                              // 0x7EC(0x4)(EditFixedSize, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        MaxLightMapDensity;                                // 0x7F0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bRenderLightMapDensityGrayscale : 1;               // Mask: 0x1, PropSize: 0x10x7F4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        BitPad_BE : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1603[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RenderLightMapDensityGrayscaleScale;               // 0x7F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        RenderLightMapDensityColorScale;                   // 0x7FC(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          LightMapDensityVertexMappedColor;                  // 0x800(0x10)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          LightMapDensitySelectedColor;                      // 0x810(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	TArray<struct FStatColorMapping>             StatColorMappings;                                 // 0x820(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	class UPhysicalMaterial*                     DefaultPhysMaterial;                               // 0x830(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultPhysMaterialName;                           // 0x838(0x20)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, SubobjectReference)
	class UPhysicalMaterial*                     DefaultDestructiblePhysMaterial;                   // 0x858(0x8)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultDestructiblePhysMaterialName;               // 0x860(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGameNameRedirect>             ActiveGameNameRedirects;                           // 0x880(0x10)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FClassRedirect>                ActiveClassRedirects;                              // 0x890(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	TArray<struct FPluginRedirect>               ActivePluginRedirects;                             // 0x8A0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStructRedirect>               ActiveStructRedirects;                             // 0x8B0(0x10)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            PreIntegratedSkinBRDFTexture;                      // 0x8C0(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       PreIntegratedSkinBRDFTextureName;                  // 0x8C8(0x20)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, SubobjectReference)
	class UTexture2D*                            BlueNoiseScalarTexture;                            // 0x8E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            BlueNoiseVec2Texture;                              // 0x8F0(0x8)(ConstParm, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       BlueNoiseScalarTextureName;                        // 0x8F8(0x20)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, SubobjectReference)
	struct FSoftObjectPath                       BlueNoiseVec2TextureName;                          // 0x918(0x20)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, SubobjectReference)
	class UTexture2D*                            MiniFontTexture;                                   // 0x938(0x8)(Edit, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       MiniFontTextureName;                               // 0x940(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, SubobjectReference)
	class UTexture*                              WeightMapPlaceholderTexture;                       // 0x960(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig)
	struct FSoftObjectPath                       WeightMapPlaceholderTextureName;                   // 0x968(0x20)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, SubobjectReference)
	class UTexture2D*                            LightMapDensityTexture;                            // 0x988(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       LightMapDensityTextureName;                        // 0x990(0x20)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, Config, SubobjectReference)
	uint8                                        Pad_161D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UGameViewportClient*                   GameViewport;                                      // 0x9B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FString>                        DeferredCommands;                                  // 0x9C0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NearClipPlane;                                     // 0x9D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        bSubtitlesEnabled : 1;                             // Mask: 0x1, PropSize: 0x10x9D4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bSubtitlesForcedOff : 1;                           // Mask: 0x2, PropSize: 0x10x9D4(0x1)(EditFixedSize, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        BitPad_BF : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1621[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaximumLoopIterationCount;                         // 0x9D8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bCanBlueprintsTickByDefault : 1;                   // Mask: 0x1, PropSize: 0x10x9DC(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bOptimizeAnimBlueprintMemberVariableAccess : 1;    // Mask: 0x2, PropSize: 0x10x9DC(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bAllowMultiThreadedAnimationUpdate : 1;            // Mask: 0x4, PropSize: 0x10x9DC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableEditorPSysRealtimeLOD : 1;                  // Mask: 0x8, PropSize: 0x10x9DC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        BitPad_C0 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSmoothFrameRate : 1;                              // Mask: 0x20, PropSize: 0x10x9DC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        bUseFixedFrameRate : 1;                            // Mask: 0x40, PropSize: 0x10x9DC(0x1)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_C1 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_162C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FixedFrameRate;                                    // 0x9E0(0x4)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FFloatRange                           SmoothedFrameRateRange;                            // 0x9E4(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        Pad_1631[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UEngineCustomTimeStep*                 CustomTimeStep;                                    // 0x9F8(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_1634[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSoftClassPath                        CustomTimeStepClassName;                           // 0xA20(0x20)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTimecodeProvider*                     TimecodeProvider;                                  // 0xA40(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_1635[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSoftClassPath                        TimecodeProviderClassName;                         // 0xA68(0x20)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	bool                                         bGenerateDefaultTimecode;                          // 0xA88(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1638[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FFrameRate                            GenerateDefaultTimecodeFrameRate;                  // 0xA8C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GenerateDefaultTimecodeFrameDelay;                 // 0xA94(0x4)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheckForMultiplePawnsSpawnedInAFrame : 1;         // Mask: 0x1, PropSize: 0x10xA98(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        BitPad_C2 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_163B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumPawnsAllowedToBeSpawnedInAFrame;                // 0xA9C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        bShouldGenerateLowQualityLightmaps : 1;            // Mask: 0x1, PropSize: 0x10xAA0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_C3 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_163E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                C_WorldBox;                                        // 0xAA4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_BrushWire;                                       // 0xAA8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_AddWire;                                         // 0xAAC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_SubtractWire;                                    // 0xAB0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_SemiSolidWire;                                   // 0xAB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_NonSolidWire;                                    // 0xAB8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_WireBackground;                                  // 0xABC(0x4)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_ScaleBoxHi;                                      // 0xAC0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_VolumeCollision;                                 // 0xAC4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_BSPCollision;                                    // 0xAC8(0x4)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_OrthoBackground;                                 // 0xACC(0x4)(Edit, Net, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_Volume;                                          // 0xAD0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                C_BrushShape;                                      // 0xAD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1645[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDirectoryPath                        GameScreenshotSaveDirectory;                       // 0xAE0(0x10)(ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseStaticMeshMinLODPerQualityLevels;               // 0xAF0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseSkeletalMeshMinLODPerQualityLevels;             // 0xAF1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseGrassVarityPerQualityLevels;                    // 0xAF2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class ETransitionType                   TransitionType;                                    // 0xAF3(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1649[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TransitionDescription;                             // 0xAF8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                TransitionGameMode;                                // 0xB08(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMatureLanguage : 1;                          // Mask: 0x1, PropSize: 0x10xB18(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Config, SubobjectReference)
	uint8                                        BitPad_C4 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_164D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CameraRotationThreshold;                           // 0xB1C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        CameraTranslationThreshold;                        // 0xB20(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        PrimitiveProbablyVisibleTime;                      // 0xB24(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	float                                        MaxOcclusionPixelsFraction;                        // 0xB28(0x4)(ExportObject, Net, Parm, OutParm, ReturnParm, Config, SubobjectReference)
	uint8                                        bPauseOnLossOfFocus : 1;                           // Mask: 0x1, PropSize: 0x10xB2C(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        BitPad_C5 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1650[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxParticleResize;                                 // 0xB30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	int32                                        MaxParticleResizeWarn;                             // 0xB34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	TArray<struct FDropNoteInfo>                 PendingDroppedNotes;                               // 0xB38(0x10)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NetClientTicksPerSecond;                           // 0xB48(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	float                                        DisplayGamma;                                      // 0xB4C(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	float                                        MinDesiredFrameRate;                               // 0xB50(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          DefaultSelectedMaterialColor;                      // 0xB54(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	struct FLinearColor                          SelectedMaterialColor;                             // 0xB64(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SelectionOutlineColor;                             // 0xB74(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SubduedSelectionOutlineColor;                      // 0xB84(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SelectedMaterialColorOverride;                     // 0xB94(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsOverridingSelectedColor;                        // 0xBA4(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_165C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bEnableOnScreenDebugMessages : 1;                  // Mask: 0x1, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        bEnableOnScreenDebugMessagesDisplay : 1;           // Mask: 0x2, PropSize: 0x10xBA8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressMapWarnings : 1;                          // Mask: 0x4, PropSize: 0x10xBA8(0x1)(EditFixedSize, Parm, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        bDisableAILogging : 1;                             // Mask: 0x8, PropSize: 0x10xBA8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        BitPad_C6 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_165F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       bEnableVisualLogRecordingOnStart;                  // 0xBAC(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, SubobjectReference)
	int32                                        ScreenSaverInhibitorSemaphore;                     // 0xBB0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockReadOnlyLevels : 1;                           // Mask: 0x1, PropSize: 0x10xBB4(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_C7 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1663[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ParticleEventManagerClassPath;                     // 0xBB8(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	float                                        SelectionHighlightIntensity;                       // 0xBC8(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BSPSelectionHighlightIntensity;                    // 0xBCC(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SelectionHighlightIntensityBillboards;             // 0xBD0(0x4)(OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1664[0x294];                                   // Fixing Size After Last Property  > TateDumper <
	uint32                                       GlobalNetTravelCount;                              // 0xE68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1666[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNetDriverDefinition>          NetDriverDefinitions;                              // 0xE70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	TArray<struct FIrisNetDriverConfig>          IrisNetDriverConfigs;                              // 0xE80(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        ServerActors;                                      // 0xE90(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        RuntimeServerActors;                               // 0xEA0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NetErrorLogInterval;                               // 0xEB0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        bStartedLoadMapMovie : 1;                          // Mask: 0x1, PropSize: 0x10xEB4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_C8 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_166D[0x1B];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NextWorldContextHandle;                            // 0xED0(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_166E[0xF4];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        NetworkStressTestClientMode_MinFPS;                // 0xFC8(0x4)(Edit, ExportObject, OutParm, ReturnParm, Transient, Config, SubobjectReference)
	float                                        NetworkStressTestClientMode_MaxFPS;                // 0xFCC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, SubobjectReference)


	static class UEngine* GetEngine();
	static class UClass* StaticClass();
	static class UEngine* GetDefaultObj();

};

// 0x468 (0x4B8 - 0x50)
// Class Engine.LocalPlayer
class ULocalPlayer : public UPlayer
{
public:
	uint8                                        Pad_1678[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UGameViewportClient*                   ViewportClient;                                    // 0x80(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_167A[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EAspectRatioAxisConstraint        AspectRatioAxisConstraint;                         // 0xC0(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_167C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PendingLevelPlayerControllerClass;                 // 0xC8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSentSplitJoin : 1;                                // Mask: 0x1, PropSize: 0x10xD0(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_C9 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1681[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bValidCachedViewFrustum;                           // 0xD4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1683[0x21B];                                   // Fixing Size After Last Property  > TateDumper <
	int32                                        ControllerId;                                      // 0x2F0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1684[0x1C4];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULocalPlayer* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.LocalPlayerSubsystem
class ULocalPlayerSubsystem : public USubsystem
{
public:

	static class UClass* StaticClass();
	static class ULocalPlayerSubsystem* GetDefaultObj();

};

// 0x4C0 (0x4E8 - 0x28)
// Class Engine.PlayerInput
class UPlayerInput : public UObject
{
public:
	uint8                                        Pad_1697[0x178];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FKeyBind>                      DebugExecBindings;                                 // 0x1A0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_1698[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          InvertedAxis;                                      // 0x1E0(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1699[0x2F8];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlayerInput* GetDefaultObj();

	float SetMouseSensitivity();
	void SetBind(class FName* BindName, const class FString& Command);
	struct FKey InvertAxisKey();
	class FName InvertAxis();
	void GetOuterAPlayerController(class APlayerController* ReturnValue);
	void ClearSmoothing();
};

// 0x8 (0x30 - 0x28)
// Class Engine.DataAsset
class UDataAsset : public UObject
{
public:
	class UClass*                                NativeClass;                                       // 0x28(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UDataAsset* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.PrimaryDataAsset
class UPrimaryDataAsset : public UDataAsset
{
public:

	static class UClass* StaticClass();
	static class UPrimaryDataAsset* GetDefaultObj();

};

// 0x68 (0x120 - 0xB8)
// Class Engine.MovementComponent
class UMovementComponent : public UActorComponent
{
public:
	class USceneComponent*                       UpdatedComponent;                                  // 0xB8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	class UPrimitiveComponent*                   UpdatedPrimitive;                                  // 0xC0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_16F1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0xD0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FVector                               PlaneConstraintNormal;                             // 0xE8(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               PlaneConstraintOrigin;                             // 0x100(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bUpdateOnlyIfRendered : 1;                         // Mask: 0x1, PropSize: 0x10x118(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bAutoUpdateTickRegistration : 1;                   // Mask: 0x2, PropSize: 0x10x118(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bTickBeforeOwner : 1;                              // Mask: 0x4, PropSize: 0x10x118(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bAutoRegisterUpdatedComponent : 1;                 // Mask: 0x8, PropSize: 0x10x118(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bConstrainToPlane : 1;                             // Mask: 0x10, PropSize: 0x10x118(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bSnapToPlaneAtStart : 1;                           // Mask: 0x20, PropSize: 0x10x118(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bAutoRegisterPhysicsVolumeUpdates : 1;             // Mask: 0x40, PropSize: 0x10x118(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bComponentShouldUpdatePhysicsVolume : 1;           // Mask: 0x80, PropSize: 0x10x118(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_16F8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EPlaneConstraintAxisSetting       PlaneConstraintAxisSetting;                        // 0x11B(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_16F9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMovementComponent* GetDefaultObj();

	void StopMovementImmediately();
	void SnapUpdatedComponentToPlane();
	class USceneComponent* SetUpdatedComponent();
	struct FVector SetPlaneConstraintOrigin();
	struct FVector SetPlaneConstraintNormal();
	struct FVector SetPlaneConstraintFromVectors();
	bool SetPlaneConstraintEnabled();
	enum class EPlaneConstraintAxisSetting SetPlaneConstraintAxisSetting();
	class APhysicsVolume* PhysicsVolumeChanged();
	bool K2_MoveUpdatedComponent(bool ReturnValue);
	float IsExceedingMaxSpeed(bool ReturnValue);
	void GetPlaneConstraintOrigin(const struct FVector& ReturnValue);
	void GetPlaneConstraintNormal(const struct FVector& ReturnValue);
	void GetPlaneConstraintAxisSetting(enum class EPlaneConstraintAxisSetting ReturnValue);
	void GetPhysicsVolume(class APhysicsVolume* ReturnValue);
	void GetMaxSpeed(float ReturnValue);
	void GetGravityZ(float ReturnValue);
	void ConstrainNormalToPlane(struct FVector* Normal, const struct FVector& ReturnValue);
	void ConstrainLocationToPlane(struct FVector* Location, const struct FVector& ReturnValue);
	struct FVector ConstrainDirectionToPlane(const struct FVector& ReturnValue);
};

// 0x48 (0x168 - 0x120)
// Class Engine.NavMovementComponent
class UNavMovementComponent : public UMovementComponent
{
public:
	struct FNavAgentProperties                   NavAgentProps;                                     // 0x120(0x38)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        FixedPathBrakingDistance;                          // 0x158(0x4)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUpdateNavAgentWithOwnersCollision : 1;            // Mask: 0x1, PropSize: 0x10x15C(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseAccelerationForPaths : 1;                      // Mask: 0x2, PropSize: 0x10x15C(0x1)(Edit, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseFixedBrakingDistanceForPaths : 1;              // Mask: 0x4, PropSize: 0x10x15C(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_CA : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	struct FMovementProperties                   MovementState;                                     // 0x15D(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_170D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               PathFollowingComp;                                 // 0x160(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UNavMovementComponent* GetDefaultObj();

	void StopMovementKeepPathing();
	void StopActiveMovement();
	void IsSwimming(bool ReturnValue);
	void IsMovingOnGround(bool ReturnValue);
	void IsFlying(bool ReturnValue);
	void IsFalling(bool ReturnValue);
	void IsCrouching(bool ReturnValue);
};

// 0x8 (0x170 - 0x168)
// Class Engine.PawnMovementComponent
class UPawnMovementComponent : public UNavMovementComponent
{
public:
	class APawn*                                 PawnOwner;                                         // 0x168(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPawnMovementComponent* GetDefaultObj();

	void IsMoveInputIgnored(bool ReturnValue);
	void GetPendingInputVector(const struct FVector& ReturnValue);
	void GetPawnOwner(class APawn* ReturnValue);
	void GetLastInputVector(const struct FVector& ReturnValue);
	void ConsumeInputVector(const struct FVector& ReturnValue);
	void AddInputVector(struct FVector* WorldVector, bool bForce);
};

// 0x18 (0x188 - 0x170)
// Class Engine.FloatingPawnMovement
class UFloatingPawnMovement : public UPawnMovementComponent
{
public:
	float                                        MaxSpeed;                                          // 0x170(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        Acceleration;                                      // 0x174(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        Deceleration;                                      // 0x178(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        TurningBoost;                                      // 0x17C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bPositionCorrected : 1;                            // Mask: 0x1, PropSize: 0x10x180(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1719[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFloatingPawnMovement* GetDefaultObj();

};

// 0x8 (0x190 - 0x188)
// Class Engine.SpectatorPawnMovement
class USpectatorPawnMovement : public UFloatingPawnMovement
{
public:
	uint8                                        bIgnoreTimeDilation : 1;                           // Mask: 0x1, PropSize: 0x10x188(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_171C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USpectatorPawnMovement* GetDefaultObj();

};

// 0x98 (0x560 - 0x4C8)
// Class Engine.Pawn
class APawn : public AActor
{
public:
	uint8                                        Pad_1766[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseControllerRotationPitch : 1;                   // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseControllerRotationYaw : 1;                     // Mask: 0x2, PropSize: 0x10x4D0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseControllerRotationRoll : 1;                    // Mask: 0x4, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bCanAffectNavigationGeneration : 1;                // Mask: 0x8, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bForceUseCustomCameraComponent : 1;                // Mask: 0x10, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bDisableControllerDesiredRotation : 1;             // Mask: 0x20, PropSize: 0x10x4D0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseBPFaceRotation : 1;                            // Mask: 0x40, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_CB : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_CC : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsLocalViewTarget : 1;                            // Mask: 0x2, PropSize: 0x10x4D1(0x1)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_CD : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_176D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseEyeHeight;                                     // 0x4D4(0x4)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	enum class EAutoReceiveInput                 AutoPossessPlayer;                                 // 0x4D8(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EAutoPossessAI                    AutoPossessAI;                                     // 0x4D9(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        RemoteViewPitch;                                   // 0x4DA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_176F[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AIControllerClass;                                 // 0x4E0(0x8)(BlueprintVisible, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	class APlayerState*                          PlayerState;                                       // 0x4E8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_1771[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class AController*                           LastHitBy;                                         // 0x4F8(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class AController*                           Controller;                                        // 0x500(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AController*                           PreviousController;                                // 0x508(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1774[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastSparseDelegateProperty_            ReceiveControllerChangedDelegate;                  // 0x514(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastSparseDelegateProperty_            ReceiveRestartedDelegate;                          // 0x515(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1776[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ControlInputVector;                                // 0x518(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FVector                               LastControlInputVector;                            // 0x530(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UClass*                                OverrideInputComponentClass;                       // 0x548(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnMovementTetherSet;                               // 0x550(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class APawn* GetDefaultObj();

	void SpawnDefaultController();
	bool SetCanAffectNavigationGeneration(bool* bNewValue);
	class AController* ReceiveUnpossessed();
	void ReceiveRestarted();
	class AController* ReceivePossessed();
	class AController* ReceiveControllerChanged();
	class AController* PossessedBy();
	class AActor* PawnMakeNoise(float* Loudness);
	void OnRep_PlayerState();
	void OnRep_Controller();
	void IsPlayerControlled(bool ReturnValue);
	void IsPawnControlled(bool ReturnValue);
	void IsMoveInputIgnored(bool ReturnValue);
	void IsLocallyViewed(bool ReturnValue);
	void IsLocallyControlled(bool ReturnValue);
	void IsControlled(bool ReturnValue);
	void IsBotControlled(bool ReturnValue);
	void GetPlatformUserId(const struct FPlatformUserId& ReturnValue);
	void GetPendingMovementInputVector(const struct FVector& ReturnValue);
	void GetOverrideInputComponentClass(class UClass* ReturnValue);
	void GetNavAgentLocation(const struct FVector& ReturnValue);
	void GetMovementComponent(class UPawnMovementComponent* ReturnValue);
	void GetMovementBaseActor(class APawn* Pawn, class AActor* ReturnValue);
	void GetLocalViewingPlayerController(class APlayerController* ReturnValue);
	void GetLastMovementInputVector(const struct FVector& ReturnValue);
	void GetControlRotation(const struct FRotator& ReturnValue);
	void GetController(class AController* ReturnValue);
	void GetBaseAimRotation(const struct FRotator& ReturnValue);
	void DetachFromControllerPendingDestroy();
	void ConsumeMovementInputVector(const struct FVector& ReturnValue);
	void BPPreventSpawnDefaultController(bool ReturnValue);
	bool BPFaceRotation();
	float AddMovementInput(bool bForce);
	float AddControllerYawInput();
	float AddControllerRollInput();
	float AddControllerPitchInput();
};

// 0x28 (0x588 - 0x560)
// Class Engine.PrimalPawn
class APrimalPawn : public APawn
{
public:
	struct FRotator_NetQuantizeSmartPitch        LastMovementDesiredRotation;                       // 0x560(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseBPPreventMovementMode : 1;                     // Mask: 0x1, PropSize: 0x10x578(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bReplicateDesiredRotation : 1;                     // Mask: 0x2, PropSize: 0x10x578(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsPlayingTurningAnim : 1;                         // Mask: 0x4, PropSize: 0x10x578(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bClearOnConsume : 1;                               // Mask: 0x8, PropSize: 0x10x578(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bUse_ModifySavedMoveAcceleration_PreRep : 1;       // Mask: 0x10, PropSize: 0x10x578(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUse_ModifySavedMoveAcceleration_PostRep : 1;      // Mask: 0x20, PropSize: 0x10x578(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_CF : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_179F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HarvestingDestructionMeshRangeMultipler;           // 0x57C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bPreventHUDInitialization : 1;                     // Mask: 0x1, PropSize: 0x10x580(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_17A0[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalPawn* GetDefaultObj();

	void ShouldIKBeForceDisabled(bool ReturnValue);
	class FString InterceptInputEvent();
	void InitInputComponent();
	void GetLastMovementDesiredRotation(const struct FRotator& ReturnValue);
	void CanMove(bool ReturnValue);
	class UInputComponent* BPSetupPlayerInputComponent();
	struct FRotator BPModifyRootMotionDeltaRotation(const struct FRotator& ReturnValue);
	uint8 BPAcknowledgeServerCorrection(float Timestamp, struct FVector* NewVel, bool ReturnValue);
	uint8 BP_PreventMovementMode(bool ReturnValue);
};

// 0x28 (0x5B0 - 0x588)
// Class Engine.DefaultPawn
class ADefaultPawn : public APrimalPawn
{
public:
	float                                        BaseTurnRate;                                      // 0x588(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        BaseLookUpRate;                                    // 0x58C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UPawnMovementComponent*                MovementComponent;                                 // 0x590(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class USphereComponent*                      CollisionComponent;                                // 0x598(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x5A0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        bAddDefaultMovementBindings : 1;                   // Mask: 0x1, PropSize: 0x10x5A8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_17A9[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADefaultPawn* GetDefaultObj();

	float TurnAtRate();
	float MoveUp_World();
	float MoveRight();
	float MoveForward();
	float LookUpAtRate();
};

// 0xC8 (0xF0 - 0x28)
// Class Engine.CameraShakeBase
class UCameraShakeBase : public UObject
{
public:
	bool                                         bSingleInstance;                                   // 0x28(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShakeScale;                                        // 0x2C(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UCameraShakePattern*                   RootShakePattern;                                  // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	class APlayerCameraManager*                  CameraManager;                                     // 0x38(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B4[0xA8];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        Speed;                                             // 0xE8(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bIgnoreWhenBasedOnDino : 1;                        // Mask: 0x1, PropSize: 0x10xEC(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Config, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWorldShakeScaling : 1;                      // Mask: 0x2, PropSize: 0x10xEC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, Config, InstancedReference, SubobjectReference)
	uint8                                        bForceUseCameraShakeScale : 1;                     // Mask: 0x4, PropSize: 0x10xEC(0x1)(Edit, ConstParm, ExportObject, Net, Parm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_17B6[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraShakeBase* GetDefaultObj();

	void SetRootShakePattern(class UCameraShakePattern* InPattern);
	void GetRootShakePattern(class UCameraShakePattern* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.CameraShakePattern
class UCameraShakePattern : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCameraShakePattern* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.CameraModifier
class UCameraModifier : public UObject
{
public:
	uint8                                        bDebug : 1;                                        // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bExclusive : 1;                                    // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_D0 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_17D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        Priority;                                          // 0x2C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_17D3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerCameraManager*                  CameraOwner;                                       // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	float                                        AlphaInTime;                                       // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	float                                        AlphaOutTime;                                      // 0x3C(0x4)(BlueprintReadOnly, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	float                                        Alpha;                                             // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_17EB[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraModifier* GetDefaultObj();

	void OnCameraOwnerDestroyed(class AActor* InOwner);
	void IsDisabled(bool ReturnValue);
	void GetViewTarget(class AActor* ReturnValue);
	void EnableModifier();
	bool DisableModifier();
	float BlueprintModifyPostProcess(float* PostProcessBlendWeight, const struct FPostProcessSettings& PostProcessSettings);
	float BlueprintModifyCamera(const struct FVector& ViewLocation, struct FRotator* ViewRotation, float* FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
};

// 0x58 (0x80 - 0x28)
// Class Engine.Commandlet
class UCommandlet : public UObject
{
public:
	class FString                                HelpDescription;                                   // 0x28(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	class FString                                HelpUsage;                                         // 0x38(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	class FString                                HelpWebLink;                                       // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	TArray<class FString>                        HelpParamNames;                                    // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	TArray<class FString>                        HelpParamDescriptions;                             // 0x68(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        IsServer : 1;                                      // Mask: 0x1, PropSize: 0x10x78(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        IsClient : 1;                                      // Mask: 0x2, PropSize: 0x10x78(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        IsEditor : 1;                                      // Mask: 0x4, PropSize: 0x10x78(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        LogToConsole : 1;                                  // Mask: 0x8, PropSize: 0x10x78(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        ShowErrorCount : 1;                                // Mask: 0x10, PropSize: 0x10x78(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        ShowProgress : 1;                                  // Mask: 0x20, PropSize: 0x10x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        FastExit : 1;                                      // Mask: 0x40, PropSize: 0x10x78(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1829[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCommandlet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AssetUserData
class UAssetUserData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAssetUserData* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Engine.Exporter
class UExporter : public UObject
{
public:
	class UClass*                                SupportedClass;                                    // 0x28(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               ExportRootScope;                                   // 0x30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class FString>                        FormatExtension;                                   // 0x38(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class FString>                        FormatDescription;                                 // 0x48(0x10)(ExportObject, EditFixedSize, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        PreferredFormatIndex;                              // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        TextIndent;                                        // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bText : 1;                                         // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bSelectedOnly : 1;                                 // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bForceFileOperations : 1;                          // Mask: 0x4, PropSize: 0x10x60(0x1)(Net, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D1 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1836[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAssetExportTask*                      ExportTask;                                        // 0x68(0x8)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1838[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UExporter* GetDefaultObj();

	void ScriptRunAssetExportTask(class UAssetExportTask* Task, bool ReturnValue);
	void RunAssetExportTasks(const TArray<class UAssetExportTask*>& ExportTasks, bool ReturnValue);
	void RunAssetExportTask(class UAssetExportTask* Task, bool ReturnValue);
};

// 0x38 (0x60 - 0x28)
// Class Engine.EdGraph
class UEdGraph : public UObject
{
public:
	class UClass*                                Schema;                                            // 0x28(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class UEdGraphNode*>                  Nodes;                                             // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEditable : 1;                                     // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bAllowDeletion : 1;                                // Mask: 0x2, PropSize: 0x10x40(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bAllowRenaming : 1;                                // Mask: 0x4, PropSize: 0x10x40(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_183D[0x1F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UEdGraph* GetDefaultObj();

};

// 0x140 (0x168 - 0x28)
// Class Engine.SoundBase
class USoundBase : public UObject
{
public:
	uint8                                        Pad_183F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundClass*                           SoundClassObject;                                  // 0x30(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	uint8                                        bDebug : 1;                                        // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOverrideConcurrency : 1;                          // Mask: 0x2, PropSize: 0x10x38(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bEnableBusSends : 1;                               // Mask: 0x4, PropSize: 0x10x38(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableBaseSubmix : 1;                             // Mask: 0x8, PropSize: 0x10x38(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableSubmixSends : 1;                            // Mask: 0x10, PropSize: 0x10x38(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHasDelayNode : 1;                                 // Mask: 0x20, PropSize: 0x10x38(0x1)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bHasConcatenatorNode : 1;                          // Mask: 0x40, PropSize: 0x10x38(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bBypassVolumeScaleForPriority : 1;                 // Mask: 0x80, PropSize: 0x10x38(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	enum class EVirtualizationMode               VirtualizationMode;                                // 0x39(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1843[0x56];                                    // Fixing Size After Last Property  > TateDumper <
	TSet<class USoundConcurrency*>               ConcurrencySet;                                    // 0x90(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FSoundConcurrencySettings             ConcurrencyOverrides;                              // 0xE0(0x20)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	float                                        MaxDistance;                                       // 0x104(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        TotalSamples;                                      // 0x108(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Priority;                                          // 0x10C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class USoundAttenuation*                     AttenuationSettings;                               // 0x110(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	class USoundSubmixBase*                      SoundSubmixObject;                                 // 0x118(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<struct FSoundSubmixSendInfo>          SoundSubmixSends;                                  // 0x120(0x10)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class USoundEffectSourcePresetChain*         SourceEffectChain;                                 // 0x130(0x8)(Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FSoundSourceBusSendInfo>       BusSends;                                          // 0x138(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<struct FSoundSourceBusSendInfo>       PreEffectBusSends;                                 // 0x148(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x158(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class USoundBase* GetDefaultObj();

};

// 0x300 (0x468 - 0x168)
// Class Engine.SoundWave
class USoundWave : public USoundBase
{
public:
	uint8                                        Pad_1850[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        CompressionQuality;                                // 0x178(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	int32                                        StreamingPriority;                                 // 0x17C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	enum class ESoundwaveSampleRateSettings      SampleRateQuality;                                 // 0x180(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1851[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ESoundGroup                       SoundGroup;                                        // 0x182(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, EditConst)
	uint8                                        bLooping : 1;                                      // Mask: 0x1, PropSize: 0x10x183(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        bStreaming : 1;                                    // Mask: 0x2, PropSize: 0x10x183(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_D2 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	enum class ESoundAssetCompressionType        SoundAssetCompressionType;                         // 0x184(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bSeekableStreaming : 1;                            // Mask: 0x1, PropSize: 0x10x185(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseBinkAudio : 1;                                 // Mask: 0x2, PropSize: 0x10x185(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D3 : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1856[0x1A];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSoundModulationDefaultRoutingSettings ModulationSettings;                                // 0x1A0(0x188)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<float>                                FrequenciesToAnalyze;                              // 0x328(0x10)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<struct FSoundWaveSpectralTimeData>    CookedSpectralTimeData;                            // 0x338(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TArray<struct FSoundWaveEnvelopeTimeData>    CookedEnvelopeTimeData;                            // 0x348(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        InitialChunkSize;                                  // 0x358(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1859[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_D4 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bMature : 1;                                       // Mask: 0x20, PropSize: 0x10x39C(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference)
	uint8                                        bManualWordWrap : 1;                               // Mask: 0x40, PropSize: 0x10x39C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bSingleLine : 1;                                   // Mask: 0x80, PropSize: 0x10x39C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bIsAmbisonics : 1;                                 // Mask: 0x1, PropSize: 0x10x39D(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D5 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	enum class ESoundWaveLoadingBehavior         LoadingBehavior;                                   // 0x39E(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_185C[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SpokenText;                                        // 0x3A0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLocalizedSpokenText>          LocalizedSpokenTexts;                              // 0x3B0(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        SubtitleColorIndex;                                // 0x3C0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1860[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SubtitlePriority;                                  // 0x3C4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        Volume;                                            // 0x3C8(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x3CC(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	int32                                        NumChannels;                                       // 0x3D0(0x4)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	uint8                                        Pad_1869[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSoundWaveCuePoint>            CuePoints;                                         // 0x3D8(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        SampleRate;                                        // 0x3E8(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	uint8                                        Pad_1870[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSubtitleCue>                  Subtitles;                                         // 0x3F8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	class UCurveTable*                           Curves;                                            // 0x408(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst)
	class UCurveTable*                           InternalCurves;                                    // 0x410(0x8)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1876[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundWave* GetDefaultObj();

	bool SetSoundAssetCompressionType();
	void GetSoundAssetCompressionType(enum class ESoundAssetCompressionType ReturnValue);
};

// 0x58 (0x4C0 - 0x468)
// Class Engine.SoundWaveProcedural
class USoundWaveProcedural : public USoundWave
{
public:
	uint8                                        Pad_18AA[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundWaveProcedural* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Engine.SoundEffectPreset
class USoundEffectPreset : public UObject
{
public:
	uint8                                        Pad_18AE[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundEffectPreset* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Engine.SoundEffectSubmixPreset
class USoundEffectSubmixPreset : public USoundEffectPreset
{
public:

	static class UClass* StaticClass();
	static class USoundEffectSubmixPreset* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Engine.SoundEffectSourcePreset
class USoundEffectSourcePreset : public USoundEffectPreset
{
public:

	static class UClass* StaticClass();
	static class USoundEffectSourcePreset* GetDefaultObj();

};

// 0xD0 (0x110 - 0x40)
// Class Engine.AnimNotify_PlayParticleEffect
class UAnimNotify_PlayParticleEffect : public UAnimNotify
{
public:
	class UParticleSystem*                       PSTemplate;                                        // 0x40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               LocationOffset;                                    // 0x48(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              RotationOffset;                                    // 0x60(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Scale;                                             // 0x78(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_18C1[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        Attached : 1;                                      // Mask: 0x1, PropSize: 0x10xB0(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D7 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_18C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  SocketName;                                        // 0xB4(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_18C7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UParticleSystem*>               PhysicalSurfacePSTemplates;                        // 0xC0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MaxSpawnDistanceFromCamera;                        // 0xD0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bSpawnIfMeshNotVisible;                            // 0xD4(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_18C9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EPhysicalSurface>          PhysicalSurfaceArray;                              // 0xD8(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bUsePhysicalSurfaceArray;                          // 0xE8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bReallyUseFootstepsPhysicalSurfaceArray;           // 0xE9(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bNotAttachedUseSocketRotation;                     // 0xEA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bDontSpawnOutOfView;                               // 0xEB(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	bool                                         bOnlySpawnIfFirstPersonMeshVisible;                // 0xEC(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_18CD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ParticleScale;                                     // 0xF0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bUseComponentTransform;                            // 0x108(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOnlySpawnInThirdPerson;                           // 0x109(0x1)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOnlySpawnInFirstPerson;                           // 0x10A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOnlyOwnerSee;                                     // 0x10B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_18CE[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_PlayParticleEffect* GetDefaultObj();

};

// 0x98 (0x560 - 0x4C8)
// Class Engine.Controller
class AController : public AActor
{
public:
	uint8                                        Pad_190A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerState*                          PlayerState;                                       // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_190D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnInstigatedAnyDamage;                             // 0x4E0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPossessedPawnChanged;                            // 0x4F0(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  StateName;                                         // 0x500(0x8)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APawn*                                 Pawn;                                              // 0x508(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	uint8                                        Pad_190E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class ACharacter*                            Character;                                         // 0x518(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class USceneComponent*                       TransformComponent;                                // 0x520(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1911[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ControlRotation;                                   // 0x540(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bAttachToPawn : 1;                                 // Mask: 0x1, PropSize: 0x10x558(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D8 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCanPossessWithoutAuthority : 1;                   // Mask: 0x4, PropSize: 0x10x558(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1915[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AController* GetDefaultObj();

	void UnPossess();
	void StopMovement();
	struct FRotator SetInitialLocationAndRotation(struct FVector* NewLocation);
	bool SetIgnoreMoveInput();
	bool SetIgnoreLookInput();
	struct FRotator SetControlRotation();
	void ResetIgnoreMoveInput();
	void ResetIgnoreLookInput();
	void ResetIgnoreInputFlags();
	class APawn* ReceiveUnPossess();
	class APawn* ReceivePossess();
	class AActor* ReceiveInstigatedAnyDamage(float Damage);
	class APawn* Possess();
	void OnRep_PlayerState();
	void OnRep_Pawn();
	bool LineOfSightTo(struct FVector* ViewPoint, bool ReturnValue);
	void K2_GetPawn(class APawn* ReturnValue);
	void IsPlayerController(bool ReturnValue);
	void IsMoveInputIgnored(bool ReturnValue);
	void IsLookInputIgnored(bool ReturnValue);
	void IsLocalPlayerController(bool ReturnValue);
	void IsLocalController(bool ReturnValue);
	void GetViewTarget(class AActor* ReturnValue);
	void GetPlayerViewPoint(struct FVector* Location, struct FRotator* Rotation);
	void GetDesiredRotation(const struct FRotator& ReturnValue);
	void GetControlRotation(const struct FRotator& ReturnValue);
	class APawn* ForcePossess();
	bool ClientSetRotation();
	struct FRotator ClientSetLocation(struct FVector* NewLocation);
	void CastToPlayerController(class APlayerController* ReturnValue);
};

// 0x10 (0x570 - 0x560)
// Class Engine.PrimalController
class APrimalController : public AController
{
public:
	uint8                                        bDebugPathing : 1;                                 // Mask: 0x1, PropSize: 0x10x560(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_D9 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1918[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LastValidUnstasisCasterFrame;                      // 0x564(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1919[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalController* GetDefaultObj();

};

// 0x548 (0xAB8 - 0x570)
// Class Engine.PlayerController
class APlayerController : public APrimalController
{
public:
	uint8                                        Pad_1D02[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UPlayer*                               Player;                                            // 0x578(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class APawn*                                 AcknowledgedPawn;                                  // 0x580(0x8)(ExportObject, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class UInterpTrackInstDirector*              ControllingDirTrackInst;                           // 0x588(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class AHUD*                                  MyHUD;                                             // 0x590(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class APlayerCameraManager*                  PlayerCameraManager;                               // 0x598(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UClass*                                PlayerCameraManagerClass;                          // 0x5A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bAutoManageActiveCameraTarget;                     // 0x5A8(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D08[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              TargetViewRotation;                                // 0x5B0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D09[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        SmoothTargetViewRotationSpeed;                     // 0x5E0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D0A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        HiddenActors;                                      // 0x5E8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>> HiddenPrimitiveComponents;                         // 0x5F8(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D0C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastSpectatorStateSynchTime;                       // 0x610(0x8)(Edit, ExportObject, Net, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               LastSpectatorSyncLocation;                         // 0x618(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              LastSpectatorSyncRotation;                         // 0x630(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ClientCap;                                         // 0x648(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D11[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCheatManager*                         CheatManager;                                      // 0x650(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UClass*                                CheatClass;                                        // 0x658(0x8)(Edit, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class UPlayerInput*                          PlayerInput;                                       // 0x660(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	TArray<struct FActiveForceFeedbackEffect>    ActiveForceFeedbackEffects;                        // 0x668(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                AsyncPhysicsDataClass;                             // 0x678(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class UAsyncPhysicsInputComponent*           AsyncPhysicsDataComponent;                         // 0x680(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D16[0x80];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_EC : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPlayerIsWaiting : 1;                              // Mask: 0x10, PropSize: 0x10x708(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_ED : 3;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        NetPlayerIndex;                                    // 0x70C(0x1)(ExportObject, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D18[0x5B];                                    // Fixing Size After Last Property  > TateDumper <
	class UNetConnection*                        PendingSwapConnection;                             // 0x768(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	class UNetConnection*                        NetConnection;                                     // 0x770(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FRotator                              RotationInput;                                     // 0x778(0x18)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        InputYawScale;                                     // 0x790(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	float                                        InputPitchScale;                                   // 0x794(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	float                                        InputRollScale;                                    // 0x798(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        bShowMouseCursor : 1;                              // Mask: 0x1, PropSize: 0x10x79C(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableClickEvents : 1;                            // Mask: 0x2, PropSize: 0x10x79C(0x1)(Edit, Net, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableTouchEvents : 1;                            // Mask: 0x4, PropSize: 0x10x79C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableMouseOverEvents : 1;                        // Mask: 0x8, PropSize: 0x10x79C(0x1)(Edit, ConstParm, ExportObject, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableTouchOverEvents : 1;                        // Mask: 0x10, PropSize: 0x10x79C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bForceFeedbackEnabled : 1;                         // Mask: 0x20, PropSize: 0x10x79C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bEnableMotionControls : 1;                         // Mask: 0x40, PropSize: 0x10x79C(0x1)(Edit, ConstParm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableStreamingSource : 1;                        // Mask: 0x80, PropSize: 0x10x79C(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bStreamingSourceShouldActivate : 1;                // Mask: 0x1, PropSize: 0x10x79D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bStreamingSourceShouldBlockOnSlowStreaming : 1;    // Mask: 0x2, PropSize: 0x10x79D(0x1)(Edit, EditFixedSize, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_EE : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D22[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EStreamingSourcePriority          StreamingSourcePriority;                           // 0x7A0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D24[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                StreamingSourceDebugColor;                         // 0x7A4(0x4)(ConstParm, BlueprintVisible, Net, Parm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FStreamingSourceShape>         StreamingSourceShapes;                             // 0x7A8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ForceFeedbackScale;                                // 0x7B8(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_1D25[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FKey>                          ClickEventKeys;                                    // 0x7C0(0x10)(ConstParm, BlueprintReadOnly, Parm, Transient, Config, InstancedReference, SubobjectReference)
	enum class EMouseCursor                      DefaultMouseCursor;                                // 0x7D0(0x1)(ExportObject, Parm, Transient, Config, InstancedReference, SubobjectReference)
	enum class EMouseCursor                      CurrentMouseCursor;                                // 0x7D1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 DefaultClickTraceChannel;                          // 0x7D2(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 CurrentClickTraceChannel;                          // 0x7D3(0x1)(BlueprintVisible, Net, EditFixedSize, Transient, Config, InstancedReference, SubobjectReference)
	float                                        HitResultTraceDistance;                            // 0x7D4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, InstancedReference, SubobjectReference)
	uint16                                       SeamlessTravelCount;                               // 0x7D8(0x2)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, InstancedReference, SubobjectReference)
	uint16                                       LastCompletedSeamlessTravelCount;                  // 0x7DA(0x2)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D29[0x84];                                    // Fixing Size After Last Property  > TateDumper <
	class UInputComponent*                       InactiveStateInputComponent;                       // 0x860(0x8)(Edit, BlueprintVisible, ExportObject, Net, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_EF : 2;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bShouldPerformFullTickWhenPaused : 1;              // Mask: 0x4, PropSize: 0x10x868(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F0 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D2C[0x17];                                    // Fixing Size After Last Property  > TateDumper <
	class UTouchInterface*                       CurrentTouchInterface;                             // 0x880(0x8)(BlueprintReadOnly, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                OverridePlayerInputClass;                          // 0x888(0x8)(Edit, ConstParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D2E[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SeamlessTravelHUDClass;                            // 0x908(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class ASpectatorPawn*                        SpectatorPawn;                                     // 0x910(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_1D30[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsLocalPlayerController;                          // 0x920(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D31[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SpawnLocation;                                     // 0x928(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D32[0x178];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APlayerController* GetDefaultObj();

	struct FKey WasInputKeyJustReleased(bool ReturnValue);
	struct FKey WasInputKeyJustPressed(bool ReturnValue);
	bool ToggleSpeaking();
	class FName TestServerLevelVisibilityChange(class FName* PackageName);
	class FString SwitchLevel();
	void StreamingSourceShouldBlockOnSlowStreaming(bool ReturnValue);
	void StreamingSourceShouldActivate(bool ReturnValue);
	enum class EControllerHand StopHapticEffect();
	uint8 StartFire();
	bool SetVirtualJoystickVisibility();
	bool SetViewTargetWithBlend(float BlendTime);
	class FString SetName();
	void SetMouseLocation(int32* X, int32* Y);
	class UUserWidget* SetMouseCursorWidget(enum class EMouseCursor Cursor);
	bool SetMotionControlsEnabled();
	enum class EControllerHand SetHapticsByValue();
	bool SetDisableHaptics();
	void SetDeprecatedInputYawScale(float* NewValue);
	void SetDeprecatedInputRollScale(float* NewValue);
	void SetDeprecatedInputPitchScale(float* NewValue);
	void SetControllerLightColor(struct FColor* Color);
	bool SetCinematicMode(bool* bHidePlayer);
	class USceneComponent* SetAudioListenerOverride(struct FVector* Location, struct FRotator* Rotation);
	struct FVector SetAudioListenerAttenuationOverride();
	void ServerViewSelf(const struct FViewTargetTransitionParams& TransitionParams);
	void ServerViewPrevPlayer();
	void ServerViewNextPlayer();
	void ServerVerifyViewTarget();
	TArray<struct FUpdateLevelVisibilityLevelInfo> ServerUpdateMultipleLevelsVisibility();
	struct FUpdateLevelVisibilityLevelInfo ServerUpdateLevelVisibility();
	int32 ServerUpdateCamera();
	struct FUniqueNetIdRepl ServerUnmutePlayer();
	struct FUniqueNetIdRepl ServerUnblockPlayer();
	void ServerToggleAILogging();
	void ServerShortTimeout();
	bool ServerSetSpectatorWaiting();
	struct FRotator ServerSetSpectatorLocation();
	void ServerSendLatestAsyncPhysicsTimestamp(const struct FAsyncPhysicsTimestamp& Timestamp);
	void ServerRestartPlayer();
	int32 ServerRecvClientInputFrame(const TArray<uint8>& Data);
	void ServerPause();
	class FName ServerNotifyLoadedWorld();
	struct FUniqueNetIdRepl ServerMutePlayer();
	class FString ServerExecRPC();
	class FString ServerExec();
	void ServerCheckClientPossessionReliable();
	void ServerCheckClientPossession();
	class FString ServerChangeName();
	void ServerCamera(class FName NewMode);
	struct FUniqueNetIdRepl ServerBlockPlayer();
	class APawn* ServerAcknowledgePossession();
	void SendToConsole(const class FString& Command);
	void RestartLevel();
	void ResetControllerLightColor();
	bool ProjectWorldLocationToScreen(bool ReturnValue);
	bool PlayHapticEffect(float* Scale);
	struct FLatentActionInfo PlayDynamicForceFeedback(float Intensity, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, enum class EDynamicForceFeedbackAction* Action);
	void Pause();
	bool OnServerStartedVisualLogger();
	void OnRep_AsyncPhysicsDataComponent();
	class FString LocalTravel();
	bool K2_ClientPlayForceFeedback(class UForceFeedbackEffect** ForceFeedbackEffect, bool bLooping);
	void IsStreamingSourceEnabled(bool ReturnValue);
	struct FKey IsInputKeyDown(bool ReturnValue);
	int32 GetViewportSize(int32* SizeX);
	TArray<struct FStreamingSourceShape> GetStreamingSourceShapes();
	void GetStreamingSourcePriority(enum class EStreamingSourcePriority ReturnValue);
	struct FRotator GetStreamingSourceLocationAndRotation();
	void GetSpectatorPawn(class ASpectatorPawn* ReturnValue);
	void GetPlatformUserId(const struct FPlatformUserId& ReturnValue);
	void GetOverridePlayerInputClass(class UClass* ReturnValue);
	bool GetMousePosition(float LocationX, bool ReturnValue);
	struct FKey GetInputVectorKeyState(const struct FVector& ReturnValue);
	bool GetInputTouchState(float LocationX);
	float GetInputMouseDelta();
	void GetInputMotionState(const struct FVector& Tilt, const struct FVector& RotationRate, const struct FVector& Gravity, const struct FVector& Acceleration);
	struct FKey GetInputKeyTimeDown(float ReturnValue);
	float GetInputAnalogStickState();
	struct FKey GetInputAnalogKeyState(float ReturnValue);
	void GetHUD(class AHUD* ReturnValue);
	struct FHitResult GetHitResultUnderFingerForObjects(bool bTraceComplex, bool ReturnValue);
	struct FHitResult GetHitResultUnderFingerByChannel(enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, bool ReturnValue);
	struct FHitResult GetHitResultUnderFinger(enum class ECollisionChannel TraceChannel, bool bTraceComplex, bool ReturnValue);
	struct FHitResult GetHitResultUnderCursorForObjects(bool bTraceComplex, bool ReturnValue);
	struct FHitResult GetHitResultUnderCursorByChannel(enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, bool ReturnValue);
	struct FHitResult GetHitResultUnderCursor(enum class ECollisionChannel TraceChannel, bool bTraceComplex, bool ReturnValue);
	void GetFocalLocation(const struct FVector& ReturnValue);
	void GetDeprecatedInputYawScale(float ReturnValue);
	void GetDeprecatedInputRollScale(float ReturnValue);
	void GetDeprecatedInputPitchScale(float ReturnValue);
	void GetAsyncPhysicsDataToWrite(class UAsyncPhysicsData* ReturnValue);
	void GetAsyncPhysicsDataToConsume(class UAsyncPhysicsData* ReturnValue);
	void FOV(float* NewFOV);
	class FString EnableCheats();
	struct FVector DeprojectScreenPositionToWorld(bool ReturnValue);
	struct FVector DeprojectMousePositionToWorld(bool ReturnValue);
	class FString CopyStringToClipboard();
	struct FKey ConsoleKey();
	class FText ClientWasKicked();
	void ClientVoiceHandshakeComplete();
	TArray<struct FUpdateLevelStreamingLevelStatus> ClientUpdateMultipleLevelsStreamingStatus();
	bool ClientUpdateLevelStreamingStatus(class FName* PackageName);
	TArray<struct FUniqueNetIdRepl> ClientUnmutePlayers();
	struct FUniqueNetIdRepl ClientUnmutePlayer();
	struct FGuid ClientTravelInternal();
	struct FGuid ClientTravel();
	float ClientTeamMessage(class FName Type);
	class FName ClientStopForceFeedback(class UForceFeedbackEffect** ForceFeedbackEffect);
	bool ClientStopCameraShakesFromSource(class UCameraShakeSourceComponent** SourceComponent);
	bool ClientStopCameraShake();
	class UCameraAnim* ClientStopCameraAnim();
	void ClientStartOnlineSession();
	class UClass* ClientStartCameraShakeFromSource(class UCameraShakeSourceComponent** SourceComponent);
	bool ClientStartCameraShake(float* Scale);
	class UClass* ClientSpawnGenericCameraLensEffect();
	class UClass* ClientSpawnCameraLensEffect();
	class AActor* ClientSetViewTarget(const struct FViewTargetTransitionParams& TransitionParams);
	bool ClientSetSpectatorWaiting();
	class UClass* ClientSetHUD();
	float ClientSetForceMipLevelsToBeResident(class UMaterialInterface* Material, int32 CinematicTextureGroups);
	bool ClientSetCinematicMode();
	class FName ClientSetCameraMode();
	bool ClientSetCameraFade();
	void ClientSetBlockOnAsyncLoading();
	class FText ClientReturnToMainMenuWithTextReason();
	class FString ClientReturnToMainMenu();
	void ClientRetryClientRestart(class APawn* NewPawn);
	void ClientRestart(class APawn* NewPawn);
	void ClientReset();
	void ClientRepObjRef(class UObject** Object);
	float ClientRecvServerAckFrameDebug();
	int8 ClientRecvServerAckFrame();
	class UObject* ClientReceiveLocalizedMessage(class UClass** Message, int32* SWITCH);
	bool ClientPrestreamTextures(int32 CinematicTextureGroups);
	bool ClientPrepareMapChange();
	void ClientPlaySoundAtLocation(class USoundBase* Sound, struct FVector* Location, float* VolumeMultiplier, float* PitchMultiplier);
	void ClientPlaySound(class USoundBase* Sound, float* VolumeMultiplier, float* PitchMultiplier);
	float ClientPlayForceFeedback_Internal(class UForceFeedbackEffect** ForceFeedbackEffect);
	struct FRotator ClientPlayCameraAnim(float* Scale, float BlendInTime, float BlendOutTime, enum class ECameraShakePlaySpace Space);
	struct FUniqueNetIdRepl ClientMutePlayer();
	float ClientMessage(class FName Type);
	bool ClientIgnoreMoveInput();
	bool ClientIgnoreLookInput();
	void ClientGotoState(class FName NewState);
	bool ClientGameEnded();
	void ClientForceGarbageCollection();
	void ClientFlushLevelStreaming();
	void ClientEndOnlineSession();
	bool ClientEnableNetworkVoice();
	void ClientCorrectionAsyncPhysicsTimestamp(const struct FAsyncPhysicsTimestamp& Timestamp);
	void ClientCommitMapChange();
	void ClientClearCameraLensEffects();
	int32 ClientCapBandwidth();
	void ClientCancelPendingMapChange();
	bool ClientAddTextureStreamingLoc();
	bool ClientAckUpdateLevelVisibility(class FName* PackageName);
	int32 ClientAckTimeDilation();
	void ClearAudioListenerOverride();
	void ClearAudioListenerAttenuationOverride();
	void CanRestartPlayer(bool ReturnValue);
	void Camera(class FName NewMode);
	class APlayerController* BPSeamlessTravelTo();
	class APlayerController* BPSeamlessTravelFrom();
	void BPPostSeamlessTravel();
	class UCanvas* BPPostRender();
	TArray<class AActor*> BPGetSeamlessTravelActorList();
	bool BPClientNotifyLoadedWorld();
	float AddYawInput();
	float AddRollInput();
	float AddPitchInput();
	class UTouchInterface* ActivateTouchInterface();
};

// 0x48 (0xB00 - 0xAB8)
// Class Engine.PrimalPlayerController
class APrimalPlayerController : public APlayerController
{
public:
	uint8                                        Pad_1D9A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PreviousRotationInput;                             // 0xAC0(0x18)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_1D9B[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bLockedInputUI : 1;                                // Mask: 0x1, PropSize: 0x10xAF0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F3 : 1;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bCheatPlayer : 1;                                  // Mask: 0x4, PropSize: 0x10xAF0(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_F4 : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D9D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bShowExtendedInfoKey : 1;                          // Mask: 0x1, PropSize: 0x10xAF4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_F5 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1D9E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsAdmin : 1;                                      // Mask: 0x1, PropSize: 0x10xAF8(0x1)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_F6 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DA0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceShowMouseCursor : 1;                         // Mask: 0x1, PropSize: 0x10xAFC(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_1DA3[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalPlayerController* GetDefaultObj();

	struct FBPNetExecParams ServerProcessNetExecCommandUnreliable(class AActor* ForActor);
	struct FBPNetExecParams ServerProcessNetExecCommand(class AActor* ForActor);
	void PropertyServerToClientsUnreliable(class AActor* ActorToRep, class FName PropertyName, const TArray<uint8>& ReplicationData);
	void PropertyServerToClients(class AActor* ActorToRep, class FName PropertyName, const TArray<uint8>& ReplicationData);
	void NetConnectionHasActiveActor(class AActor* AnActor, bool ReturnValue);
	void HandleRespawned(class APawn* NewPawn, bool IsFirstSpawn);
	bool ClientTeleportSucceeded(const struct FVector& TeleportLoc, const struct FRotator& TeleportRot);
	bool ClientSendNetExecCommandToServer(class AActor* ForActor);
	class FName ClientProcessSimpleNetExecCommandUnreliableBP(class AActor* ForActor);
	class FName ClientProcessSimpleNetExecCommandBP(class AActor* ForActor);
	struct FBPNetExecParams ClientProcessNetExecCommandUnreliableBP(class AActor* ForActor);
	struct FNetExecParams ClientProcessNetExecCommandUnreliable(class AActor* ForActor);
	struct FBPNetExecParams ClientProcessNetExecCommandBP(class AActor* ForActor);
	struct FNetExecParams ClientProcessNetExecCommand(class AActor* ForActor);
	void ClientNotifyRespawned(class APawn* NewPawn, bool IsFirstSpawn);
	void ClientNotifyReconnected(class APawn* NewPawn);
	void BPServerRestartPlayer();
	void BPGetAimedUseActor(class AActor* ReturnValue);
};

// 0xC8 (0x590 - 0x4C8)
// Class Engine.GameStateBase
class AGameStateBase : public AInfo
{
public:
	class UClass*                                GameModeClass;                                     // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, SubobjectReference)
	class AGameModeBase*                         AuthorityGameMode;                                 // 0x4D0(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                SpectatorClass;                                    // 0x4D8(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	TArray<class APlayerState*>                  PlayerArray;                                       // 0x4E0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bReplicatedHasBegunPlay;                           // 0x4F0(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DE1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReplicatedWorldTimeSeconds;                        // 0x4F4(0x4)(ConstParm, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	double                                       ReplicatedWorldTimeSecondsDouble;                  // 0x4F8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ServerWorldTimeSecondsDelta;                       // 0x500(0x4)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ServerWorldTimeSecondsUpdateFrequency;             // 0x504(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DE2[0x68];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAnyPostProcessVolumeEntered;                     // 0x570(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnAnyPostProcessVolumeLeft;                        // 0x580(0x10)(BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AGameStateBase* GetDefaultObj();

	int32 Semaphore_TryGrab(class FName* SemaphoreName, class AActor* InObject, bool ReturnValue);
	void Semaphore_Release(class FName* SemaphoreName, class AActor* InObject, bool ReturnValue);
	void OnRep_SpectatorClass();
	void OnRep_ReplicatedWorldTimeSecondsDouble();
	void OnRep_ReplicatedWorldTimeSeconds();
	void OnRep_ReplicatedHasBegunPlay();
	void OnRep_GameModeClass();
	void HasMatchStarted(bool ReturnValue);
	void HasMatchEnded(bool ReturnValue);
	void HasBegunPlay(bool ReturnValue);
	void GetServerWorldTimeSeconds(double ReturnValue);
	void GetPlayerStartTime(class AController** Controller, float ReturnValue);
	void GetPlayerRespawnDelay(class AController** Controller, float ReturnValue);
};

// 0x20 (0x5B0 - 0x590)
// Class Engine.GameState
class AGameState : public AGameStateBase
{
public:
	class FName                                  MatchState;                                        // 0x590(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  PreviousMatchState;                                // 0x598(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ElapsedTime;                                       // 0x5A0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_1DE9[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AGameState* GetDefaultObj();

	void OnRep_MatchState();
	void OnRep_ElapsedTime();
};

// 0x48 (0x5B0 - 0x568)
// Class Engine.GameMode
class AGameMode : public AGameModeBase
{
public:
	class FName                                  MatchState;                                        // 0x568(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bDelayedStart : 1;                                 // Mask: 0x1, PropSize: 0x10x570(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F7 : 7;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1DFE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumSpectators;                                     // 0x574(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumPlayers;                                        // 0x578(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumBots;                                           // 0x57C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinRespawnDelay;                                   // 0x580(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumTravellingPlayers;                              // 0x584(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                EngineMessageClass;                                // 0x588(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APlayerState*>                  InactivePlayerArray;                               // 0x590(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InactivePlayerStateLifeSpan;                       // 0x5A0(0x4)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxInactivePlayers;                                // 0x5A4(0x4)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHandleDedicatedServerReplays;                     // 0x5A8(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E03[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AGameMode* GetDefaultObj();

	void StartMatch();
	class FString Say();
	void RestartGame();
	void ReadyToStartMatch(bool ReturnValue);
	void ReadyToEndMatch(bool ReturnValue);
	void K2_OnSetMatchState(class FName NewState);
	void IsMatchInProgress(bool ReturnValue);
	void GetMatchState(class FName ReturnValue);
	void EndMatch();
	void AbortMatch();
};

// 0x20 (0x5D0 - 0x5B0)
// Class Engine.PrimalGameMode
class APrimalGameMode : public AGameMode
{
public:
	uint8                                        Pad_1E06[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APrimalGameMode* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.DestructibleBaseActor
class ADestructibleBaseActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ADestructibleBaseActor* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.Light
class ALight : public AActor
{
public:
	class ULightComponent*                       LightComponent;                                    // 0x4C8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x4D0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_1E1F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALight* GetDefaultObj();

	void ToggleEnabled();
	void SetLightFunctionScale(struct FVector* NewLightFunctionScale);
	void SetLightFunctionMaterial(class UMaterialInterface** NewLightFunctionMaterial);
	void SetLightFunctionFadeDistance(float* NewLightFunctionFadeDistance);
	void SetLightColor(const struct FLinearColor& NewLightColor);
	void SetEnabled(bool bSetEnabled);
	void SetCastShadows(bool* bNewValue);
	void SetBrightness(float NewBrightness);
	void SetAffectTranslucentLighting(bool* bNewValue);
	void OnRep_bEnabled();
	void IsEnabled(bool ReturnValue);
	void GetLightColor(const struct FLinearColor& ReturnValue);
	void GetBrightness(float ReturnValue);
};

// 0x18 (0x40 - 0x28)
// Class Engine.DamageType
class UDamageType : public UObject
{
public:
	uint8                                        bIsPassiveDamage : 1;                              // Mask: 0x1, PropSize: 0x10x28(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bCausedByWorld : 1;                                // Mask: 0x2, PropSize: 0x10x28(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bScaleMomentumByMass : 1;                          // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRadialDamageVelChange : 1;                        // Mask: 0x8, PropSize: 0x10x28(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_F9 : 4;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E22[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DamageImpulse;                                     // 0x2C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DestructibleImpulse;                               // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DestructibleDamageSpreadScale;                     // 0x34(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageFalloff;                                     // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1E24[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDamageType* GetDefaultObj();

};

// 0x28 (0x68 - 0x40)
// Class Engine.PrimalDamageType
class UPrimalDamageType : public UDamageType
{
public:
	uint8                                        bIsPhysicalDamage : 1;                             // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAllowPerBoneDamageAdjustment : 1;                 // Mask: 0x2, PropSize: 0x10x40(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bImpulseAffectsLivePawns : 1;                      // Mask: 0x4, PropSize: 0x10x40(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_FA : 5;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E29[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseMinimumZPercent;                            // 0x44(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DestructibleImpulseScale;                          // 0x48(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ImpulseRagdollScale;                               // 0x4C(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultImpulse;                                    // 0x50(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PointDamageArmorEffectiveness;                     // 0x54(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GeneralDamageArmorEffectiveness;                   // 0x58(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ArmorDurabilityDegradationMultiplier;              // 0x5C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RadialPartiallyObstructedDamagePercent;            // 0x60(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E2E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalDamageType* GetDefaultObj();

};

// 0xB0 (0x578 - 0x4C8)
// Class Engine.MatineeActor
class AMatineeActor : public AActor
{
public:
	class UInterpData*                           MatineeData;                                       // 0x4C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MatineeControllerName;                             // 0x4D0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PlayRate;                                          // 0x4D8(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bPlayOnLevelLoad : 1;                              // Mask: 0x1, PropSize: 0x10x4DC(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceStartPos : 1;                                // Mask: 0x2, PropSize: 0x10x4DC(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_FF : 6;                                     // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E4E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceStartPosition;                                // 0x4E0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bLooping : 1;                                      // Mask: 0x1, PropSize: 0x10x4E4(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        bRewindOnPlay : 1;                                 // Mask: 0x2, PropSize: 0x10x4E4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bNoResetOnRewind : 1;                              // Mask: 0x4, PropSize: 0x10x4E4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRewindIfAlreadyPlaying : 1;                       // Mask: 0x8, PropSize: 0x10x4E4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisableRadioFilter : 1;                           // Mask: 0x10, PropSize: 0x10x4E4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientSideOnly : 1;                               // Mask: 0x20, PropSize: 0x10x4E4(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSkipUpdateIfNotVisible : 1;                       // Mask: 0x40, PropSize: 0x10x4E4(0x1)(Edit, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsSkippable : 1;                                  // Mask: 0x80, PropSize: 0x10x4E4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PreferredSplitScreenNum;                           // 0x4E8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDisableMovementInput : 1;                         // Mask: 0x1, PropSize: 0x10x4EC(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDisableLookAtInput : 1;                           // Mask: 0x2, PropSize: 0x10x4EC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHidePlayer : 1;                                   // Mask: 0x4, PropSize: 0x10x4EC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHideHud : 1;                                      // Mask: 0x8, PropSize: 0x10x4EC(0x1)(BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_103 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E57[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInterpGroupActorInfo>         GroupActorInfos;                                   // 0x4F0(0x10)(BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bShouldShowGore : 1;                               // Mask: 0x1, PropSize: 0x10x500(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_105 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E5A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UInterpGroupInst*>              GroupInst;                                         // 0x508(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FCameraCutInfo>                CameraCuts;                                        // 0x518(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsPlaying : 1;                                    // Mask: 0x1, PropSize: 0x10x528(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bReversePlayback : 1;                              // Mask: 0x2, PropSize: 0x10x528(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPaused : 1;                                       // Mask: 0x4, PropSize: 0x10x528(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bPendingStop : 1;                                  // Mask: 0x8, PropSize: 0x10x528(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_107 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E5E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InterpPosition;                                    // 0x52C(0x4)(Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E5F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        ReplicationForceIsPlaying;                         // 0x534(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E61[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPlay;                                            // 0x538(0x10)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnStop;                                            // 0x548(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPause;                                           // 0x558(0x10)(OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E65[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bIsGameplayRelevant : 1;                           // Mask: 0x1, PropSize: 0x10x570(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bDedicatedServerUpdateInterpolations : 1;          // Mask: 0x2, PropSize: 0x10x570(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bReplicateGroupInfos : 1;                          // Mask: 0x4, PropSize: 0x10x570(0x1)(Edit, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUseGameStatePlayRate : 1;                         // Mask: 0x8, PropSize: 0x10x570(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientDontPlayMatineeIfCompleted : 1;             // Mask: 0x10, PropSize: 0x10x570(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E66[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AMatineeActor* GetDefaultObj();

	void Stop();
	void SetPosition(float NewPosition, bool bJump, bool* bForceJumpFromBeginningForEvents, bool* bSkipMatineeUpdate);
	void SetLoopingState(bool* bNewLooping);
	void Reverse();
	void Play(float* OverrideSetPosition, bool* bOverridePositionJump);
	void Pause();
	void OnRep_IsPlayingMatinee();
	void InitClientMatinee();
	bool EnableGroupByName();
	void ChangePlaybackDirection();
	class FName AddActorToGroup(class AActor** TheGroupActor);
};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.Note
class ANote : public AActor
{
public:

	static class UClass* StaticClass();
	static class ANote* GetDefaultObj();

};

// 0x130 (0x1A0 - 0x70)
// Class Engine.ParticleSystem
class UParticleSystem : public UFXSystemAsset
{
public:
	float                                        UpdateTime_FPS;                                    // 0x70(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UpdateTime_Delta;                                  // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WarmupTime;                                        // 0x78(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        WarmupTickRate;                                    // 0x7C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleEmitter*>              Emitters;                                          // 0x80(0x10)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class UParticleSystemComponent*              PreviewComponent;                                  // 0x90(0x8)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class UInterpCurveEdSetup*                   CurveEdSetup;                                      // 0x98(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LODDistanceCheckTime;                              // 0xA0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        MacroUVRadius;                                     // 0xA4(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	TArray<float>                                LODDistances;                                      // 0xA8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FParticleSystemLOD>            LODSettings;                                       // 0xB8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, GlobalConfig)
	struct FBox                                  FixedRelativeBoundingBox;                          // 0xC8(0x38)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SecondsBeforeInactive;                             // 0x100(0x4)(ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Delay;                                             // 0x104(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, DuplicateTransient)
	float                                        DelayLow;                                          // 0x108(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrientZAxisTowardCamera : 1;                      // Mask: 0x1, PropSize: 0x10x10C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowLOD : 1;                                     // Mask: 0x2, PropSize: 0x10x10C(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFixedRelativeBoundingBox : 1;                  // Mask: 0x4, PropSize: 0x10x10C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldResetPeakCounts : 1;                        // Mask: 0x8, PropSize: 0x10x10C(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasPhysics : 1;                                   // Mask: 0x10, PropSize: 0x10x10C(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRealtimeThumbnail : 1;                         // Mask: 0x20, PropSize: 0x10x10C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ThumbnailImageOutOfDate : 1;                       // Mask: 0x40, PropSize: 0x10x10C(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_10A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_10B : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bUseDelayRange : 1;                                // Mask: 0x2, PropSize: 0x10x10D(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowManagedTicking : 1;                          // Mask: 0x4, PropSize: 0x10x10D(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDeactivate : 1;                               // Mask: 0x8, PropSize: 0x10x10D(0x1)(Edit, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        bRegenerateLODDuplicate : 1;                       // Mask: 0x10, PropSize: 0x10x10D(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_10C : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EParticleSystemUpdateMode         SystemUpdateMode;                                  // 0x10E(0x1)(Edit, ConstParm, DisableEditOnTemplate, EditConst, GlobalConfig)
	enum class EParticleSystemLODMethod          LODMethod;                                         // 0x10F(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig)
	enum class EParticleSystemInsignificanceReaction InsignificantReaction;                             // 0x110(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleSystemOcclusionBoundsMethod OcclusionBoundsMethod;                             // 0x111(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E81[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EParticleSignificanceLevel        MaxSignificanceLevel;                              // 0x113(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       MinTimeBetweenTicks;                               // 0x114(0x4)(Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InsignificanceDelay;                               // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E84[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               MacroUVPosition;                                   // 0x120(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBox                                  CustomOcclusionBounds;                             // 0x138(0x38)(Edit, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLODSoloTrack>                 SoloTracking;                                      // 0x170(0x10)(ConstParm, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNamedEmitterMaterial>         NamedMaterialSlots;                                // 0x180(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E87[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bLocalSpaceUsesParticleBase : 1;                   // Mask: 0x1, PropSize: 0x10x194(0x1)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceHighQualityEmitter : 1;                      // Mask: 0x2, PropSize: 0x10x194(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForcePreventInactiveLoopReset : 1;                // Mask: 0x4, PropSize: 0x10x194(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_10E : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1E8A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideMaxDrawDistance;                           // 0x198(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomTimeDilation;                                // 0x19C(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleSystem* GetDefaultObj();

	void ContainsEmitterType(class UClass* TypeData, bool ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class Engine.ParticleModule
class UParticleModule : public UObject
{
public:
	uint8                                        bSpawnModule : 1;                                  // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUpdateModule : 1;                                 // Mask: 0x2, PropSize: 0x10x28(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bFinalUpdateModule : 1;                            // Mask: 0x4, PropSize: 0x10x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bUpdateForGPUEmitter : 1;                          // Mask: 0x8, PropSize: 0x10x28(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCurvesAsColor : 1;                                // Mask: 0x10, PropSize: 0x10x28(0x1)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        b3DDrawMode : 1;                                   // Mask: 0x20, PropSize: 0x10x28(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupported3DDrawMode : 1;                          // Mask: 0x40, PropSize: 0x10x28(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x80, PropSize: 0x10x28(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        bEditable : 1;                                     // Mask: 0x1, PropSize: 0x10x29(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        LODDuplicate : 1;                                  // Mask: 0x2, PropSize: 0x10x29(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSupportsRandomSeed : 1;                           // Mask: 0x4, PropSize: 0x10x29(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bRequiresLoopingNotification : 1;                  // Mask: 0x8, PropSize: 0x10x29(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_10F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        LODValidity;                                       // 0x2A(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E9A[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModule* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.PrimalAssetsBase
class UPrimalAssetsBase : public UObject
{
public:
	uint8                                        Pad_1E9D[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalAssetsBase* GetDefaultObj();

};

// 0x348 (0x8D0 - 0x588)
// Class Engine.Character
class ACharacter : public APrimalPawn
{
public:
	class USkeletalMeshComponent*                Mesh;                                              // 0x588(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UCharacterMovementComponent*           CharacterMovement;                                 // 0x590(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x598(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, SubobjectReference)
	struct FBasedMovementInfo                    BasedMovement;                                     // 0x5A0(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FReplicatedBasedMovementInfo          ReplicatedBasedMovement;                           // 0x5F0(0x58)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AnimRootMotionTranslationScale;                    // 0x648(0x4)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FBD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BaseTranslationOffset;                             // 0x650(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FBE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 BaseRotationOffset;                                // 0x670(0x20)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       ReplicatedServerLastTransformUpdateTimeStamp;      // 0x690(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReplayLastTransformUpdateTimeStamp;                // 0x698(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        ReplicatedMovementMode;                            // 0x69C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInBaseReplication;                                // 0x69D(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FC2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrouchedEyeHeight;                                 // 0x6A0(0x4)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bIsCrouched : 1;                                   // Mask: 0x1, PropSize: 0x10x6A4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bProxyIsJumpForceApplied : 1;                      // Mask: 0x2, PropSize: 0x10x6A4(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_11F : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPressedJump : 1;                                  // Mask: 0x8, PropSize: 0x10x6A4(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientUpdating : 1;                               // Mask: 0x10, PropSize: 0x10x6A4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientWasFalling : 1;                             // Mask: 0x20, PropSize: 0x10x6A4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientResimulateRootMotion : 1;                   // Mask: 0x40, PropSize: 0x10x6A4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientResimulateRootMotionSources : 1;            // Mask: 0x80, PropSize: 0x10x6A4(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bSimGravityDisabled : 1;                           // Mask: 0x1, PropSize: 0x10x6A5(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bClientCheckEncroachmentOnNetUpdate : 1;           // Mask: 0x2, PropSize: 0x10x6A5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bServerMoveIgnoreRootMotion : 1;                   // Mask: 0x4, PropSize: 0x10x6A5(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWasJumping : 1;                                   // Mask: 0x8, PropSize: 0x10x6A5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_120 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1FC7[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        JumpKeyHoldTime;                                   // 0x6A8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        JumpOfWaterKeyHoldTime;                            // 0x6AC(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        JumpForceTimeRemaining;                            // 0x6B0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProxyJumpForceStartedTime;                         // 0x6B4(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        JumpMaxHoldTime;                                   // 0x6B8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        JumpMaxCount;                                      // 0x6BC(0x4)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        JumpCurrentCount;                                  // 0x6C0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        JumpCurrentCountPreJump;                           // 0x6C4(0x4)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FC8[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnReachedJumpApex;                                 // 0x6D0(0x10)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            LandedDelegate;                                    // 0x6E0(0x10)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            MovementModeChangedDelegate;                       // 0x6F0(0x10)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnCharacterMovementUpdated;                        // 0x700(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRootMotionSourceGroup                SavedRootMotion;                                   // 0x710(0x48)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FC9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRootMotionMovementParams             ClientRootMotionParams;                            // 0x760(0x70)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FSimulatedRootMotionReplicatedMove> RootMotionRepMoves;                                // 0x7D0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRepRootMotionMontage                 RepRootMotion;                                     // 0x7E0(0xD8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FCB[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACharacter* GetDefaultObj();

	void UpdateLastClientForceUpdateMovementTime();
	void UnCrouch(bool* bClientSimulation);
	void StopJumping();
	void StopAnimMontage(class UAnimMontage* AnimMontage);
	void ServerMovePacked(struct FCharacterServerMovePackedBits* PackedBits);
	void ServerMoveOld(float* OldTimeStamp, struct FVector_NetQuantize10* OldAccel, uint8* OldMoveFlags);
	uint32 ServerMoveNoBase(float Timestamp, struct FVector_NetQuantize10* InAccel, struct FVector_NetQuantize100* ClientLoc, uint8* CompressedMoveFlags, uint8* ClientRoll, uint8* ClientMovementMode);
	uint32 ServerMoveDualNoBase(float* TimeStamp0, struct FVector_NetQuantize10* InAccel0, uint8* PendingFlags, uint32* View0, float Timestamp, struct FVector_NetQuantize10* InAccel, struct FVector_NetQuantize100* ClientLoc, uint8* NewFlags, uint8* ClientRoll, uint8* ClientMovementMode);
	uint32 ServerMoveDualHybridRootMotion(float* TimeStamp0, struct FVector_NetQuantize10* InAccel0, uint8* PendingFlags, uint32* View0, float Timestamp, struct FVector_NetQuantize10* InAccel, struct FVector_NetQuantize100* ClientLoc, uint8* NewFlags, uint8* ClientRoll, class UPrimitiveComponent** ClientMovementBase, class FName* ClientBaseBoneName, uint8* ClientMovementMode);
	uint32 ServerMoveDual(float* TimeStamp0, struct FVector_NetQuantize10* InAccel0, uint8* PendingFlags, uint32* View0, float Timestamp, struct FVector_NetQuantize10* InAccel, struct FVector_NetQuantize100* ClientLoc, uint8* NewFlags, uint8* ClientRoll, class UPrimitiveComponent** ClientMovementBase, class FName* ClientBaseBoneName, uint8* ClientMovementMode);
	uint32 ServerMove(float Timestamp, struct FVector_NetQuantize10* InAccel, struct FVector_NetQuantize100* ClientLoc, uint8* CompressedMoveFlags, uint8* ClientRoll, class UPrimitiveComponent** ClientMovementBase, class FName* ClientBaseBoneName, uint8* ClientMovementMode);
	void RootMotionDebugClientPrintOnScreen(const class FString& InString);
	float PlayAnimMontage(class UAnimMontage* AnimMontage, class FName* StartSectionName, bool* bForceTickPoseAndServerUpdateMesh, bool* bForceTickPoseOnServer, float BlendInTime, float BlendOutTime, float ReturnValue);
	void OnWalkingOffLedge(struct FVector* PreviousFloorImpactNormal, struct FVector* PreviousFloorContactNormal, struct FVector* PreviousLocation, float* TimeDelta);
	void OnRep_RootMotion();
	void OnRep_ReplicatedBasedMovement();
	void OnRep_ReplayLastTransformUpdateTimeStamp();
	void OnRep_IsCrouched();
	struct FVector OnLaunched(bool* bXYOverride, bool* bZOverride);
	struct FHitResult OnLanded();
	void OnJumped();
	struct FVector LaunchCharacter(bool* bXYOverride, bool* bZOverride);
	float K2_UpdateCustomMovement();
	void K2_OnStartCrouch(float* HalfHeightAdjust, float* ScaledHalfHeightAdjust);
	uint8 K2_OnMovementModeChanged(uint8* PrevCustomMode);
	void K2_OnEndCrouch(float* HalfHeightAdjust, float* ScaledHalfHeightAdjust);
	void Jump();
	void IsPlayingRootMotion(bool ReturnValue);
	void IsPlayingNetworkedRootMotionMontage(bool ReturnValue);
	void IsJumpProvidingForce(bool ReturnValue);
	void HasAnyRootMotion(bool ReturnValue);
	void GetCurrentMontage(class UAnimMontage* ReturnValue);
	void GetBaseTranslationOffset(const struct FVector& ReturnValue);
	void GetBaseRotationOffsetRotator(const struct FRotator& ReturnValue);
	void GetAnimRootMotionTranslationScale(float ReturnValue);
	void Crouch(bool* bClientSimulation);
	uint8 ClientVeryShortAdjustPosition(float Timestamp);
	void ClientMoveResponsePacked(struct FCharacterMoveResponsePackedBits* PackedBits);
	void ClientForceUpdateMovement(struct FVector* NewLocation, const struct FVector& NewVelocity);
	void ClientCheatWalk();
	void ClientCheatGhost();
	void ClientCheatFly();
	uint8 ClientAdjustRootMotionSourcePosition(float Timestamp, const struct FRootMotionSourceGroup& ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, class FName ServerBoneName);
	uint8 ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, class FName ServerBoneName);
	uint8 ClientAdjustPosition(float Timestamp, struct FVector* NewVel);
	void ClientAckGoodMove(float Timestamp);
	void CanJumpInternal(bool ReturnValue);
	void CanJump(bool ReturnValue);
	void CanCrouch(bool ReturnValue);
	void CacheInitialMeshOffset(const struct FVector& MeshRelativeLocation, const struct FRotator& MeshRelativeRotation);
};

// 0x58 (0x520 - 0x4C8)
// Class Engine.Emitter
class AEmitter : public AActor
{
public:
	class UParticleSystemComponent*              ParticleSystemComponent;                           // 0x4C8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, GlobalConfig, InstancedReference)
	uint8                                        bDestroyOnSystemFinish : 1;                        // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	uint8                                        bPostUpdateTickGroup : 1;                          // Mask: 0x2, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bCurrentlyActive : 1;                              // Mask: 0x4, PropSize: 0x10x4D0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_122 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1FEA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnParticleSpawn;                                   // 0x4D8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleBurst;                                   // 0x4E8(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleDeath;                                   // 0x4F8(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleCollide;                                 // 0x508(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bForceOnDediServer : 1;                            // Mask: 0x1, PropSize: 0x10x518(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        BitPad_123 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1FEB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         OmitHaptics;                                       // 0x51C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FEC[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AEmitter* GetDefaultObj();

	void ToggleActive();
	struct FVector SetVectorParameter(class FName ParameterName);
	class UParticleSystem* SetTemplate();
	class UMaterialInterface* SetMaterialParameter(class FName ParameterName);
	float SetFloatParameter(class FName ParameterName);
	struct FLinearColor SetColorParameter(class FName ParameterName);
	class AActor* SetActorParameter(class FName ParameterName);
	void OnRep_bCurrentlyActive();
	void OnParticleSystemFinished(class UParticleSystemComponent** FinishedComponent);
	void IsActive(bool ReturnValue);
	void Deactivate();
	void Activate();
};

// 0x7B8 (0xC80 - 0x4C8)
// Class Engine.CameraActor
class ACameraActor : public AActor
{
public:
	enum class EAutoReceiveInput                 AutoActivateForPlayer;                             // 0x4C8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_1FF4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UCameraComponent*                      CameraComponent;                                   // 0x4D0(0x8)(Edit, BlueprintVisible, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class USceneComponent*                       SceneComponent;                                    // 0x4D8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_1FF5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bConstrainAspectRatio : 1;                         // Mask: 0x1, PropSize: 0x10x4E8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_124 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_1FF6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AspectRatio;                                       // 0x4EC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        FOVAngle;                                          // 0x4F0(0x4)(ExportObject, EditFixedSize, Config, SubobjectReference)
	float                                        PostProcessBlendWeight;                            // 0x4F4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1FF7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x500(0x780)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst)

	static class UClass* StaticClass();
	static class ACameraActor* GetDefaultObj();

	void GetAutoActivatePlayerIndex(int32 ReturnValue);
};

// 0xE08 (0xF78 - 0x170)
// Class Engine.CharacterMovementComponent
class UCharacterMovementComponent : public UPawnMovementComponent
{
public:
	uint8                                        Pad_208A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class ACharacter*                            CharacterOwner;                                    // 0x180(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        GravityScale;                                      // 0x188(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxStepHeight;                                     // 0x18C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        JumpZVelocity;                                     // 0x190(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        JumpOffJumpZFactor;                                // 0x194(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_208D[0x1C];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        WalkableFloorAngle;                                // 0x1B4(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WalkableFloorZ;                                    // 0x1B8(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     MovementMode;                                      // 0x1BC(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CustomMovementMode;                                // 0x1BD(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class ENetworkSmoothingMode             NetworkSmoothingMode;                              // 0x1BE(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2091[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GroundFriction;                                    // 0x1C0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_2093[0x44];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxWalkSpeed;                                      // 0x208(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MaxWalkSpeedCrouched;                              // 0x20C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxSwimSpeed;                                      // 0x210(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MaxFlySpeed;                                       // 0x214(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MaxCustomMovementSpeed;                            // 0x218(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAcceleration;                                   // 0x21C(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MinAnalogWalkSpeed;                                // 0x220(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BrakingFrictionFactor;                             // 0x224(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        BrakingFriction;                                   // 0x228(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	float                                        BrakingSubStepTime;                                // 0x22C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BrakingDecelerationWalking;                        // 0x230(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        BrakingDecelerationFalling;                        // 0x234(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BrakingDecelerationSwimming;                       // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        BrakingDecelerationFlying;                         // 0x23C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AirControl;                                        // 0x240(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AirControlBoostMultiplier;                         // 0x244(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AirControlBoostVelocityThreshold;                  // 0x248(0x4)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        FallingLateralFriction;                            // 0x24C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CrouchedHalfHeight;                                // 0x250(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Buoyancy;                                          // 0x254(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        PerchRadiusThreshold;                              // 0x258(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PerchAdditionalHeight;                             // 0x25C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              RotationRate;                                      // 0x260(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bUseSeparateBrakingFriction : 1;                   // Mask: 0x1, PropSize: 0x10x278(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bApplyGravityWhileJumping : 1;                     // Mask: 0x2, PropSize: 0x10x278(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseControllerDesiredRotation : 1;                 // Mask: 0x4, PropSize: 0x10x278(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrientRotationToMovement : 1;                     // Mask: 0x8, PropSize: 0x10x278(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bSweepWhileNavWalking : 1;                         // Mask: 0x10, PropSize: 0x10x278(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_12C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bMovementInProgress : 1;                           // Mask: 0x40, PropSize: 0x10x278(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableScopedMovementUpdates : 1;                  // Mask: 0x80, PropSize: 0x10x278(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableServerDualMoveScopedMovementUpdates : 1;    // Mask: 0x1, PropSize: 0x10x279(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceMaxAccel : 1;                                // Mask: 0x2, PropSize: 0x10x279(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRunPhysicsWithNoController : 1;                   // Mask: 0x4, PropSize: 0x10x279(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNextFloorCheck : 1;                          // Mask: 0x8, PropSize: 0x10x279(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShrinkProxyCapsule : 1;                           // Mask: 0x10, PropSize: 0x10x279(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanWalkOffLedges : 1;                             // Mask: 0x20, PropSize: 0x10x279(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanWalkOffLedgesWhenCrouching : 1;                // Mask: 0x40, PropSize: 0x10x279(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_12D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_12E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNetworkSkipProxyPredictionOnNetUpdate : 1;        // Mask: 0x2, PropSize: 0x10x27A(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetworkAlwaysReplicateTransformUpdateTimestamp : 1; // Mask: 0x4, PropSize: 0x10x27A(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeferUpdateMoveComponent : 1;                     // Mask: 0x8, PropSize: 0x10x27A(0x1)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablePhysicsInteraction : 1;                     // Mask: 0x10, PropSize: 0x10x27A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTouchForceScaledToMass : 1;                       // Mask: 0x20, PropSize: 0x10x27A(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPushForceScaledToMass : 1;                        // Mask: 0x40, PropSize: 0x10x27A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPushForceUsingZOffset : 1;                        // Mask: 0x80, PropSize: 0x10x27A(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScalePushForceToVelocity : 1;                     // Mask: 0x1, PropSize: 0x10x27B(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_12F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_20A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       DeferredUpdatedMoveComponent;                      // 0x280(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxOutOfWaterStepHeight;                           // 0x288(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        OutOfWaterZ;                                       // 0x28C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Mass;                                              // 0x290(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        StandingDownwardForceScale;                        // 0x294(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        InitialPushForceFactor;                            // 0x298(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PushForceFactor;                                   // 0x29C(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        PushForcePointZOffsetFactor;                       // 0x2A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        TouchForceFactor;                                  // 0x2A4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTouchForce;                                     // 0x2A8(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTouchForce;                                     // 0x2AC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        RepulsionForce;                                    // 0x2B0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20A7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Acceleration;                                      // 0x2B8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FQuat                                 LastUpdateRotation;                                // 0x2D0(0x20)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastUpdateLocation;                                // 0x2F0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LastUpdateVelocity;                                // 0x308(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       ServerLastTransformUpdateTimeStamp;                // 0x320(0x8)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       ServerLastClientGoodMoveAckTime;                   // 0x328(0x8)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       ServerLastClientAdjustmentTime;                    // 0x330(0x8)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PendingImpulseToApply;                             // 0x338(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PendingForceToApply;                               // 0x350(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AnalogInputModifier;                               // 0x368(0x4)(Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20AC[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MaxSimulationTimeStep;                             // 0x380(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	int32                                        MaxSimulationIterations;                           // 0x384(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	int32                                        MaxJumpApexAttemptsPerSimulation;                  // 0x388(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDepenetrationWithGeometry;                      // 0x38C(0x4)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDepenetrationWithGeometryAsProxy;               // 0x390(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDepenetrationWithPawn;                          // 0x394(0x4)(Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDepenetrationWithPawnAsProxy;                   // 0x398(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkSimulatedSmoothLocationTime;                // 0x39C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkSimulatedSmoothRotationTime;                // 0x3A0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerNetworkSimulatedSmoothLocationTime;    // 0x3A4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ListenServerNetworkSimulatedSmoothRotationTime;    // 0x3A8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetProxyShrinkRadius;                              // 0x3AC(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetProxyShrinkHalfHeight;                          // 0x3B0(0x4)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkMaxSmoothUpdateDistance;                    // 0x3B4(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkNoSmoothUpdateDistance;                     // 0x3B8(0x4)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkMinTimeBetweenClientAckGoodMoves;           // 0x3BC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkMinTimeBetweenClientAdjustments;            // 0x3C0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x3C4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NetworkLargeClientCorrectionDistance;              // 0x3C8(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        LedgeCheckThreshold;                               // 0x3CC(0x4)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        JumpOutOfWaterPitch;                               // 0x3D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20B0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FFindFloorResult                      CurrentFloor;                                      // 0x3D8(0x100)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     DefaultLandMovementMode;                           // 0x4D8(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     DefaultWaterMovementMode;                          // 0x4D9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     GroundMovementMode;                                // 0x4DA(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20B2[0x9];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMaintainHorizontalGroundVelocity : 1;             // Mask: 0x1, PropSize: 0x10x4E4(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpartBaseVelocityX : 1;                          // Mask: 0x2, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpartBaseVelocityY : 1;                          // Mask: 0x4, PropSize: 0x10x4E4(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpartBaseVelocityZ : 1;                          // Mask: 0x8, PropSize: 0x10x4E4(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bImpartBaseAngularVelocity : 1;                    // Mask: 0x10, PropSize: 0x10x4E4(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bJustTeleported : 1;                               // Mask: 0x20, PropSize: 0x10x4E4(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetworkUpdateReceived : 1;                        // Mask: 0x40, PropSize: 0x10x4E4(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNetworkMovementModeChanged : 1;                   // Mask: 0x80, PropSize: 0x10x4E4(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreClientMovementErrorChecksAndCorrection : 1; // Mask: 0x1, PropSize: 0x10x4E5(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bServerAcceptClientAuthoritativePosition : 1;      // Mask: 0x2, PropSize: 0x10x4E5(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNotifyApex : 1;                                   // Mask: 0x4, PropSize: 0x10x4E5(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCheatFlying : 1;                                  // Mask: 0x8, PropSize: 0x10x4E5(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToCrouch : 1;                                // Mask: 0x10, PropSize: 0x10x4E5(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCrouchMaintainsBaseLocation : 1;                  // Mask: 0x20, PropSize: 0x10x4E5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bIgnoreBaseRotation : 1;                           // Mask: 0x40, PropSize: 0x10x4E5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFastAttachedMove : 1;                             // Mask: 0x80, PropSize: 0x10x4E5(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckFloor : 1;                             // Mask: 0x1, PropSize: 0x10x4E6(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseFlatBaseForFloorChecks : 1;                    // Mask: 0x2, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPerformingJumpOff : 1;                            // Mask: 0x4, PropSize: 0x10x4E6(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWantsToLeaveNavWalking : 1;                       // Mask: 0x8, PropSize: 0x10x4E6(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRVOAvoidance : 1;                              // Mask: 0x10, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequestedMoveUseAcceleration : 1;                 // Mask: 0x20, PropSize: 0x10x4E6(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_130 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWasSimulatingRootMotion : 1;                      // Mask: 0x80, PropSize: 0x10x4E6(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowPhysicsRotationDuringAnimRootMotion : 1;     // Mask: 0x1, PropSize: 0x10x4E7(0x1)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_131 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        FormerBaseVelocityDecayHalfLife;                   // 0x4E8(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasRequestedVelocity : 1;                         // Mask: 0x1, PropSize: 0x10x4EC(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRequestedMoveWithMaxSpeed : 1;                    // Mask: 0x2, PropSize: 0x10x4EC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_132 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_20B8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceModifyDesiredRotation : 1;                   // Mask: 0x1, PropSize: 0x10x4F0(0x1)(ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_133 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_20B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bWasAvoidanceUpdated : 1;                          // Mask: 0x1, PropSize: 0x10x4F4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_134 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bProjectNavMeshWalking : 1;                        // Mask: 0x8, PropSize: 0x10x4F4(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bProjectNavMeshOnBothWorldChannels : 1;            // Mask: 0x10, PropSize: 0x10x4F4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_135 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_20BA[0x1F];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        AvoidanceConsiderationRadius;                      // 0x514(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RequestedVelocity;                                 // 0x518(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LastUpdateRequestedVelocity;                       // 0x530(0x18)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        AvoidanceUID;                                      // 0x548(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FNavAvoidanceMask                     AvoidanceGroup;                                    // 0x54C(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FNavAvoidanceMask                     GroupsToAvoid;                                     // 0x550(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FNavAvoidanceMask                     GroupsToIgnore;                                    // 0x554(0x4)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        AvoidanceWeight;                                   // 0x558(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20BC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PendingLaunchVelocity;                             // 0x560(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20BD[0x140];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        NavMeshProjectionInterval;                         // 0x6B8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NavMeshProjectionTimer;                            // 0x6BC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NavMeshProjectionInterpSpeed;                      // 0x6C0(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        NavMeshProjectionHeightScaleUp;                    // 0x6C4(0x4)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        NavMeshProjectionHeightScaleDown;                  // 0x6C8(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        NavWalkingFloorDistTolerance;                      // 0x6CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20BF[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	struct FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;                           // 0x700(0x30)(ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20C0[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinTimeBetweenTimeStampResets;                     // 0x748(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20C1[0x55C];                                   // Fixing Size After Last Property  > TateDumper <
	struct FRootMotionSourceGroup                CurrentRootMotion;                                 // 0xCA8(0x48)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRootMotionSourceGroup                ServerCorrectionRootMotion;                        // 0xCF0(0x48)(Net, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20F6[0x168];                                   // Fixing Size After Last Property  > TateDumper <
	struct FRootMotionMovementParams             RootMotionParams;                                  // 0xEA0(0x70)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AnimRootMotionVelocity;                            // 0xF10(0x18)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20F8[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumImpulseToApply;                             // 0xF48(0x4)(ExportObject, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxImpulseVelocityMagnitude;                       // 0xF4C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxImpulseVelocityZ;                               // 0xF50(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseBPAcknowledgeServerCorrection : 1;             // Mask: 0x1, PropSize: 0x10xF54(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableSwimmingOutsideOfWater : 1;                 // Mask: 0x2, PropSize: 0x10xF54(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysCheckForInvallidFloor : 1;                  // Mask: 0x4, PropSize: 0x10xF54(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_20FB[0x23];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCharacterMovementComponent* GetDefaultObj();

	void SetWalkableFloorZ(float InWalkableFloorZ);
	void SetWalkableFloorAngle(float InWalkableFloorAngle);
	uint8 SetMovementMode();
	void SetGroupsToIgnoreMask(const struct FNavAvoidanceMask& GroupMask);
	void SetGroupsToIgnore(int32 GroupFlags);
	void SetGroupsToAvoidMask(const struct FNavAvoidanceMask& GroupMask);
	void SetGroupsToAvoid(int32 GroupFlags);
	void SetCrouchedHalfHeight(float* NewValue);
	void SetAvoidanceGroupMask(const struct FNavAvoidanceMask& GroupMask);
	void SetAvoidanceGroup(int32 GroupFlags);
	bool SetAvoidanceEnabled();
	float NewFallVelocity(const struct FVector& Gravity, const struct FVector& ReturnValue);
	void K2_GetWalkableFloorZ(float ReturnValue);
	void K2_GetWalkableFloorAngle(float ReturnValue);
	void K2_FindFloor(const struct FVector& CapsuleLocation, const struct FFindFloorResult& FloorResult);
	void K2_ComputeFloorDist(const struct FVector& CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, const struct FFindFloorResult& FloorResult);
	void IsWalking(bool ReturnValue);
	struct FHitResult IsWalkable(bool bIsSteppingUp, bool ReturnValue);
	void GetValidPerchRadius(float ReturnValue);
	void GetPerchRadiusThreshold(float ReturnValue);
	void GetMovementBase(class UPrimitiveComponent* ReturnValue);
	void GetMinAnalogSpeed(float ReturnValue);
	void GetMaxJumpHeightWithJumpTime(float ReturnValue);
	void GetMaxJumpHeight(float ReturnValue);
	void GetMaxBrakingDeceleration(float ReturnValue);
	void GetMaxAcceleration(float ReturnValue);
	void GetLastUpdateVelocity(const struct FVector& ReturnValue);
	void GetLastUpdateRotation(const struct FRotator& ReturnValue);
	void GetLastUpdateRequestedVelocity(const struct FVector& ReturnValue);
	void GetLastUpdateLocation(const struct FVector& ReturnValue);
	void GetImpartedMovementBaseVelocity(const struct FVector& ReturnValue);
	void GetCurrentAcceleration(const struct FVector& ReturnValue);
	void GetCrouchedHalfHeight(float ReturnValue);
	void GetCharacterOwner(class ACharacter* ReturnValue);
	void GetAnalogInputModifier(float ReturnValue);
	void DisableMovement();
	void ClearAccumulatedForces();
	struct FHitResult CapsuleTouched(class UPrimitiveComponent* OverlappedComp);
	float CalcVelocity(float* Friction, bool bFluid);
	bool AddImpulse();
	struct FVector AddForce();
};

// 0x1748 (0x1C60 - 0x518)
// Class Engine.PostProcessVolume
class APostProcessVolume : public AVolume
{
public:
	uint8                                        Pad_2142[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  Settings;                                          // 0x520(0x780)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	struct FPostProcessSettings                  HDR_Override_Settings;                             // 0xCA0(0x780)(BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Priority;                                          // 0x1420(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        BlendRadius;                                       // 0x1424(0x4)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BlendWeight;                                       // 0x1428(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x142C(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        bUnbound : 1;                                      // Mask: 0x2, PropSize: 0x10x142C(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_138 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2148[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPostProcessVolumeEntered;                        // 0x1430(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPostProcessVolumeLeft;                           // 0x1440(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TMap<class UCurveFloat*, class UCurveFloat*> PostProcessFloatCurveOverrides;                    // 0x1450(0x50)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalExposureCompensationOffset;                  // 0x14A0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2149[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AExponentialHeightFog*>         DisabledHeightFogs;                                // 0x14A8(0x10)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<class AExponentialHeightFog*>         PrimaryLerpingHeightFogs;                          // 0x14B8(0x10)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAbsolutePriority : 1;                             // Mask: 0x1, PropSize: 0x10x14C8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWaterPP : 1;                                      // Mask: 0x2, PropSize: 0x10x14C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReallyWantToOverrideLumenSettingsOnlyJesseGetsToMakeThisCall : 1; // Mask: 0x4, PropSize: 0x10x14C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_139 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_214B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        WhatIsSquareRootOfFourtyNineCheckingYouReallyWantOverrideLumen; // 0x14CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ViewDistanceMultiplier;                            // 0x14D0(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EPostProcessVolumeType            VolumeType;                                        // 0x14D4(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_214C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaterialWaterLineParameterValue;                   // 0x14D8(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_214D[0x784];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APostProcessVolume* GetDefaultObj();

	float AddOrUpdateBlendable();
};

// 0x90 (0x768 - 0x6D8)
// Class Engine.StaticMeshComponent
class UStaticMeshComponent : public UMeshComponent
{
public:
	int32                                        ForcedLodModel;                                    // 0x6D8(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	int32                                        PreviousLODLevel;                                  // 0x6DC(0x4)(ConstParm, BlueprintVisible, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinLOD;                                            // 0x6E0(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	int32                                        SubDivisionStepSize;                               // 0x6E4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UStaticMesh*                           StaticMesh;                                        // 0x6E8(0x8)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference)
	struct FColor                                WireframeColorOverride;                            // 0x6F0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisallowNanite : 1;                               // Mask: 0x1, PropSize: 0x10x6F4(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDisableNanite : 1;                           // Mask: 0x2, PropSize: 0x10x6F4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEvaluateWorldPositionOffset : 1;                  // Mask: 0x4, PropSize: 0x10x6F4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEvaluateWorldPositionOffsetInRayTracing : 1;      // Mask: 0x8, PropSize: 0x10x6F4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_13C : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2198[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        WorldPositionOffsetDisableDistance;                // 0x6F8(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        CustomDataOutDisableDistance;                      // 0x6FC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_13D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOverrideWireframeColor : 1;                       // Mask: 0x2, PropSize: 0x10x700(0x1)(Edit, ConstParm, ExportObject, Net, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        bOverrideMinLod : 1;                               // Mask: 0x4, PropSize: 0x10x700(0x1)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bOverrideNavigationExport : 1;                     // Mask: 0x8, PropSize: 0x10x700(0x1)(Edit, ExportObject, Net, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNavigationObstacle : 1;                      // Mask: 0x10, PropSize: 0x10x700(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisallowMeshPaintPerInstance : 1;                 // Mask: 0x20, PropSize: 0x10x700(0x1)(BlueprintVisible, ExportObject, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreInstanceForTextureStreaming : 1;            // Mask: 0x40, PropSize: 0x10x700(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideLightMapRes : 1;                          // Mask: 0x80, PropSize: 0x10x700(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCastDistanceFieldIndirectShadow : 1;              // Mask: 0x1, PropSize: 0x10x701(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideDistanceFieldSelfShadowBias : 1;          // Mask: 0x2, PropSize: 0x10x701(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSubDivisions : 1;                              // Mask: 0x4, PropSize: 0x10x701(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseDefaultCollision : 1;                          // Mask: 0x8, PropSize: 0x10x701(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSortTriangles : 1;                                // Mask: 0x10, PropSize: 0x10x701(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReverseCulling : 1;                               // Mask: 0x20, PropSize: 0x10x701(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_13E : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_21A0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverriddenLightMapRes;                             // 0x704(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        DistanceFieldIndirectShadowMinVisibility;          // 0x708(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFieldSelfShadowBias;                       // 0x70C(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        StreamingDistanceMultiplier;                       // 0x710(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_21A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStaticMeshComponentLODInfo>   LODData;                                           // 0x718(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStreamingTextureBuildInfo>    StreamingTextureData;                              // 0x728(0x10)(BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLightmassPrimitiveSettings           LightmassSettings;                                 // 0x738(0x18)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_21A6[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseDirectionalShadowDistanceLimit : 1;            // Mask: 0x1, PropSize: 0x10x760(0x1)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_140 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_21A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DirectionalShadowDistanceLimit;                    // 0x764(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UStaticMeshComponent* GetDefaultObj();

	void SetWorldPositionOffsetDisableDistance(float* NewValue);
	void SetStaticMesh(class UStaticMesh** NewMesh, bool ReturnValue);
	bool SetReverseCulling();
	int32 SetForcedLodModel();
	bool SetForceDisableNanite();
	void SetEvaluateWorldPositionOffsetInRayTracing(bool* NewValue);
	void SetEvaluateWorldPositionOffset(bool* NewValue);
	void SetDistanceFieldSelfShadowBias(float* NewValue);
	void SetCustomDataOutDisableDistance(float* NewValue);
	class UStaticMesh* OnRep_StaticMesh();
	void GetWorldPositionOffsetDisableDistance(float ReturnValue);
	void GetLocalBounds(struct FVector* Min, struct FVector* Max);
	void GetInitialEvaluateWorldPositionOffset(bool ReturnValue);
	void GetCustomDataOutDisableDistance(float ReturnValue);
	int32 CopyPerInstanceDynamicCustomData(bool ReturnValue);
};

// 0x350 (0x9E8 - 0x698)
// Class Engine.ParticleSystemComponent
class UParticleSystemComponent : public UFXSystemComponent
{
public:
	class UParticleSystem*                       Template;                                          // 0x698(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	TArray<class UMaterialInterface*>            EmitterMaterials;                                  // 0x6A0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshComponent*>        SkelMeshComponents;                                // 0x6B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_142 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWasDeactivated : 1;                               // Mask: 0x10, PropSize: 0x10x6C0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_143 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bResetOnDetach : 1;                                // Mask: 0x1, PropSize: 0x10x6C1(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdateOnDedicatedServer : 1;                      // Mask: 0x2, PropSize: 0x10x6C1(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_144 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowRecycling : 1;                               // Mask: 0x10, PropSize: 0x10x6C1(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoManageAttachment : 1;                         // Mask: 0x20, PropSize: 0x10x6C1(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bAutoAttachWeldSimulatedBodies : 1;                // Mask: 0x40, PropSize: 0x10x6C1(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_145 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_146 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWarmingUp : 1;                                    // Mask: 0x4, PropSize: 0x10x6C2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideLODMethod : 1;                            // Mask: 0x8, PropSize: 0x10x6C2(0x1)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkipUpdateDynamicDataDuringTick : 1;              // Mask: 0x10, PropSize: 0x10x6C2(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_147 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_221C[0xA];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EParticleSystemLODMethod          LODMethod;                                         // 0x6CD(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig)
	enum class EParticleSignificanceLevel        RequiredSignificance;                              // 0x6CE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2220[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FParticleSysParam>             InstanceParameters;                                // 0x6D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleSpawn;                                   // 0x6E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleBurst;                                   // 0x6F0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleDeath;                                   // 0x700(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnParticleCollide;                                 // 0x710(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOldPositionValid;                                 // 0x720(0x1)(Edit, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2223[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OldPosition;                                       // 0x728(0x18)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               PartSysVelocity;                                   // 0x740(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WarmupTime;                                        // 0x758(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        WarmupTickRate;                                    // 0x75C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2226[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SecondsBeforeInactive;                             // 0x764(0x4)(ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2227[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxTimeBeforeForceUpdateTransform;                 // 0x76C(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2229[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UParticleSystemReplay*>         ReplayClips;                                       // 0x790(0x10)(Edit, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_222A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CustomTimeDilation;                                // 0x7A8(0x4)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_222B[0x54];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class USceneComponent>        AutoAttachParent;                                  // 0x800(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	class FName                                  AutoAttachSocketName;                              // 0x808(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EAttachmentRule                   AutoAttachLocationRule;                            // 0x810(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EAttachmentRule                   AutoAttachRotationRule;                            // 0x811(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EAttachmentRule                   AutoAttachScaleRule;                               // 0x812(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_222C[0x55];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnSystemFinished;                                  // 0x868(0x10)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_222D[0x130];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceDisableParticleOcclusion : 1;                // Mask: 0x1, PropSize: 0x10x9A8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowParticleCollisions : 1;                 // Mask: 0x2, PropSize: 0x10x9A8(0x1)(Edit, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPreserveOnDedicatedServer : 1;                    // Mask: 0x4, PropSize: 0x10x9A8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_222F[0x3F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleSystemComponent* GetDefaultObj();

	void SetTrailSourceData(class FName InFirstSocketName, class FName InSecondSocketName, enum class ETrailWidthMode InWidthMode, float InWidth);
	class UParticleSystem* SetTemplate();
	class UMaterialInterface* SetMaterialParameter(class FName ParameterName);
	void SetBeamTargetTangent(int32 EmitterIndex, struct FVector* NewTangentPoint, int32* TargetIndex);
	void SetBeamTargetStrength(int32 EmitterIndex, float* NewTargetStrength, int32* TargetIndex);
	void SetBeamTargetPoint(int32 EmitterIndex, struct FVector* NewTargetPoint, int32* TargetIndex);
	void SetBeamSourceTangent(int32 EmitterIndex, struct FVector* NewTangentPoint, int32* SourceIndex);
	void SetBeamSourceStrength(int32 EmitterIndex, float* NewSourceStrength, int32* SourceIndex);
	void SetBeamSourcePoint(int32 EmitterIndex, struct FVector* NewSourcePoint, int32* SourceIndex);
	void SetBeamEndPoint(int32 EmitterIndex, const struct FVector& NewEndPoint);
	void SetAutoAttachParams(class USceneComponent** Parent, class FName* SocketName, enum class EAttachLocation* LocationType);
	class FName GetVectorParameter(const struct FVector& OutVector, bool ReturnValue);
	void GetNumActiveParticles(int32 ReturnValue);
	class FName GetNamedMaterial(class UMaterialInterface* ReturnValue);
	class FName GetMaterialParameter(class UMaterialInterface* OutMaterial, bool ReturnValue);
	class FName GetFloatParameter(float* OutFloat, bool ReturnValue);
	struct FLinearColor GetColorParameter(bool ReturnValue);
	void GetBeamTargetTangent(int32 EmitterIndex, int32* TargetIndex, const struct FVector& OutTangentPoint, bool ReturnValue);
	void GetBeamTargetStrength(int32 EmitterIndex, int32* TargetIndex, float OutTargetStrength, bool ReturnValue);
	void GetBeamTargetPoint(int32 EmitterIndex, int32* TargetIndex, const struct FVector& OutTargetPoint, bool ReturnValue);
	void GetBeamSourceTangent(int32 EmitterIndex, int32* SourceIndex, const struct FVector& OutTangentPoint, bool ReturnValue);
	void GetBeamSourceStrength(int32 EmitterIndex, int32* SourceIndex, float OutSourceStrength, bool ReturnValue);
	void GetBeamSourcePoint(int32 EmitterIndex, int32* SourceIndex, const struct FVector& OutSourcePoint, bool ReturnValue);
	void GetBeamEndPoint(int32 EmitterIndex, const struct FVector& OutEndPoint, bool ReturnValue);
	class FName GetActorParameter(class AActor** OutActor, bool ReturnValue);
	struct FVector GenerateParticleEvent(float InEmitterTime, struct FVector* InLocation, const struct FVector& InDirection);
	void EndTrails();
	class UMaterialInterface* CreateNamedDynamicMaterialInstance(class UMaterialInstanceDynamic* ReturnValue);
	void BeginTrails(class FName InFirstSocketName, class FName InSecondSocketName, enum class ETrailWidthMode InWidthMode, float InWidth);
};

// 0x1A0 (0x1C8 - 0x28)
// Class Engine.PrimalWorld
class UPrimalWorld : public UObject
{
public:
	int32                                        FrameCounter;                                      // 0x28(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2239[0x124];                                   // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_148 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bWorldWasPlayerView : 1;                           // Mask: 0x2, PropSize: 0x10x150(0x1)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSimpleWorld : 1;                               // Mask: 0x4, PropSize: 0x10x150(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_223A[0x77];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPrimalWorld* GetDefaultObj();

};

// 0x8C8 (0xA90 - 0x1C8)
// Class Engine.World
class UWorld : public UPrimalWorld
{
public:
	uint8                                        Pad_2254[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class ULevel*                                PersistentLevel;                                   // 0x1D0(0x8)(ConstParm, OutParm, ZeroConstructor)
	class UNetDriver*                            NetDriver;                                         // 0x1D8(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class ULineBatchComponent*                   LineBatcher;                                       // 0x1E0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class ULineBatchComponent*                   PersistentLineBatcher;                             // 0x1E8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class ULineBatchComponent*                   ForegroundLineBatcher;                             // 0x1F0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class AGameNetworkManager*                   NetworkManager;                                    // 0x1F8(0x8)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UPhysicsCollisionHandler*              PhysicsCollisionHandler;                           // 0x200(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, SubobjectReference)
	TArray<class UObject*>                       ExtraReferencedObjects;                            // 0x208(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       PerModuleDataObjects;                              // 0x218(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class ULevelStreaming*>               StreamingLevels;                                   // 0x228(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FStreamingLevelsToConsider            StreamingLevelsToConsider;                         // 0x238(0x28)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	class AServerStreamingLevelsVisibility*      ServerStreamingLevelsVisibility;                   // 0x260(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, SubobjectReference)
	class FString                                StreamingLevelsPrefix;                             // 0x268(0x10)(Edit, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_225B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class ULevel*                                CurrentLevelPendingVisibility;                     // 0x280(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class ULevel*                                CurrentLevelPendingInvisibility;                   // 0x288(0x8)(Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UDemoNetDriver*                        DemoNetDriver;                                     // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm)
	class AParticleEventManager*                 MyParticleEventManager;                            // 0x298(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class APhysicsVolume*                        DefaultPhysicsVolume;                              // 0x2A0(0x8)(EditFixedSize, Config, SubobjectReference)
	uint8                                        Pad_225C[0x36];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_149 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAreConstraintsDirty : 1;                          // Mask: 0x4, PropSize: 0x10x2DE(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_14A : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_225D[0x9];                                     // Fixing Size After Last Property  > TateDumper <
	class UNavigationSystemBase*                 NavigationSystem;                                  // 0x2E8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst)
	class AGameModeBase*                         AuthorityGameMode;                                 // 0x2F0(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class AGameStateBase*                        GameState;                                         // 0x2F8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UAISystemBase*                         AISystem;                                          // 0x300(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, SubobjectReference)
	class UAvoidanceManager*                     AvoidanceManager;                                  // 0x308(0x8)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, SubobjectReference)
	TArray<class ULevel*>                        Levels;                                            // 0x310(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLevelCollection>              LevelCollections;                                  // 0x320(0x10)(Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2262[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	class UGameInstance*                         OwningGameInstance;                                // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UMaterialParameterCollectionInstance*> ParameterCollectionInstances;                      // 0x360(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UCanvas*                               CanvasForRenderingToTarget;                        // 0x370(0x8)(Edit, ConstParm, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UCanvas*                               CanvasForDrawMaterialToRenderTarget;               // 0x378(0x8)(BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2266[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	class UPhysicsFieldComponent*                PhysicsField;                                      // 0x3F0(0x8)(Edit, ExportObject, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       LWILastAssignedUID;                                // 0x3F8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2267[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TSet<class UActorComponent*>                 ComponentsThatNeedPreEndOfFrameSync;               // 0x400(0x50)(BlueprintVisible, ExportObject, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               ComponentsThatNeedEndOfFrameUpdate;                // 0x450(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               ComponentsThatNeedEndOfFrameUpdate_OnGameThread;   // 0x460(0x10)(Edit, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2268[0x448];                                   // Fixing Size After Last Property  > TateDumper <
	class UWorldComposition*                     WorldComposition;                                  // 0x8B8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, SubobjectReference)
	class UContentBundleManager*                 ContentBundleManager;                              // 0x8C0(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, SubobjectReference)
	uint8                                        Pad_2269[0xB0];                                    // Fixing Size After Last Property  > TateDumper <
	struct FWorldPSCPool                         PSCPool;                                           // 0x978(0x58)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_226A[0xC0];                                    // Fixing Size Of Struct > TateDumper <


	static class UWorld* GetWorld();
	static class UClass* StaticClass();
	static class UWorld* GetDefaultObj();

	void K2_GetWorldSettings(class AWorldSettings* ReturnValue);
	void K2_GetLastRenderedPostProcessSettings(const struct FPostProcessSettings& PostProcessSettings, int32 ViewIndex, bool ReturnValue);
	void K2_GetLastEyeAdaptationExposure(float EyeAdaptationExposure, int32 ViewIndex, bool ReturnValue);
	void K2_GetLastAverageSceneLuminance(float AverageSceneLuminance, int32 ViewIndex, bool ReturnValue);
	void HandleTimelineScrubbed();
	void GetWorldSettings(bool bCheckStreamingPersistent, bool bChecked, class AWorldSettings* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.NavigationSystemBase
class UNavigationSystemBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UNavigationSystemBase* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Engine.NavigationSystemConfig
class UNavigationSystemConfig : public UObject
{
public:
	struct FSoftClassPath                        NavigationSystemClass;                             // 0x28(0x20)(ConstParm, ExportObject, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FNavAgentSelector                     SupportedAgentsMask;                               // 0x48(0x4)(BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  DefaultAgentName;                                  // 0x4C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        bIsOverriden : 1;                                  // Mask: 0x1, PropSize: 0x10x54(0x1)(Edit, ConstParm, Net, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_226D[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNavigationSystemConfig* GetDefaultObj();

};

// 0x1160 (0x1628 - 0x4C8)
// Class Engine.BasePrimalWorldSettings
class ABasePrimalWorldSettings : public AInfo
{
public:
	TMap<uint32, class AActor*>                  StructureIDMap;                                    // 0x4C8(0x50)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSeamlessTravelWorld;                              // 0x518(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceRouteBeginPlayOnLoad;                        // 0x519(0x1)(EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableSplitscreen;                               // 0x51A(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2272[0x201];                                   // Fixing Size After Last Property  > TateDumper <
	float                                        BaseNetStasisDistance;                             // 0x71C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2273[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	class APostProcessVolume*                    GlobalPostProcessVolume;                           // 0x770(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KillZIntervalMin;                                  // 0x778(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KillZIntervalMax;                                  // 0x77C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2274[0xE38];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTreeStumpCreationTime>        TreeStumpCreationTimes;                            // 0x15B8(0x10)(Edit, ExportObject, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2275[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABasePrimalWorldSettings* GetDefaultObj();

	void GetGlobalPostProcessVolume(class APostProcessVolume* ReturnValue);
	class FName GetActorWithTag(class AActor* ReturnValue);
	class FName GetActorsWithTag(const TArray<class AActor*>& ReturnValue);
};

// 0x268 (0x1890 - 0x1628)
// Class Engine.WorldSettings
class AWorldSettings : public ABasePrimalWorldSettings
{
public:
	uint8                                        Pad_2276[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VisibilityCellSize;                                // 0x1630(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EVisibilityAggressiveness         VisibilityAggressiveness;                          // 0x1634(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPrecomputeVisibility : 1;                         // Mask: 0x1, PropSize: 0x10x1635(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPlaceCellsOnlyAlongCameraTracks : 1;              // Mask: 0x2, PropSize: 0x10x1635(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableWorldBoundsChecks : 1;                      // Mask: 0x4, PropSize: 0x10x1635(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_14B : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2277[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUse3DWorldCompStreaming : 1;                      // Mask: 0x1, PropSize: 0x10x1638(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceLoadAllLevelsOnDediServer : 1;               // Mask: 0x2, PropSize: 0x10x1638(0x1)(Edit, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_14C : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2278[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          LevelsToForceInvisibleWhenExcluded;                // 0x1640(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LevelsToAbsolutelyNotLoadOnDediServer;             // 0x1650(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          AlwaysVisibleLevelNames;                           // 0x1660(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableNavigationSystem : 1;                       // Mask: 0x1, PropSize: 0x10x1670(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableAISystem : 1;                               // Mask: 0x2, PropSize: 0x10x1670(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableWorldComposition : 1;                       // Mask: 0x4, PropSize: 0x10x1670(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseClientSideLevelStreamingVolumes : 1;           // Mask: 0x8, PropSize: 0x10x1670(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableWorldOriginRebasing : 1;                    // Mask: 0x10, PropSize: 0x10x1670(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bWorldGravitySet : 1;                              // Mask: 0x20, PropSize: 0x10x1670(0x1)(Edit, Parm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGlobalGravitySet : 1;                             // Mask: 0x40, PropSize: 0x10x1670(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMinimizeBSPSections : 1;                          // Mask: 0x80, PropSize: 0x10x1670(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceNoPrecomputedLighting : 1;                   // Mask: 0x1, PropSize: 0x10x1671(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHighPriorityLoading : 1;                          // Mask: 0x2, PropSize: 0x10x1671(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHighPriorityLoadingLocal : 1;                     // Mask: 0x4, PropSize: 0x10x1671(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideDefaultBroadphaseSettings : 1;            // Mask: 0x8, PropSize: 0x10x1671(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bGenerateSingleClusterForLevel : 1;                // Mask: 0x10, PropSize: 0x10x1671(0x1)(ConstParm, Net, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_14D : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_227C[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftClassPtr<class UAISystemBase>           AISystemClass;                                     // 0x1678(0x30)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LevelInstancePivotOffset;                          // 0x16A8(0x18)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UNavigationSystemConfig*               NavigationSystemConfig;                            // 0x16C0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UNavigationSystemConfig*               NavigationSystemConfigOverride;                    // 0x16C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UWorldPartition*                       WorldPartition;                                    // 0x16D0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, SubobjectReference)
	TArray<class UDataLayerAsset*>               BaseNavmeshDataLayers;                             // 0x16D8(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WorldToMeters;                                     // 0x16E8(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        KillZ;                                             // 0x16EC(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                KillZDamageType;                                   // 0x16F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WorldGravityZ;                                     // 0x16F8(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalGravityZ;                                    // 0x16FC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultPhysicsVolumeClass;                         // 0x1700(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PhysicsCollisionHandlerClass;                      // 0x1708(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DefaultGameMode;                                   // 0x1710(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	class UClass*                                GameNetworkManagerClass;                           // 0x1718(0x8)(ConstParm, Net, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        PackedLightAndShadowMapTextureSize;                // 0x1720(0x4)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_227F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DefaultColorScale;                                 // 0x1728(0x18)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DefaultMaxDistanceFieldOcclusionDistance;          // 0x1740(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalDistanceFieldViewDistance;                   // 0x1744(0x4)(Net, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DynamicIndirectShadowsSelfShadowingIntensity;      // 0x1748(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2280[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FReverbSettings                       DefaultReverbSettings;                             // 0x1750(0x20)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FInteriorSettings                     DefaultAmbientZoneSettings;                        // 0x1770(0x24)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2281[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundMix*                             DefaultBaseSoundMix;                               // 0x1798(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        TimeDilation;                                      // 0x17A0(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MatineeTimeDilation;                               // 0x17A4(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DemoPlayTimeDilation;                              // 0x17A8(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinGlobalTimeDilation;                             // 0x17AC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	float                                        MaxGlobalTimeDilation;                             // 0x17B0(0x4)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        MinUndilatedFrameTime;                             // 0x17B4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	float                                        MaxUndilatedFrameTime;                             // 0x17B8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2284[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBroadphaseSettings                   BroadphaseSettings;                                // 0x17C0(0x80)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst)
	TArray<struct FNetViewer>                    ReplicationViewers;                                // 0x1840(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x1850(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class APlayerState*                          PauserPlayerState;                                 // 0x1860(0x8)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfBookmarks;                              // 0x1868(0x4)(ExportObject, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2285[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DefaultBookmarkClass;                              // 0x1870(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UBookmarkBase*>                 BookmarkArray;                                     // 0x1878(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                LastBookmarkClass;                                 // 0x1888(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AWorldSettings* GetDefaultObj();

	void OnRep_WorldGravityZ();
};

// 0xB0 (0x1940 - 0x1890)
// Class Engine.ARKNXWorldSettings
class AARKNXWorldSettings : public AWorldSettings
{
public:
	struct FNXSettings                           NXSettings;                                        // 0x1890(0x28)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, EditConst)
	struct FPointLightReductionSettings          PointLightReduction;                               // 0x18B8(0x14)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2288[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, struct FLayerNameArray>    SubmapToDataLayerMap;                              // 0x18D0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UAudioComponent>> DeferredAudioActivates;                            // 0x1920(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UHierarchicalInstancedStaticMeshComponent>> DeferredMeshNavigationUpdates;                     // 0x1930(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AARKNXWorldSettings* GetDefaultObj();

};

// 0x228 (0x298 - 0x70)
// Class Engine.ActorChannel
class UActorChannel : public UChannel
{
public:
	class AActor*                                Actor;                                             // 0x70(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	uint8                                        Pad_2289[0xE8];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       CreateSubObjects;                                  // 0x160(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_228A[0x128];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorChannel* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Engine.CheatManager
class UCheatManager : public UObject
{
public:
	class ADebugCameraController*                DebugCameraControllerRef;                          // 0x28(0x8)(Edit, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DebugCameraControllerClass;                        // 0x30(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_22B9[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UCheatManagerExtension*>        CheatManagerExtensions;                            // 0x78(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UCheatManager* GetDefaultObj();

	void Walk();
	void ViewSelf();
	class FString ViewPlayer();
	void ViewClass(class UClass* DesiredClass);
	class FName ViewActor();
	void UpdateSafeArea();
	void ToggleServerStatReplicatorUpdateStatNet();
	void ToggleServerStatReplicatorClientOverwrite();
	void ToggleDebugCamera();
	void ToggleAILogging();
	void TestCollisionDistance();
	void Teleport();
	class FString Summon();
	void StreamLevelOut(class FName* PackageName);
	void StreamLevelIn(class FName* PackageName);
	void SpawnServerStatReplicator();
	void Slomo(float NewTimeDilation);
	void SetWorldOrigin();
	void SetMouseSensitivityToDefault();
	void ServerToggleAILogging();
	void ReceiveInitCheatManager();
	void ReceiveEndPlay();
	void PlayersOnly();
	enum class EEndPlayReason OnPlayerEndPlayed(class AActor** Player);
	void OnlyLoadLevel(class FName* PackageName);
	void LogLoc();
	void InvertMouse();
	void God();
	void Ghost();
	void GetPlayerController(class APlayerController* ReturnValue);
	float FreezeFrame();
	void Fly();
	void FlushLog();
	void EnableDebugCamera();
	void DumpVoiceMutingState();
	void DumpPartyState();
	void DumpOnlineSessionState();
	void DumpChatState();
	void DisableDebugCamera();
	void DestroyTarget();
	void DestroyServerStatReplicator();
	void DestroyPawns(class UClass* AClass);
	void DestroyAllPawnsExceptTarget();
	void DestroyAll(class UClass* AClass, bool* bExactMatch);
	void DebugCapsuleSweepSize(float* HalfHeight, float* Radius);
	void DebugCapsuleSweepPawn();
	void DebugCapsuleSweepComplex(bool bTraceComplex);
	void DebugCapsuleSweepClear();
	enum class ECollisionChannel DebugCapsuleSweepChannel();
	void DebugCapsuleSweepCapture();
	void DebugCapsuleSweep();
	float DamageTarget();
	void CheatScript(const class FString& ScriptName);
	float ChangeSize();
	void BugItStringCreator(const struct FVector& ViewLocation, struct FRotator* ViewRotation, const class FString& GoString, const class FString& LocString);
	float BugItGo(float* X, float* Y, float* Z);
	void BugIt(const class FString& ScreenShotDescription);
};

// 0x0 (0x28 - 0x28)
// Class Engine.CheatManagerExtension
class UCheatManagerExtension : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCheatManagerExtension* GetDefaultObj();

	void RemovedFromCheatManager();
	void GetPlayerController(class APlayerController* ReturnValue);
	void AddedToCheatManager();
};

// 0x58 (0x1028 - 0xFD0)
// Class Engine.GameEngine
class UGameEngine : public UEngine
{
public:
	float                                        MaxDeltaTime;                                      // 0xFD0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	float                                        ServerFlushLogInterval;                            // 0xFD4(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	class UGameInstance*                         GameInstance;                                      // 0xFD8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_22C8[0x48];                                    // Fixing Size Of Struct > TateDumper <


	static class UGameEngine* GetEngine();
	static class UClass* StaticClass();
	static class UGameEngine* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class Engine.PrimalGameInstance
class UPrimalGameInstance : public UGameInstance
{
public:

	static class UClass* StaticClass();
	static class UPrimalGameInstance* GetDefaultObj();

};

// 0x20 (0x4E8 - 0x4C8)
// Class Engine.GameSession
class AGameSession : public AInfo
{
public:
	int32                                        MaxSpectators;                                     // 0x4C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	int32                                        MaxPlayers;                                        // 0x4CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        ReservedPlayerSlots;                               // 0x4D0(0x1)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_22CB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxPartySize;                                      // 0x4D4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        MaxSplitscreensPerConnection;                      // 0x4D8(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bRequiresPushToTalk;                               // 0x4D9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_22CD[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  SessionName;                                       // 0x4DC(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Config, EditConst, SubobjectReference)
	uint8                                        Pad_22CE[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AGameSession* GetDefaultObj();

};

// 0x120 (0x148 - 0x28)
// Class Engine.GameUserSettings
class UGameUserSettings : public UObject
{
public:
	bool                                         bUseVSync;                                         // 0x28(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseDynamicResolution;                             // 0x29(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2368[0x5E];                                    // Fixing Size After Last Property  > TateDumper <
	uint32                                       ResolutionSizeX;                                   // 0x88(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ResolutionSizeY;                                   // 0x8C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       LastUserConfirmedResolutionSizeX;                  // 0x90(0x4)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       LastUserConfirmedResolutionSizeY;                  // 0x94(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        WindowPosX;                                        // 0x98(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        WindowPosY;                                        // 0x9C(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        FullscreenMode;                                    // 0xA0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastConfirmedFullscreenMode;                       // 0xA4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreferredFullscreenMode;                           // 0xA8(0x4)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       Version;                                           // 0xAC(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance)
	int32                                        AudioQualityLevel;                                 // 0xB0(0x4)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastConfirmedAudioQualityLevel;                    // 0xB4(0x4)(ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FrameRateLimit;                                    // 0xB8(0x4)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2374[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DesiredScreenWidth;                                // 0xC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseDesiredScreenHeight;                           // 0xC4(0x1)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2376[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DesiredScreenHeight;                               // 0xC8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastUserConfirmedDesiredScreenWidth;               // 0xCC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        LastUserConfirmedDesiredScreenHeight;              // 0xD0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastRecommendedScreenWidth;                        // 0xD4(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastRecommendedScreenHeight;                       // 0xD8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastCPUBenchmarkResult;                            // 0xDC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastGPUBenchmarkResult;                            // 0xE0(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_237A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                LastCPUBenchmarkSteps;                             // 0xE8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                LastGPUBenchmarkSteps;                             // 0xF8(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        LastGPUBenchmarkMultiplier;                        // 0x108(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseHDRDisplayOutput;                              // 0x10C(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_237F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        HDRDisplayOutputNits;                              // 0x110(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2380[0x24];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnGameUserSettingsUINeedsUpdate;                   // 0x138(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGameUserSettings* GetDefaultObj();

	void ValidateSettings();
	void SupportsHDRDisplayOutput(bool ReturnValue);
	bool SetVSyncEnabled();
	void SetVisualEffectQuality(int32* Value);
	void SetViewDistanceQuality(int32* Value);
	void SetToDefaults();
	void SetTextureQuality(int32* Value);
	void SetShadowQuality(int32* Value);
	void SetShadingQuality(int32* Value);
	void SetScreenResolution(const struct FIntPoint& Resolution);
	float SetResolutionScaleValueEx();
	int32 SetResolutionScaleValue();
	float SetResolutionScaleNormalized();
	void SetReflectionQuality(int32* Value);
	void SetPostProcessingQuality(int32* Value);
	void SetOverallScalabilityLevel(int32* Value);
	void SetGlobalIlluminationQuality(int32* Value);
	enum class EWindowMode SetFullscreenMode();
	float SetFrameRateLimit();
	void SetFoliageQuality(int32* Value);
	bool SetDynamicResolutionEnabled();
	void SetBenchmarkFallbackValues();
	void SetAudioQualityLevel(int32 QualityLevel);
	void SetAntiAliasingQuality(int32* Value);
	void SaveSettings();
	float RunHardwareBenchmark();
	void RevertVideoMode();
	void ResetToCurrentSettings();
	bool LoadSettings();
	void IsVSyncEnabled(bool ReturnValue);
	void IsVSyncDirty(bool ReturnValue);
	void IsScreenResolutionDirty(bool ReturnValue);
	void IsHDREnabled(bool ReturnValue);
	void IsFullscreenModeDirty(bool ReturnValue);
	void IsDynamicResolutionEnabled(bool ReturnValue);
	void IsDynamicResolutionDirty(bool ReturnValue);
	void IsDirty(bool ReturnValue);
	void GetVisualEffectQuality(int32 ReturnValue);
	void GetViewDistanceQuality(int32 ReturnValue);
	void GetTextureQuality(int32 ReturnValue);
	void GetSyncInterval(int32 ReturnValue);
	void GetShadowQuality(int32 ReturnValue);
	void GetShadingQuality(int32 ReturnValue);
	void GetScreenResolution(const struct FIntPoint& ReturnValue);
	void GetResolutionScaleNormalized(float ReturnValue);
	float GetResolutionScaleInformationEx();
	int32 GetResolutionScaleInformation();
	void GetReflectionQuality(int32 ReturnValue);
	void GetRecommendedResolutionScale(float ReturnValue);
	void GetPreferredFullscreenMode(enum class EWindowMode ReturnValue);
	void GetPostProcessingQuality(int32 ReturnValue);
	void GetOverallScalabilityLevel(int32 ReturnValue);
	void GetLastConfirmedScreenResolution(const struct FIntPoint& ReturnValue);
	void GetLastConfirmedFullscreenMode(enum class EWindowMode ReturnValue);
	void GetGlobalIlluminationQuality(int32 ReturnValue);
	void GetGameUserSettings(class UGameUserSettings* ReturnValue);
	void GetFullscreenMode(enum class EWindowMode ReturnValue);
	void GetFrameRateLimit(float ReturnValue);
	void GetFramePace(int32 ReturnValue);
	void GetFoliageQuality(int32 ReturnValue);
	void GetDesktopResolution(const struct FIntPoint& ReturnValue);
	void GetDefaultWindowPosition(const struct FIntPoint& ReturnValue);
	void GetDefaultWindowMode(enum class EWindowMode ReturnValue);
	void GetDefaultResolutionScale(float ReturnValue);
	void GetDefaultResolution(const struct FIntPoint& ReturnValue);
	void GetCurrentHDRDisplayNits(int32 ReturnValue);
	void GetAudioQualityLevel(int32 ReturnValue);
	void GetAntiAliasingQuality(int32 ReturnValue);
	int32 EnableHDRDisplayOutput();
	void ConfirmVideoMode();
	bool ApplySettings();
	bool ApplyResolutionSettings();
	void ApplyNonResolutionSettings();
	void ApplyHardwareBenchmarkResults();
};

// 0x10 (0x38 - 0x28)
// Class Engine.ScriptViewportClient
class UScriptViewportClient : public UObject
{
public:
	uint8                                        Pad_2387[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UScriptViewportClient* GetDefaultObj();

};

// 0x378 (0x3B0 - 0x38)
// Class Engine.GameViewportClient
class UGameViewportClient : public UScriptViewportClient
{
public:
	uint8                                        Pad_238D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UConsole*                              ViewportConsole;                                   // 0x40(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDebugDisplayProperty>         DebugProperties;                                   // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_238E[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxSplitscreenPlayers;                             // 0x68(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        Pad_238F[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                World;                                             // 0x78(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class UGameInstance*                         GameInstance;                                      // 0x80(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_2391[0x328];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UGameViewportClient* GetDefaultObj();

	void SSSwapControllers();
	void ShowTitleSafeArea();
	void SetConsoleTarget(int32* PlayerIndex);
};

// 0xF8 (0x5C0 - 0x4C8)
// Class Engine.HUD
class AHUD : public AActor
{
public:
	class APlayerController*                     PlayerOwner;                                       // 0x4C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bLostFocusPaused : 1;                              // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHUD : 1;                                      // Mask: 0x2, PropSize: 0x10x4D0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bShowDebugInfo : 1;                                // Mask: 0x4, PropSize: 0x10x4D0(0x1)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_157 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2435[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CurrentTargetIndex;                                // 0x4D4(0x4)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowHitBoxDebugInfo : 1;                          // Mask: 0x1, PropSize: 0x10x4D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowOverlays : 1;                                 // Mask: 0x2, PropSize: 0x10x4D8(0x1)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableDebugTextShadow : 1;                        // Mask: 0x4, PropSize: 0x10x4D8(0x1)(Edit, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_158 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2437[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        PostRenderedActors;                                // 0x4E0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2439[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DebugDisplay;                                      // 0x500(0x10)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	TArray<class FName>                          ToggledDebugCategories;                            // 0x510(0x10)(Edit, ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UCanvas*                               Canvas;                                            // 0x520(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, SubobjectReference)
	class UCanvas*                               DebugCanvas;                                       // 0x528(0x8)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDebugTextInfo>                DebugTextList;                                     // 0x530(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ShowDebugTargetDesiredClass;                       // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ShowDebugTargetActor;                              // 0x548(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_243D[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AHUD* GetDefaultObj();

	void ShowHUD();
	void ShowDebugToggleSubCategory(class FName* Category);
	void ShowDebugForReticleTargetToggle(class UClass* DesiredClass);
	void ShowDebug(class FName* DebugType);
	class AActor* RemoveDebugText(bool* bLeaveDurationText);
	void RemoveAllDebugStrings();
	class FName ReceiveHitBoxRelease();
	class FName ReceiveHitBoxEndCursorOver();
	class FName ReceiveHitBoxClick();
	class FName ReceiveHitBoxBeginCursorOver();
	int32 ReceiveDrawHUD(int32* SizeX);
	void Project(struct FVector* Location, bool* bClampToZeroPlane, const struct FVector& ReturnValue);
	void PreviousDebugTarget();
	void NextDebugTarget();
	void GetTextSize(class FString* Text, float* OutWidth, float* OutHeight, class UFont** Font, float* Scale);
	void GetOwningPlayerController(class APlayerController* ReturnValue);
	void GetOwningPawn(class APawn* ReturnValue);
	TArray<class AActor*> GetActorsInSelectionRectangle(class UClass* ClassFilter, struct FVector2D* FirstPoint, struct FVector2D* SecondPoint, bool* bIncludeNonCollidingComponents, bool* bActorMustBeFullyEnclosed);
	float DrawTextureSimple(class UTexture** Texture, float* Scale, bool* bScalePosition);
	enum class EBlendMode DrawTexture(class UTexture** Texture, float* ScreenW, float* ScreenH, float* TextureU, float* TextureUWidth, float* TextureVHeight, struct FLinearColor* TintColor, float* Scale, bool* bScalePosition, float* Rotation, struct FVector2D* RotPivot);
	float DrawText(class FString* Text, const struct FLinearColor& TextColor, class UFont** Font, float* Scale, bool* bScalePosition);
	float DrawRect(struct FLinearColor* RectColor, float* ScreenW, float* ScreenH);
	void DrawMaterialTriangle(class UMaterialInterface* Material, struct FVector2D* V0_Pos, struct FVector2D* V1_Pos, struct FVector2D* V2_Pos, struct FVector2D* V0_UV, struct FVector2D* V1_UV, struct FVector2D* V2_UV, struct FLinearColor* V0_Color, struct FLinearColor* V1_Color, struct FLinearColor* V2_Color);
	float DrawMaterialSimple(class UMaterialInterface* Material, float* ScreenW, float* ScreenH, float* Scale, bool* bScalePosition);
	float DrawMaterial(class UMaterialInterface* Material, float* ScreenW, float* ScreenH, float* MaterialU, float* MaterialV, float* MaterialUWidth, float* MaterialVHeight, float* Scale, bool* bScalePosition, float* Rotation, struct FVector2D* RotPivot);
	float DrawLine(float* StartScreenX, float* StartScreenY, float* EndScreenX, float* EndScreenY);
	struct FVector Deproject();
	int32 AddHitBox(struct FVector2D* Position);
	bool AddDebugText(const struct FVector& Offset, struct FVector* DesiredOffset, const struct FColor& TextColor, bool* bSkipOverwriteCheck, bool* bAbsoluteLocation, class UFont** InFont);
};

// 0x98 (0xC0 - 0x28)
// Class Engine.PendingNetGame
class UPendingNetGame : public UObject
{
public:
	uint8                                        Pad_244B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UNetDriver*                            NetDriver;                                         // 0x30(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UDemoNetDriver*                        DemoNetDriver;                                     // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm)
	uint8                                        Pad_244D[0x80];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPendingNetGame* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SaveGame
class USaveGame : public UObject
{
public:

	static class UClass* StaticClass();
	static class USaveGame* GetDefaultObj();

};

// 0x118 (0x5E0 - 0x4C8)
// Class Engine.PlayerState
class APlayerState : public AInfo
{
public:
	float                                        Score;                                             // 0x4C8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PlayerID;                                          // 0x4CC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        CompressedPing;                                    // 0x4D0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2467[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bShouldUpdateReplicatedPing : 1;                   // Mask: 0x1, PropSize: 0x10x4D2(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSpectator : 1;                                  // Mask: 0x2, PropSize: 0x10x4D2(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlySpectator : 1;                                // Mask: 0x4, PropSize: 0x10x4D2(0x1)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsABot : 1;                                       // Mask: 0x8, PropSize: 0x10x4D2(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_159 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsInactive : 1;                                   // Mask: 0x20, PropSize: 0x10x4D2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFromPreviousLevel : 1;                            // Mask: 0x40, PropSize: 0x10x4D2(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_15A : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_246A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        StartTime;                                         // 0x4D4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                EngineMessageClass;                                // 0x4D8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_246B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SavedNetworkAddress;                               // 0x4E8(0x10)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FUniqueNetIdRepl                      UniqueID;                                          // 0x4F8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_246C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnPawnSet;                                         // 0x530(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APawn*                                 PawnPrivate;                                       // 0x540(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_246E[0x78];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerNamePrivate;                                 // 0x5C0(0x10)(Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_246F[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APlayerState* GetDefaultObj();

	class APlayerState* ReceiveOverrideWith();
	class APlayerState* ReceiveCopyProperties();
	void OnRep_UniqueId();
	void OnRep_Score();
	void OnRep_PlayerName();
	void OnRep_PlayerId();
	void OnRep_bIsInactive();
	class AActor* OnPawnPrivateDestroyed();
	void IsSpectator(bool ReturnValue);
	void IsOnlyASpectator(bool ReturnValue);
	void IsABot(bool ReturnValue);
	void GetUniqueNetIDOrNetPlayerName(const class FString& ReturnValue);
	void GetScore(float ReturnValue);
	void GetPlayerName(const class FString& ReturnValue);
	void GetPlayerId(int32 ReturnValue);
	void GetPlayerController(class APlayerController* ReturnValue);
	void GetPingInMilliseconds(float ReturnValue);
	void GetPawn(class APawn* ReturnValue);
	void GetNetPlayerName(const class FString& ReturnValue);
	void GetExactPing(float ReturnValue);
	void GetCompressedPing(uint8 ReturnValue);
	void BP_GetUniqueId(const struct FUniqueNetIdRepl& ReturnValue);
};

// 0xF8 (0x218 - 0x120)
// Class Engine.ProjectileMovementComponent
class UProjectileMovementComponent : public UMovementComponent
{
public:
	float                                        MinLifespanToUpdate;                               // 0x120(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	float                                        InitialSpeed;                                      // 0x124(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MaxSpeed;                                          // 0x128(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bRotationFollowsVelocity : 1;                      // Mask: 0x1, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bShouldBounce : 1;                                 // Mask: 0x2, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bInitialVelocityInLocalSpace : 1;                  // Mask: 0x4, PropSize: 0x10x12C(0x1)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bForceSubStepping : 1;                             // Mask: 0x8, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bTriggerBounceImpactNotification : 1;              // Mask: 0x10, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bIsHomingProjectile : 1;                           // Mask: 0x20, PropSize: 0x10x12C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bCheckForProjectileUnderwater : 1;                 // Mask: 0x40, PropSize: 0x10x12C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bIsProjectileUnderwater : 1;                       // Mask: 0x80, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bKeepInitialBasedOnComponent : 1;                  // Mask: 0x1, PropSize: 0x10x12D(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_15B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2485[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProjectileUnderwaterExtraGravityScale;             // 0x130(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ProjectileUnderwaterExtraSpeedScale;               // 0x134(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ProjectileDampingFactor;                           // 0x138(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        FallingProjectileDampingFactor;                    // 0x13C(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ProjectileGravityScale;                            // 0x140(0x4)(Net, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Buoyancy;                                          // 0x144(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               PreviousVelocity;                                  // 0x148(0x18)(ConstParm, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ElapsedLifespan;                                   // 0x160(0x4)(Edit, ExportObject, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Bounciness;                                        // 0x164(0x4)(Edit, ConstParm, Parm, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Friction;                                          // 0x168(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        BounceVelocityStopSimulatingThreshold;             // 0x16C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnProjectileBounce;                                // 0x170(0x10)(Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnProjectileStop;                                  // 0x180(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        HomingAccelerationMagnitude;                       // 0x190(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	TWeakObjectPtr<class USceneComponent>        HomingTargetComponent;                             // 0x194(0x8)(Edit, BlueprintVisible, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2489[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HomingTargetComponentOffset;                       // 0x1A0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        MaxSimulationTimeStep;                             // 0x1B8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	int32                                        MaxSimulationIterations;                           // 0x1BC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	class UPrimitiveComponent*                   BasedOnComponent;                                  // 0x1C0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               BasedLocation;                                     // 0x1C8(0x18)(Edit, BlueprintVisible, Net, OutParm, Transient, Config, EditConst, SubobjectReference)
	struct FRotator                              BasedRotation;                                     // 0x1E0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               BasedVelocity;                                     // 0x1F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bAffectedByBasedCompRotation : 1;                  // Mask: 0x1, PropSize: 0x10x210(0x1)(ConstParm, BlueprintVisible, OutParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_248F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UProjectileMovementComponent* GetDefaultObj();

	void UpdateBasedProjectileTransform();
	struct FHitResult StopSimulating();
	void SetVelocityInLocalSpace(const struct FVector& NewVelocity);
	void SetAffectedByBasedRotation(bool NewAffected);
	void RecalculateBasedTransform();
	struct FHitResult OnProjectileStopDelegate__DelegateSignature();
	struct FHitResult OnProjectileBounceDelegate__DelegateSignature(const struct FVector& ImpactVelocity);
	void LimitVelocity(const struct FVector& NewVelocity, const struct FVector& ReturnValue);
	void GetBasedComponentTransform(const struct FTransform& ReturnValue);
};

// 0x0 (0x5B0 - 0x5B0)
// Class Engine.SpectatorPawn
class ASpectatorPawn : public ADefaultPawn
{
public:

	static class UClass* StaticClass();
	static class ASpectatorPawn* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.SoundNode
class USoundNode : public UObject
{
public:
	TArray<class USoundNode*>                    ChildNodes;                                        // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2493[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNode* GetDefaultObj();

};

// 0x30 (0x78 - 0x48)
// Class Engine.SoundNodeRandom
class USoundNodeRandom : public USoundNode
{
public:
	TArray<float>                                Weights;                                           // 0x48(0x10)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	TArray<bool>                                 HasBeenUsed;                                       // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumRandomUsed;                                     // 0x68(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PreselectAtLevelLoad;                              // 0x6C(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldExcludeFromBranchCulling : 1;               // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSoundCueExcludedFromBranchCulling : 1;            // Mask: 0x2, PropSize: 0x10x70(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRandomizeWithoutReplacement : 1;                  // Mask: 0x4, PropSize: 0x10x70(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2495[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeRandom* GetDefaultObj();

};

// 0x20 (0x538 - 0x518)
// Class Engine.PhysicsVolume
class APhysicsVolume : public AVolume
{
public:
	float                                        TerminalVelocity;                                  // 0x518(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Priority;                                          // 0x51C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        FluidFriction;                                     // 0x520(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bWaterVolume : 1;                                  // Mask: 0x1, PropSize: 0x10x524(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPhysicsOnContact : 1;                             // Mask: 0x2, PropSize: 0x10x524(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_15C : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_249B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WaterDensity;                                      // 0x528(0x4)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterDamping;                                      // 0x52C(0x4)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PhysicsMinWalkableFloorZ;                          // 0x530(0x4)(BlueprintVisible, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_15D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bPreventWaterSubmersion : 1;                       // Mask: 0x2, PropSize: 0x10x534(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDynamicWaterVolume : 1;                           // Mask: 0x4, PropSize: 0x10x534(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontSetWaterNavCollision : 1;                     // Mask: 0x8, PropSize: 0x10x534(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_249E[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APhysicsVolume* GetDefaultObj();

	void GetVolumeZAtPosition2D(struct FVector2D* Position, float ReturnValue);
	void GetVolumeZAtPosition(struct FVector2D* Position, float ReturnValue);
};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.SkyLight
class ASkyLight : public AInfo
{
public:
	class USkyLightComponent*                    LightComponent;                                    // 0x4C8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x4D0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_24A1[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASkyLight* GetDefaultObj();

	void OnRep_bEnabled();
};

// 0x98 (0x270 - 0x1D8)
// Class Engine.TextureCube
class UTextureCube : public UTexture
{
public:
	uint8                                        Pad_24A2[0x98];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureCube* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class Engine.EdGraphNode
class UEdGraphNode : public UObject
{
public:
	uint8                                        Pad_24A5[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UEdGraphPin_Deprecated*>        DeprecatedPins;                                    // 0x38(0x10)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	int32                                        NodePosX;                                          // 0x48(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NodePosY;                                          // 0x4C(0x4)(Edit, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NodeWidth;                                         // 0x50(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NodeHeight;                                        // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENodeAdvancedPins                 AdvancedPinDisplay;                                // 0x58(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENodeEnabledState                 EnabledState;                                      // 0x59(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_24A7[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_15E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bDisplayAsDisabled : 1;                            // Mask: 0x2, PropSize: 0x10x5B(0x1)(Edit, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUserSetEnabledState : 1;                          // Mask: 0x4, PropSize: 0x10x5B(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsIntermediateNode : 1;                           // Mask: 0x8, PropSize: 0x10x5B(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasCompilerMessage : 1;                           // Mask: 0x10, PropSize: 0x10x5B(0x1)(EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_15F : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_24A9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NodeComment;                                       // 0x60(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ErrorType;                                         // 0x70(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_24AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ErrorMsg;                                          // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FGuid                                 NodeGuid;                                          // 0x88(0x10)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UEdGraphNode* GetDefaultObj();

};

// 0x218 (0x980 - 0x768)
// Class Engine.InstancedStaticMeshComponent
class UInstancedStaticMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_251B[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInstancedStaticMeshInstanceData> PerInstanceSMData;                                 // 0x778(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FMatrix>                       PerInstancePrevTransform;                          // 0x788(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumCustomDataFloats;                               // 0x798(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_251C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                PerInstanceSMCustomData;                           // 0x7A0(0x10)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        InstancingRandomSeed;                              // 0x7B0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_251D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInstancedStaticMeshRandomSeed> AdditionalRandomSeeds;                             // 0x7B8(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoreAutomaticBoundsWPODisableDistance : 1;      // Mask: 0x1, PropSize: 0x10x7C8(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_160 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_251E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        InstanceMinDrawDistance;                           // 0x7CC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InstanceStartCullDistance;                         // 0x7D0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        InstanceEndCullDistance;                           // 0x7D4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                InstanceReorderTable;                              // 0x7D8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2520[0xC0];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        NumPendingLightmaps;                               // 0x8A8(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2521[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInstancedStaticMeshMappingInfo> CachedMappings;                                    // 0x8B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2522[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UActorComponent*>               ReferencedAttachedComponentObjects;                // 0x8E0(0x10)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2523[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AttachedComponentScaleFactor;                      // 0x8F4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFoliageBaseType*                      FoliageTypeReference;                              // 0x8F8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxScaleForAttachedComponent;                      // 0x900(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinScaleForAttachedComponent;                      // 0x904(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint32>                               InstancesVisibility;                               // 0x908(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideWalkableFloorZ;                            // 0x918(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayerOverrideWalkableFloorZ;                      // 0x91C(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreVisibilityCheck : 1;                        // Mask: 0x1, PropSize: 0x10x920(0x1)(Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bReplicateThisComponent : 1;                       // Mask: 0x2, PropSize: 0x10x920(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_161 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsFallingTree : 1;                                // Mask: 0x8, PropSize: 0x10x920(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_162 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bInstanceRequiresPhysXCollision : 1;               // Mask: 0x40, PropSize: 0x10x920(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDontScaleAttachedComponent : 1;                   // Mask: 0x80, PropSize: 0x10x920(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2524[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AttachedComponentClass;                            // 0x928(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            OverrideDestructionMaterials;                      // 0x930(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                DestroyedMeshActorClass;                           // 0x940(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMesh*                           TreeStumpMesh;                                     // 0x948(0x8)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideTreeHarvestSound;                          // 0x950(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            OverrideTreeGroundImpactSound;                     // 0x958(0x8)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceAlongTreeToSpawnImpactSound;               // 0x960(0x4)(Edit, ConstParm, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleMaxX;                                         // 0x964(0x4)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleMinX;                                         // 0x968(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MeshUnscaledBounds;                                // 0x96C(0x4)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2525[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInstancedStaticMeshComponent* GetDefaultObj();

	bool UpdateInstanceTransform(int32* InstanceIndex, const struct FTransform& NewInstanceTransform, bool bWorldSpace, bool* bMarkRenderStateDirty, bool ReturnValue);
	void ShowInstance(int32 OriginalIndex);
	void SetCustomDataValue(int32* InstanceIndex, int32 CustomDataIndex, float CustomDataValue, bool* bMarkRenderStateDirty, bool ReturnValue);
	int32 SetCullDistances();
	void RemoveInstances(const TArray<int32>& InstancesToRemove, bool ReturnValue);
	void RemoveInstance(int32* InstanceIndex, const struct FVector& HitDirection, float Damage, float TotalHealth, bool ReturnValue);
	TArray<uint16> MulticastShowInstances(bool* bMarkRenderStateDirty);
	void IsValidInstance(int32* InstanceIndex, bool ReturnValue);
	void GetPositionOfInstance(int32* Index, const struct FVector& ReturnValue);
	void GetInstanceTransform(int32* InstanceIndex, struct FTransform* OutInstanceTransform, bool bWorldSpace, bool ReturnValue);
	void GetInstancesOverlappingSphere(struct FVector* Center, float* Radius, bool* bSphereInWorldSpace, const TArray<int32>& ReturnValue);
	void GetInstancesOverlappingBox(struct FBox* Box, bool* bBoxInWorldSpace, const TArray<int32>& ReturnValue);
	void GetInstanceCount(int32 ReturnValue);
	class UClass* DealDirectDamage(int32* HitBodyIndex);
	void CopyInstanceTransforms(class UInstancedStaticMeshComponent** DestComponent);
	void ClientSetHealthPercentageForInstance(int32* InstanceIndex, float* HealthPercentage);
	void ClearInstances();
	bool BatchUpdateInstancesTransforms(TArray<struct FTransform>* NewInstancesTransforms, bool bWorldSpace, bool* bMarkRenderStateDirty, bool ReturnValue);
	bool BatchUpdateInstancesTransform(struct FTransform* NewInstancesTransform, bool bWorldSpace, bool* bMarkRenderStateDirty, bool ReturnValue);
	struct FTransform AddInstanceWorldSpace(int32 ReturnValue);
	void AddInstances(const TArray<struct FTransform>& InstanceTransforms, bool* bShouldReturnIndices, bool bWorldSpace, const TArray<int32>& ReturnValue);
	void AddInstance(struct FTransform* InstanceTransform, bool bWorldSpace, int32 ReturnValue);
};

// 0x190 (0xB10 - 0x980)
// Class Engine.HierarchicalInstancedStaticMeshComponent
class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{
public:
	uint8                                        Pad_2532[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseTranslatedInstanceSpace : 1;                   // Mask: 0x1, PropSize: 0x10x990(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_163 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2533[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TranslatedInstanceSpaceOrigin;                     // 0x998(0x18)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                SortedInstances;                                   // 0x9B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumBuiltInstances;                                 // 0x9C0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2535[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBox                                  BuiltInstanceBounds;                               // 0x9C8(0x38)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBox                                  UnbuiltInstanceBounds;                             // 0xA00(0x38)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBox>                          UnbuiltInstanceBoundsList;                         // 0xA38(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableDensityScaling : 1;                         // Mask: 0x1, PropSize: 0x10xA48(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_164 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2537[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OcclusionLayerNumNodes;                            // 0xA50(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2538[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoxSphereBounds                      CacheMeshExtendedBounds;                           // 0xA58(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableCollision;                                 // 0xA90(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2539[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        InstanceCountToRender;                             // 0xA94(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_253A[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHierarchicalInstancedStaticMeshComponent* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Engine.FoliageBaseType
class UFoliageBaseType : public UObject
{
public:
	TSoftObjectPtr<class UGeometryCollection>    SoftDestructionAsset;                              // 0x28(0x30)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UFoliageBaseType* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.ISMPartitionActor
class AISMPartitionActor : public APartitionActor
{
public:
	uint8                                        Pad_253C[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AISMPartitionActor* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.StaticMeshActor
class AStaticMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x4C8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bStaticMeshReplicateMovement;                      // 0x4D0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENavDataGatheringMode             NavigationGeometryGatheringMode;                   // 0x4D1(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_253E[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AStaticMeshActor* GetDefaultObj();

	enum class EComponentMobility SetMobility();
};

// 0x70 (0x98 - 0x28)
// Class Engine.MaterialInterface
class UMaterialInterface : public UObject
{
public:
	uint8                                        Pad_2552[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USubsurfaceProfile*                    SubsurfaceProfile;                                 // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2553[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FLightmassMaterialInterfaceSettings   LightmassSettings;                                 // 0x50(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMaterialTextureInfo>          TextureStreamingData;                              // 0x60(0x10)(Edit, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x70(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2554[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialInterface* GetDefaultObj();

	float SetForceMipLevelsToBeResident(bool* OverrideForceMiplevelsToBeResident, bool* bForceMiplevelsToBeResidentValue, int32 CinematicTextureGroups, bool* bFastResponse);
	void GetPhysicalMaterialMask(class UPhysicalMaterialMask* ReturnValue);
	void GetPhysicalMaterialFromMap(int32* Index, class UPhysicalMaterial* ReturnValue);
	void GetPhysicalMaterial(class UPhysicalMaterial* ReturnValue);
	void GetParameterInfo(enum class EMaterialParameterAssociation* Association, class FName ParameterName, class UMaterialFunctionInterface** LayerFunction, const struct FMaterialParameterInfo& ReturnValue);
	void GetBlendMode(enum class EBlendMode ReturnValue);
	void GetBaseMaterial(class UMaterial* ReturnValue);
};

// 0x198 (0x230 - 0x98)
// Class Engine.MaterialInstance
class UMaterialInstance : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                     PhysMaterial;                                      // 0x98(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	class UPhysicalMaterial*                     PhysicalMaterialMap[0x8];                          // 0xA0(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    Parent;                                            // 0xE0(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FMaterialOverrideNanite               NaniteOverrideMaterial;                            // 0xE8(0x40)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasStaticPermutationResource : 1;                 // Mask: 0x1, PropSize: 0x10x128(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideSubsurfaceProfile : 1;                    // Mask: 0x2, PropSize: 0x10x128(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_165 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2556[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FScalarParameterValue>         ScalarParameterValues;                             // 0x138(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVectorParameterValue>         VectorParameterValues;                             // 0x148(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FDoubleVectorParameterValue>   DoubleVectorParameterValues;                       // 0x158(0x10)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTextureParameterValue>        TextureParameterValues;                            // 0x168(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<struct FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues;              // 0x178(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSparseVolumeTextureParameterValue> SparseVolumeTextureParameterValues;                // 0x188(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFontParameterValue>           FontParameterValues;                               // 0x198(0x10)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMaterialInstanceBasePropertyOverrides BasePropertyOverrides;                             // 0x1A8(0xC)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2557[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FStaticParameterSetRuntimeData        StaticParametersRuntime;                           // 0x1C0(0x38)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2558[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class UMaterialInstance*                     FarDrawOverride;                                   // 0x228(0x8)(BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialInstance* GetDefaultObj();

};

// 0x8 (0x238 - 0x230)
// Class Engine.MaterialInstanceConstant
class UMaterialInstanceConstant : public UMaterialInstance
{
public:
	class UPhysicalMaterialMask*                 PhysMaterialMask;                                  // 0x230(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialInstanceConstant* GetDefaultObj();

	void K2_GetVectorParameterValue(class FName ParameterName, const struct FLinearColor& ReturnValue);
	void K2_GetTextureParameterValue(class FName ParameterName, class UTexture* ReturnValue);
	void K2_GetScalarParameterValue(class FName ParameterName, float ReturnValue);
};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionCustomOutput
class UMaterialExpressionCustomOutput : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionCustomOutput* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.HLODBuilder
class UHLODBuilder : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHLODBuilder* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.BlueprintCore
class UBlueprintCore : public UObject
{
public:
	class UClass*                                SkeletonGeneratedClass;                            // 0x28(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                GeneratedClass;                                    // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bLegacyNeedToPurgeSkelRefs;                        // 0x38(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_256A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 BlueprintGuid;                                     // 0x3C(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_256B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBlueprintCore* GetDefaultObj();

};

// 0x58 (0xA8 - 0x50)
// Class Engine.Blueprint
class UBlueprint : public UBlueprintCore
{
public:
	uint8                                        Pad_256D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ParentClass;                                       // 0x58(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	enum class EBlueprintType                    BlueprintType;                                     // 0x60(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bRecompileOnLoad : 1;                              // Mask: 0x1, PropSize: 0x10x61(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, SubobjectReference)
	uint8                                        bHasBeenRegenerated : 1;                           // Mask: 0x2, PropSize: 0x10x61(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsRegeneratingOnLoad : 1;                         // Mask: 0x4, PropSize: 0x10x61(0x1)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_166 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_256F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        BlueprintSystemVersion;                            // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USimpleConstructionScript*             SimpleConstructionScript;                          // 0x68(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, SubobjectReference)
	TArray<class UActorComponent*>               ComponentTemplates;                                // 0x70(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class UTimelineTemplate*>             Timelines;                                         // 0x80(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<struct FBPComponentClassOverride>     ComponentClassOverrides;                           // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UInheritableComponentHandler*          InheritableComponentHandler;                       // 0xA0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UBlueprint* GetDefaultObj();

};

// 0x828 (0xAF0 - 0x2C8)
// Class Engine.CameraComponent
class UCameraComponent : public USceneComponent
{
public:
	float                                        FieldOfView;                                       // 0x2C8(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	float                                        OrthoWidth;                                        // 0x2CC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        OrthoNearClipPlane;                                // 0x2D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OrthoFarClipPlane;                                 // 0x2D4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AspectRatio;                                       // 0x2D8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bConstrainAspectRatio : 1;                         // Mask: 0x1, PropSize: 0x10x2DC(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseFieldOfViewForLOD : 1;                         // Mask: 0x2, PropSize: 0x10x2DC(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLockToHmd : 1;                                    // Mask: 0x4, PropSize: 0x10x2DC(0x1)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePawnControlRotation : 1;                       // Mask: 0x8, PropSize: 0x10x2DC(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_167 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ECameraProjectionMode             ProjectionMode;                                    // 0x2DD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2584[0x62];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        PostProcessBlendWeight;                            // 0x340(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2585[0x2C];                                    // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x370(0x780)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst)

	static class UClass* StaticClass();
	static class UCameraComponent* GetDefaultObj();

	void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD);
	void SetProjectionMode(enum class ECameraProjectionMode InProjectionMode);
	void SetPostProcessBlendWeight(float InPostProcessBlendWeight);
	void SetOrthoWidth(float InOrthoWidth);
	float SetOrthoNearClipPlane();
	float SetOrthoFarClipPlane();
	float SetFieldOfView();
	bool SetConstraintAspectRatio();
	float SetAspectRatio();
	TScriptInterface<class IBlendableInterface> RemoveBlendable();
	void OnCameraMeshHiddenChanged();
	struct FMinimalViewInfo GetCameraView();
	float AddOrUpdateBlendable();
};

// 0x0 (0x30 - 0x30)
// Class Engine.AudioEngineSubsystem
class UAudioEngineSubsystem : public UDynamicSubsystem
{
public:

	static class UClass* StaticClass();
	static class UAudioEngineSubsystem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ActiveSoundUpdateInterface
class IActiveSoundUpdateInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IActiveSoundUpdateInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationAssetExtensions
class UAnimationAssetExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimationAssetExtensions* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimBlueprintClassSubsystem_PropertyAccess
class UAnimBlueprintClassSubsystem_PropertyAccess : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAnimBlueprintClassSubsystem_PropertyAccess* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationDataModelNotifiesExtensions
class UAnimationDataModelNotifiesExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimationDataModelNotifiesExtensions* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimLayerInterface
class IAnimLayerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnimLayerInterface* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Engine.AnimationAsset
class UAnimationAsset : public UObject
{
public:
	uint8                                        Pad_2589[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             Skeleton;                                          // 0x38(0x8)(ExportObject, Net, EditFixedSize, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_258A[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UAnimMetaData*>                 MetaData;                                          // 0x60(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x70(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UAnimationAsset* GetDefaultObj();

	void GetPlayLength(float ReturnValue);
};

// 0x30 (0xB0 - 0x80)
// Class Engine.AnimSequenceBase
class UAnimSequenceBase : public UAnimationAsset
{
public:
	TArray<struct FAnimNotifyEvent>              Notifies;                                          // 0x80(0x10)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SequenceLength;                                    // 0x90(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	uint8                                        Pad_258E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawCurveTracks                       RawCurveData;                                      // 0x98(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RateScale;                                         // 0xA8(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoop;                                             // 0xAC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_258F[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimSequenceBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.RawAnimSequenceTrackExtensions
class URawAnimSequenceTrackExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class URawAnimSequenceTrackExtensions* GetDefaultObj();

	struct FRawAnimSequenceTrack GetScaleKeys(const TArray<struct FVector>& ReturnValue);
	struct FRawAnimSequenceTrack GetRotationalKeys(const TArray<struct FQuat>& ReturnValue);
	struct FRawAnimSequenceTrack GetPositionalKeys(const TArray<struct FVector>& ReturnValue);
};

// 0x50 (0x78 - 0x28)
// Class Engine.AssetExportTask
class UAssetExportTask : public UObject
{
public:
	class UObject*                               Object;                                            // 0x28(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UExporter*                             Exporter;                                          // 0x30(0x8)(EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                Filename;                                          // 0x38(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	bool                                         bSelected;                                         // 0x48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bReplaceIdentical;                                 // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrompt;                                           // 0x4A(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutomated;                                        // 0x4B(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseFileArchive;                                   // 0x4C(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWriteEmptyFiles;                                  // 0x4D(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_259C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       IgnoreObjectList;                                  // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               Options;                                           // 0x60(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	TArray<class FString>                        Errors;                                            // 0x68(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UAssetExportTask* GetDefaultObj();

};

// 0xC8 (0x100 - 0x38)
// Class Engine.AssetManagerSettings
class UAssetManagerSettings : public UDeveloperSettings
{
public:
	TArray<struct FPrimaryAssetTypeInfo>         PrimaryAssetTypesToScan;                           // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, SubobjectReference)
	TArray<struct FDirectoryPath>                DirectoriesToExclude;                              // 0x48(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimaryAssetRulesOverride>    PrimaryAssetRules;                                 // 0x58(0x10)(ExportObject, Net, EditFixedSize, OutParm, Transient, EditConst)
	TArray<struct FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules;                           // 0x68(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyCookProductionAssets;                         // 0x78(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldManagerDetermineTypeAndName;                // 0x79(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldGuessTypeAndNameInEditor;                   // 0x7A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldAcquireMissingChunksOnLoad;                 // 0x7B(0x1)(Edit, ConstParm, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldWarnAboutInvalidAssets;                     // 0x7C(0x1)(Edit, ConstParm, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_259F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FAssetManagerRedirect>         PrimaryAssetIdRedirects;                           // 0x80(0x10)(ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAssetManagerRedirect>         PrimaryAssetTypeRedirects;                         // 0x90(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAssetManagerRedirect>         AssetPathRedirects;                                // 0xA0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSet<class FName>                            MetaDataTagsForAssetRegistry;                      // 0xB0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAssetManagerSettings* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.AsyncPhysicsData
class UAsyncPhysicsData : public UObject
{
public:
	int32                                        ServerFrame;                                       // 0x28(0x4)(Edit, BlueprintVisible, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReplicationRedundancy;                             // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAsyncPhysicsData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AudioPanelWidgetInterface
class IAudioPanelWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAudioPanelWidgetInterface* GetDefaultObj();

	void GetIconBrushName(class FName ReturnValue);
	void GetEditorName(class FText ReturnValue);
};

// 0x18 (0x88 - 0x70)
// Class Engine.BattlEyeChannel
class UBattlEyeChannel : public UChannel
{
public:
	uint8                                        Pad_25A7[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBattlEyeChannel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BlendableInterface
class IBlendableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IBlendableInterface* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.AnalysisProperties
class UAnalysisProperties : public UObject
{
public:
	class FString                                Function;                                          // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor)

	static class UClass* StaticClass();
	static class UAnalysisProperties* GetDefaultObj();

};

// 0x158 (0x1D8 - 0x80)
// Class Engine.BlendSpace
class UBlendSpace : public UAnimationAsset
{
public:
	uint8                                        Pad_25AD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bContainsRotationOffsetMeshSpaceSamples;           // 0x88(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25AF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FInterpolationParameter               InterpolationParam[0x3];                           // 0x8C(0x30)(Edit, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TargetWeightInterpolationSpeedPerSec;              // 0xBC(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTargetWeightInterpolationEaseInOut;               // 0xC0(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowMeshSpaceBlending;                           // 0xC1(0x1)(Edit, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLoop;                                             // 0xC2(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25B2[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AnimLength;                                        // 0xC4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ENotifyTriggerMode                NotifyTriggerMode;                                 // 0xC8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInterpolateUsingGrid;                             // 0xC9(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPreferredTriangulationDirection  PreferredTriangulationDirection;                   // 0xCA(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EBlendSpacePerBoneBlendMode       PerBoneBlendMode;                                  // 0xCB(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25B5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPerBoneInterpolation>         ManualPerBoneOverrides;                            // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FBlendSpaceBlendProfile               PerBoneBlendProfile;                               // 0xE0(0x10)(EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25B6[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SampleIndexWithMarkers;                            // 0x100(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25B7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBlendSample>                  SampleData;                                        // 0x108(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FEditorElement>                GridSamples;                                       // 0x118(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBlendSpaceData                       BlendSpaceData;                                    // 0x128(0x20)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst)
	struct FBlendParameter                       BlendParameters[0x3];                              // 0x148(0x78)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EBlendSpaceAxis                   AxisToScaleAnimation;                              // 0x1C0(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25BA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                DimensionIndices;                                  // 0x1C8(0x10)(ConstParm, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBlendSpace* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Breakpoint
class UBreakpoint : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBreakpoint* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintExtension
class UBlueprintExtension : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBlueprintExtension* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BookmarkBase
class UBookmarkBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBookmarkBase* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.BookMark2D
class UBookMark2D : public UBookmarkBase
{
public:
	float                                        Zoom2D;                                            // 0x28(0x4)(EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FIntPoint                             Location;                                          // 0x2C(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_25C2[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBookMark2D* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.ReflectionCapture
class AReflectionCapture : public AActor
{
public:
	class UReflectionCaptureComponent*           CaptureComponent;                                  // 0x4C8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class AReflectionCapture* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class Engine.BoxReflectionCapture
class ABoxReflectionCapture : public AReflectionCapture
{
public:

	static class UClass* StaticClass();
	static class ABoxReflectionCapture* GetDefaultObj();

	void GetBoxCaptureComponent(class UBoxReflectionCaptureComponent* ReturnValue);
};

// 0x148 (0x410 - 0x2C8)
// Class Engine.ReflectionCaptureComponent
class UReflectionCaptureComponent : public USceneComponent
{
public:
	class UBillboardComponent*                   CaptureOffsetComponent;                            // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EReflectionSourceType             ReflectionSourceType;                              // 0x2D0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25CB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          Cubemap;                                           // 0x2D8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        SourceCubemapAngle;                                // 0x2E0(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Brightness;                                        // 0x2E4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                               CaptureOffset;                                     // 0x2E8(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FGuid                                 MapBuildDataId;                                    // 0x300(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25D0[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CaptureBrightness;                                 // 0x338(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25D1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AReflectionCapture*                    CaptureParent;                                     // 0x340(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PresistentCaptureParent;                           // 0x348(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureCube*                          AmbientCubemap;                                    // 0x350(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          SkyColor;                                          // 0x358(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          GroundColor;                                       // 0x368(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyIBLIntensity;                                   // 0x378(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeOutDistanceStart;                              // 0x37C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeOutDistanceEnd;                                // 0x380(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseSeperateShadowFadeOut;                         // 0x384(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ShadowFadeOutDistanceStart;                        // 0x388(0x4)(ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowFadeOutDistanceEnd;                          // 0x38C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Bounces;                                           // 0x390(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25D8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                BouncesIntensity;                                  // 0x398(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AtmosphericFogIntensity;                           // 0x3A8(0x4)(Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheTrueSkyBrightness;                              // 0x3AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TrueSkyColorMultiplier;                            // 0x3B0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBakeAndStream : 1;                                // Mask: 0x1, PropSize: 0x10x3C8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGlobalBrightness : 1;                          // Mask: 0x2, PropSize: 0x10x3C8(0x1)(ConstParm, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockCaptureData : 1;                              // Mask: 0x4, PropSize: 0x10x3C8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGlobalGroundColorMultiplier : 1;               // Mask: 0x8, PropSize: 0x10x3C8(0x1)(ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGlobalSkyColorMultiplier : 1;                  // Mask: 0x10, PropSize: 0x10x3C8(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseGlobalSkyIntensityMultiplier : 1;              // Mask: 0x20, PropSize: 0x10x3C8(0x1)(ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParentBrightness : 1;                          // Mask: 0x40, PropSize: 0x10x3C8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_168 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_25DE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ParentBrightnessMultiplier;                        // 0x3CC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SelfAndChildBrightnessMultiplier;                  // 0x3D0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParentAmbientLightInfo : 1;                    // Mask: 0x1, PropSize: 0x10x3D4(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCaptureAmbientShadow : 1;                         // Mask: 0x2, PropSize: 0x10x3D4(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_169 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_25E1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AmbientShadowIntensity;                            // 0x3D8(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientLightInfluence;                             // 0x3DC(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientShadowNear;                                 // 0x3E0(0x4)(ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientShadowFar;                                  // 0x3E4(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientShadowFadeDistanceFraction;                 // 0x3E8(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AmbientTranslucencyColor;                          // 0x3EC(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AmbientShadowCaptureObjectLayerMask;               // 0x3FC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AmbientShadowCaptureScale;                         // 0x400(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxAmbientShadowCaptureSize;                       // 0x404(0x4)(ConstParm, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EReflectionDFAOOption             DFAOOption;                                        // 0x408(0x1)(BlueprintVisible, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25E4[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UReflectionCaptureComponent* GetDefaultObj();

};

// 0x20 (0x430 - 0x410)
// Class Engine.BoxReflectionCaptureComponent
class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float                                        BoxTransitionDistance;                             // 0x410(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25E9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBoxComponent*                         PreviewInfluenceBox;                               // 0x418(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBoxComponent*                         PreviewCaptureBox;                                 // 0x420(0x8)(Edit, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25EA[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBoxReflectionCaptureComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BuiltInAttributesExtensions
class UBuiltInAttributesExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBuiltInAttributesExtensions* GetDefaultObj();

};

// 0x7E8 (0x810 - 0x28)
// Class Engine.CameraAnim
class UCameraAnim : public UObject
{
public:
	class UInterpGroup*                          CameraInterpGroup;                                 // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AnimLength;                                        // 0x30(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBox                                  BoundingBox;                                       // 0x38(0x38)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bRelativeToInitialTransform : 1;                   // Mask: 0x1, PropSize: 0x10x70(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRelativeToInitialFOV : 1;                         // Mask: 0x2, PropSize: 0x10x70(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_16A : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_25F2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseFOV;                                           // 0x74(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F4[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  BasePostProcessSettings;                           // 0x80(0x780)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BasePostProcessBlendWeight;                        // 0x800(0x4)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_25F5[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraAnim* GetDefaultObj();

};

// 0x168 (0x190 - 0x28)
// Class Engine.CameraAnimInst
class UCameraAnimInst : public UObject
{
public:
	class UCameraAnim*                           CamAnim;                                           // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UInterpGroupInst*                      InterpGroupInst;                                   // 0x30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2601[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        PlayRate;                                          // 0x50(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2602[0x14];                                    // Fixing Size After Last Property  > TateDumper <
	class UInterpTrackMove*                      MoveTrack;                                         // 0x68(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UInterpTrackInstMove*                  MoveInst;                                          // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECameraShakePlaySpace             PlaySpace;                                         // 0x78(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2603[0x117];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraAnimInst* GetDefaultObj();

	bool Stop();
	void SetScale(float* NewDuration);
	void SetDuration(float* NewDuration);
};

// 0x8 (0x1DF0 - 0x1DE8)
// Class Engine.ChildConnection
class UChildConnection : public UNetConnection
{
public:
	class UNetConnection*                        Parent;                                            // 0x1DE8(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UChildConnection* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.PlatformInterfaceBase
class UPlatformInterfaceBase : public UObject
{
public:
	TArray<struct FDelegateArray>                AllDelegates;                                      // 0x28(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPlatformInterfaceBase* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.CloudStorageBase
class UCloudStorageBase : public UPlatformInterfaceBase
{
public:
	TArray<class FString>                        LocalCloudFiles;                                   // 0x38(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressDelegateCalls : 1;                        // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2606[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCloudStorageBase* GetDefaultObj();

};

// 0x50 (0x1E38 - 0x1DE8)
// Class Engine.DemoNetConnection
class UDemoNetConnection : public UNetConnection
{
public:
	uint8                                        Pad_2608[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDemoNetConnection* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class Engine.DemoPendingNetGame
class UDemoPendingNetGame : public UPendingNetGame
{
public:

	static class UClass* StaticClass();
	static class UDemoPendingNetGame* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.DeviceProfileFragment
class UDeviceProfileFragment : public UObject
{
public:
	TArray<class FString>                        CVars;                                             // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UDeviceProfileFragment* GetDefaultObj();

};

// 0x18 (0x180 - 0x168)
// Class Engine.DialogueSoundWaveProxy
class UDialogueSoundWaveProxy : public USoundBase
{
public:
	uint8                                        Pad_260A[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDialogueSoundWaveProxy* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.DirectionalLight
class ADirectionalLight : public ALight
{
public:
	uint8                                        Pad_260C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADirectionalLight* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.Distribution
class UDistribution : public UObject
{
public:
	uint8                                        Pad_260E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistribution* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.DistributionFloat
class UDistributionFloat : public UDistribution
{
public:
	uint8                                        bCanBeBaked : 1;                                   // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_16C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bBakedDataSuccesfully : 1;                         // Mask: 0x4, PropSize: 0x10x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2611[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionFloat* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.DistributionFloatConstant
class UDistributionFloatConstant : public UDistributionFloat
{
public:
	float                                        Constant;                                          // 0x38(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst)
	uint8                                        Pad_2612[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionFloatConstant* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.DistributionFloatConstantCurve
class UDistributionFloatConstantCurve : public UDistributionFloat
{
public:
	struct FInterpCurveFloat                     ConstantCurve;                                     // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDistributionFloatConstantCurve* GetDefaultObj();

};

// 0x20 (0x60 - 0x40)
// Class Engine.DistributionFloatParameterBase
class UDistributionFloatParameterBase : public UDistributionFloatConstant
{
public:
	class FName                                  ParameterName;                                     // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	float                                        MinInput;                                          // 0x48(0x4)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxInput;                                          // 0x4C(0x4)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinOutput;                                         // 0x50(0x4)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxOutput;                                         // 0x54(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EDistributionParamMode            ParamMode;                                         // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2618[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionFloatParameterBase* GetDefaultObj();

};

// 0x0 (0x60 - 0x60)
// Class Engine.DistributionFloatParticleParameter
class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{
public:

	static class UClass* StaticClass();
	static class UDistributionFloatParticleParameter* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.DistributionFloatUniform
class UDistributionFloatUniform : public UDistributionFloat
{
public:
	float                                        Min;                                               // 0x38(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Max;                                               // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UDistributionFloatUniform* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.DistributionFloatUniformCurve
class UDistributionFloatUniformCurve : public UDistributionFloat
{
public:
	struct FInterpCurveVector2D                  ConstantCurve;                                     // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDistributionFloatUniformCurve* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.DistributionVector
class UDistributionVector : public UDistribution
{
public:
	uint8                                        bCanBeBaked : 1;                                   // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsDirty : 1;                                      // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBakedDataSuccesfully : 1;                         // Mask: 0x4, PropSize: 0x10x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_261E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVector* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class Engine.DistributionVectorConstant
class UDistributionVectorConstant : public UDistributionVector
{
public:
	struct FVector                               Constant;                                          // 0x38(0x18)(ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst)
	uint8                                        bLockAxes : 1;                                     // Mask: 0x1, PropSize: 0x10x50(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_16E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2621[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDistributionVectorLockFlags      LockedAxes;                                        // 0x54(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2622[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVectorConstant* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class Engine.DistributionVectorConstantCurve
class UDistributionVectorConstantCurve : public UDistributionVector
{
public:
	struct FInterpCurveVector                    ConstantCurve;                                     // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockAxes : 1;                                     // Mask: 0x1, PropSize: 0x10x50(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_16F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2624[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDistributionVectorLockFlags      LockedAxes;                                        // 0x54(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2625[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVectorConstantCurve* GetDefaultObj();

};

// 0x70 (0xC8 - 0x58)
// Class Engine.DistributionVectorParameterBase
class UDistributionVectorParameterBase : public UDistributionVectorConstant
{
public:
	class FName                                  ParameterName;                                     // 0x58(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FVector                               MinInput;                                          // 0x60(0x18)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MaxInput;                                          // 0x78(0x18)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MinOutput;                                         // 0x90(0x18)(OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MaxOutput;                                         // 0xA8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EDistributionParamMode            ParamModes[0x3];                                   // 0xC0(0x3)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2627[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVectorParameterBase* GetDefaultObj();

};

// 0x0 (0xC8 - 0xC8)
// Class Engine.DistributionVectorParticleParameter
class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{
public:

	static class UClass* StaticClass();
	static class UDistributionVectorParticleParameter* GetDefaultObj();

};

// 0x40 (0x78 - 0x38)
// Class Engine.DistributionVectorUniform
class UDistributionVectorUniform : public UDistributionVector
{
public:
	struct FVector                               Max;                                               // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FVector                               Min;                                               // 0x50(0x18)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	uint8                                        bLockAxes : 1;                                     // Mask: 0x1, PropSize: 0x10x68(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_171 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_262A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDistributionVectorLockFlags      LockedAxes;                                        // 0x6C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EDistributionVectorMirrorFlags    MirrorFlags[0x3];                                  // 0x6D(0x3)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseExtremes : 1;                                  // Mask: 0x1, PropSize: 0x10x70(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_262C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVectorUniform* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Engine.DistributionVectorUniformCurve
class UDistributionVectorUniformCurve : public UDistributionVector
{
public:
	struct FInterpCurveTwoVectors                ConstantCurve;                                     // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockAxes1 : 1;                                    // Mask: 0x1, PropSize: 0x10x50(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockAxes2 : 1;                                    // Mask: 0x2, PropSize: 0x10x50(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_172 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_262D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDistributionVectorLockFlags      LockedAxes[0x2];                                   // 0x54(0x2)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EDistributionVectorMirrorFlags    MirrorFlags[0x3];                                  // 0x56(0x3)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_262E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseExtremes : 1;                                  // Mask: 0x1, PropSize: 0x10x5C(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_262F[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDistributionVectorUniformCurve* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.GraphNodeContextMenuContext
class UGraphNodeContextMenuContext : public UObject
{
public:
	class UBlueprint*                            Blueprint;                                         // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, DuplicateTransient)
	class UEdGraph*                              Graph;                                             // 0x30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UEdGraphNode*                          Node;                                              // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, EditConst)
	uint8                                        Pad_2630[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsDebugging;                                      // 0x48(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2631[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UGraphNodeContextMenuContext* GetDefaultObj();

};

// 0xF0 (0x118 - 0x28)
// Class Engine.EdGraphPin_Deprecated
class UEdGraphPin_Deprecated : public UObject
{
public:
	class FString                                PinName;                                           // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PinToolTip;                                        // 0x38(0x10)(BlueprintVisible, ExportObject, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEdGraphPinDirection              Direction;                                         // 0x48(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2635[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FEdGraphPinType                       PinType;                                           // 0x50(0x58)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                DefaultValue;                                      // 0xA8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                AutogeneratedDefaultValue;                         // 0xB8(0x10)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               DefaultObject;                                     // 0xC8(0x8)(Edit, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FText                                  DefaultTextValue;                                  // 0xD0(0x18)(ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UEdGraphPin_Deprecated*>        LinkedTo;                                          // 0xE8(0x10)(Edit, ConstParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UEdGraphPin_Deprecated*>        SubPins;                                           // 0xF8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	class UEdGraphPin_Deprecated*                ParentPin;                                         // 0x108(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UEdGraphPin_Deprecated*                ReferencePassThroughConnection;                    // 0x110(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UEdGraphPin_Deprecated* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.EdGraphSchema
class UEdGraphSchema : public UObject
{
public:

	static class UClass* StaticClass();
	static class UEdGraphSchema* GetDefaultObj();

};

// 0xA0 (0x5C0 - 0x520)
// Class Engine.EmitterCameraLensEffectBase
class AEmitterCameraLensEffectBase : public AEmitter
{
public:
	uint8                                        Pad_2641[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystem*                       PS_CameraEffect;                                   // 0x528(0x8)(EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APlayerCameraManager*                  BaseCamera;                                        // 0x530(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2642[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RelativeTransform;                                 // 0x540(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, SubobjectReference)
	float                                        BaseFOV;                                           // 0x5A0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowMultipleInstances : 1;                       // Mask: 0x1, PropSize: 0x10x5A4(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bResetWhenRetriggered : 1;                         // Mask: 0x2, PropSize: 0x10x5A4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_176 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2645[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        EmittersToTreatAsSame;                             // 0x5A8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        DistFromCamera;                                    // 0x5B8(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2648[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AEmitterCameraLensEffectBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ViewModeUtils
class UViewModeUtils : public UObject
{
public:

	static class UClass* StaticClass();
	static class UViewModeUtils* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.EngineBaseTypes
class UEngineBaseTypes : public UObject
{
public:

	static class UClass* StaticClass();
	static class UEngineBaseTypes* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.EngineTypes
class UEngineTypes : public UObject
{
public:

	static class UClass* StaticClass();
	static class UEngineTypes* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.ExponentialHeightFog
class AExponentialHeightFog : public AInfo
{
public:
	class UExponentialHeightFogComponent*        Component;                                         // 0x4C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x4D0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_2650[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AExponentialHeightFog* GetDefaultObj();

	void OnRep_bEnabled();
};

// 0xD8 (0x3A0 - 0x2C8)
// Class Engine.ExponentialHeightFogComponent
class UExponentialHeightFogComponent : public USceneComponent
{
public:
	float                                        Priority;                                          // 0x2C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        FogDensity;                                        // 0x2CC(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FogHeightFalloff;                                  // 0x2D0(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FExponentialHeightFogData             SecondFogData;                                     // 0x2D4(0xC)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          FogInscatteringColor;                              // 0x2E0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          FogInscatteringLuminance;                          // 0x2F0(0x10)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SkyAtmosphereAmbientContributionColorScale;        // 0x300(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureCube*                          InscatteringColorCubemap;                          // 0x310(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InscatteringColorCubemapAngle;                     // 0x318(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          InscatteringTextureTint;                           // 0x31C(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FullyDirectionalInscatteringColorDistance;         // 0x32C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NonDirectionalInscatteringColorDistance;           // 0x330(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectionalInscatteringExponent;                   // 0x334(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectionalInscatteringStartDistance;              // 0x338(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DirectionalInscatteringColor;                      // 0x33C(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DirectionalInscatteringLuminance;                  // 0x34C(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FogMaxOpacity;                                     // 0x35C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartDistance;                                     // 0x360(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        FogCutoffDistance;                                 // 0x364(0x4)(ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableVolumetricFog;                              // 0x368(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2692[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VolumetricFogScatteringDistribution;               // 0x36C(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                VolumetricFogAlbedo;                               // 0x370(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          VolumetricFogEmissive;                             // 0x374(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VolumetricFogExtinctionScale;                      // 0x384(0x4)(BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VolumetricFogDistance;                             // 0x388(0x4)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VolumetricFogStartDistance;                        // 0x38C(0x4)(ConstParm, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VolumetricFogNearFadeInDistance;                   // 0x390(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VolumetricFogStaticLightingScatteringIntensity;    // 0x394(0x4)(Edit, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideLightColorsWithFogInscatteringColors;     // 0x398(0x1)(Edit, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26A0[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UExponentialHeightFogComponent* GetDefaultObj();

	void SetVolumetricFogScatteringDistribution(float* NewValue);
	void SetVolumetricFogExtinctionScale(float* NewValue);
	void SetVolumetricFogEmissive(struct FLinearColor* NewValue);
	void SetVolumetricFogDistance(float* NewValue);
	void SetVolumetricFogAlbedo(struct FColor* NewValue);
	void SetVolumetricFog(bool* bNewValue);
	void SetStartDistance(float* Value);
	void SetSecondFogHeightOffset(float* Value);
	void SetSecondFogHeightFalloff(float* Value);
	void SetSecondFogDensity(float* Value);
	void SetSecondFogData(struct FExponentialHeightFogData* NewValue);
	void SetNonDirectionalInscatteringColorDistance(float* Value);
	void SetInscatteringTextureTint(struct FLinearColor* Value);
	void SetInscatteringColorCubemapAngle(float* Value);
	void SetInscatteringColorCubemap(class UTextureCube** Value);
	void SetFullyDirectionalInscatteringColorDistance(float* Value);
	void SetFogMaxOpacity(float* Value);
	void SetFogInscatteringColor(struct FLinearColor* Value);
	void SetFogHeightFalloff(float* Value);
	void SetFogDensity(float* Value);
	void SetFogCutoffDistance(float* Value);
	void SetDirectionalInscatteringStartDistance(float* Value);
	void SetDirectionalInscatteringExponent(float* Value);
	void SetDirectionalInscatteringColor(struct FLinearColor* Value);
};

// 0xB0 (0xD8 - 0x28)
// Class Engine.FontImportOptions
class UFontImportOptions : public UObject
{
public:
	struct FFontImportOptionsData                Data;                                              // 0x28(0xB0)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UFontImportOptions* GetDefaultObj();

};

// 0xC0 (0xE8 - 0x28)
// Class Engine.ForceFeedbackAttenuation
class UForceFeedbackAttenuation : public UObject
{
public:
	struct FForceFeedbackAttenuationSettings     Attenuation;                                       // 0x28(0xC0)(ExportObject, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UForceFeedbackAttenuation* GetDefaultObj();

};

// 0xB0 (0x578 - 0x4C8)
// Class Engine.GameNetworkManager
class AGameNetworkManager : public AInfo
{
public:
	float                                        BadPacketLossThreshold;                            // 0x4C8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SeverePacketLossThreshold;                         // 0x4CC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        BadPingThreshold;                                  // 0x4D0(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SeverePingThreshold;                               // 0x4D4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        AdjustedNetSpeed;                                  // 0x4D8(0x4)(Edit, ConstParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26B2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastNetSpeedUpdateTime;                            // 0x4E0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TotalNetBandwidth;                                 // 0x4E8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	int32                                        MinDynamicBandwidth;                               // 0x4EC(0x4)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	int32                                        MaxDynamicBandwidth;                               // 0x4F0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        bIsStandbyCheckingEnabled : 1;                     // Mask: 0x1, PropSize: 0x10x4F4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHasStandbyCheatTriggered : 1;                     // Mask: 0x2, PropSize: 0x10x4F4(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_17A : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_26B5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StandbyRxCheatTime;                                // 0x4F8(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StandbyTxCheatTime;                                // 0x4FC(0x4)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentMissingForRxStandby;                        // 0x500(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentMissingForTxStandby;                        // 0x504(0x4)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentForBadPing;                                 // 0x508(0x4)(Edit, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        JoinInProgressStandbyWaitTime;                     // 0x50C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MoveRepSize;                                       // 0x510(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        MAXPOSITIONERRORSQUARED;                           // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        MAXNEARZEROVELOCITYSQUARED;                        // 0x518(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        CLIENTADJUSTUPDATECOST;                            // 0x51C(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        MAXCLIENTUPDATEINTERVAL;                           // 0x520(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        MaxClientForcedUpdateDuration;                     // 0x524(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        ServerForcedUpdateHitchThreshold;                  // 0x528(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        ServerForcedUpdateHitchCooldown;                   // 0x52C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	float                                        MaxMoveDeltaTime;                                  // 0x530(0x4)(DisableEditOnInstance, SubobjectReference)
	float                                        MaxClientSmoothingDeltaTime;                       // 0x534(0x4)(Edit, ExportObject, DisableEditOnInstance, SubobjectReference)
	float                                        ClientNetSendMoveDeltaTime;                        // 0x538(0x4)(ExportObject, BlueprintReadOnly, DisableEditOnInstance, SubobjectReference)
	float                                        ClientNetSendMoveDeltaTimeThrottled;               // 0x53C(0x4)(ConstParm, BlueprintVisible, Net, DisableEditOnInstance, SubobjectReference)
	float                                        ClientNetSendMoveDeltaTimeStationary;              // 0x540(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, SubobjectReference)
	int32                                        ClientNetSendMoveThrottleAtNetSpeed;               // 0x544(0x4)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	int32                                        ClientNetSendMoveThrottleOverPlayerCount;          // 0x548(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	float                                        ClientErrorUpdateRateLimit;                        // 0x54C(0x4)(ConstParm, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        ClientNetCamUpdateDeltaTime;                       // 0x550(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ClientNetCamUpdatePositionLimit;                   // 0x554(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ClientAuthorativePosition;                         // 0x558(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	bool                                         bMovementTimeDiscrepancyDetection;                 // 0x559(0x1)(BlueprintReadOnly, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bMovementTimeDiscrepancyResolution;                // 0x55A(0x1)(ConstParm, Net, Parm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_26BE[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MovementTimeDiscrepancyMaxTimeMargin;              // 0x55C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        MovementTimeDiscrepancyMinTimeMargin;              // 0x560(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        MovementTimeDiscrepancyResolutionRate;             // 0x564(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        MovementTimeDiscrepancyDriftAllowance;             // 0x568(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x56C(0x1)(ConstParm, OutParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bUseDistanceBasedRelevancy;                        // 0x56D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_26C0[0xA];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AGameNetworkManager* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.SpotLight
class ASpotLight : public ALight
{
public:
	class USpotLightComponent*                   SpotLightComponent;                                // 0x4D8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class ASpotLight* GetDefaultObj();

	float SetOuterConeAngle();
	float SetInnerConeAngle();
};

// 0x0 (0x4E0 - 0x4E0)
// Class Engine.GeneratedMeshAreaLight
class AGeneratedMeshAreaLight : public ASpotLight
{
public:

	static class UClass* StaticClass();
	static class AGeneratedMeshAreaLight* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.HapticFeedbackEffect_Base
class UHapticFeedbackEffect_Base : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHapticFeedbackEffect_Base* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.HapticFeedbackEffect_Buffer
class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
{
public:
	TArray<uint8>                                Amplitudes;                                        // 0x28(0x10)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SampleRate;                                        // 0x38(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	uint8                                        Pad_26C9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHapticFeedbackEffect_Buffer* GetDefaultObj();

};

// 0x110 (0x138 - 0x28)
// Class Engine.HapticFeedbackEffect_Curve
class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
{
public:
	struct FHapticFeedbackDetails_Curve          HapticDetails;                                     // 0x28(0x110)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHapticFeedbackEffect_Curve* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.HapticFeedbackEffect_SoundWave
class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
{
public:
	class USoundWave*                            SoundWave;                                         // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	bool                                         bUseStereo;                                        // 0x30(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_26CD[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHapticFeedbackEffect_SoundWave* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationDataController
class IAnimationDataController : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnimationDataController* GetDefaultObj();

	bool UpdateCurveNamesFromSkeleton(class USkeleton* Skeleton);
	bool SetTransformCurveKeys(bool ReturnValue);
	bool SetTransformCurveKey(struct FTransform* Value, bool ReturnValue);
	bool SetPlayLength();
	bool SetNumberOfFrames();
	TScriptInterface<class IAnimationDataModel> SetModel();
	bool SetFrameRate();
	bool SetCurveKeys(bool ReturnValue);
	bool SetCurveKey(bool ReturnValue);
	bool SetCurveFlags(bool ReturnValue);
	bool SetCurveFlag(bool bState, bool ReturnValue);
	bool SetCurveColor(struct FLinearColor* Color, bool ReturnValue);
	bool SetBoneTrackKeys(class FName* BoneName, bool ReturnValue);
	bool ScaleCurve(bool ReturnValue);
	bool ResizePlayLength();
	bool ResizeNumberOfFrames();
	bool ResizeInFrames();
	bool Resize();
	bool RenameCurve(bool ReturnValue);
	bool RemoveTransformCurveKey(bool ReturnValue);
	bool RemoveCurveKey(bool ReturnValue);
	bool RemoveCurve(bool ReturnValue);
	bool RemoveBoneTrack(class FName* BoneName, bool ReturnValue);
	bool RemoveAttributeKey(bool ReturnValue);
	bool RemoveAttribute(bool ReturnValue);
	bool RemoveAllCurvesOfType();
	bool RemoveAllBoneTracks();
	bool RemoveAllAttributesForBone(class FName* BoneName, int32 ReturnValue);
	bool RemoveAllAttributes(int32 ReturnValue);
	bool OpenBracket();
	bool InsertBoneTrack(class FName* BoneName, int32 ReturnValue);
	void GetModelInterface(TScriptInterface<class IAnimationDataModel> ReturnValue);
	bool FindOrAddCurveNamesOnSkeleton(class USkeleton* Skeleton);
	bool DuplicateCurve(bool ReturnValue);
	bool DuplicateAttribute(bool ReturnValue);
	bool CloseBracket();
	bool AddCurve(bool ReturnValue);
	bool AddBoneTrack(class FName* BoneName, int32 ReturnValue);
	bool AddBoneCurve(class FName* BoneName, bool ReturnValue);
	bool AddAttribute(bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationDataModel
class IAnimationDataModel : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnimationDataModel* GetDefaultObj();

	class FName IsValidBoneTrackName(bool ReturnValue);
	int32 IsValidBoneTrackIndex(bool ReturnValue);
	void GetPlayLength(double ReturnValue);
	void GetNumBoneTracks(int32 ReturnValue);
	void GetNumberOfTransformCurves(int32 ReturnValue);
	void GetNumberOfKeys(int32 ReturnValue);
	void GetNumberOfFrames(int32 ReturnValue);
	void GetNumberOfFloatCurves(int32 ReturnValue);
	void GetFrameRate(const struct FFrameRate& ReturnValue);
	TArray<class FName> GetBoneTrackNames();
	class FName GetBoneTrackIndexByName(int32 ReturnValue);
	struct FBoneAnimationTrack GetBoneTrackIndex(int32 ReturnValue);
	class FName GetBoneTrackByName(const struct FBoneAnimationTrack& ReturnValue);
	int32 GetBoneTrackByIndex(const struct FBoneAnimationTrack& ReturnValue);
	void GetBoneAnimationTracks(const TArray<struct FBoneAnimationTrack>& ReturnValue);
	void GetAnimationSequence(class UAnimSequence* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.MultiUseInterface
class IMultiUseInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMultiUseInterface* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Engine.InGameAdManager
class UInGameAdManager : public UPlatformInterfaceBase
{
public:
	uint8                                        bShouldPauseWhileAdOpen : 1;                       // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_17D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_27D5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<FDelegateProperty_>                   ClickedBannerDelegates;                            // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<FDelegateProperty_>                   ClosedAdDelegates;                                 // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInGameAdManager* GetDefaultObj();

};

// 0x8 (0x520 - 0x518)
// Class Engine.FoliageClippingVolume
class AFoliageClippingVolume : public AVolume
{
public:
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x518(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        bIsNPCClippingVolume : 1;                          // Mask: 0x2, PropSize: 0x10x518(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_27D7[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AFoliageClippingVolume* GetDefaultObj();

};

// 0x68 (0x530 - 0x4C8)
// Class Engine.FoliageAttachmentOverrideVolume
class AFoliageAttachmentOverrideVolume : public AInfo
{
public:
	TArray<struct FFoliageAttachmentOverride>    FoliageAttachmentOverrides;                        // 0x4C8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_27DB[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AFoliageAttachmentOverrideVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.FoliageAttachedComponentInterface
class IFoliageAttachedComponentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IFoliageAttachedComponentInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_ActorSubobject
class IInterface_ActorSubobject : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_ActorSubobject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_AssetUserData
class IInterface_AssetUserData : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_AssetUserData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_AsyncCompilation
class IInterface_AsyncCompilation : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_AsyncCompilation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BoneReferenceSkeletonProvider
class IBoneReferenceSkeletonProvider : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IBoneReferenceSkeletonProvider* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_CollisionDataProvider
class IInterface_CollisionDataProvider : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_CollisionDataProvider* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_PostProcessVolume
class IInterface_PostProcessVolume : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_PostProcessVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Interface_PreviewMeshProvider
class IInterface_PreviewMeshProvider : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IInterface_PreviewMeshProvider* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Engine.InterpData
class UInterpData : public UObject
{
public:
	float                                        InterpLength;                                      // 0x28(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PathBuildTime;                                     // 0x2C(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UInterpGroup*>                  InterpGroups;                                      // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UInterpCurveEdSetup*                   CurveEdSetup;                                      // 0x40(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EdSectionStart;                                    // 0x48(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EdSectionEnd;                                      // 0x4C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldBakeAndPrune : 1;                           // Mask: 0x1, PropSize: 0x10x50(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_17E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_27EA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UInterpGroupDirector*                  CachedDirectorGroup;                               // 0x58(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          AllEventNames;                                     // 0x60(0x10)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpData* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InterpFilter
class UInterpFilter : public UObject
{
public:
	class FString                                Caption;                                           // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpFilter* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Engine.InterpFilter_Classes
class UInterpFilter_Classes : public UInterpFilter
{
public:

	static class UClass* StaticClass();
	static class UInterpFilter_Classes* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Engine.InterpFilter_Custom
class UInterpFilter_Custom : public UInterpFilter
{
public:

	static class UClass* StaticClass();
	static class UInterpFilter_Custom* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.InterpGroup
class UInterpGroup : public UObject
{
public:
	uint8                                        Pad_27EB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UInterpTrack*>                  InterpTracks;                                      // 0x30(0x10)(Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GroupName;                                         // 0x40(0x8)(ExportObject, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FColor                                GroupColor;                                        // 0x48(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCollapsed : 1;                                    // Mask: 0x1, PropSize: 0x10x4C(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        bVisible : 1;                                      // Mask: 0x2, PropSize: 0x10x4C(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bIsFolder : 1;                                     // Mask: 0x4, PropSize: 0x10x4C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsParented : 1;                                   // Mask: 0x8, PropSize: 0x10x4C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSelected : 1;                                   // Mask: 0x10, PropSize: 0x10x4C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_27EC[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpGroup* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Engine.InterpGroupCamera
class UInterpGroupCamera : public UInterpGroup
{
public:
	class UCameraAnim*                           CameraAnimInst;                                    // 0x50(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        CompressTolerance;                                 // 0x58(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_27EE[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpGroupCamera* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Engine.InterpGroupDirector
class UInterpGroupDirector : public UInterpGroup
{
public:

	static class UClass* StaticClass();
	static class UInterpGroupDirector* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.InterpGroupInst
class UInterpGroupInst : public UObject
{
public:
	class UInterpGroup*                          Group;                                             // 0x28(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	class AActor*                                GroupActor;                                        // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UInterpTrackInst*>              TrackInst;                                         // 0x38(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpGroupInst* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Engine.InterpGroupInstCamera
class UInterpGroupInstCamera : public UInterpGroupInst
{
public:

	static class UClass* StaticClass();
	static class UInterpGroupInstCamera* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Engine.InterpGroupInstDirector
class UInterpGroupInstDirector : public UInterpGroupInst
{
public:

	static class UClass* StaticClass();
	static class UInterpGroupInstDirector* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Engine.InterpTrack
class UInterpTrack : public UObject
{
public:
	uint8                                        Pad_27F5[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UInterpTrack*>                  SubTracks;                                         // 0x38(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TrackInstClass;                                    // 0x48(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETrackActiveCondition             ActiveCondition;                                   // 0x50(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_27F6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TrackTitle;                                        // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnePerGroup : 1;                                  // Mask: 0x1, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDirGroupOnly : 1;                                 // Mask: 0x2, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableTrack : 1;                                 // Mask: 0x4, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSelected : 1;                                   // Mask: 0x8, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, SubobjectReference)
	uint8                                        bIsAnimControlTrack : 1;                           // Mask: 0x10, PropSize: 0x10x68(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSubTrackOnly : 1;                                 // Mask: 0x20, PropSize: 0x10x68(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bVisible : 1;                                      // Mask: 0x40, PropSize: 0x10x68(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        bIsRecording : 1;                                  // Mask: 0x80, PropSize: 0x10x68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_27F7[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrack* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Engine.InterpTrackFloatBase
class UInterpTrackFloatBase : public UInterpTrack
{
public:
	struct FInterpCurveFloat                     FloatTrack;                                        // 0x70(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurveTension;                                      // 0x88(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_27F9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackFloatBase* GetDefaultObj();

};

// 0x20 (0xB0 - 0x90)
// Class Engine.InterpTrackAnimControl
class UInterpTrackAnimControl : public UInterpTrackFloatBase
{
public:
	class FName                                  SlotName;                                          // 0x90(0x8)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FAnimControlTrackKey>          AnimSeqs;                                          // 0x98(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSkipAnimNotifiers : 1;                            // Mask: 0x1, PropSize: 0x10xA8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_27FE[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackAnimControl* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Engine.InterpTrackVectorBase
class UInterpTrackVectorBase : public UInterpTrack
{
public:
	struct FInterpCurveVector                    VectorTrack;                                       // 0x70(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurveTension;                                      // 0x88(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2801[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackVectorBase* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Engine.InterpTrackAudioMaster
class UInterpTrackAudioMaster : public UInterpTrackVectorBase
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackAudioMaster* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.InterpTrackBoolProp
class UInterpTrackBoolProp : public UInterpTrack
{
public:
	TArray<struct FBoolTrackKey>                 BoolTrack;                                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x80(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackBoolProp* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Engine.InterpTrackColorProp
class UInterpTrackColorProp : public UInterpTrackVectorBase
{
public:
	class FName                                  PropertyName;                                      // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackColorProp* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Engine.InterpTrackColorScale
class UInterpTrackColorScale : public UInterpTrackVectorBase
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackColorScale* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.InterpTrackDirector
class UInterpTrackDirector : public UInterpTrack
{
public:
	TArray<struct FDirectorTrackCut>             CutTrack;                                          // 0x70(0x10)(Edit, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSimulateCameraCutsOnClients : 1;                  // Mask: 0x1, PropSize: 0x10x80(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_280B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackDirector* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.InterpTrackEvent
class UInterpTrackEvent : public UInterpTrack
{
public:
	TArray<struct FEventTrackKey>                EventTrack;                                        // 0x70(0x10)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireEventsWhenForwards : 1;                       // Mask: 0x1, PropSize: 0x10x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenBackwards : 1;                      // Mask: 0x2, PropSize: 0x10x80(0x1)(ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenJumpingForwards : 1;                // Mask: 0x4, PropSize: 0x10x80(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseCustomEventName : 1;                           // Mask: 0x8, PropSize: 0x10x80(0x1)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_280F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackEvent* GetDefaultObj();

};

// 0x18 (0xA8 - 0x90)
// Class Engine.InterpTrackFade
class UInterpTrackFade : public UInterpTrackFloatBase
{
public:
	uint8                                        bPersistFade : 1;                                  // Mask: 0x1, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFadeAudio : 1;                                    // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_183 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2815[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          FadeColor;                                         // 0x94(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2816[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackFade* GetDefaultObj();

};

// 0x20 (0xB0 - 0x90)
// Class Engine.InterpTrackFloatAnimBPParam
class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
{
public:
	class UClass*                                AnimBlueprintClass;                                // 0x90(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                AnimClass;                                         // 0x98(0x8)(Edit, BlueprintVisible, Parm, OutParm, Transient, InstancedReference, SubobjectReference)
	class FName                                  ParamName;                                         // 0xA0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2819[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackFloatAnimBPParam* GetDefaultObj();

};

// 0x18 (0xA8 - 0x90)
// Class Engine.InterpTrackFloatMaterialParam
class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
{
public:
	TArray<class UMaterialInterface*>            TargetMaterials;                                   // 0x90(0x10)(EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ParamName;                                         // 0xA0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackFloatMaterialParam* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Engine.InterpTrackFloatParticleParam
class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
{
public:
	class FName                                  ParamName;                                         // 0x90(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackFloatParticleParam* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Engine.InterpTrackFloatProp
class UInterpTrackFloatProp : public UInterpTrackFloatBase
{
public:
	class FName                                  PropertyName;                                      // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	enum class ETrackInterpMode                  InterpMode;                                        // 0x98(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2822[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackFloatProp* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InterpTrackInst
class UInterpTrackInst : public UObject
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackInst* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstAnimControl
class UInterpTrackInstAnimControl : public UInterpTrackInst
{
public:
	float                                        LastUpdatePosition;                                // 0x28(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2824[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstAnimControl* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InterpTrackInstAudioMaster
class UInterpTrackInstAudioMaster : public UInterpTrackInst
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackInstAudioMaster* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.InterpTrackInstProperty
class UInterpTrackInstProperty : public UInterpTrackInst
{
public:
	FFieldPathProperty_                          InterpProperty;                                    // 0x28(0x20)(Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               PropertyOuterObjectInst;                           // 0x48(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstProperty* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class Engine.InterpTrackInstBoolProp
class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
{
public:
	uint8                                        Pad_2827[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         ResetBool;                                         // 0x60(0x1)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2828[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstBoolProp* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Engine.InterpTrackInstColorProp
class UInterpTrackInstColorProp : public UInterpTrackInstProperty
{
public:
	uint8                                        Pad_282B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                ResetColor;                                        // 0x58(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_282C[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstColorProp* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InterpTrackInstColorScale
class UInterpTrackInstColorScale : public UInterpTrackInst
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackInstColorScale* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstDirector
class UInterpTrackInstDirector : public UInterpTrackInst
{
public:
	class AActor*                                OldViewTarget;                                     // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstDirector* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstEvent
class UInterpTrackInstEvent : public UInterpTrackInst
{
public:
	float                                        LastUpdatePosition;                                // 0x28(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_282E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstEvent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InterpTrackInstFade
class UInterpTrackInstFade : public UInterpTrackInst
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackInstFade* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.InterpTrackInstFloatAnimBPParam
class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
{
public:
	class UAnimInstance*                         AnimScriptInstance;                                // 0x28(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, InstancedReference, SubobjectReference)
	float                                        ResetFloat;                                        // 0x30(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2830[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstFloatAnimBPParam* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Engine.InterpTrackInstFloatMaterialParam
class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UMaterialInstanceDynamic*>      MaterialInstances;                                 // 0x28(0x10)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                ResetFloats;                                       // 0x38(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimitiveMaterialRef>         PrimitiveMaterialRefs;                             // 0x48(0x10)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UInterpTrackFloatMaterialParam*        InstancedTrack;                                    // 0x58(0x8)(ConstParm, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstFloatMaterialParam* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstFloatParticleParam
class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
{
public:
	float                                        ResetFloat;                                        // 0x28(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2837[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstFloatParticleParam* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Engine.InterpTrackInstFloatProp
class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
{
public:
	uint8                                        Pad_283A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ResetFloat;                                        // 0x58(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_283B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstFloatProp* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class Engine.InterpTrackInstLinearColorProp
class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
{
public:
	uint8                                        Pad_283E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ResetColor;                                        // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstLinearColorProp* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Engine.InterpTrackInstMove
class UInterpTrackInstMove : public UInterpTrackInst
{
public:
	struct FVector                               ResetLocation;                                     // 0x28(0x18)(Edit, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ResetRotation;                                     // 0x40(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstMove* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstParticleReplay
class UInterpTrackInstParticleReplay : public UInterpTrackInst
{
public:
	float                                        LastUpdatePosition;                                // 0x28(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2843[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstParticleReplay* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstSlomo
class UInterpTrackInstSlomo : public UInterpTrackInst
{
public:
	float                                        OldTimeDilation;                                   // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2845[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstSlomo* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InterpTrackInstSound
class UInterpTrackInstSound : public UInterpTrackInst
{
public:
	float                                        LastUpdatePosition;                                // 0x28(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2848[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioComponent*                       PlayAudioComp;                                     // 0x30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstSound* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InterpTrackInstToggle
class UInterpTrackInstToggle : public UInterpTrackInst
{
public:
	enum class ETrackToggleAction                Action;                                            // 0x28(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_284A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LastUpdatePosition;                                // 0x2C(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSavedActiveState : 1;                             // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_284B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackInstToggle* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Engine.InterpTrackInstVectorMaterialParam
class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UMaterialInstanceDynamic*>      MaterialInstances;                                 // 0x28(0x10)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       ResetVectors;                                      // 0x38(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPrimitiveMaterialRef>         PrimitiveMaterialRefs;                             // 0x48(0x10)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UInterpTrackVectorMaterialParam*       InstancedTrack;                                    // 0x58(0x8)(ConstParm, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstVectorMaterialParam* GetDefaultObj();

};

// 0x20 (0x70 - 0x50)
// Class Engine.InterpTrackInstVectorProp
class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
{
public:
	uint8                                        Pad_284E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ResetVector;                                       // 0x58(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstVectorProp* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InterpTrackInstVisibility
class UInterpTrackInstVisibility : public UInterpTrackInst
{
public:
	enum class EVisibilityTrackAction            Action;                                            // 0x28(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2850[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LastUpdatePosition;                                // 0x2C(0x4)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackInstVisibility* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Engine.InterpTrackLinearColorBase
class UInterpTrackLinearColorBase : public UInterpTrack
{
public:
	struct FInterpCurveLinearColor               LinearColorTrack;                                  // 0x70(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurveTension;                                      // 0x88(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2851[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackLinearColorBase* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Engine.InterpTrackLinearColorProp
class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
{
public:
	class FName                                  PropertyName;                                      // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	enum class ETrackInterpMode                  InterpMode;                                        // 0x98(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2852[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackLinearColorProp* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Engine.InterpTrackMove
class UInterpTrackMove : public UInterpTrack
{
public:
	struct FInterpCurveVector                    PosTrack;                                          // 0x70(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInterpCurveVector                    EulerTrack;                                        // 0x88(0x18)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInterpLookupTrack                    LookupTrack;                                       // 0xA0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  LookAtGroupName;                                   // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LinCurveTension;                                   // 0xB8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngCurveTension;                                   // 0xBC(0x4)(Edit, ConstParm, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseQuatInterpolation : 1;                         // Mask: 0x1, PropSize: 0x10xC0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowArrowAtKeys : 1;                              // Mask: 0x2, PropSize: 0x10xC0(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableMovement : 1;                              // Mask: 0x4, PropSize: 0x10xC0(0x1)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowTranslationOnCurveEd : 1;                     // Mask: 0x8, PropSize: 0x10xC0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShowRotationOnCurveEd : 1;                        // Mask: 0x10, PropSize: 0x10xC0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHide3DTrack : 1;                                  // Mask: 0x20, PropSize: 0x10xC0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_187 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2855[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EInterpTrackMoveRotMode           RotMode;                                           // 0xC4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2856[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackMove* GetDefaultObj();

};

// 0x18 (0xA8 - 0x90)
// Class Engine.InterpTrackMoveAxis
class UInterpTrackMoveAxis : public UInterpTrackFloatBase
{
public:
	enum class EInterpMoveAxis                   MoveAxis;                                          // 0x90(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2858[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FInterpLookupTrack                    LookupTrack;                                       // 0x98(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackMoveAxis* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Engine.InterpTrackParticleReplay
class UInterpTrackParticleReplay : public UInterpTrack
{
public:
	TArray<struct FParticleReplayTrackKey>       TrackKeys;                                         // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackParticleReplay* GetDefaultObj();

};

// 0x0 (0x90 - 0x90)
// Class Engine.InterpTrackSlomo
class UInterpTrackSlomo : public UInterpTrackFloatBase
{
public:

	static class UClass* StaticClass();
	static class UInterpTrackSlomo* GetDefaultObj();

};

// 0x18 (0xA8 - 0x90)
// Class Engine.InterpTrackSound
class UInterpTrackSound : public UInterpTrackVectorBase
{
public:
	TArray<struct FSoundTrackKey>                Sounds;                                            // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPlayOnReverse : 1;                                // Mask: 0x1, PropSize: 0x10xA0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bContinueSoundOnMatineeEnd : 1;                    // Mask: 0x2, PropSize: 0x10xA0(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressSubtitles : 1;                            // Mask: 0x4, PropSize: 0x10xA0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTreatAsDialogue : 1;                              // Mask: 0x8, PropSize: 0x10xA0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAttach : 1;                                       // Mask: 0x10, PropSize: 0x10xA0(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2862[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackSound* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.InterpTrackToggle
class UInterpTrackToggle : public UInterpTrack
{
public:
	TArray<struct FToggleTrackKey>               ToggleTrack;                                       // 0x70(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActivateSystemEachUpdate : 1;                     // Mask: 0x1, PropSize: 0x10x80(0x1)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActivateWithJustAttachedFlag : 1;                 // Mask: 0x2, PropSize: 0x10x80(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireEventsWhenForwards : 1;                       // Mask: 0x4, PropSize: 0x10x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenBackwards : 1;                      // Mask: 0x8, PropSize: 0x10x80(0x1)(ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenJumpingForwards : 1;                // Mask: 0x10, PropSize: 0x10x80(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2868[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackToggle* GetDefaultObj();

};

// 0x18 (0xA8 - 0x90)
// Class Engine.InterpTrackVectorMaterialParam
class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
{
public:
	TArray<class UMaterialInterface*>            TargetMaterials;                                   // 0x90(0x10)(EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ParamName;                                         // 0xA0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UInterpTrackVectorMaterialParam* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Engine.InterpTrackVectorProp
class UInterpTrackVectorProp : public UInterpTrackVectorBase
{
public:
	class FName                                  PropertyName;                                      // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	enum class ETrackInterpMode                  InterpMode;                                        // 0x98(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2870[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackVectorProp* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Engine.InterpTrackVisibility
class UInterpTrackVisibility : public UInterpTrack
{
public:
	TArray<struct FVisibilityTrackKey>           VisibilityTrack;                                   // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFireEventsWhenForwards : 1;                       // Mask: 0x1, PropSize: 0x10x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenBackwards : 1;                      // Mask: 0x2, PropSize: 0x10x80(0x1)(ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bFireEventsWhenJumpingForwards : 1;                // Mask: 0x4, PropSize: 0x10x80(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2875[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpTrackVisibility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PhysicsComponent
class IPhysicsComponent : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPhysicsComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SaveGameInterface
class ISaveGameInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISaveGameInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ISMPartitionInstanceManager
class IISMPartitionInstanceManager : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IISMPartitionInstanceManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ISMPartitionInstanceManagerProvider
class IISMPartitionInstanceManagerProvider : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IISMPartitionInstanceManagerProvider* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetTextLibrary
class UKismetTextLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetTextLibrary* GetDefaultObj();

	void TextTrimTrailing(class FText* InText, class FText ReturnValue);
	void TextTrimPrecedingAndTrailing(class FText* InText, class FText ReturnValue);
	void TextTrimPreceding(class FText* InText, class FText ReturnValue);
	void TextToUpper(class FText* InText, class FText ReturnValue);
	void TextToLower(class FText* InText, class FText ReturnValue);
	void TextIsTransient(class FText* InText, bool ReturnValue);
	void TextIsFromStringTable(class FText* Text, bool ReturnValue);
	void TextIsEmpty(class FText* InText, bool ReturnValue);
	void TextIsCultureInvariant(class FText* InText, bool ReturnValue);
	class FString TextFromStringTable(class FName TableId, class FText ReturnValue);
	void StringTableIdAndKeyFromText(class FText* Text, class FName OutTableId, class FString* OutKey, bool ReturnValue);
	void PolyglotDataToText(const struct FPolyglotTextData& PolyglotData, class FText ReturnValue);
	class FText NotEqual_TextText(bool ReturnValue);
	class FText NotEqual_IgnoreCase_TextText(bool ReturnValue);
	bool IsPolyglotDataValid(const struct FPolyglotTextData& PolyglotData, class FText* ErrorMessage);
	void GetEmptyText(class FText ReturnValue);
	void Format(class FText InPattern, const TArray<struct FFormatArgumentData>& InArgs, class FText ReturnValue);
	class FText FindTextInLocalizationTable(bool ReturnValue);
	class FText EqualEqual_TextText(bool ReturnValue);
	class FText EqualEqual_IgnoreCase_TextText(bool ReturnValue);
	struct FVector Conv_VectorToText(class FText ReturnValue);
	struct FVector2D Conv_Vector2dToText(class FText ReturnValue);
	void Conv_TransformToText(struct FTransform* InTrans, class FText ReturnValue);
	void Conv_TextToString(class FText* InText, const class FString& ReturnValue);
	void Conv_StringToText(const class FString& InString, class FText ReturnValue);
	void Conv_RotatorToText(struct FRotator* InRot, class FText ReturnValue);
	void Conv_ObjectToText(class UObject** InObj, class FText ReturnValue);
	class FName Conv_NameToText(class FText ReturnValue);
	void Conv_IntToText(int32* Value, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, class FText ReturnValue);
	void Conv_Int64ToText(int64* Value, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, class FText ReturnValue);
	void Conv_DoubleToText(double* Value, enum class ERoundingMode RoundingMode, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, int32* MinimumFractionalDigits, int32* MaximumFractionalDigits, class FText ReturnValue);
	void Conv_ColorToText(struct FLinearColor* InColor, class FText ReturnValue);
	void Conv_ByteToText(uint8* Value, class FText ReturnValue);
	void Conv_BoolToText(bool* InBool, class FText ReturnValue);
	struct FDateTime AsTimeZoneTime_DateTime(class FString* InTimeZone, class FText ReturnValue);
	struct FDateTime AsTimeZoneDateTime_DateTime(class FString* InTimeZone, class FText ReturnValue);
	struct FDateTime AsTimeZoneDate_DateTime(class FString* InTimeZone, class FText ReturnValue);
	void AsTimespan_Timespan(struct FTimespan* InTimespan, class FText ReturnValue);
	void AsTime_DateTime(const struct FDateTime& In, class FText ReturnValue);
	void AsPercent_Float(float* Value, enum class ERoundingMode RoundingMode, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, int32* MinimumFractionalDigits, int32* MaximumFractionalDigits, class FText ReturnValue);
	void AsDateTime_DateTime(const struct FDateTime& In, class FText ReturnValue);
	struct FDateTime AsDate_DateTime(class FText ReturnValue);
	class FString AsCurrencyBase(int32* BaseValue, class FText ReturnValue);
	class FString AsCurrency_Integer(int32* Value, enum class ERoundingMode RoundingMode, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, int32* MinimumFractionalDigits, int32* MaximumFractionalDigits, class FText ReturnValue);
	class FString AsCurrency_Float(float* Value, enum class ERoundingMode RoundingMode, bool* bAlwaysSign, bool bUseGrouping, int32* MinimumIntegralDigits, int32* MaximumIntegralDigits, int32* MinimumFractionalDigits, int32* MaximumFractionalDigits, class FText ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.LevelInstanceEditorPivotInterface
class ILevelInstanceEditorPivotInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILevelInstanceEditorPivotInterface* GetDefaultObj();

};

// 0x190 (0x1B8 - 0x28)
// Class Engine.LevelStreaming
class ULevelStreaming : public UObject
{
public:
	TSoftObjectPtr<class UWorld>                 WorldAsset;                                        // 0x28(0x30)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StreamingPriority;                                 // 0x58(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bLevelStreamingVisibilityOnly : 1;                 // Mask: 0x1, PropSize: 0x10x5C(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLevelStreamingDesiredVisibility : 1;              // Mask: 0x2, PropSize: 0x10x5C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_189 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2951[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  PackageNameToLoad;                                 // 0x60(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          LODPackageNames;                                   // 0x68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2952[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            LevelTransform;                                    // 0x90(0x60)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClientOnlyVisible;                                // 0xF0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2953[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LevelLODIndex;                                     // 0xF4(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bShouldBeVisible : 1;                              // Mask: 0x8, PropSize: 0x10xF8(0x1)(Edit, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bShouldBeLoaded : 1;                               // Mask: 0x10, PropSize: 0x10xF8(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_18B : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2954[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bLocked : 1;                                       // Mask: 0x1, PropSize: 0x10xFB(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsStatic : 1;                                     // Mask: 0x2, PropSize: 0x10xFB(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldBlockOnLoad : 1;                            // Mask: 0x4, PropSize: 0x10xFB(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldBlockOnUnload : 1;                          // Mask: 0x8, PropSize: 0x10xFB(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableDistanceStreaming : 1;                     // Mask: 0x10, PropSize: 0x10xFB(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDrawOnLevelStatusMap : 1;                         // Mask: 0x20, PropSize: 0x10xFB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18C : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	struct FLinearColor                          LevelColor;                                        // 0xFC(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2958[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class ALevelStreamingVolume*>         EditorStreamingVolumes;                            // 0x110(0x10)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinTimeBetweenVolumeUnloadRequests;                // 0x120(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2959[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnLevelLoaded;                                     // 0x130(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnLevelUnloaded;                                   // 0x140(0x10)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnLevelShown;                                      // 0x150(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnLevelHidden;                                     // 0x160(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, SubobjectReference)
	bool                                         bEnableTileStreaming;                              // 0x170(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_295D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class ULevel*                                LoadedLevel;                                       // 0x178(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class ULevel*                                PendingUnloadLevel;                                // 0x180(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_295F[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelStreaming* GetDefaultObj();

	void ShouldBeLoaded(bool ReturnValue);
	void SetShouldBeVisible(bool bInShouldBeVisible);
	void SetShouldBeLoaded(bool bInShouldBeLoaded);
	void SetPriority(int32* NewPriority);
	int32 SetLevelLODIndex();
	void SetIsRequestingUnloadAndRemoval(bool bInIsRequestingUnloadAndRemoval);
	void IsStreamingStatePending(bool ReturnValue);
	void IsLevelVisible(bool ReturnValue);
	void IsLevelLoaded(bool ReturnValue);
	void GetWorldAssetPackageFName(class FName ReturnValue);
	void GetLoadedLevel(class ULevel* ReturnValue);
	void GetLevelScriptActor(class ALevelScriptActor* ReturnValue);
	void GetIsRequestingUnloadAndRemoval(bool ReturnValue);
	void CreateInstance(const class FString& UniqueInstanceName, class ULevelStreaming* ReturnValue);
	bool BPSetLevelVisibility(bool bIsLowMemory);
	void BPGetPackageName(const class FString& ReturnValue);
};

// 0x8 (0x1C0 - 0x1B8)
// Class Engine.LevelStreamingAlwaysLoaded
class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{
public:
	uint8                                        Pad_2963[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelStreamingAlwaysLoaded* GetDefaultObj();

};

// 0x8 (0x1C0 - 0x1B8)
// Class Engine.LevelStreamingDynamic
class ULevelStreamingDynamic : public ULevelStreaming
{
public:
	uint8                                        bInitiallyLoaded : 1;                              // Mask: 0x1, PropSize: 0x10x1B8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInitiallyVisible : 1;                             // Mask: 0x2, PropSize: 0x10x1B8(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2977[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelStreamingDynamic* GetDefaultObj();

	class UObject* LoadLevelInstanceBySoftObjectPtr(TSoftObjectPtr<class UWorld> Level, struct FVector* Location, struct FRotator* Rotation, bool* bOutSuccess, class FString* OptionalLevelNameOverride, class UClass** OptionalLevelStreamingClass, bool* bLoadAsTempPackage, class ULevelStreamingDynamic* ReturnValue);
	class FString LoadLevelInstance(struct FVector* Location, struct FRotator* Rotation, bool* bOutSuccess, class FString* OptionalLevelNameOverride, class UClass** OptionalLevelStreamingClass, bool* bLoadAsTempPackage, class ULevelStreamingDynamic* ReturnValue);
};

// 0x8 (0x1C0 - 0x1B8)
// Class Engine.LevelStreamingPersistent
class ULevelStreamingPersistent : public ULevelStreaming
{
public:
	uint8                                        Pad_2978[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelStreamingPersistent* GetDefaultObj();

};

// 0x18 (0x530 - 0x518)
// Class Engine.LevelStreamingVolume
class ALevelStreamingVolume : public AVolume
{
public:
	TArray<class FName>                          StreamingLevelNames;                               // 0x518(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEditorPreVisOnly : 1;                             // Mask: 0x1, PropSize: 0x10x528(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabled : 1;                                     // Mask: 0x2, PropSize: 0x10x528(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_18D : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_297A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EStreamingVolumeUsage             StreamingUsage;                                    // 0x52C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_297B[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALevelStreamingVolume* GetDefaultObj();

};

// 0x78 (0x590 - 0x518)
// Class Engine.TileStreamingVolume
class ATileStreamingVolume : public AVolume
{
public:
	TArray<class FName>                          StreamingLevelNames;                               // 0x518(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ExcludeLevelNames;                                 // 0x528(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2986[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDisabled : 1;                                     // Mask: 0x1, PropSize: 0x10x588(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAllowOnlySpecifiedLevels : 1;                     // Mask: 0x2, PropSize: 0x10x588(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceDoNotTriggerBlockLoading : 1;                // Mask: 0x4, PropSize: 0x10x588(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHideOtherLevels : 1;                              // Mask: 0x8, PropSize: 0x10x588(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bBlockOnLoading : 1;                               // Mask: 0x10, PropSize: 0x10x588(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableUpdatesWorldComp : 1;                       // Mask: 0x20, PropSize: 0x10x588(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyContainedPawnsOnStartup : 1;               // Mask: 0x40, PropSize: 0x10x588(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceLevelsAsDistanceStreamingEnabled : 1;        // Mask: 0x80, PropSize: 0x10x588(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_298E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ATileStreamingVolume* GetDefaultObj();

	bool OnInterpToggle();
	bool DoToggle();
};

// 0x58 (0x320 - 0x2C8)
// Class Engine.LightComponentBase
class ULightComponentBase : public USceneComponent
{
public:
	struct FGuid                                 LightGuid;                                         // 0x2C8(0x10)(BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Brightness;                                        // 0x2D8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance)
	float                                        Intensity;                                         // 0x2DC(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config)
	float                                        IntensityScale;                                    // 0x2E0(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ColorIntensity;                                    // 0x2E4(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                LightColor;                                        // 0x2F4(0x4)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Config)
	uint8                                        bAffectsWorld : 1;                                 // Mask: 0x1, PropSize: 0x10x2F8(0x1)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CastShadows : 1;                                   // Mask: 0x2, PropSize: 0x10x2F8(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        CastStaticShadows : 1;                             // Mask: 0x4, PropSize: 0x10x2F8(0x1)(ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CastDynamicShadows : 1;                            // Mask: 0x8, PropSize: 0x10x2F8(0x1)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAffectTranslucentLighting : 1;                    // Mask: 0x10, PropSize: 0x10x2F8(0x1)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTransmission : 1;                                 // Mask: 0x20, PropSize: 0x10x2F8(0x1)(ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastVolumetricShadow : 1;                         // Mask: 0x40, PropSize: 0x10x2F8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastDeepShadow : 1;                               // Mask: 0x80, PropSize: 0x10x2F8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastRaytracedShadow : 1;                          // Mask: 0x1, PropSize: 0x10x2F9(0x1)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_18F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29B6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ECastRayTracedShadow              CastRaytracedShadow;                               // 0x2FC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29B7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bAffectReflection : 1;                             // Mask: 0x1, PropSize: 0x10x300(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAffectGlobalIllumination : 1;                     // Mask: 0x2, PropSize: 0x10x300(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportSampledLighting : 1;                       // Mask: 0x4, PropSize: 0x10x300(0x1)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_190 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_29B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeepShadowLayerDistribution;                       // 0x304(0x4)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        IndirectLightingIntensity;                         // 0x308(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        VolumetricScatteringIntensity;                     // 0x30C(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SamplesPerPixel;                                   // 0x310(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ObjectLayerMask;                                   // 0x314(0x4)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UseBlackLightBuffer : 1;                           // Mask: 0x1, PropSize: 0x10x318(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AlwaysProjectShadows : 1;                          // Mask: 0x2, PropSize: 0x10x318(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UseAmbientLightInfo : 1;                           // Mask: 0x4, PropSize: 0x10x318(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UseSpotLightInfo : 1;                              // Mask: 0x8, PropSize: 0x10x318(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29BD[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULightComponentBase* GetDefaultObj();

	void SetSupportSampledLighting(bool* bNewValue);
	void SetSamplesPerPixel(int32* NewValue);
	void SetCastVolumetricShadow(bool* bNewValue);
	void SetCastShadows(bool* bNewValue);
	void SetCastRaytracedShadows(enum class ECastRayTracedShadow* bNewValue);
	void SetCastRaytracedShadow(bool* bNewValue);
	void SetCastDeepShadow(bool* bNewValue);
	void SetAffectReflection(bool* bNewValue);
	void SetAffectGlobalIllumination(bool* bNewValue);
	void GetLightColor(const struct FLinearColor& ReturnValue);
};

// 0xB0 (0x288 - 0x1D8)
// Class Engine.Texture2D
class UTexture2D : public UTexture
{
public:
	int32                                        FirstResourceMemMip;                               // 0x1D8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTemporarilyDisableStreaming : 1;                  // Mask: 0x1, PropSize: 0x10x1DC(0x1)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_191 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ETextureAddress                   AddressX;                                          // 0x1DD(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
	enum class ETextureAddress                   AddressY;                                          // 0x1DE(0x1)(BlueprintVisible, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_29BF[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FIntPoint                             ImportedSize;                                      // 0x1E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C0[0xA0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTexture2D* GetDefaultObj();

	void Blueprint_GetSizeY(int32 ReturnValue);
	void Blueprint_GetSizeX(int32 ReturnValue);
};

// 0x8 (0x290 - 0x288)
// Class Engine.LightMapTexture2D
class ULightMapTexture2D : public UTexture2D
{
public:
	uint8                                        Pad_29C1[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULightMapTexture2D* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.LightmassPortal
class ALightmassPortal : public AActor
{
public:
	class ULightmassPortalComponent*             PortalComponent;                                   // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ALightmassPortal* GetDefaultObj();

};

// 0x8 (0x2D0 - 0x2C8)
// Class Engine.LightmassPortalComponent
class ULightmassPortalComponent : public USceneComponent
{
public:
	class UBoxComponent*                         PreviewBox;                                        // 0x2C8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULightmassPortalComponent* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.LocalSkyLightOverride
class ALocalSkyLightOverride : public AInfo
{
public:
	class ULocalSkyLightOverrideComponent*       LocalSkyLightComponent;                            // 0x4C8(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x4D0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_29C5[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALocalSkyLightOverride* GetDefaultObj();

	void OnRep_bEnabled();
};

// 0x118 (0x3E0 - 0x2C8)
// Class Engine.LocalSkyLightOverrideComponent
class ULocalSkyLightOverrideComponent : public USceneComponent
{
public:
	bool                                         bUseBoxInfluenceShape;                             // 0x2C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendDistance;                                     // 0x2CC(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CaptureOffset;                                     // 0x2D0(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CubemapResolution;                                 // 0x2E8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          CaptureColor;                                      // 0x2EC(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CaptureColorIntensity;                             // 0x2FC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SkyDistanceThreshold;                              // 0x300(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCaptureEmissiveOnly;                              // 0x304(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLowerHemisphereIsBlack;                           // 0x305(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CD[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          LowerHemisphereColor;                              // 0x308(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureCube*                          Texture;                                           // 0x318(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	bool                                         bOverrideLumenSkylightLeaking;                     // 0x320(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29CF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LumenSkylightLeakingOverrideValue;                 // 0x324(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D0[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULocalSkyLightOverrideComponent* GetDefaultObj();

	bool SetUseBoxShape();
	void SetTexture(class UTextureCube** InTexture);
	float SetBlendDistance();
	void GetInfluenceBoundingRadius(float ReturnValue);
};

// 0x210 (0x238 - 0x28)
// Class Engine.MapBuildDataRegistry
class UMapBuildDataRegistry : public UObject
{
public:
	enum class ELightingBuildQuality             LevelLightingQuality;                              // 0x28(0x1)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D5[0x20F];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMapBuildDataRegistry* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionAbs
class UMaterialExpressionAbs : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionAbs* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionAbsorptionMediumMaterialOutput
class UMaterialExpressionAbsorptionMediumMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      TransmittanceColor;                                // 0xB0(0x28)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionAbsorptionMediumMaterialOutput* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionActorPositionWS
class UMaterialExpressionActorPositionWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionActorPositionWS* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionAdd
class UMaterialExpressionAdd : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionAdd* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.MaterialExpressionTextureBase
class UMaterialExpressionTextureBase : public UMaterialExpression
{
public:
	class UTexture*                              Texture;                                           // 0xB0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	enum class EMaterialSamplerType              SamplerType;                                       // 0xB8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        IsDefaultMeshpaintTexture : 1;                     // Mask: 0x1, PropSize: 0x10xB9(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29DC[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureBase* GetDefaultObj();

};

// 0xF8 (0x1B8 - 0xC0)
// Class Engine.MaterialExpressionTextureSample
class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xC0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      TextureObject;                                     // 0xE8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FExpressionInput                      MipValue;                                          // 0x110(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      CoordinatesDX;                                     // 0x138(0x28)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      CoordinatesDY;                                     // 0x160(0x28)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      AutomaticViewMipBiasValue;                         // 0x188(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETextureMipValueMode              MipValueMode;                                      // 0x1B0(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESamplerSourceMode                SamplerSource;                                     // 0x1B1(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        AutomaticViewMipBias : 1;                          // Mask: 0x1, PropSize: 0x10x1B2(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_193 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        ConstCoordinate;                                   // 0x1B3(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ConstMipValue;                                     // 0x1B4(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSample* GetDefaultObj();

};

// 0x88 (0x240 - 0x1B8)
// Class Engine.MaterialExpressionTextureSampleParameter
class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{
public:
	class FName                                  ParameterName;                                     // 0x1B8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ExpressionGUID;                                    // 0x1C0(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Group;                                             // 0x1D0(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	int32                                        SortPriority;                                      // 0x1D8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_29E2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FParameterChannelNames                ChannelNames;                                      // 0x1E0(0x60)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameter* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameter2D
class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameter2D* GetDefaultObj();

};

// 0x8 (0x248 - 0x240)
// Class Engine.MaterialExpressionAntialiasedTextureMask
class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{
public:
	float                                        Threshold;                                         // 0x240(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ETextureColorChannel              Channel;                                           // 0x244(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_29E5[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionAntialiasedTextureMask* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionAppendVector
class UMaterialExpressionAppendVector : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionAppendVector* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArccosine
class UMaterialExpressionArccosine : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArccosine* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArccosineFast
class UMaterialExpressionArccosineFast : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArccosineFast* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArcsine
class UMaterialExpressionArcsine : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArcsine* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArcsineFast
class UMaterialExpressionArcsineFast : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArcsineFast* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArctangent
class UMaterialExpressionArctangent : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArctangent* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionArctangent2
class UMaterialExpressionArctangent2 : public UMaterialExpression
{
public:
	struct FExpressionInput                      Y;                                                 // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      X;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionArctangent2* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionArctangent2Fast
class UMaterialExpressionArctangent2Fast : public UMaterialExpression
{
public:
	struct FExpressionInput                      Y;                                                 // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      X;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionArctangent2Fast* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionArctangentFast
class UMaterialExpressionArctangentFast : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionArctangentFast* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionAtmosphericFogColor
class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
{
public:
	struct FExpressionInput                      WorldPosition;                                     // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionAtmosphericFogColor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionAtmosphericLightColor
class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionAtmosphericLightColor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionAtmosphericLightVector
class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionAtmosphericLightVector* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionAuxSceneTextureRead
class UMaterialExpressionAuxSceneTextureRead : public UMaterialExpression
{
public:
	enum class EAuxSceneTextures                 AuxSceneTextureId;                                 // 0xB0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29F8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      ReadCoordinates;                                   // 0xB8(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceIntegerCoords;                               // 0xE0(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReadFromRWTexture;                                // 0xE1(0x1)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FA[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionAuxSceneTextureRead* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionAuxSceneTextureSize
class UMaterialExpressionAuxSceneTextureSize : public UMaterialExpression
{
public:
	enum class EAuxSceneTextures                 AuxSceneTextureId;                                 // 0xB0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FD[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionAuxSceneTextureSize* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Engine.MaterialExpressionAuxSceneTextureWrite
class UMaterialExpressionAuxSceneTextureWrite : public UMaterialExpressionCustomOutput
{
public:
	enum class EAuxSceneTextures                 AuxSceneTextureId;                                 // 0xB0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_29FF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      OutputValue;                                       // 0xB8(0x28)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WritePosition;                                     // 0xE0(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EnableMask;                                        // 0x108(0x28)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionAuxSceneTextureWrite* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionBentNormalCustomOutput
class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionBentNormalCustomOutput* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionBinaryOp
class UMaterialExpressionBinaryOp : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionBinaryOp* GetDefaultObj();

};

// 0x0 (0x108 - 0x108)
// Class Engine.MaterialExpressionLess
class UMaterialExpressionLess : public UMaterialExpressionBinaryOp
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionLess* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionBlackBody
class UMaterialExpressionBlackBody : public UMaterialExpression
{
public:
	struct FExpressionInput                      Temp;                                              // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionBlackBody* GetDefaultObj();

};

// 0x90 (0x140 - 0xB0)
// Class Engine.MaterialExpressionBlendMaterialAttributes
class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput              A;                                                 // 0xB0(0x30)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FMaterialAttributesInput              B;                                                 // 0xE0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Alpha;                                             // 0x110(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EMaterialAttributeBlend           PixelAttributeBlendType;                           // 0x138(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMaterialAttributeBlend           VertexAttributeBlendType;                          // 0x139(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A02[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionBlendMaterialAttributes* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionBreakMaterialAttributes
class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput              MaterialAttributes;                                // 0xB0(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionBreakMaterialAttributes* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionBumpOffset
class UMaterialExpressionBumpOffset : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinate;                                        // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Height;                                            // 0xD8(0x28)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	struct FExpressionInput                      HeightRatioInput;                                  // 0x100(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HeightRatio;                                       // 0x128(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReferencePlane;                                    // 0x12C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ConstCoordinate;                                   // 0x130(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A07[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionBumpOffset* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionCameraPositionWS
class UMaterialExpressionCameraPositionWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionCameraPositionWS* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionCameraVectorWS
class UMaterialExpressionCameraVectorWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionCameraVectorWS* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionCeil
class UMaterialExpressionCeil : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionCeil* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionParameter
class UMaterialExpressionParameter : public UMaterialExpression
{
public:
	class FName                                  ParameterName;                                     // 0xB0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ExpressionGUID;                                    // 0xB8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Group;                                             // 0xC8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	int32                                        SortPriority;                                      // 0xD0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A0D[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionParameter* GetDefaultObj();

};

// 0x78 (0x150 - 0xD8)
// Class Engine.MaterialExpressionVectorParameter
class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{
public:
	struct FLinearColor                          DefaultValue;                                      // 0xD8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseCustomPrimitiveData;                           // 0xE8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PrimitiveDataIndex;                                // 0xE9(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A10[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FParameterChannelNames                ChannelNames;                                      // 0xF0(0x60)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionVectorParameter* GetDefaultObj();

};

// 0x30 (0x180 - 0x150)
// Class Engine.MaterialExpressionChannelMaskParameter
class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
{
public:
	enum class EChannelMaskParameterColor        MaskChannel;                                       // 0x150(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A12[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0x158(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionChannelMaskParameter* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionClamp
class UMaterialExpressionClamp : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Min;                                               // 0xD8(0x28)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      Max;                                               // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	enum class EClampMode                        ClampMode;                                         // 0x128(0x1)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A17[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinDefault;                                        // 0x12C(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDefault;                                        // 0x130(0x4)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A18[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionClamp* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionClearCoatNormalCustomOutput
class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionClearCoatNormalCustomOutput* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionCloudSampleAttribute
class UMaterialExpressionCloudSampleAttribute : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionCloudSampleAttribute* GetDefaultObj();

};

// 0x20 (0xD0 - 0xB0)
// Class Engine.MaterialExpressionCollectionParameter
class UMaterialExpressionCollectionParameter : public UMaterialExpression
{
public:
	class UMaterialParameterCollection*          Collection;                                        // 0xB0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst)
	class FName                                  ParameterName;                                     // 0xB8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ParameterId;                                       // 0xC0(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionCollectionParameter* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionComment
class UMaterialExpressionComment : public UMaterialExpression
{
public:
	int32                                        SizeX;                                             // 0xB0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0xB4(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	class FString                                Text;                                              // 0xB8(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	struct FLinearColor                          CommentColor;                                      // 0xC8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FontSize;                                          // 0xD8(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        bCommentBubbleVisible_InDetailsPanel : 1;          // Mask: 0x1, PropSize: 0x10xDC(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bColorCommentBubble : 1;                           // Mask: 0x2, PropSize: 0x10xDC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_194 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A21[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bGroupMode;                                        // 0xE0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A22[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionComment* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionComponentMask
class UMaterialExpressionComponentMask : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        R : 1;                                             // Mask: 0x1, PropSize: 0x10xD8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	uint8                                        G : 1;                                             // Mask: 0x2, PropSize: 0x10xD8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	uint8                                        B : 1;                                             // Mask: 0x4, PropSize: 0x10xD8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	uint8                                        A : 1;                                             // Mask: 0x8, PropSize: 0x10xD8(0x1)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	uint8                                        Pad_2A24[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionComponentMask* GetDefaultObj();

};

// 0x20 (0xD0 - 0xB0)
// Class Engine.MaterialExpressionComposite
class UMaterialExpressionComposite : public UMaterialExpression
{
public:
	class FString                                SubgraphName;                                      // 0xB0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialExpressionPinBase*            InputExpressions;                                  // 0xC0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialExpressionPinBase*            OutputExpressions;                                 // 0xC8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionComposite* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionConstant
class UMaterialExpressionConstant : public UMaterialExpression
{
public:
	float                                        R;                                                 // 0xB0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	uint8                                        Pad_2A27[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionConstant* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionConstant2Vector
class UMaterialExpressionConstant2Vector : public UMaterialExpression
{
public:
	float                                        R;                                                 // 0xB0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        G;                                                 // 0xB4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionConstant2Vector* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.MaterialExpressionConstant3Vector
class UMaterialExpressionConstant3Vector : public UMaterialExpression
{
public:
	struct FLinearColor                          Constant;                                          // 0xB0(0x10)(ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionConstant3Vector* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.MaterialExpressionConstant4Vector
class UMaterialExpressionConstant4Vector : public UMaterialExpression
{
public:
	struct FLinearColor                          Constant;                                          // 0xB0(0x10)(ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionConstant4Vector* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionConstantBiasScale
class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        Bias;                                              // 0xD8(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Scale;                                             // 0xDC(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionConstantBiasScale* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionCosine
class UMaterialExpressionCosine : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        Period;                                            // 0xD8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_2A2A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionCosine* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionCrossProduct
class UMaterialExpressionCrossProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionCrossProduct* GetDefaultObj();

};

// 0x10 (0xE8 - 0xD8)
// Class Engine.MaterialExpressionScalarParameter
class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{
public:
	float                                        DefaultValue;                                      // 0xD8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseCustomPrimitiveData;                           // 0xDC(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        PrimitiveDataIndex;                                // 0xDD(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A2D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SliderMin;                                         // 0xE0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SliderMax;                                         // 0xE4(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionScalarParameter* GetDefaultObj();

};

// 0x38 (0x120 - 0xE8)
// Class Engine.MaterialExpressionCurveAtlasRowParameter
class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
{
public:
	class UCurveLinearColor*                     Curve;                                             // 0xE8(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, Config)
	class UCurveLinearColorAtlas*                Atlas;                                             // 0xF0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FExpressionInput                      InputTime;                                         // 0xF8(0x28)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionCurveAtlasRowParameter* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionCustom
class UMaterialExpressionCustom : public UMaterialExpression
{
public:
	class FString                                Code;                                              // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	enum class ECustomMaterialOutputType         OutputType;                                        // 0xC0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A32[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Description;                                       // 0xC8(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	TArray<struct FCustomInput>                  Inputs;                                            // 0xD8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FCustomOutput>                 AdditionalOutputs;                                 // 0xE8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomDefine>                 AdditionalDefines;                                 // 0xF8(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        IncludeFilePaths;                                  // 0x108(0x10)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionCustom* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionDataDrivenShaderPlatformInfoSwitch
class UMaterialExpressionDataDrivenShaderPlatformInfoSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      InputTrue;                                         // 0xB0(0x28)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      InputFalse;                                        // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDataDrivenShaderPlatformInfoInput> DDSPIPropertyNames;                                // 0x100(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bContainsInvalidProperty : 1;                      // Mask: 0x1, PropSize: 0x10x110(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A39[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionDataDrivenShaderPlatformInfoSwitch* GetDefaultObj();

	void GetNameOptions(const TArray<class FString>& ReturnValue);
};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionDBufferTexture
class UMaterialExpressionDBufferTexture : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EDBufferTextureId                 DBufferTextureId;                                  // 0xD8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A3A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionDBufferTexture* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDDX
class UMaterialExpressionDDX : public UMaterialExpression
{
public:
	struct FExpressionInput                      Value;                                             // 0xB0(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDDX* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDDY
class UMaterialExpressionDDY : public UMaterialExpression
{
public:
	struct FExpressionInput                      Value;                                             // 0xB0(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDDY* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDecalColor
class UMaterialExpressionDecalColor : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDecalColor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDecalDerivative
class UMaterialExpressionDecalDerivative : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDecalDerivative* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDecalLifetimeOpacity
class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDecalLifetimeOpacity* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionDecalMipmapLevel
class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
{
public:
	struct FExpressionInput                      TextureSize;                                       // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ConstWidth;                                        // 0xD8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstHeight;                                       // 0xDC(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDecalMipmapLevel* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDeltaTime
class UMaterialExpressionDeltaTime : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDeltaTime* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionDepthFade
class UMaterialExpressionDepthFade : public UMaterialExpression
{
public:
	struct FExpressionInput                      InOpacity;                                         // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, GlobalConfig, SubobjectReference)
	struct FExpressionInput                      FadeDistance;                                      // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OpacityDefault;                                    // 0x100(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeDistanceDefault;                               // 0x104(0x4)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDepthFade* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionDepthOfFieldFunction
class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{
public:
	enum class EDepthOfFieldFunctionValue        FunctionValue;                                     // 0xB0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A3E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Depth;                                             // 0xB8(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionDepthOfFieldFunction* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDeriveNormalZ
class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{
public:
	struct FExpressionInput                      InXY;                                              // 0xB0(0x28)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDeriveNormalZ* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class Engine.MaterialExpressionDesaturation
class UMaterialExpressionDesaturation : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Fraction;                                          // 0xD8(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FLinearColor                          LuminanceFactors;                                  // 0x100(0x10)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDesaturation* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDispatchId
class UMaterialExpressionDispatchId : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDispatchId* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDispatchSize
class UMaterialExpressionDispatchSize : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDispatchSize* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionDistance
class UMaterialExpressionDistance : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDistance* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionDistanceCullFade
class UMaterialExpressionDistanceCullFade : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionDistanceCullFade* GetDefaultObj();

};

// 0xB8 (0x168 - 0xB0)
// Class Engine.MaterialExpressionDistanceFieldApproxAO
class UMaterialExpressionDistanceFieldApproxAO : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      Normal;                                            // 0xD8(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      BaseDistance;                                      // 0x100(0x28)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseDistanceDefault;                               // 0x128(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Radius;                                            // 0x130(0x28)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        RadiusDefault;                                     // 0x158(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       NumSteps;                                          // 0x15C(0x4)(BlueprintVisible, ExportObject, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        StepScaleDefault;                                  // 0x160(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A45[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionDistanceFieldApproxAO* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDistanceFieldGradient
class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDistanceFieldGradient* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionDistanceFieldsRenderingSwitch
class UMaterialExpressionDistanceFieldsRenderingSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      No;                                                // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Yes;                                               // 0xD8(0x28)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDistanceFieldsRenderingSwitch* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDistanceToNearestSurface
class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDistanceToNearestSurface* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionDivide
class UMaterialExpressionDivide : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDivide* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionDotProduct
class UMaterialExpressionDotProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionDotProduct* GetDefaultObj();

};

// 0x28 (0x100 - 0xD8)
// Class Engine.MaterialExpressionDoubleVectorParameter
class UMaterialExpressionDoubleVectorParameter : public UMaterialExpressionParameter
{
public:
	uint8                                        Pad_2A4B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4d                             DefaultValue;                                      // 0xE0(0x20)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionDoubleVectorParameter* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionDynamicParameter
class UMaterialExpressionDynamicParameter : public UMaterialExpression
{
public:
	TArray<class FString>                        ParamNames;                                        // 0xB0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultValue;                                      // 0xC0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       ParameterIndex;                                    // 0xD0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A4F[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionDynamicParameter* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionExecBegin
class UMaterialExpressionExecBegin : public UMaterialExpression
{
public:
	struct FExpressionExecOutput                 Exec;                                              // 0xB0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionExecBegin* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionExecEnd
class UMaterialExpressionExecEnd : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionExecEnd* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionEyeAdaptation
class UMaterialExpressionEyeAdaptation : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionEyeAdaptation* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionEyeAdaptationInverse
class UMaterialExpressionEyeAdaptationInverse : public UMaterialExpression
{
public:
	struct FExpressionInput                      LightValueInput;                                   // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      AlphaInput;                                        // 0xD8(0x28)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionEyeAdaptationInverse* GetDefaultObj();

};

// 0xF0 (0x1A0 - 0xB0)
// Class Engine.MaterialExpressionFeatureLevelSwitch
class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Inputs[0x5];                                       // 0xD8(0xC8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionFeatureLevelSwitch* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionFloor
class UMaterialExpressionFloor : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionFloor* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionFmod
class UMaterialExpressionFmod : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionFmod* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.MaterialExpressionFontSample
class UMaterialExpressionFontSample : public UMaterialExpression
{
public:
	class UFont*                                 Font;                                              // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	int32                                        FontTexturePage;                                   // 0xB8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A5C[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionFontSample* GetDefaultObj();

};

// 0x28 (0xE8 - 0xC0)
// Class Engine.MaterialExpressionFontSampleParameter
class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{
public:
	class FName                                  ParameterName;                                     // 0xC0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ExpressionGUID;                                    // 0xC8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Group;                                             // 0xD8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	int32                                        SortPriority;                                      // 0xE0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A5E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionFontSampleParameter* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionForLoop
class UMaterialExpressionForLoop : public UMaterialExpression
{
public:
	struct FExpressionExecOutput                 LoopBody;                                          // 0xB0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionExecOutput                 Completed;                                         // 0xB8(0x8)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FExpressionInput                      StartIndex;                                        // 0xC0(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EndIndex;                                          // 0xE8(0x28)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IndexStep;                                         // 0x110(0x28)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionForLoop* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionFrac
class UMaterialExpressionFrac : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionFrac* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionFrameBufferUAVColor
class UMaterialExpressionFrameBufferUAVColor : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionFrameBufferUAVColor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionFrameBufferUAVOffset
class UMaterialExpressionFrameBufferUAVOffset : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionFrameBufferUAVOffset* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionFrameBufferUAVSize
class UMaterialExpressionFrameBufferUAVSize : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionFrameBufferUAVSize* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionFresnel
class UMaterialExpressionFresnel : public UMaterialExpression
{
public:
	struct FExpressionInput                      ExponentIn;                                        // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Exponent;                                          // 0xD8(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A64[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      BaseReflectFractionIn;                             // 0xE0(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BaseReflectFraction;                               // 0x108(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A65[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Normal;                                            // 0x110(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionFresnel* GetDefaultObj();

};

// 0xB0 (0x160 - 0xB0)
// Class Engine.MaterialExpressionFunctionInput
class UMaterialExpressionFunctionInput : public UMaterialExpression
{
public:
	struct FExpressionInput                      Preview;                                           // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class FName                                  InputName;                                         // 0xD8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	class FString                                Description;                                       // 0xE0(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	struct FGuid                                 ID;                                                // 0xF0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EFunctionInputType                InputType;                                         // 0x100(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A66[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4f                             PreviewValue;                                      // 0x110(0x10)(Edit, ExportObject, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePreviewValueAsDefault : 1;                     // Mask: 0x1, PropSize: 0x10x120(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_195 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A69[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SortPriority;                                      // 0x124(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bCompilingFunctionPreview : 1;                     // Mask: 0x1, PropSize: 0x10x128(0x1)(Edit, BlueprintVisible, ExportObject, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A6A[0x37];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionFunctionInput* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class Engine.MaterialExpressionFunctionOutput
class UMaterialExpressionFunctionOutput : public UMaterialExpression
{
public:
	class FName                                  OutputName;                                        // 0xB0(0x8)(ConstParm, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	class FString                                Description;                                       // 0xB8(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	int32                                        SortPriority;                                      // 0xC8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A6E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      A;                                                 // 0xD0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	uint8                                        bLastPreviewed : 1;                                // Mask: 0x1, PropSize: 0x10xF8(0x1)(BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_196 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2A6F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 ID;                                                // 0xFC(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_2A70[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionFunctionOutput* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionGenericConstant
class UMaterialExpressionGenericConstant : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionGenericConstant* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionConstantDouble
class UMaterialExpressionConstantDouble : public UMaterialExpressionGenericConstant
{
public:
	double                                       Value;                                             // 0xB0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionConstantDouble* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionGetComputeMaterialSplatData
class UMaterialExpressionGetComputeMaterialSplatData : public UMaterialExpression
{
public:
	uint32                                       DataIndex;                                         // 0xB0(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	enum class ESplatBlendOp                     BlendOp;                                           // 0xB4(0x1)(ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A75[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionGetComputeMaterialSplatData* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionGetLocal
class UMaterialExpressionGetLocal : public UMaterialExpression
{
public:
	class FName                                  LocalName;                                         // 0xB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionGetLocal* GetDefaultObj();

};

// 0x40 (0xF0 - 0xB0)
// Class Engine.MaterialExpressionGetMaterialAttributes
class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput              MaterialAttributes;                                // 0xB0(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FGuid>                         AttributeGetTypes;                                 // 0xE0(0x10)(Edit, ConstParm, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionGetMaterialAttributes* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class Engine.MaterialExpressionGIReplace
class UMaterialExpressionGIReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      StaticIndirect;                                    // 0xD8(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      DynamicIndirect;                                   // 0x100(0x28)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionGIReplace* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionGPUReadbackMessageOutput
class UMaterialExpressionGPUReadbackMessageOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FCustomFloatInput                     MessageData;                                       // 0xB0(0x38)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EnableMask;                                        // 0xE8(0x28)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOutputPrimitiveId;                                // 0x110(0x1)(BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOutputInstanceId;                                 // 0x111(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOutputRowIdx;                                     // 0x112(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A78[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionGPUReadbackMessageOutput* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionHairAttributes
class UMaterialExpressionHairAttributes : public UMaterialExpression
{
public:
	uint8                                        bUseTangentSpace : 1;                              // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A7A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionHairAttributes* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class Engine.MaterialExpressionHairColor
class UMaterialExpressionHairColor : public UMaterialExpression
{
public:
	struct FExpressionInput                      Melanin;                                           // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Redness;                                           // 0xD8(0x28)(ConstParm, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      DyeColor;                                          // 0x100(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionHairColor* GetDefaultObj();

};

// 0xD8 (0x188 - 0xB0)
// Class Engine.MaterialExpressionIf
class UMaterialExpressionIf : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      AGreaterThanB;                                     // 0x100(0x28)(BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      AEqualsB;                                          // 0x128(0x28)(Edit, ConstParm, ExportObject, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ALessThanB;                                        // 0x150(0x28)(Edit, BlueprintVisible, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EqualsThreshold;                                   // 0x178(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x17C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstAEqualsB;                                     // 0x180(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A83[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionIf* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionIfThenElse
class UMaterialExpressionIfThenElse : public UMaterialExpression
{
public:
	struct FExpressionExecOutput                 Then;                                              // 0xB0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionExecOutput                 Else;                                              // 0xB8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Condition;                                         // 0xC0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionIfThenElse* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionInstanceDistanceCullingData
class UMaterialExpressionInstanceDistanceCullingData : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionInstanceDistanceCullingData* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionInstanceLocalBounds
class UMaterialExpressionInstanceLocalBounds : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionInstanceLocalBounds* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionInstancePositionWS
class UMaterialExpressionInstancePositionWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionInstancePositionWS* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionInverseLinearInterpolate
class UMaterialExpressionInverseLinearInterpolate : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Value;                                             // 0x100(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	float                                        ConstA;                                            // 0x128(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x12C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstValue;                                        // 0x130(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bClampResult;                                      // 0x134(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A8D[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionInverseLinearInterpolate* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionIsOrthographic
class UMaterialExpressionIsOrthographic : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionIsOrthographic* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionLightmapUVs
class UMaterialExpressionLightmapUVs : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionLightmapUVs* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionLightmassReplace
class UMaterialExpressionLightmassReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Realtime;                                          // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Lightmass;                                         // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionLightmassReplace* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionLightVector
class UMaterialExpressionLightVector : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionLightVector* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionLinearInterpolate
class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Alpha;                                             // 0x100(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ConstA;                                            // 0x128(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x12C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstAlpha;                                        // 0x130(0x4)(Edit, ConstParm, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A9B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionLinearInterpolate* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionLogarithm10
class UMaterialExpressionLogarithm10 : public UMaterialExpression
{
public:
	struct FExpressionInput                      X;                                                 // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionLogarithm10* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionLogarithm2
class UMaterialExpressionLogarithm2 : public UMaterialExpression
{
public:
	struct FExpressionInput                      X;                                                 // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionLogarithm2* GetDefaultObj();

};

// 0x4B0 (0x560 - 0xB0)
// Class Engine.MaterialExpressionMakeMaterialAttributes
class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Metallic;                                          // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Specular;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x128(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Anisotropy;                                        // 0x150(0x28)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      EmissiveColor;                                     // 0x178(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Opacity;                                           // 0x1A0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      OpacityMask;                                       // 0x1C8(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x1F0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      Tangent;                                           // 0x218(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      WorldPositionOffset;                               // 0x240(0x28)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SubsurfaceColor;                                   // 0x268(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      ClearCoat;                                         // 0x290(0x28)(Edit, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ClearCoatRoughness;                                // 0x2B8(0x28)(Edit, ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      AmbientOcclusion;                                  // 0x2E0(0x28)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Refraction;                                        // 0x308(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SSAOIntensity;                                     // 0x330(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SSAOInfluence;                                     // 0x358(0x28)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SSAOLightInfluence;                                // 0x380(0x28)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ToonOutlineWidth;                                  // 0x3A8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      CustomizedUVs[0x8];                                // 0x3D0(0x140)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PixelDepthOffset;                                  // 0x510(0x28)(Edit, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ShadingModel;                                      // 0x538(0x28)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UMaterialExpressionMakeMaterialAttributes* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionMapARPassthroughCameraUV
class UMaterialExpressionMapARPassthroughCameraUV : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMapARPassthroughCameraUV* GetDefaultObj();

};

// 0x168 (0x218 - 0xB0)
// Class Engine.MaterialExpressionMaterialAttributeLayers
class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput              Input;                                             // 0xB0(0x30)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FMaterialLayersFunctions              DefaultLayers;                                     // 0xE0(0x100)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UMaterialExpressionMaterialFunctionCall*> LayerCallers;                                      // 0x1E0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumActiveLayerCallers;                             // 0x1F0(0x4)(ConstParm, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A9E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMaterialExpressionMaterialFunctionCall*> BlendCallers;                                      // 0x1F8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumActiveBlendCallers;                             // 0x208(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsLayerGraphBuilt;                                // 0x20C(0x1)(Edit, BlueprintVisible, Net, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA1[0xB];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionMaterialAttributeLayers* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionMaterialFunctionCall
class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{
public:
	class UMaterialFunctionInterface*            MaterialFunction;                                  // 0xB0(0x8)(Net, Parm, ZeroConstructor, Transient, Config, InstancedReference, DuplicateTransient)
	TArray<struct FFunctionExpressionInput>      FunctionInputs;                                    // 0xB8(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FFunctionExpressionOutput>     FunctionOutputs;                                   // 0xC8(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMaterialParameterInfo                FunctionParameterInfo;                             // 0xD8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMaterialFunctionCall* GetDefaultObj();

};

// 0x0 (0x110 - 0x110)
// Class Engine.MaterialExpressionMaterialLayerOutput
class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionMaterialLayerOutput* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionMaterialProxyReplace
class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Realtime;                                          // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      MaterialProxy;                                     // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMaterialProxyReplace* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionMax
class UMaterialExpressionMax : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMax* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionMin
class UMaterialExpressionMin : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMin* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionMultiply
class UMaterialExpressionMultiply : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionMultiply* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionRerouteBase
class UMaterialExpressionRerouteBase : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionRerouteBase* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionNamedRerouteBase
class UMaterialExpressionNamedRerouteBase : public UMaterialExpressionRerouteBase
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionNamedRerouteBase* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionNamedRerouteDeclaration
class UMaterialExpressionNamedRerouteDeclaration : public UMaterialExpressionNamedRerouteBase
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	class FName                                  Name;                                              // 0xD8(0x8)(ConstParm, Net, OutParm)
	struct FLinearColor                          NodeColor;                                         // 0xE0(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FGuid                                 VariableGuid;                                      // 0xF0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionNamedRerouteDeclaration* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class Engine.MaterialExpressionNamedRerouteUsage
class UMaterialExpressionNamedRerouteUsage : public UMaterialExpressionNamedRerouteBase
{
public:
	class UMaterialExpressionNamedRerouteDeclaration* Declaration;                                       // 0xB0(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FGuid                                 DeclarationGuid;                                   // 0xB8(0x10)(ConstParm, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionNamedRerouteUsage* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionNaniteReplace
class UMaterialExpressionNaniteReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Nanite;                                            // 0xD8(0x28)(EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionNaniteReplace* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class Engine.MaterialExpressionNoise
class UMaterialExpressionNoise : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      FilterWidth;                                       // 0xD8(0x28)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	float                                        Scale;                                             // 0x100(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	int32                                        Quality;                                           // 0x104(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENoiseFunction                    NoiseFunction;                                     // 0x108(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AB0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bTurbulence : 1;                                   // Mask: 0x1, PropSize: 0x10x10C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_198 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2AB3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Levels;                                            // 0x110(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OutputMin;                                         // 0x114(0x4)(Edit, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutputMax;                                         // 0x118(0x4)(Edit, ConstParm, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LevelScale;                                        // 0x11C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTiling : 1;                                       // Mask: 0x1, PropSize: 0x10x120(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_199 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2AB4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       RepeatSize;                                        // 0x124(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionNoise* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionNormalize
class UMaterialExpressionNormalize : public UMaterialExpression
{
public:
	struct FExpressionInput                      VectorInput;                                       // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionNormalize* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionObjectBounds
class UMaterialExpressionObjectBounds : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionObjectBounds* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionObjectLocalBounds
class UMaterialExpressionObjectLocalBounds : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionObjectLocalBounds* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionObjectOrientation
class UMaterialExpressionObjectOrientation : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionObjectOrientation* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionObjectPositionWS
class UMaterialExpressionObjectPositionWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionObjectPositionWS* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionObjectRadius
class UMaterialExpressionObjectRadius : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionObjectRadius* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionOneMinus
class UMaterialExpressionOneMinus : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionOneMinus* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionPanner
class UMaterialExpressionPanner : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinate;                                        // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Time;                                              // 0xD8(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FExpressionInput                      Speed;                                             // 0x100(0x28)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        SpeedX;                                            // 0x128(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpeedY;                                            // 0x12C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ConstCoordinate;                                   // 0x130(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFractionalPart;                                   // 0x134(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AC2[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPanner* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleColor
class UMaterialExpressionParticleColor : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleColor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleDirection
class UMaterialExpressionParticleDirection : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleDirection* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleMacroUV
class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleMacroUV* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleMotionBlurFade
class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleMotionBlurFade* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticlePositionWS
class UMaterialExpressionParticlePositionWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticlePositionWS* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleRadius
class UMaterialExpressionParticleRadius : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleRadius* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleRandom
class UMaterialExpressionParticleRandom : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleRandom* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleRelativeTime
class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleRelativeTime* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleSize
class UMaterialExpressionParticleSize : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleSize* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleSpeed
class UMaterialExpressionParticleSpeed : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleSpeed* GetDefaultObj();

};

// 0x8 (0x1C0 - 0x1B8)
// Class Engine.MaterialExpressionParticleSubUV
class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{
public:
	uint8                                        bBlend : 1;                                        // Mask: 0x1, PropSize: 0x10x1B8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AD4[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleSubUV* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionParticleSubUVProperties
class UMaterialExpressionParticleSubUVProperties : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionParticleSubUVProperties* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionPathTracingQualitySwitch
class UMaterialExpressionPathTracingQualitySwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Normal;                                            // 0xB0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      PathTraced;                                        // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPathTracingQualitySwitch* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class Engine.MaterialExpressionPathTracingRayTypeSwitch
class UMaterialExpressionPathTracingRayTypeSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Main;                                              // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Shadow;                                            // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IndirectDiffuse;                                   // 0x100(0x28)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IndirectSpecular;                                  // 0x128(0x28)(ExportObject, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IndirectVolume;                                    // 0x150(0x28)(Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPathTracingRayTypeSwitch* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceCustomData
class UMaterialExpressionPerInstanceCustomData : public UMaterialExpression
{
public:
	struct FExpressionInput                      DefaultValue;                                      // 0xB0(0x28)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ConstDefaultValue;                                 // 0xD8(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       DataIndex;                                         // 0xDC(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceCustomData* GetDefaultObj();

};

// 0x40 (0xF0 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceCustomData3Vector
class UMaterialExpressionPerInstanceCustomData3Vector : public UMaterialExpression
{
public:
	struct FExpressionInput                      DefaultValue;                                      // 0xB0(0x28)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ConstDefaultValue;                                 // 0xD8(0x10)(Edit, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       DataIndex;                                         // 0xE8(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2AE1[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceCustomData3Vector* GetDefaultObj();

};

// 0x70 (0x120 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceDynamicCustomData
class UMaterialExpressionPerInstanceDynamicCustomData : public UMaterialExpression
{
public:
	struct FExpressionInput                      DefaultValue;                                      // 0xB0(0x28)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          ConstDefaultValue;                                 // 0xD8(0x10)(Edit, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      RowIndex;                                          // 0xE8(0x28)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	uint32                                       ConstRowIndex;                                     // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       DataIndex;                                         // 0x114(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	bool                                         bUsePreviousFrame;                                 // 0x118(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AE3[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceDynamicCustomData* GetDefaultObj();

};

// 0xA0 (0x150 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceDynamicCustomDataOutput
class UMaterialExpressionPerInstanceDynamicCustomDataOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      ShouldDisable;                                     // 0xB0(0x28)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EnableMask;                                        // 0xD8(0x28)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECustomDataRowCountMethod         RowCountMethod;                                    // 0x100(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AEA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      RowCountParam;                                     // 0x108(0x28)(Edit, ConstParm, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint16                                       RowCountConst;                                     // 0x130(0x2)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AEB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomFloatInput>             CustomFloats;                                      // 0x138(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       NumFloatsPerRow;                                   // 0x148(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bKeepPreviousFrameData;                            // 0x14C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, InstancedReference, SubobjectReference)
	bool                                         bDisableCustomOutputShader;                        // 0x14D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AEC[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceDynamicCustomDataOutput* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceDynamicCustomDataRowIndex
class UMaterialExpressionPerInstanceDynamicCustomDataRowIndex : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceDynamicCustomDataRowIndex* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceDynamicCustomDataValidSwitch
class UMaterialExpressionPerInstanceDynamicCustomDataValidSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         bUsePreviousFrame;                                 // 0x100(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AEF[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceDynamicCustomDataValidSwitch* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceFadeAmount
class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceFadeAmount* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPerInstanceRandom
class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPerInstanceRandom* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class Engine.MaterialExpressionPinBase
class UMaterialExpressionPinBase : public UMaterialExpression
{
public:
	TArray<struct FCompositeReroute>             ReroutePins;                                       // 0xB0(0x10)(ConstParm, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEdGraphPinDirection              PinDirection;                                      // 0xC0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AF5[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPinBase* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPixelDepth
class UMaterialExpressionPixelDepth : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPixelDepth* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPixelNormalWS
class UMaterialExpressionPixelNormalWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPixelNormalWS* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionPower
class UMaterialExpressionPower : public UMaterialExpression
{
public:
	struct FExpressionInput                      Base;                                              // 0xB0(0x28)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FExpressionInput                      Exponent;                                          // 0xD8(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ConstExponent;                                     // 0x100(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AFF[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionPower* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPrecomputedAOMask
class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPrecomputedAOMask* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPreSkinnedLocalBounds
class UMaterialExpressionPreSkinnedLocalBounds : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPreSkinnedLocalBounds* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPreSkinnedNormal
class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPreSkinnedNormal* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionPreSkinnedPosition
class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionPreSkinnedPosition* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionPreviousFrameSwitch
class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      CurrentFrame;                                      // 0xB0(0x28)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PreviousFrame;                                     // 0xD8(0x28)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionPreviousFrameSwitch* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class Engine.MaterialExpressionQualitySwitch
class UMaterialExpressionQualitySwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Inputs[0x4];                                       // 0xD8(0xA0)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionQualitySwitch* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionRayTracingQualitySwitch
class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Normal;                                            // 0xB0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      RayTraced;                                         // 0xD8(0x28)(Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionRayTracingQualitySwitch* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionReflectionCapturePassSwitch
class UMaterialExpressionReflectionCapturePassSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Reflection;                                        // 0xD8(0x28)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionReflectionCapturePassSwitch* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionReflectionVectorWS
class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
{
public:
	struct FExpressionInput                      CustomWorldNormal;                                 // 0xB0(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNormalizeCustomWorldNormal : 1;                   // Mask: 0x1, PropSize: 0x10xD8(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B04[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionReflectionVectorWS* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionReroute
class UMaterialExpressionReroute : public UMaterialExpressionRerouteBase
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionReroute* GetDefaultObj();

};

// 0xA8 (0x158 - 0xB0)
// Class Engine.MaterialExpressionRotateAboutAxis
class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{
public:
	struct FExpressionInput                      NormalizedRotationAxis;                            // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      RotationAngle;                                     // 0xD8(0x28)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PivotPoint;                                        // 0x100(0x28)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Position;                                          // 0x128(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Period;                                            // 0x150(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_2B07[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionRotateAboutAxis* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class Engine.MaterialExpressionRotator
class UMaterialExpressionRotator : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinate;                                        // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Time;                                              // 0xD8(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        CenterX;                                           // 0x100(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0x104(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x108(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint32                                       ConstCoordinate;                                   // 0x10C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionRotator* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionRound
class UMaterialExpressionRound : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionRound* GetDefaultObj();

};

// 0x118 (0x1C8 - 0xB0)
// Class Engine.MaterialExpressionRuntimeVirtualTextureOutput
class UMaterialExpressionRuntimeVirtualTextureOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Specular;                                          // 0xD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x100(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x128(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      WorldHeight;                                       // 0x150(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Opacity;                                           // 0x178(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Mask;                                              // 0x1A0(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UMaterialExpressionRuntimeVirtualTextureOutput* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionRuntimeVirtualTextureReplace
class UMaterialExpressionRuntimeVirtualTextureReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      VirtualTextureOutput;                              // 0xD8(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionRuntimeVirtualTextureReplace* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionRuntimeVirtualTextureSample
class UMaterialExpressionRuntimeVirtualTextureSample : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WorldPosition;                                     // 0xD8(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      MipValue;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class URuntimeVirtualTexture*                VirtualTexture;                                    // 0x128(0x8)(OutParm, ZeroConstructor, ReturnParm, SubobjectReference)
	enum class ERuntimeVirtualTextureMaterialType MaterialType;                                      // 0x130(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         bSinglePhysicalSpace;                              // 0x131(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAdaptive;                                         // 0x132(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableFeedback;                                   // 0x133(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ERuntimeVirtualTextureMipValueMode MipValueMode;                                      // 0x134(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ERuntimeVirtualTextureTextureAddressMode TextureAddressMode;                                // 0x135(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B0E[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionRuntimeVirtualTextureSample* GetDefaultObj();

};

// 0x28 (0x160 - 0x138)
// Class Engine.MaterialExpressionRuntimeVirtualTextureSampleParameter
class UMaterialExpressionRuntimeVirtualTextureSampleParameter : public UMaterialExpressionRuntimeVirtualTextureSample
{
public:
	class FName                                  ParameterName;                                     // 0x138(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ExpressionGUID;                                    // 0x140(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Group;                                             // 0x150(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	int32                                        SortPriority;                                      // 0x158(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B13[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionRuntimeVirtualTextureSampleParameter* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSamplePhysicsVectorField
class UMaterialExpressionSamplePhysicsVectorField : public UMaterialExpression
{
public:
	struct FExpressionInput                      WorldPosition;                                     // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	enum class EFieldVectorType                  FieldTarget;                                       // 0xD8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B14[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSamplePhysicsVectorField* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSamplePhysicsScalarField
class UMaterialExpressionSamplePhysicsScalarField : public UMaterialExpression
{
public:
	struct FExpressionInput                      WorldPosition;                                     // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	enum class EFieldScalarType                  FieldTarget;                                       // 0xD8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B17[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSamplePhysicsScalarField* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSamplePhysicsIntegerField
class UMaterialExpressionSamplePhysicsIntegerField : public UMaterialExpression
{
public:
	struct FExpressionInput                      WorldPosition;                                     // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	enum class EFieldIntegerType                 FieldTarget;                                       // 0xD8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B19[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSamplePhysicsIntegerField* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionSaturate
class UMaterialExpressionSaturate : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionSaturate* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionSceneColor
class UMaterialExpressionSceneColor : public UMaterialExpression
{
public:
	enum class EMaterialSceneAttributeInputMode  InputMode;                                         // 0xB0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B1D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0xB8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      OffsetFraction;                                    // 0xE0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ConstInput;                                        // 0x108(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSceneColor* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionSceneDepth
class UMaterialExpressionSceneDepth : public UMaterialExpression
{
public:
	enum class EMaterialSceneAttributeInputMode  InputMode;                                         // 0xB0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B21[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0xB8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Coordinates;                                       // 0xE0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ConstInput;                                        // 0x108(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSceneDepth* GetDefaultObj();

};

// 0x48 (0xF8 - 0xB0)
// Class Engine.MaterialExpressionSceneDepthWithoutWater
class UMaterialExpressionSceneDepthWithoutWater : public UMaterialExpression
{
public:
	enum class EMaterialSceneAttributeInputMode  InputMode;                                         // 0xB0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B26[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Input;                                             // 0xB8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FVector2D                             ConstInput;                                        // 0xE0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FallbackDepth;                                     // 0xF0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B27[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSceneDepthWithoutWater* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionSceneTexelSize
class UMaterialExpressionSceneTexelSize : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionSceneTexelSize* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSceneTexture
class UMaterialExpressionSceneTexture : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESceneTextureId                   SceneTextureId;                                    // 0xD8(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFiltered;                                         // 0xD9(0x1)(BlueprintVisible, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B2B[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSceneTexture* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionScreenPosition
class UMaterialExpressionScreenPosition : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionScreenPosition* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionSetLocal
class UMaterialExpressionSetLocal : public UMaterialExpression
{
public:
	struct FExpressionExecOutput                 Exec;                                              // 0xB0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Value;                                             // 0xB8(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	class FName                                  LocalName;                                         // 0xE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSetLocal* GetDefaultObj();

};

// 0x20 (0xD0 - 0xB0)
// Class Engine.MaterialExpressionSetMaterialAttributes
class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
{
public:
	TArray<struct FExpressionInput>              Inputs;                                            // 0xB0(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FGuid>                         AttributeSetTypes;                                 // 0xC0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSetMaterialAttributes* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionShaderStageSwitch
class UMaterialExpressionShaderStageSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      PixelShader;                                       // 0xB0(0x28)(Edit, ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      VertexShader;                                      // 0xD8(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionShaderStageSwitch* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionShadingModel
class UMaterialExpressionShadingModel : public UMaterialExpression
{
public:
	enum class EMaterialShadingModel             ShadingModel;                                      // 0xB0(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2B32[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionShadingModel* GetDefaultObj();

};

// 0xA0 (0x150 - 0xB0)
// Class Engine.MaterialExpressionShadingPathSwitch
class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Inputs[0x3];                                       // 0xD8(0x78)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionShadingPathSwitch* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionShadowReplace
class UMaterialExpressionShadowReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                      Default;                                           // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	struct FExpressionInput                      Shadow;                                            // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionShadowReplace* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionSign
class UMaterialExpressionSign : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionSign* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSine
class UMaterialExpressionSine : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        Period;                                            // 0xD8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_2B38[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSine* GetDefaultObj();

};

// 0xA0 (0x150 - 0xB0)
// Class Engine.MaterialExpressionSingleLayerWaterMaterialOutput
class UMaterialExpressionSingleLayerWaterMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      ScatteringCoefficients;                            // 0xB0(0x28)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      AbsorptionCoefficients;                            // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PhaseG;                                            // 0x100(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ColorScaleBehindWater;                             // 0x128(0x28)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSingleLayerWaterMaterialOutput* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereLightDirection
class UMaterialExpressionSkyAtmosphereLightDirection : public UMaterialExpression
{
public:
	int32                                        LightIndex;                                        // 0xB0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereLightDirection* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereLightIlluminance
class UMaterialExpressionSkyAtmosphereLightIlluminance : public UMaterialExpression
{
public:
	int32                                        LightIndex;                                        // 0xB0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      WorldPosition;                                     // 0xB8(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereLightIlluminance* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereLightDiskLuminance
class UMaterialExpressionSkyAtmosphereLightDiskLuminance : public UMaterialExpression
{
public:
	int32                                        LightIndex;                                        // 0xB0(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B3C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      DiskAngularDiameterOverride;                       // 0xB8(0x28)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereLightDiskLuminance* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereAerialPerspective
class UMaterialExpressionSkyAtmosphereAerialPerspective : public UMaterialExpression
{
public:
	struct FExpressionInput                      WorldPosition;                                     // 0xB0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereAerialPerspective* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
class UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionSkyAtmosphereViewLuminance
class UMaterialExpressionSkyAtmosphereViewLuminance : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyAtmosphereViewLuminance* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionSkyLightEnvMapSample
class UMaterialExpressionSkyLightEnvMapSample : public UMaterialExpression
{
public:
	struct FExpressionInput                      Direction;                                         // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0xD8(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSkyLightEnvMapSample* GetDefaultObj();

};

// 0x88 (0x138 - 0xB0)
// Class Engine.MaterialExpressionSmoothStep
class UMaterialExpressionSmoothStep : public UMaterialExpression
{
public:
	struct FExpressionInput                      Min;                                               // 0xB0(0x28)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      Max;                                               // 0xD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      Value;                                             // 0x100(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	float                                        ConstMin;                                          // 0x128(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstMax;                                          // 0x12C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstValue;                                        // 0x130(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B42[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSmoothStep* GetDefaultObj();

};

// 0x90 (0x140 - 0xB0)
// Class Engine.MaterialExpressionSobol
class UMaterialExpressionSobol : public UMaterialExpression
{
public:
	struct FExpressionInput                      Cell;                                              // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Index;                                             // 0xD8(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FExpressionInput                      Seed;                                              // 0x100(0x28)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	uint32                                       ConstIndex;                                        // 0x128(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ConstSeed;                                         // 0x130(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSobol* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSparseVolumeTextureSample
class UMaterialExpressionSparseVolumeTextureSample : public UMaterialExpression
{
public:
	struct FExpressionInput                      Coordinates;                                       // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USparseVolumeTexture*                  SparseVolumeTexture;                               // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSparseVolumeTextureSample* GetDefaultObj();

};

// 0x28 (0x108 - 0xE0)
// Class Engine.MaterialExpressionSparseVolumeTextureSampleParameter
class UMaterialExpressionSparseVolumeTextureSampleParameter : public UMaterialExpressionSparseVolumeTextureSample
{
public:
	class FName                                  ParameterName;                                     // 0xE0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, SubobjectReference)
	struct FGuid                                 ExpressionGUID;                                    // 0xE8(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Group;                                             // 0xF8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	int32                                        SortPriority;                                      // 0x100(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B45[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSparseVolumeTextureSampleParameter* GetDefaultObj();

};

// 0xB0 (0x160 - 0xB0)
// Class Engine.MaterialExpressionSpeedTree
class UMaterialExpressionSpeedTree : public UMaterialExpression
{
public:
	struct FExpressionInput                      GeometryInput;                                     // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WindInput;                                         // 0xD8(0x28)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      LODInput;                                          // 0x100(0x28)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ExtraBendWS;                                       // 0x128(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESpeedTreeGeometryType            GeometryType;                                      // 0x150(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ESpeedTreeWindType                WindType;                                          // 0x151(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESpeedTreeLODType                 LODType;                                           // 0x152(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B46[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BillboardThreshold;                                // 0x154(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAccurateWindVelocities;                           // 0x158(0x1)(Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B47[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSpeedTree* GetDefaultObj();

};

// 0xA8 (0x158 - 0xB0)
// Class Engine.MaterialExpressionSphereMask
class UMaterialExpressionSphereMask : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Radius;                                            // 0x100(0x28)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FExpressionInput                      Hardness;                                          // 0x128(0x28)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AttenuationRadius;                                 // 0x150(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        HardnessPercent;                                   // 0x154(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSphereMask* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionSphericalParticleOpacity
class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
{
public:
	struct FExpressionInput                      Density;                                           // 0xB0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ConstantDensity;                                   // 0xD8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B48[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionSphericalParticleOpacity* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionSquareRoot
class UMaterialExpressionSquareRoot : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionSquareRoot* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionStaticBool
class UMaterialExpressionStaticBool : public UMaterialExpression
{
public:
	uint8                                        Value : 1;                                         // Mask: 0x1, PropSize: 0x10xB0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_2B4A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStaticBool* GetDefaultObj();

};

// 0x8 (0xE0 - 0xD8)
// Class Engine.MaterialExpressionStaticBoolParameter
class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{
public:
	uint8                                        DefaultValue : 1;                                  // Mask: 0x1, PropSize: 0x10xD8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        DynamicBranch : 1;                                 // Mask: 0x2, PropSize: 0x10xD8(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B4C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStaticBoolParameter* GetDefaultObj();

};

// 0x30 (0x108 - 0xD8)
// Class Engine.MaterialExpressionStaticComponentMaskParameter
class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{
public:
	struct FExpressionInput                      Input;                                             // 0xD8(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        DefaultR : 1;                                      // Mask: 0x1, PropSize: 0x10x100(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DefaultG : 1;                                      // Mask: 0x2, PropSize: 0x10x100(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DefaultB : 1;                                      // Mask: 0x4, PropSize: 0x10x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DefaultA : 1;                                      // Mask: 0x8, PropSize: 0x10x100(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B4D[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStaticComponentMaskParameter* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Engine.MaterialExpressionStaticSwitch
class UMaterialExpressionStaticSwitch : public UMaterialExpression
{
public:
	uint8                                        DefaultValue : 1;                                  // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_19A : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2B4E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      A;                                                 // 0xB8(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xE0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Value;                                             // 0x108(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionStaticSwitch* GetDefaultObj();

};

// 0x50 (0x130 - 0xE0)
// Class Engine.MaterialExpressionStaticSwitchParameter
class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{
public:
	struct FExpressionInput                      A;                                                 // 0xE0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0x108(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)

	static class UClass* StaticClass();
	static class UMaterialExpressionStaticSwitchParameter* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionStep
class UMaterialExpressionStep : public UMaterialExpression
{
public:
	struct FExpressionInput                      Y;                                                 // 0xB0(0x28)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FExpressionInput                      X;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        ConstY;                                            // 0x100(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstX;                                            // 0x104(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStep* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionStrataBSDF
class UMaterialExpressionStrataBSDF : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataBSDF* GetDefaultObj();

};

// 0x348 (0x3F8 - 0xB0)
// Class Engine.MaterialExpressionStrataLegacyConversion
class UMaterialExpressionStrataLegacyConversion : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Metallic;                                          // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Specular;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x128(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Anisotropy;                                        // 0x150(0x28)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      EmissiveColor;                                     // 0x178(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x1A0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      Tangent;                                           // 0x1C8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      SubsurfaceColor;                                   // 0x1F0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      ClearCoat;                                         // 0x218(0x28)(Edit, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ClearCoatRoughness;                                // 0x240(0x28)(Edit, ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Opacity;                                           // 0x268(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      TransmittanceColor;                                // 0x290(0x28)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterScatteringCoefficients;                       // 0x2B8(0x28)(ConstParm, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterAbsorptionCoefficients;                       // 0x2E0(0x28)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterPhaseG;                                       // 0x308(0x28)(BlueprintVisible, ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ColorScaleBehindWater;                             // 0x330(0x28)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ClearCoatNormal;                                   // 0x358(0x28)(Edit, ConstParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      CustomTangent;                                     // 0x380(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FShadingModelMaterialInput            ShadingModel;                                      // 0x3A8(0x28)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2B5D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USubsurfaceProfile*                    SubsurfaceProfile;                                 // 0x3D8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	struct FStrataMaterialInfo                   ConvertedStrataMaterialInfo;                       // 0x3E0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataLegacyConversion* GetDefaultObj();

};

// 0x290 (0x340 - 0xB0)
// Class Engine.MaterialExpressionStrataSlabBSDF
class UMaterialExpressionStrataSlabBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      DiffuseAlbedo;                                     // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      F0;                                                // 0xD8(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      F90;                                               // 0x100(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x128(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Anisotropy;                                        // 0x150(0x28)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x178(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      Tangent;                                           // 0x1A0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      SSSMFP;                                            // 0x1C8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SSSMFPScale;                                       // 0x1F0(0x28)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SSSPhaseAnisotropy;                                // 0x218(0x28)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EmissiveColor;                                     // 0x240(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      SecondRoughness;                                   // 0x268(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      SecondRoughnessWeight;                             // 0x290(0x28)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      FuzzRoughness;                                     // 0x2B8(0x28)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      FuzzAmount;                                        // 0x2E0(0x28)(EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      FuzzColor;                                         // 0x308(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USubsurfaceProfile*                    SubsurfaceProfile;                                 // 0x330(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	uint8                                        bUseSSSDiffusion : 1;                              // Mask: 0x1, PropSize: 0x10x338(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B67[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataSlabBSDF* GetDefaultObj();

};

// 0x118 (0x1C8 - 0xB0)
// Class Engine.MaterialExpressionStrataSimpleClearCoatBSDF
class UMaterialExpressionStrataSimpleClearCoatBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      DiffuseAlbedo;                                     // 0xB0(0x28)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      F0;                                                // 0xD8(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x100(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      ClearCoatCoverage;                                 // 0x128(0x28)(Edit, BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ClearCoatRoughness;                                // 0x150(0x28)(Edit, ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x178(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      EmissiveColor;                                     // 0x1A0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataSimpleClearCoatBSDF* GetDefaultObj();

};

// 0xA0 (0x150 - 0xB0)
// Class Engine.MaterialExpressionStrataVolumetricFogCloudBSDF
class UMaterialExpressionStrataVolumetricFogCloudBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Albedo;                                            // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Extinction;                                        // 0xD8(0x28)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance)
	struct FExpressionInput                      EmissiveColor;                                     // 0x100(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      AmbientOcclusion;                                  // 0x128(0x28)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataVolumetricFogCloudBSDF* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataUnlitBSDF
class UMaterialExpressionStrataUnlitBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      EmissiveColor;                                     // 0xB0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      TransmittanceColor;                                // 0xD8(0x28)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataUnlitBSDF* GetDefaultObj();

};

// 0x118 (0x1C8 - 0xB0)
// Class Engine.MaterialExpressionStrataHairBSDF
class UMaterialExpressionStrataHairBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Scatter;                                           // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FExpressionInput                      Specular;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x128(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Backlit;                                           // 0x150(0x28)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Tangent;                                           // 0x178(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      EmissiveColor;                                     // 0x1A0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataHairBSDF* GetDefaultObj();

};

// 0x148 (0x1F8 - 0xB0)
// Class Engine.MaterialExpressionStrataEyeBSDF
class UMaterialExpressionStrataEyeBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      DiffuseColor;                                      // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0xD8(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      CorneaNormal;                                      // 0x100(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IrisNormal;                                        // 0x128(0x28)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IrisPlaneNormal;                                   // 0x150(0x28)(BlueprintVisible, Net, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IrisMask;                                          // 0x178(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      IrisDistance;                                      // 0x1A0(0x28)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      EmissiveColor;                                     // 0x1C8(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	class USubsurfaceProfile*                    SubsurfaceProfile;                                 // 0x1F0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataEyeBSDF* GetDefaultObj();

};

// 0x1B8 (0x268 - 0xB0)
// Class Engine.MaterialExpressionStrataSingleLayerWaterBSDF
class UMaterialExpressionStrataSingleLayerWaterBSDF : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Metallic;                                          // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Specular;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Roughness;                                         // 0x128(0x28)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Normal;                                            // 0x150(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      EmissiveColor;                                     // 0x178(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      TopMaterialOpacity;                                // 0x1A0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterAlbedo;                                       // 0x1C8(0x28)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterExtinction;                                   // 0x1F0(0x28)(Edit, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      WaterPhaseG;                                       // 0x218(0x28)(BlueprintVisible, ExportObject, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ColorScaleBehindWater;                             // 0x240(0x28)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataSingleLayerWaterBSDF* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionStrataLightFunction
class UMaterialExpressionStrataLightFunction : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Color;                                             // 0xB0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataLightFunction* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataPostProcess
class UMaterialExpressionStrataPostProcess : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Color;                                             // 0xB0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	struct FExpressionInput                      Opacity;                                           // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataPostProcess* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataUI
class UMaterialExpressionStrataUI : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Color;                                             // 0xB0(0x28)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	struct FExpressionInput                      Opacity;                                           // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataUI* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataConvertToDecal
class UMaterialExpressionStrataConvertToDecal : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      DecalMaterial;                                     // 0xB0(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FExpressionInput                      Coverage;                                          // 0xD8(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataConvertToDecal* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Engine.MaterialExpressionStrataHorizontalMixing
class UMaterialExpressionStrataHorizontalMixing : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Background;                                        // 0xB0(0x28)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Foreground;                                        // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Mix;                                               // 0x100(0x28)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParameterBlending : 1;                         // Mask: 0x1, PropSize: 0x10x128(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B7F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataHorizontalMixing* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Engine.MaterialExpressionStrataVerticalLayering
class UMaterialExpressionStrataVerticalLayering : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      Top;                                               // 0xB0(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance)
	struct FExpressionInput                      Base;                                              // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FExpressionInput                      Thickness;                                         // 0x100(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        bUseParameterBlending : 1;                         // Mask: 0x1, PropSize: 0x10x128(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B82[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataVerticalLayering* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionStrataAdd
class UMaterialExpressionStrataAdd : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	uint8                                        bUseParameterBlending : 1;                         // Mask: 0x1, PropSize: 0x10x100(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B84[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataAdd* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataWeight
class UMaterialExpressionStrataWeight : public UMaterialExpressionStrataBSDF
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      Weight;                                            // 0xD8(0x28)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataWeight* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionStrataUtilityBase
class UMaterialExpressionStrataUtilityBase : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataUtilityBase* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataTransmittanceToMFP
class UMaterialExpressionStrataTransmittanceToMFP : public UMaterialExpressionStrataUtilityBase
{
public:
	struct FExpressionInput                      TransmittanceColor;                                // 0xB0(0x28)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Thickness;                                         // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataTransmittanceToMFP* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class Engine.MaterialExpressionStrataMetalnessToDiffuseAlbedoF0
class UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0 : public UMaterialExpressionStrataUtilityBase
{
public:
	struct FExpressionInput                      BaseColor;                                         // 0xB0(0x28)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FExpressionInput                      Metallic;                                          // 0xD8(0x28)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FExpressionInput                      Specular;                                          // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionStrataHazinessToSecondaryRoughness
class UMaterialExpressionStrataHazinessToSecondaryRoughness : public UMaterialExpressionStrataUtilityBase
{
public:
	struct FExpressionInput                      BaseRoughness;                                     // 0xB0(0x28)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Haziness;                                          // 0xD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataHazinessToSecondaryRoughness* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class Engine.MaterialExpressionStrataThinFilm
class UMaterialExpressionStrataThinFilm : public UMaterialExpressionStrataUtilityBase
{
public:
	struct FExpressionInput                      Normal;                                            // 0xB0(0x28)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FExpressionInput                      F0;                                                // 0xD8(0x28)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      F90;                                               // 0x100(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Thickness;                                         // 0x128(0x28)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FExpressionInput                      IOR;                                               // 0x150(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionStrataThinFilm* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionSubsurfaceMediumMaterialOutput
class UMaterialExpressionSubsurfaceMediumMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      MeanFreePath;                                      // 0xB0(0x28)(ConstParm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ScatteringDistribution;                            // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSubsurfaceMediumMaterialOutput* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Engine.MaterialExpressionSubtract
class UMaterialExpressionSubtract : public UMaterialExpression
{
public:
	struct FExpressionInput                      A;                                                 // 0xB0(0x28)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FExpressionInput                      B;                                                 // 0xD8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ConstA;                                            // 0x100(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstB;                                            // 0x104(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSubtract* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class Engine.MaterialExpressionSwitch
class UMaterialExpressionSwitch : public UMaterialExpression
{
public:
	class FString                                Description;                                       // 0xB0(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	struct FExpressionInput                      SwitchValue;                                       // 0xC0(0x28)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstSwitchValue;                                  // 0xE8(0x4)(BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B89[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExpressionInput                      Default;                                           // 0xF0(0x28)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor)
	float                                        ConstDefault;                                      // 0x118(0x4)(Edit, ExportObject, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B8A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSwitchCustomInput>            Inputs;                                            // 0x120(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionSwitch* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionTangent
class UMaterialExpressionTangent : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        Period;                                            // 0xD8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_2B8C[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTangent* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionTangentOutput
class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionTangentOutput* GetDefaultObj();

};

// 0x68 (0x118 - 0xB0)
// Class Engine.MaterialExpressionTemporalSobol
class UMaterialExpressionTemporalSobol : public UMaterialExpression
{
public:
	struct FExpressionInput                      Index;                                             // 0xB0(0x28)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FExpressionInput                      Seed;                                              // 0xD8(0x28)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	uint32                                       ConstIndex;                                        // 0x100(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B8E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             ConstSeed;                                         // 0x108(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionTemporalSobol* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.MaterialExpressionTextureCoordinate
class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{
public:
	int32                                        CoordinateIndex;                                   // 0xB0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        UTiling;                                           // 0xB4(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VTiling;                                           // 0xB8(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UnMirrorU : 1;                                     // Mask: 0x1, PropSize: 0x10xBC(0x1)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        UnMirrorV : 1;                                     // Mask: 0x2, PropSize: 0x10xBC(0x1)(Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B90[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureCoordinate* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class Engine.MaterialExpressionTextureObject
class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureObject* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureObjectParameter
class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureObjectParameter* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionTextureProperty
class UMaterialExpressionTextureProperty : public UMaterialExpression
{
public:
	struct FExpressionInput                      TextureObject;                                     // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EMaterialExposedTextureProperty   Property;                                          // 0xD8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_2B92[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureProperty* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameter2DArray
class UMaterialExpressionTextureSampleParameter2DArray : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameter2DArray* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameterCube
class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameterCube* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameterCubeArray
class UMaterialExpressionTextureSampleParameterCubeArray : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameterCubeArray* GetDefaultObj();

};

// 0x8 (0x248 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameterSubUV
class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
	uint8                                        bBlend : 1;                                        // Mask: 0x1, PropSize: 0x10x240(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B95[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameterSubUV* GetDefaultObj();

};

// 0x0 (0x240 - 0x240)
// Class Engine.MaterialExpressionTextureSampleParameterVolume
class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTextureSampleParameterVolume* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionThinTranslucentMaterialOutput
class UMaterialExpressionThinTranslucentMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      TransmittanceColor;                                // 0xB0(0x28)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionThinTranslucentMaterialOutput* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionTime
class UMaterialExpressionTime : public UMaterialExpression
{
public:
	uint8                                        bIgnorePause : 1;                                  // Mask: 0x1, PropSize: 0x10xB0(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverride_Period : 1;                              // Mask: 0x2, PropSize: 0x10xB0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19B : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2B98[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Period;                                            // 0xB4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UMaterialExpressionTime* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionTransform
class UMaterialExpressionTransform : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	enum class EMaterialVectorCoordTransformSource TransformSourceType;                               // 0xD8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMaterialVectorCoordTransform     TransformType;                                     // 0xD9(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B9A[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTransform* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Engine.MaterialExpressionTransformPosition
class UMaterialExpressionTransformPosition : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	enum class EMaterialPositionTransformSource  TransformSourceType;                               // 0xD8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMaterialPositionTransformSource  TransformType;                                     // 0xD9(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2B9C[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionTransformPosition* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionTruncate
class UMaterialExpressionTruncate : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionTruncate* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionTruncateLWC
class UMaterialExpressionTruncateLWC : public UMaterialExpression
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)

	static class UClass* StaticClass();
	static class UMaterialExpressionTruncateLWC* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionTwoSidedSign
class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionTwoSidedSign* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionVectorNoise
class UMaterialExpressionVectorNoise : public UMaterialExpression
{
public:
	struct FExpressionInput                      Position;                                          // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	enum class EVectorNoiseFunction              NoiseFunction;                                     // 0xD8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Quality;                                           // 0xDC(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTiling : 1;                                       // Mask: 0x1, PropSize: 0x10xE0(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BA4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       TileSize;                                          // 0xE4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig)

	static class UClass* StaticClass();
	static class UMaterialExpressionVectorNoise* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionVertexColor
class UMaterialExpressionVertexColor : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionVertexColor* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionVertexInterpolator
class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      Input;                                             // 0xB0(0x28)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_2BA5[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionVertexInterpolator* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionVertexNormalWS
class UMaterialExpressionVertexNormalWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionVertexNormalWS* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionVertexTangentWS
class UMaterialExpressionVertexTangentWS : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionVertexTangentWS* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionViewProperty
class UMaterialExpressionViewProperty : public UMaterialExpression
{
public:
	enum class EMaterialExposedViewProperty      Property;                                          // 0xB0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	uint8                                        Pad_2BAC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionViewProperty* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionViewSize
class UMaterialExpressionViewSize : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionViewSize* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class Engine.MaterialExpressionVirtualTextureFeatureSwitch
class UMaterialExpressionVirtualTextureFeatureSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                      No;                                                // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      Yes;                                               // 0xD8(0x28)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionVirtualTextureFeatureSwitch* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionVolumetricAdvancedMaterialInput
class UMaterialExpressionVolumetricAdvancedMaterialInput : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionVolumetricAdvancedMaterialInput* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.MaterialExpressionVolumetricCloudEmptySpaceSkippingInput
class UMaterialExpressionVolumetricCloudEmptySpaceSkippingInput : public UMaterialExpression
{
public:

	static class UClass* StaticClass();
	static class UMaterialExpressionVolumetricCloudEmptySpaceSkippingInput* GetDefaultObj();

};

// 0x140 (0x1F0 - 0xB0)
// Class Engine.MaterialExpressionVolumetricAdvancedMaterialOutput
class UMaterialExpressionVolumetricAdvancedMaterialOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      PhaseG;                                            // 0xB0(0x28)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PhaseG2;                                           // 0xD8(0x28)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      PhaseBlend;                                        // 0x100(0x28)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      MultiScatteringContribution;                       // 0x128(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      MultiScatteringOcclusion;                          // 0x150(0x28)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      MultiScatteringEccentricity;                       // 0x178(0x28)(Edit, ConstParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionInput                      ConservativeDensity;                               // 0x1A0(0x28)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstPhaseG;                                       // 0x1C8(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstPhaseG2;                                      // 0x1CC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstPhaseBlend;                                   // 0x1D0(0x4)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         PerSamplePhaseEvaluation;                          // 0x1D4(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BB2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       MultiScatteringApproximationOctaveCount;           // 0x1D8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstMultiScatteringContribution;                  // 0x1DC(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstMultiScatteringOcclusion;                     // 0x1E0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConstMultiScatteringEccentricity;                  // 0x1E4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGroundContribution;                               // 0x1E8(0x1)(ConstParm, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGrayScaleMaterial;                                // 0x1E9(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRayMarchVolumeShadow;                             // 0x1EA(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClampMultiScatteringContribution;                 // 0x1EB(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BB7[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionVolumetricAdvancedMaterialOutput* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.MaterialExpressionVolumetricCloudEmptySpaceSkippingOutput
class UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                      ContainsMatter;                                    // 0xB0(0x28)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class Engine.MaterialExpressionWhileLoop
class UMaterialExpressionWhileLoop : public UMaterialExpression
{
public:
	struct FExpressionExecOutput                 LoopBody;                                          // 0xB0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FExpressionExecOutput                 Completed;                                         // 0xB8(0x8)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)
	struct FExpressionInput                      Condition;                                         // 0xC0(0x28)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialExpressionWhileLoop* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class Engine.MaterialExpressionWorldPosition
class UMaterialExpressionWorldPosition : public UMaterialExpression
{
public:
	enum class EWorldPositionIncludedOffsets     WorldPositionShaderOffset;                         // 0xB0(0x1)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BB8[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialExpressionWorldPosition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MaterialFunctionInterfaceEditorOnlyData
class UMaterialFunctionInterfaceEditorOnlyData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMaterialFunctionInterfaceEditorOnlyData* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Engine.MaterialFunctionEditorOnlyData
class UMaterialFunctionEditorOnlyData : public UMaterialFunctionInterfaceEditorOnlyData
{
public:
	struct FMaterialExpressionCollection         ExpressionCollection;                              // 0x28(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialFunctionEditorOnlyData* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.MaterialFunctionInterface
class UMaterialFunctionInterface : public UObject
{
public:
	struct FGuid                                 StateId;                                           // 0x28(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EMaterialFunctionUsage            MaterialFunctionUsage;                             // 0x38(0x1)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2BB9[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialFunctionInterface* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class Engine.MaterialFunction
class UMaterialFunction : public UMaterialFunctionInterface
{
public:
	class FString                                Description;                                       // 0x40(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	uint8                                        bExposeToLibrary : 1;                              // Mask: 0x1, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
	uint8                                        bPrefixParameterNames : 1;                         // Mask: 0x2, PropSize: 0x10x50(0x1)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableExecWire : 1;                               // Mask: 0x4, PropSize: 0x10x50(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableNewHLSLGenerator : 1;                       // Mask: 0x8, PropSize: 0x10x50(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BBA[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialFunction* GetDefaultObj();

};

// 0xA0 (0xE0 - 0x40)
// Class Engine.MaterialFunctionInstance
class UMaterialFunctionInstance : public UMaterialFunctionInterface
{
public:
	class UMaterialFunctionInterface*            Parent;                                            // 0x40(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class UMaterialFunctionInterface*            Base;                                              // 0x48(0x8)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<struct FScalarParameterValue>         ScalarParameterValues;                             // 0x50(0x10)(OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVectorParameterValue>         VectorParameterValues;                             // 0x60(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FDoubleVectorParameterValue>   DoubleVectorParameterValues;                       // 0x70(0x10)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FTextureParameterValue>        TextureParameterValues;                            // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<struct FFontParameterValue>           FontParameterValues;                               // 0x90(0x10)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStaticSwitchParameter>        StaticSwitchParameterValues;                       // 0xA0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FStaticComponentMaskParameter> StaticComponentMaskParameterValues;                // 0xB0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FRuntimeVirtualTextureParameterValue> RuntimeVirtualTextureParameterValues;              // 0xC0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSparseVolumeTextureParameterValue> SparseVolumeTextureParameterValues;                // 0xD0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialFunctionInstance* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class Engine.MaterialFunctionMaterialLayer
class UMaterialFunctionMaterialLayer : public UMaterialFunction
{
public:

	static class UClass* StaticClass();
	static class UMaterialFunctionMaterialLayer* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class Engine.MaterialFunctionMaterialLayerInstance
class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
{
public:

	static class UClass* StaticClass();
	static class UMaterialFunctionMaterialLayerInstance* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class Engine.MaterialFunctionMaterialLayerBlend
class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
{
public:

	static class UClass* StaticClass();
	static class UMaterialFunctionMaterialLayerBlend* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class Engine.MaterialFunctionMaterialLayerBlendInstance
class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
{
public:

	static class UClass* StaticClass();
	static class UMaterialFunctionMaterialLayerBlendInstance* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.MaterialInstanceActor
class AMaterialInstanceActor : public AActor
{
public:
	TArray<class AActor*>                        TargetActors;                                      // 0x4C8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AMaterialInstanceActor* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.MaterialInterfaceEditorOnlyData
class UMaterialInterfaceEditorOnlyData : public UObject
{
public:
	uint8                                        Pad_2BC7[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialInterfaceEditorOnlyData* GetDefaultObj();

};

// 0xF8 (0x120 - 0x28)
// Class Engine.MaterialParameterCollectionInstance
class UMaterialParameterCollectionInstance : public UObject
{
public:
	uint8                                        Pad_2BCB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialParameterCollection*          Collection;                                        // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst)
	uint8                                        Pad_2BCC[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialParameterCollectionInstance* GetDefaultObj();

};

// 0x8 (0x580 - 0x578)
// Class Engine.MatineeActorCameraAnim
class AMatineeActorCameraAnim : public AMatineeActor
{
public:
	class UCameraAnim*                           CameraAnim;                                        // 0x578(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class AMatineeActorCameraAnim* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MatineeAnimInterface
class IMatineeAnimInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMatineeAnimInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MatineeInterface
class IMatineeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IMatineeInterface* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.MeshBudgetProjectSettings
class UMeshBudgetProjectSettings : public UDeveloperSettings
{
public:
	bool                                         bEnableStaticMeshBudget;                           // 0x38(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BCE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStaticMeshBudgetInfo>         StaticMeshBudgetInfos;                             // 0x40(0x10)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMeshBudgetProjectSettings* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Engine.MicroTransactionBase
class UMicroTransactionBase : public UPlatformInterfaceBase
{
public:
	TArray<struct FPurchaseInfo>                 AvailableProducts;                                 // 0x38(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                LastError;                                         // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                LastErrorSolution;                                 // 0x58(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMicroTransactionBase* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.MorphTarget
class UMorphTarget : public UObject
{
public:
	class USkeletalMesh*                         BaseSkelMesh;                                      // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BCF[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMorphTarget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NavAgentInterface
class INavAgentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INavAgentInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.NavAreaBase
class UNavAreaBase : public UObject
{
public:
	uint8                                        Pad_2BD0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NavAreaPriority;                                   // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UNavAreaBase* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NavEdgeProviderInterface
class INavEdgeProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INavEdgeProviderInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NavigationDataInterface
class INavigationDataInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INavigationDataInterface* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.NavLinkDefinition
class UNavLinkDefinition : public UObject
{
public:
	TArray<struct FNavigationLink>               Links;                                             // 0x28(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<struct FNavigationSegmentLink>        SegmentLinks;                                      // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2BD2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNavLinkDefinition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NavPathObserverInterface
class INavPathObserverInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INavPathObserverInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NavRelevantInterface
class INavRelevantInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INavRelevantInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NetworkPredictionInterface
class INetworkPredictionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INetworkPredictionInterface* GetDefaultObj();

};

// 0x198 (0x1C0 - 0x28)
// Class Engine.ParticleEmitter
class UParticleEmitter : public UObject
{
public:
	class FName                                  EmitterName;                                       // 0x28(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SubUVDataOffset;                                   // 0x30(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEmitterRenderMode                EmitterRenderMode;                                 // 0x34(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleSignificanceLevel        SignificanceLevel;                                 // 0x35(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BD3[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseLegacySpawningBehavior : 1;                    // Mask: 0x1, PropSize: 0x10x37(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_19F : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        ConvertedModules : 1;                              // Mask: 0x10, PropSize: 0x10x37(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsSoloing : 1;                                    // Mask: 0x20, PropSize: 0x10x37(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCookedOut : 1;                                    // Mask: 0x40, PropSize: 0x10x37(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisabledLODsKeepEmitterAlive : 1;                 // Mask: 0x80, PropSize: 0x10x37(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableWhenInsignficant : 1;                      // Mask: 0x1, PropSize: 0x10x38(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BD4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UParticleLODLevel*>             LODLevels;                                         // 0x40(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PeakActiveParticles;                               // 0x50(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InitialAllocationCount;                            // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        QualityLevelSpawnRateScale;                        // 0x58(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       DetailModeBitmask;                                 // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BD5[0x160];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleEmitter* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Engine.ParticleLODLevel
class UParticleLODLevel : public UObject
{
public:
	int32                                        Level;                                             // 0x28(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x2C(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        BitPad_1A1 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BD7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleModuleRequired*               RequiredModule;                                    // 0x30(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UParticleModule*>               Modules;                                           // 0x38(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	class UParticleModuleTypeDataBase*           TypeDataModule;                                    // 0x48(0x8)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleModuleSpawn*                  SpawnModule;                                       // 0x50(0x8)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UParticleModuleEventGenerator*         EventGenerator;                                    // 0x58(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleModuleSpawnBase*>      SpawningModules;                                   // 0x60(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleModule*>               SpawnModules;                                      // 0x70(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UParticleModule*>               UpdateModules;                                     // 0x80(0x10)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleModuleOrbit*>          OrbitModules;                                      // 0x90(0x10)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UParticleModuleEventReceiverBase*> EventReceiverModules;                              // 0xA0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ConvertedModules : 1;                              // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BDB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        PeakActiveParticles;                               // 0xB4(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleLODLevel* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleAccelerationBase
class UParticleModuleAccelerationBase : public UParticleModule
{
public:
	uint8                                        bAlwaysInWorldSpace : 1;                           // Mask: 0x1, PropSize: 0x10x30(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BDC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleAccelerationBase* GetDefaultObj();

};

// 0x68 (0xA0 - 0x38)
// Class Engine.ParticleModuleAcceleration
class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                Acceleration;                                      // 0x38(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        bApplyOwnerScale : 1;                              // Mask: 0x1, PropSize: 0x10x98(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BDD[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleAcceleration* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.ParticleModuleAccelerationConstant
class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
{
public:
	struct FVector                               Acceleration;                                      // 0x38(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UParticleModuleAccelerationConstant* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Engine.ParticleModuleAccelerationDrag
class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
{
public:
	class UDistributionFloat*                    DragCoefficient;                                   // 0x38(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 DragCoefficientRaw;                                // 0x40(0x30)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAccelerationDrag* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Engine.ParticleModuleAccelerationDragScaleOverLife
class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
{
public:
	class UDistributionFloat*                    DragScale;                                         // 0x38(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 DragScaleRaw;                                      // 0x40(0x30)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAccelerationDragScaleOverLife* GetDefaultObj();

};

// 0x60 (0x98 - 0x38)
// Class Engine.ParticleModuleAccelerationOverLifetime
class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                AccelOverLife;                                     // 0x38(0x60)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAccelerationOverLifetime* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleAttractorBase
class UParticleModuleAttractorBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleAttractorBase* GetDefaultObj();

};

// 0x90 (0xC0 - 0x30)
// Class Engine.ParticleModuleAttractorLine
class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{
public:
	struct FVector                               EndPoint0;                                         // 0x30(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               EndPoint1;                                         // 0x48(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 Range;                                             // 0x60(0x30)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Strength;                                          // 0x90(0x30)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAttractorLine* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Engine.ParticleModuleAttractorParticle
class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{
public:
	class FName                                  EmitterName;                                       // 0x30(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Range;                                             // 0x38(0x30)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bStrengthByDistance : 1;                           // Mask: 0x1, PropSize: 0x10x68(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BE7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 Strength;                                          // 0x70(0x30)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bAffectBaseVelocity : 1;                           // Mask: 0x1, PropSize: 0x10xA0(0x1)(BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BE9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAttractorParticleSelectionMethod SelectionMethod;                                   // 0xA4(0x1)(Edit, ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BEA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bRenewSource : 1;                                  // Mask: 0x1, PropSize: 0x10xA8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritSourceVel : 1;                             // Mask: 0x2, PropSize: 0x10xA8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A5 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BED[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LastSelIndex;                                      // 0xAC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAttractorParticle* GetDefaultObj();

};

// 0xC8 (0xF8 - 0x30)
// Class Engine.ParticleModuleAttractorPoint
class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{
public:
	struct FRawDistributionVector                Position;                                          // 0x30(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FRawDistributionFloat                 Range;                                             // 0x90(0x30)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Strength;                                          // 0xC0(0x30)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        StrengthByDistance : 1;                            // Mask: 0x1, PropSize: 0x10xF0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAffectBaseVelocity : 1;                           // Mask: 0x2, PropSize: 0x10xF0(0x1)(BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideVelocity : 1;                             // Mask: 0x4, PropSize: 0x10xF0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseWorldSpacePosition : 1;                        // Mask: 0x8, PropSize: 0x10xF0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Positive_X : 1;                                    // Mask: 0x10, PropSize: 0x10xF0(0x1)(EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Positive_Y : 1;                                    // Mask: 0x20, PropSize: 0x10xF0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Positive_Z : 1;                                    // Mask: 0x40, PropSize: 0x10xF0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_X : 1;                                    // Mask: 0x80, PropSize: 0x10xF0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_Y : 1;                                    // Mask: 0x1, PropSize: 0x10xF1(0x1)(ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_Z : 1;                                    // Mask: 0x2, PropSize: 0x10xF1(0x1)(ConstParm, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BEE[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleAttractorPoint* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Engine.ParticleModuleAttractorPointGravity
class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
{
public:
	struct FVector                               Position;                                          // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Radius;                                            // 0x48(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2BEF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDistributionFloat*                    Strength;                                          // 0x50(0x8)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 StrengthRaw;                                       // 0x58(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleAttractorPointGravity* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleBeamBase
class UParticleModuleBeamBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleBeamBase* GetDefaultObj();

};

// 0x108 (0x138 - 0x30)
// Class Engine.ParticleModuleBeamModifier
class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{
public:
	enum class EBeamModifierType                 ModifierType;                                      // 0x30(0x1)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBeamModifierOptions                  PositionOptions;                                   // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionVector                Position;                                          // 0x38(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FBeamModifierOptions                  TangentOptions;                                    // 0x98(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                Tangent;                                           // 0xA0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        bAbsoluteTangent : 1;                              // Mask: 0x1, PropSize: 0x10x100(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BF4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBeamModifierOptions                  StrengthOptions;                                   // 0x104(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 Strength;                                          // 0x108(0x30)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleBeamModifier* GetDefaultObj();

};

// 0x190 (0x1C0 - 0x30)
// Class Engine.ParticleModuleBeamNoise
class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{
public:
	uint8                                        bLowFreq_Enabled : 1;                              // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BF5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Frequency;                                         // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Frequency_LowRange;                                // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                NoiseRange;                                        // 0x40(0x60)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 NoiseRangeScale;                                   // 0xA0(0x30)(BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNRScaleEmitterTime : 1;                           // Mask: 0x1, PropSize: 0x10xD0(0x1)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BF7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                NoiseSpeed;                                        // 0xD8(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSmooth : 1;                                       // Mask: 0x1, PropSize: 0x10x138(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1A9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BF8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NoiseLockRadius;                                   // 0x13C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoiseLock : 1;                                    // Mask: 0x1, PropSize: 0x10x140(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOscillate : 1;                                    // Mask: 0x2, PropSize: 0x10x140(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AA : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BF9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NoiseLockTime;                                     // 0x144(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoiseTension;                                      // 0x148(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseNoiseTangents : 1;                             // Mask: 0x1, PropSize: 0x10x14C(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BFA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 NoiseTangentStrength;                              // 0x150(0x30)(Edit, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NoiseTessellation;                                 // 0x180(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTargetNoise : 1;                                  // Mask: 0x1, PropSize: 0x10x184(0x1)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BFB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FrequencyDistance;                                 // 0x188(0x4)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyNoiseScale : 1;                              // Mask: 0x1, PropSize: 0x10x18C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AD : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BFC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 NoiseScale;                                        // 0x190(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleBeamNoise* GetDefaultObj();

};

// 0x118 (0x148 - 0x30)
// Class Engine.ParticleModuleBeamSource
class UParticleModuleBeamSource : public UParticleModuleBeamBase
{
public:
	enum class EBeam2SourceTargetMethod          SourceMethod;                                      // 0x30(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BFD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  SourceName;                                        // 0x34(0x8)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        bSourceAbsolute : 1;                               // Mask: 0x1, PropSize: 0x10x3C(0x1)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BFE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                Source;                                            // 0x40(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	uint8                                        bLockSource : 1;                                   // Mask: 0x1, PropSize: 0x10xA0(0x1)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1AF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2BFF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EBeam2SourceTargetTangentMethod   SourceTangentMethod;                               // 0xA4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C00[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                SourceTangent;                                     // 0xA8(0x60)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockSourceTangent : 1;                            // Mask: 0x1, PropSize: 0x10x108(0x1)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B0 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C01[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 SourceStrength;                                    // 0x110(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockSourceStength : 1;                            // Mask: 0x1, PropSize: 0x10x140(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C02[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleBeamSource* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class Engine.ParticleModuleBeamTarget
class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{
public:
	enum class EBeam2SourceTargetMethod          TargetMethod;                                      // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C03[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TargetName;                                        // 0x34(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_2C04[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                Target;                                            // 0x40(0x60)(Edit, ConstParm, ReturnParm, Transient, Config)
	uint8                                        bTargetAbsolute : 1;                               // Mask: 0x1, PropSize: 0x10xA0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockTarget : 1;                                   // Mask: 0x2, PropSize: 0x10xA0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B1 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C06[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EBeam2SourceTargetTangentMethod   TargetTangentMethod;                               // 0xA4(0x1)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C07[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                TargetTangent;                                     // 0xA8(0x60)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockTargetTangent : 1;                            // Mask: 0x1, PropSize: 0x10x108(0x1)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C08[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 TargetStrength;                                    // 0x110(0x30)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockTargetStength : 1;                            // Mask: 0x1, PropSize: 0x10x140(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C09[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LockRadius;                                        // 0x144(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C0A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleBeamTarget* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleCameraBase
class UParticleModuleCameraBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleCameraBase* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.ParticleModuleCameraOffset
class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{
public:
	struct FRawDistributionFloat                 CameraOffset;                                      // 0x30(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config)
	uint8                                        bSpawnTimeOnly : 1;                                // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1B4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C0C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EParticleCameraOffsetUpdateMethod UpdateMethod;                                      // 0x64(0x1)(ConstParm, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C0D[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleCameraOffset* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleCollisionBase
class UParticleModuleCollisionBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleCollisionBase* GetDefaultObj();

};

// 0x190 (0x1C0 - 0x30)
// Class Engine.ParticleModuleCollision
class UParticleModuleCollision : public UParticleModuleCollisionBase
{
public:
	struct FRawDistributionVector                DampingFactor;                                     // 0x30(0x60)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionVector                DampingFactorRotation;                             // 0x90(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 MaxCollisions;                                     // 0xF0(0x30)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleCollisionComplete        CollisionCompletionOption;                         // 0x120(0x1)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C0E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<enum class EObjectTypeQuery>          CollisionTypes;                                    // 0x128(0x10)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C10[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bApplyPhysics : 1;                                 // Mask: 0x1, PropSize: 0x10x140(0x1)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTriggerVolumes : 1;                         // Mask: 0x2, PropSize: 0x10x140(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B5 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C12[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 ParticleMass;                                      // 0x148(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DirScalar;                                         // 0x178(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPawnsDoNotDecrementCount : 1;                     // Mask: 0x1, PropSize: 0x10x17C(0x1)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOnlyVerticalNormalsDecrementCount : 1;            // Mask: 0x2, PropSize: 0x10x17C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B6 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C14[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VerticalFudgeFactor;                               // 0x180(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C15[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 DelayAmount;                                       // 0x188(0x30)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bDropDetail : 1;                                   // Mask: 0x1, PropSize: 0x10x1B8(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCollideOnlyIfVisible : 1;                         // Mask: 0x2, PropSize: 0x10x1B8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSourceActor : 1;                            // Mask: 0x4, PropSize: 0x10x1B8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B7 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C16[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxCollisionDistance;                              // 0x1BC(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleCollision* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class Engine.ParticleModuleCollisionGPU
class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
{
public:
	struct FRawDistributionFloat                 Resilience;                                        // 0x30(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 ResilienceScaleOverLife;                           // 0x60(0x30)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Friction;                                          // 0x90(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        RandomSpread;                                      // 0x94(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomDistribution;                                // 0x98(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RadiusScale;                                       // 0x9C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        RadiusBias;                                        // 0xA0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleCollisionResponse        Response;                                          // 0xA4(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	enum class EParticleCollisionMode            CollisionMode;                                     // 0xA5(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C1D[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleCollisionGPU* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleColorBase
class UParticleModuleColorBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleColorBase* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class Engine.ParticleModuleColor
class UParticleModuleColor : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                StartColor;                                        // 0x30(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FRawDistributionFloat                 StartAlpha;                                        // 0x90(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampAlpha : 1;                                   // Mask: 0x1, PropSize: 0x10xC0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C23[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleColor* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class Engine.ParticleModuleColorOverLife
class UParticleModuleColorOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                ColorOverLife;                                     // 0x30(0x60)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 AlphaOverLife;                                     // 0x90(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClampAlpha : 1;                                   // Mask: 0x1, PropSize: 0x10xC0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C26[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleColorOverLife* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class Engine.ParticleModuleColorScaleOverLife
class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                ColorScaleOverLife;                                // 0x30(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 AlphaScaleOverLife;                                // 0x90(0x30)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEmitterTime : 1;                                  // Mask: 0x1, PropSize: 0x10xC0(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C27[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleColorScaleOverLife* GetDefaultObj();

};

// 0x20 (0xE8 - 0xC8)
// Class Engine.ParticleModuleColor_Seeded
class UParticleModuleColor_Seeded : public UParticleModuleColor
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0xC8(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleColor_Seeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleEventBase
class UParticleModuleEventBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleEventBase* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ParticleModuleEventGenerator
class UParticleModuleEventGenerator : public UParticleModuleEventBase
{
public:
	TArray<struct FParticleEvent_GenerateInfo>   Events;                                            // 0x30(0x10)(Edit, BlueprintVisible, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleEventGenerator* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ParticleModuleEventReceiverBase
class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{
public:
	enum class EParticleEventType                EventGeneratorType;                                // 0x30(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C28[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  EventName;                                         // 0x34(0x8)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2C29[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleEventReceiverBase* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Engine.ParticleModuleEventReceiverKillParticles
class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{
public:
	uint8                                        bStopSpawning : 1;                                 // Mask: 0x1, PropSize: 0x10x40(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C2A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleEventReceiverKillParticles* GetDefaultObj();

};

// 0xB0 (0xF0 - 0x40)
// Class Engine.ParticleModuleEventReceiverSpawn
class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{
public:
	struct FRawDistributionFloat                 SpawnCount;                                        // 0x40(0x30)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseParticleTime : 1;                              // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsePSysLocation : 1;                              // Mask: 0x2, PropSize: 0x10x70(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritVelocity : 1;                              // Mask: 0x4, PropSize: 0x10x70(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B8 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C2B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                InheritVelocityScale;                              // 0x78(0x60)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPhysicalMaterial*>             PhysicalMaterials;                                 // 0xD8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bBanPhysicalMaterials : 1;                         // Mask: 0x1, PropSize: 0x10xE8(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C2C[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleEventReceiverSpawn* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ParticleModuleEventSendToGame
class UParticleModuleEventSendToGame : public UObject
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleEventSendToGame* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleKillBase
class UParticleModuleKillBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleKillBase* GetDefaultObj();

};

// 0xC8 (0xF8 - 0x30)
// Class Engine.ParticleModuleKillBox
class UParticleModuleKillBox : public UParticleModuleKillBase
{
public:
	struct FRawDistributionVector                LowerLeftCorner;                                   // 0x30(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionVector                UpperRightCorner;                                  // 0x90(0x60)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAbsolute : 1;                                     // Mask: 0x1, PropSize: 0x10xF0(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKillInside : 1;                                   // Mask: 0x2, PropSize: 0x10xF0(0x1)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAxisAlignedAndFixedSize : 1;                      // Mask: 0x4, PropSize: 0x10xF0(0x1)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C2E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleKillBox* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.ParticleModuleKillHeight
class UParticleModuleKillHeight : public UParticleModuleKillBase
{
public:
	struct FRawDistributionFloat                 Height;                                            // 0x30(0x30)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	uint8                                        bAbsolute : 1;                                     // Mask: 0x1, PropSize: 0x10x60(0x1)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFloor : 1;                                        // Mask: 0x2, PropSize: 0x10x60(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyPSysScale : 1;                               // Mask: 0x4, PropSize: 0x10x60(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C2F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleKillHeight* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleLifetimeBase
class UParticleModuleLifetimeBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleLifetimeBase* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleLifetime
class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{
public:
	struct FRawDistributionFloat                 LifeTime;                                          // 0x30(0x30)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLifetime* GetDefaultObj();

};

// 0x20 (0x80 - 0x60)
// Class Engine.ParticleModuleLifetime_Seeded
class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x60(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLifetime_Seeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleLightBase
class UParticleModuleLightBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleLightBase* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class Engine.ParticleModuleLight
class UParticleModuleLight : public UParticleModuleLightBase
{
public:
	bool                                         bUseInverseSquaredFalloff;                         // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bAffectsTranslucency;                              // 0x31(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C31[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOverrideInverseExposureBlend : 1;                 // Mask: 0x1, PropSize: 0x10x34(0x1)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1B9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C33[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bPreviewLightRadius;                               // 0x38(0x1)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C34[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpawnFraction;                                     // 0x3C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionVector                ColorScaleOverLife;                                // 0x40(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 BrightnessOverLife;                                // 0xA0(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 RadiusScale;                                       // 0xD0(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 LightExponent;                                     // 0x100(0x30)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InverseExposureBlend;                              // 0x130(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	struct FLightingChannels                     LightingChannels;                                  // 0x134(0x1)(Net, Parm, ZeroConstructor, ReturnParm, EditConst)
	uint8                                        Pad_2C35[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VolumetricScatteringIntensity;                     // 0x138(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHighQualityLights;                                // 0x13C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShadowCastingLights;                              // 0x13D(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C36[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleLight* GetDefaultObj();

};

// 0x20 (0x160 - 0x140)
// Class Engine.ParticleModuleLight_Seeded
class UParticleModuleLight_Seeded : public UParticleModuleLight
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x140(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLight_Seeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleLocationBase
class UParticleModuleLocationBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleLocationBase* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Engine.ParticleModuleLocation
class UParticleModuleLocation : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                StartLocation;                                     // 0x30(0x60)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DistributeOverNPoints;                             // 0x90(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistributeThreshold;                               // 0x94(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocation* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Engine.ParticleModuleLocationBoneSocket
class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{
public:
	enum class ELocationBoneSocketSource         SourceType;                                        // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C39[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               UniversalOffset;                                   // 0x38(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FLocationBoneSocketInfo>       SourceLocations;                                   // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ELocationBoneSocketSelectionMethod SelectionMethod;                                   // 0x60(0x1)(Edit, ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C3A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUpdatePositionEachFrame : 1;                      // Mask: 0x1, PropSize: 0x10x64(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrientMeshEmitters : 1;                           // Mask: 0x2, PropSize: 0x10x64(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritBoneVelocity : 1;                          // Mask: 0x4, PropSize: 0x10x64(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BA : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C3B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InheritVelocityScale;                              // 0x68(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SkelMeshActorParamName;                            // 0x6C(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumPreSelectedIndices;                             // 0x74(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C3C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleLocationBoneSocket* GetDefaultObj();

};

// 0x180 (0x1B0 - 0x30)
// Class Engine.ParticleModuleLocationDirect
class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                Location;                                          // 0x30(0x60)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRawDistributionVector                LocationOffset;                                    // 0x90(0x60)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionVector                ScaleFactor;                                       // 0xF0(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionVector                Direction;                                         // 0x150(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationDirect* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Engine.ParticleModuleLocationEmitter
class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{
public:
	class FName                                  EmitterName;                                       // 0x30(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ELocationEmitterSelectionMethod   SelectionMethod;                                   // 0x38(0x1)(Edit, ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C3E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        InheritSourceVelocity : 1;                         // Mask: 0x1, PropSize: 0x10x3C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C3F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InheritSourceVelocityScale;                        // 0x40(0x4)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritSourceRotation : 1;                        // Mask: 0x1, PropSize: 0x10x44(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InheritSourceRotationScale;                        // 0x48(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C42[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleLocationEmitter* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleLocationEmitterDirect
class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{
public:
	class FName                                  EmitterName;                                       // 0x30(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationEmitterDirect* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class Engine.ParticleModuleLocationPrimitiveBase
class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{
public:
	uint8                                        Positive_X : 1;                                    // Mask: 0x1, PropSize: 0x10x30(0x1)(EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Positive_Y : 1;                                    // Mask: 0x2, PropSize: 0x10x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Positive_Z : 1;                                    // Mask: 0x4, PropSize: 0x10x30(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_X : 1;                                    // Mask: 0x8, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_Y : 1;                                    // Mask: 0x10, PropSize: 0x10x30(0x1)(ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Negative_Z : 1;                                    // Mask: 0x20, PropSize: 0x10x30(0x1)(ConstParm, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        SurfaceOnly : 1;                                   // Mask: 0x40, PropSize: 0x10x30(0x1)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Velocity : 1;                                      // Mask: 0x80, PropSize: 0x10x30(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_2C47[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 VelocityScale;                                     // 0x38(0x30)(Edit, ConstParm, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionVector                StartLocation;                                     // 0x68(0x60)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveBase* GetDefaultObj();

};

// 0x70 (0x138 - 0xC8)
// Class Engine.ParticleModuleLocationPrimitiveCylinder
class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{
public:
	uint8                                        RadialVelocity : 1;                                // Mask: 0x1, PropSize: 0x10xC8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BD : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C49[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 StartRadius;                                       // 0xD0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 StartHeight;                                       // 0x100(0x30)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECylinderHeightAxis               HeightAxis;                                        // 0x130(0x1)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C4A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveCylinder* GetDefaultObj();

};

// 0x20 (0x158 - 0x138)
// Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x138(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveCylinder_Seeded* GetDefaultObj();

};

// 0x30 (0xF8 - 0xC8)
// Class Engine.ParticleModuleLocationPrimitiveSphere
class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{
public:
	struct FRawDistributionFloat                 StartRadius;                                       // 0xC8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveSphere* GetDefaultObj();

};

// 0x20 (0x118 - 0xF8)
// Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0xF8(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveSphere_Seeded* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class Engine.ParticleModuleLocationPrimitiveTriangle
class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                StartOffset;                                       // 0x30(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Height;                                            // 0x90(0x30)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	struct FRawDistributionFloat                 Angle;                                             // 0xC0(0x30)(Edit, ExportObject, Net, EditFixedSize, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Thickness;                                         // 0xF0(0x30)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationPrimitiveTriangle* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Engine.ParticleModuleLocationSkelVertSurface
class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{
public:
	enum class ELocationSkelVertSurfaceSource    SourceType;                                        // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C4D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               UniversalOffset;                                   // 0x38(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUpdatePositionEachFrame : 1;                      // Mask: 0x1, PropSize: 0x10x50(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrientMeshEmitters : 1;                           // Mask: 0x2, PropSize: 0x10x50(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritBoneVelocity : 1;                          // Mask: 0x4, PropSize: 0x10x50(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BE : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C4E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InheritVelocityScale;                              // 0x54(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SkelMeshActorParamName;                            // 0x58(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ValidAssociatedBones;                              // 0x60(0x10)(Edit, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnforceNormalCheck : 1;                           // Mask: 0x1, PropSize: 0x10x70(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1BF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C50[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NormalToCompare;                                   // 0x78(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NormalCheckToleranceDegrees;                       // 0x90(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NormalCheckTolerance;                              // 0x94(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                ValidMaterialIndices;                              // 0x98(0x10)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritVertexColor : 1;                           // Mask: 0x1, PropSize: 0x10xA8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bInheritUV : 1;                                    // Mask: 0x2, PropSize: 0x10xA8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C0 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       InheritUVChannel;                                  // 0xAC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationSkelVertSurface* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Engine.ParticleModuleLocationWorldOffset
class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleLocationWorldOffset* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Engine.ParticleModuleLocationWorldOffset_Seeded
class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x98(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocationWorldOffset_Seeded* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Engine.ParticleModuleLocation_Seeded
class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x98(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleLocation_Seeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleMaterialBase
class UParticleModuleMaterialBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleMaterialBase* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ParticleModuleMeshMaterial
class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{
public:
	TArray<class UMaterialInterface*>            MeshMaterials;                                     // 0x30(0x10)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleMeshMaterial* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleRotationBase
class UParticleModuleRotationBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleRotationBase* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Engine.ParticleModuleMeshRotation
class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionVector                StartRotation;                                     // 0x30(0x60)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bInheritParent : 1;                                // Mask: 0x1, PropSize: 0x10x90(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C5E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotation* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleRotationRateBase
class UParticleModuleRotationRateBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleRotationRateBase* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleMeshRotationRate
class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                StartRotationRate;                                 // 0x30(0x60)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotationRate* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleMeshRotationRateMultiplyLife
class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                LifeMultiplier;                                    // 0x30(0x60)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotationRateMultiplyLife* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Engine.ParticleModuleMeshRotationRateOverLife
class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                RotRate;                                           // 0x30(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleRotRate : 1;                                 // Mask: 0x1, PropSize: 0x10x90(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C60[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotationRateOverLife* GetDefaultObj();

};

// 0x20 (0xB0 - 0x90)
// Class Engine.ParticleModuleMeshRotationRate_Seeded
class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x90(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotationRate_Seeded* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Engine.ParticleModuleMeshRotation_Seeded
class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x98(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleMeshRotation_Seeded* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleOrbitBase
class UParticleModuleOrbitBase : public UParticleModule
{
public:
	uint8                                        bUseEmitterTime : 1;                               // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C64[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleOrbitBase* GetDefaultObj();

};

// 0x140 (0x178 - 0x38)
// Class Engine.ParticleModuleOrbit
class UParticleModuleOrbit : public UParticleModuleOrbitBase
{
public:
	enum class EOrbitChainMode                   ChainMode;                                         // 0x38(0x1)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C65[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                OffsetAmount;                                      // 0x40(0x60)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FOrbitOptions                         OffsetOptions;                                     // 0xA0(0x4)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C66[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                RotationAmount;                                    // 0xA8(0x60)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FOrbitOptions                         RotationOptions;                                   // 0x108(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C69[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                RotationRateAmount;                                // 0x110(0x60)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FOrbitOptions                         RotationRateOptions;                               // 0x170(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C6B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleOrbit* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleOrientationBase
class UParticleModuleOrientationBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleOrientationBase* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleOrientationAxisLock
class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{
public:
	enum class EParticleAxisLock                 LockAxisFlags;                                     // 0x30(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C6E[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleOrientationAxisLock* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleParameterBase
class UParticleModuleParameterBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleParameterBase* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Engine.ParticleModuleParameterDynamic
class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{
public:
	TArray<struct FEmitterDynamicParameter>      DynamicParams;                                     // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UpdateFlags;                                       // 0x40(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsesVelocity : 1;                                 // Mask: 0x1, PropSize: 0x10x44(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C6F[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleParameterDynamic* GetDefaultObj();

};

// 0x20 (0x68 - 0x48)
// Class Engine.ParticleModuleParameterDynamic_Seeded
class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x48(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleParameterDynamic_Seeded* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ParticleModulePivotOffset
class UParticleModulePivotOffset : public UParticleModuleLocationBase
{
public:
	struct FVector2D                             PivotOffset;                                       // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModulePivotOffset* GetDefaultObj();

};

// 0x148 (0x178 - 0x30)
// Class Engine.ParticleModuleRequired
class UParticleModuleRequired : public UParticleModule
{
public:
	class UMaterialInterface*                    Material;                                          // 0x30(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        MinFacingCameraBlendDistance;                      // 0x38(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxFacingCameraBlendDistance;                      // 0x3C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               EmitterOrigin;                                     // 0x40(0x18)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              EmitterRotation;                                   // 0x58(0x18)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleScreenAlignment          ScreenAlignment;                                   // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseLocalSpace : 1;                                // Mask: 0x1, PropSize: 0x10x71(0x1)(ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKillOnDeactivate : 1;                             // Mask: 0x2, PropSize: 0x10x71(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bKillOnCompleted : 1;                              // Mask: 0x4, PropSize: 0x10x71(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EParticleSortMode                 SortMode;                                          // 0x72(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        bUseLegacyEmitterTime : 1;                         // Mask: 0x1, PropSize: 0x10x73(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRemoveHMDRoll : 1;                                // Mask: 0x2, PropSize: 0x10x73(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSupportLargeWorldCoordinates : 1;                 // Mask: 0x4, PropSize: 0x10x73(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        bEmitterDurationUseRange : 1;                      // Mask: 0x8, PropSize: 0x10x73(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	float                                        EmitterDuration;                                   // 0x74(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 SpawnRate;                                         // 0x78(0x30)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FParticleBurst>                BurstList;                                         // 0xA8(0x10)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EmitterDelay;                                      // 0xB8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EmitterDelayLow;                                   // 0xBC(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDelayFirstLoopOnly : 1;                           // Mask: 0x1, PropSize: 0x10xC0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C3 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EParticleSubUVInterpMethod        InterpolationMethod;                               // 0xC1(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bScaleUV : 1;                                      // Mask: 0x1, PropSize: 0x10xC2(0x1)(Edit, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEmitterDelayUseRange : 1;                         // Mask: 0x2, PropSize: 0x10xC2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C4 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EParticleBurstMethod              ParticleBurstMethod;                               // 0xC3(0x1)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideSystemMacroUV : 1;                        // Mask: 0x1, PropSize: 0x10xC4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseMaxDrawCount : 1;                              // Mask: 0x2, PropSize: 0x10xC4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C5 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EOpacitySourceMode                OpacitySourceMode;                                 // 0xC5(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EEmitterNormalsMode               EmitterNormalsMode;                                // 0xC6(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOrbitModuleAffectsVelocityAlignment : 1;          // Mask: 0x1, PropSize: 0x10xC7(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	int32                                        SubImages_Horizontal;                              // 0xC8(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SubImages_Vertical;                                // 0xCC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RandomImageTime;                                   // 0xD0(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RandomImageChanges;                                // 0xD4(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               MacroUVPosition;                                   // 0xD8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MacroUVRadius;                                     // 0xF0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, Config, InstancedReference, SubobjectReference)
	enum class EParticleUVFlipMode               UVFlippingMode;                                    // 0xF4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESubUVBoundingVertexCount         BoundingMode;                                      // 0xF5(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDurationRecalcEachLoop : 1;                       // Mask: 0x1, PropSize: 0x10xF6(0x1)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C7B[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NormalsSphereCenter;                               // 0xF8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AlphaThreshold;                                    // 0x110(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        EmitterLoops;                                      // 0x114(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CutoutTexture;                                     // 0x118(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDrawCount;                                      // 0x120(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EmitterDurationLow;                                // 0x124(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               NormalsCylinderDirection;                          // 0x128(0x18)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          NamedMaterialOverrides;                            // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C7C[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleRequired* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleRotation
class UParticleModuleRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                 StartRotation;                                     // 0x30(0x30)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleRotation* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.ParticleModuleRotationOverLifetime
class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                 RotationOverLife;                                  // 0x30(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Scale : 1;                                         // Mask: 0x1, PropSize: 0x10x60(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	uint8                                        Pad_2C7F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleRotationOverLifetime* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleRotationRate
class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                 StartRotationRate;                                 // 0x30(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleRotationRate* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleRotationRateMultiplyLife
class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                 LifeMultiplier;                                    // 0x30(0x30)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleRotationRateMultiplyLife* GetDefaultObj();

};

// 0x20 (0x80 - 0x60)
// Class Engine.ParticleModuleRotationRate_Seeded
class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x60(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleRotationRate_Seeded* GetDefaultObj();

};

// 0x20 (0x80 - 0x60)
// Class Engine.ParticleModuleRotation_Seeded
class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x60(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleRotation_Seeded* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleSizeBase
class UParticleModuleSizeBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleSizeBase* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleSize
class UParticleModuleSize : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                StartSize;                                         // 0x30(0x60)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleSize* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Engine.ParticleModuleSizeMultiplyLife
class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                LifeMultiplier;                                    // 0x30(0x60)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MultiplyX : 1;                                     // Mask: 0x1, PropSize: 0x10x90(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MultiplyY : 1;                                     // Mask: 0x2, PropSize: 0x10x90(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        MultiplyZ : 1;                                     // Mask: 0x4, PropSize: 0x10x90(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C84[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSizeMultiplyLife* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Engine.ParticleModuleSizeScale
class UParticleModuleSizeScale : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                SizeScale;                                         // 0x30(0x60)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        EnableX : 1;                                       // Mask: 0x1, PropSize: 0x10x90(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        EnableY : 1;                                       // Mask: 0x2, PropSize: 0x10x90(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        EnableZ : 1;                                       // Mask: 0x4, PropSize: 0x10x90(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C85[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSizeScale* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Engine.ParticleModuleSizeScaleBySpeed
class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
{
public:
	struct FVector2D                             SpeedScale;                                        // 0x30(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             MaxScale;                                          // 0x40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleSizeScaleBySpeed* GetDefaultObj();

};

// 0x20 (0xB0 - 0x90)
// Class Engine.ParticleModuleSize_Seeded
class UParticleModuleSize_Seeded : public UParticleModuleSize
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0x90(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleSize_Seeded* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleSourceMovement
class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                SourceMovementScale;                               // 0x30(0x60)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleSourceMovement* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleSpawnBase
class UParticleModuleSpawnBase : public UParticleModule
{
public:
	uint8                                        bProcessSpawnRate : 1;                             // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bProcessBurstList : 1;                             // Mask: 0x2, PropSize: 0x10x30(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C86[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSpawnBase* GetDefaultObj();

};

// 0xA8 (0xE0 - 0x38)
// Class Engine.ParticleModuleSpawn
class UParticleModuleSpawn : public UParticleModuleSpawnBase
{
public:
	struct FRawDistributionFloat                 Rate;                                              // 0x38(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	struct FRawDistributionFloat                 RateScale;                                         // 0x68(0x30)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FParticleBurst>                BurstList;                                         // 0x98(0x10)(Edit, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 BurstScale;                                        // 0xA8(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleBurstMethod              ParticleBurstMethod;                               // 0xD8(0x1)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C8B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bApplyGlobalSpawnRateScale : 1;                    // Mask: 0x1, PropSize: 0x10xDC(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C8C[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSpawn* GetDefaultObj();

};

// 0x40 (0x78 - 0x38)
// Class Engine.ParticleModuleSpawnPerUnit
class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{
public:
	float                                        UnitScalar;                                        // 0x38(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MovementTolerance;                                 // 0x3C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 SpawnPerUnit;                                      // 0x40(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxFrameDistance;                                  // 0x70(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreSpawnRateWhenMoving : 1;                    // Mask: 0x1, PropSize: 0x10x74(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMovementAlongX : 1;                         // Mask: 0x2, PropSize: 0x10x74(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMovementAlongY : 1;                         // Mask: 0x4, PropSize: 0x10x74(0x1)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMovementAlongZ : 1;                         // Mask: 0x8, PropSize: 0x10x74(0x1)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C8F[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSpawnPerUnit* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleSubUVBase
class UParticleModuleSubUVBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleSubUVBase* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class Engine.ParticleModuleSubUV
class UParticleModuleSubUV : public UParticleModuleSubUVBase
{
public:
	class USubUVAnimation*                       Animation;                                         // 0x30(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	struct FRawDistributionFloat                 SubImageIndex;                                     // 0x38(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseRealTime : 1;                                  // Mask: 0x1, PropSize: 0x10x68(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C93[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSubUV* GetDefaultObj();

};

// 0x40 (0xB0 - 0x70)
// Class Engine.ParticleModuleSubUVMovie
class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{
public:
	uint8                                        bUseEmitterTime : 1;                               // Mask: 0x1, PropSize: 0x10x70(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1C8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C96[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 FrameRate;                                         // 0x78(0x30)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	int32                                        StartingFrame;                                     // 0xA8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C97[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleSubUVMovie* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleTrailBase
class UParticleModuleTrailBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleTrailBase* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleTrailSource
class UParticleModuleTrailSource : public UParticleModuleTrailBase
{
public:
	enum class ETrail2SourceMethod               SourceMethod;                                      // 0x30(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C9B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  SourceName;                                        // 0x34(0x8)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_2C9C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 SourceStrength;                                    // 0x40(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bLockSourceStength : 1;                            // Mask: 0x1, PropSize: 0x10x70(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1C9 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2C9D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SourceOffsetCount;                                 // 0x74(0x4)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       SourceOffsetDefaults;                              // 0x78(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleSourceSelectionMethod    SelectionMethod;                                   // 0x88(0x1)(Edit, ConstParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C9E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bInheritRotation : 1;                              // Mask: 0x1, PropSize: 0x10x8C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C9F[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleTrailSource* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleTypeDataBase
class UParticleModuleTypeDataBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataBase* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Engine.ParticleModuleTypeDataAnimTrail
class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{
public:
	uint8                                        bDeadTrailsOnDeactivate : 1;                       // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablePreviousTangentRecalculation : 1;           // Mask: 0x2, PropSize: 0x10x30(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTangentRecalculationEveryFrame : 1;               // Mask: 0x4, PropSize: 0x10x30(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CA : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CA6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TilingDistance;                                    // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceTessellationStepSize;                      // 0x38(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TangentTessellationStepSize;                       // 0x3C(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WidthTessellationStepSize;                         // 0x40(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CA7[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataAnimTrail* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class Engine.ParticleModuleTypeDataBeam2
class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{
public:
	enum class EBeam2Method                      BeamMethod;                                        // 0x30(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CA8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TextureTile;                                       // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TextureTileDistance;                               // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Sheets;                                            // 0x3C(0x4)(BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxBeamCount;                                      // 0x40(0x4)(Edit, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x44(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        InterpolationPoints;                               // 0x48(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysOn : 1;                                     // Mask: 0x1, PropSize: 0x10x4C(0x1)(ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CA9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        UpVectorStepSize;                                  // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BranchParentName;                                  // 0x54(0x8)(ConstParm, BlueprintVisible, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CAA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 Distance;                                          // 0x60(0x30)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	enum class EBeamTaperMethod                  TaperMethod;                                       // 0x90(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CAB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionFloat                 TaperFactor;                                       // 0x98(0x30)(ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 TaperScale;                                        // 0xC8(0x30)(ConstParm, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RenderGeometry : 1;                                // Mask: 0x1, PropSize: 0x10xF8(0x1)(ConstParm, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RenderDirectLine : 1;                              // Mask: 0x2, PropSize: 0x10xF8(0x1)(Edit, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RenderLines : 1;                                   // Mask: 0x4, PropSize: 0x10xF8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        RenderTessellation : 1;                            // Mask: 0x8, PropSize: 0x10xF8(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CAC[0x57];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataBeam2* GetDefaultObj();

};

// 0x5A0 (0x5D0 - 0x30)
// Class Engine.ParticleModuleTypeDataGpu
class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
{
public:
	struct FGPUSpriteEmitterInfo                 EmitterInfo;                                       // 0x30(0x350)(Edit, ConstParm, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FGPUSpriteResourceData                ResourceData;                                      // 0x380(0x240)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CameraMotionBlurAmount;                            // 0x5C0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bClearExistingParticlesOnInit : 1;                 // Mask: 0x1, PropSize: 0x10x5C4(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CAE[0xB];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataGpu* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Engine.ParticleModuleTypeDataMesh
class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{
public:
	class UStaticMesh*                           Mesh;                                              // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CB1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LODSizeScale;                                      // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseStaticMeshLODs : 1;                            // Mask: 0x1, PropSize: 0x10x44(0x1)(BlueprintVisible, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        CastShadows : 1;                                   // Mask: 0x2, PropSize: 0x10x44(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        DoCollisions : 1;                                  // Mask: 0x4, PropSize: 0x10x44(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CC : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMeshScreenAlignment              MeshAlignment;                                     // 0x45(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideMaterial : 1;                             // Mask: 0x1, PropSize: 0x10x46(0x1)(Edit, ConstParm, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverrideDefaultMotionBlurSettings : 1;            // Mask: 0x2, PropSize: 0x10x46(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableMotionBlur : 1;                             // Mask: 0x4, PropSize: 0x10x46(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CD : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CB3[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRawDistributionVector                RollPitchYawRange;                                 // 0x48(0x60)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EParticleAxisLock                 AxisLockOption;                                    // 0xA8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraFacing : 1;                                 // Mask: 0x1, PropSize: 0x10xA9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMeshCameraFacingUpAxis           CameraFacingUpAxisOption;                          // 0xAA(0x1)(ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMeshCameraFacingOptions          CameraFacingOption;                                // 0xAB(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyParticleRotationAsSpin : 1;                  // Mask: 0x1, PropSize: 0x10xAC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bFaceCameraDirectionRatherThanPosition : 1;        // Mask: 0x2, PropSize: 0x10xAC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCollisionsConsiderPartilceSize : 1;               // Mask: 0x4, PropSize: 0x10xAC(0x1)(ConstParm, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CB4[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataMesh* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleTypeDataRibbon
class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{
public:
	int32                                        MaxTessellationBetweenParticles;                   // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SheetsPerTrail;                                    // 0x34(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTrailCount;                                     // 0x38(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxParticleInTrailCount;                           // 0x3C(0x4)(BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeadTrailsOnDeactivate : 1;                       // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDeadTrailsOnSourceLoss : 1;                       // Mask: 0x2, PropSize: 0x10x40(0x1)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClipSourceSegement : 1;                           // Mask: 0x4, PropSize: 0x10x40(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnablePreviousTangentRecalculation : 1;           // Mask: 0x8, PropSize: 0x10x40(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTangentRecalculationEveryFrame : 1;               // Mask: 0x10, PropSize: 0x10x40(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSpawnInitialParticle : 1;                         // Mask: 0x20, PropSize: 0x10x40(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1CF : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CB5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ETrailsRenderAxisOption           RenderAxis;                                        // 0x44(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CB6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TangentSpawningScalar;                             // 0x48(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRenderGeometry : 1;                               // Mask: 0x1, PropSize: 0x10x4C(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRenderSpawnPoints : 1;                            // Mask: 0x2, PropSize: 0x10x4C(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRenderTangents : 1;                               // Mask: 0x4, PropSize: 0x10x4C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRenderTessellation : 1;                           // Mask: 0x8, PropSize: 0x10x4C(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D0 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CB8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TilingDistance;                                    // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceTessellationStepSize;                      // 0x54(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableTangentDiffInterpScale : 1;                 // Mask: 0x1, PropSize: 0x10x58(0x1)(Edit, ConstParm, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D1 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CBA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TangentTessellationScalar;                         // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleTypeDataRibbon* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ParticleModuleVectorFieldBase
class UParticleModuleVectorFieldBase : public UParticleModule
{
public:

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldBase* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ParticleModuleVectorFieldGlobal
class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
{
public:
	uint8                                        bOverrideGlobalVectorFieldTightness : 1;           // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2CBF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        GlobalVectorFieldScale;                            // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        GlobalVectorFieldTightness;                        // 0x38(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CC0[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldGlobal* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Engine.ParticleModuleVectorFieldLocal
class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
{
public:
	class UVectorField*                          VectorField;                                       // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, DuplicateTransient)
	struct FVector                               RelativeTranslation;                               // 0x38(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              RelativeRotation;                                  // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeScale3D;                                   // 0x68(0x18)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        Intensity;                                         // 0x80(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config)
	float                                        Tightness;                                         // 0x84(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIgnoreComponentTransform : 1;                     // Mask: 0x1, PropSize: 0x10x88(0x1)(BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTileX : 1;                                        // Mask: 0x2, PropSize: 0x10x88(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTileY : 1;                                        // Mask: 0x4, PropSize: 0x10x88(0x1)(ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bTileZ : 1;                                        // Mask: 0x8, PropSize: 0x10x88(0x1)(BlueprintVisible, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUseFixDT : 1;                                     // Mask: 0x10, PropSize: 0x10x88(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CC2[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldLocal* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Engine.ParticleModuleVectorFieldRotation
class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
{
public:
	struct FVector                               MinInitialRotation;                                // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MaxInitialRotation;                                // 0x48(0x18)(BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldRotation* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Engine.ParticleModuleVectorFieldRotationRate
class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
{
public:
	struct FVector                               RotationRate;                                      // 0x30(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldRotationRate* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.ParticleModuleVectorFieldScale
class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
{
public:
	class UDistributionFloat*                    VectorFieldScale;                                  // 0x30(0x8)(Edit, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 VectorFieldScaleRaw;                               // 0x38(0x30)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldScale* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.ParticleModuleVectorFieldScaleOverLife
class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
{
public:
	class UDistributionFloat*                    VectorFieldScaleOverLife;                          // 0x30(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 VectorFieldScaleOverLifeRaw;                       // 0x38(0x30)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVectorFieldScaleOverLife* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.ParticleModuleVelocityBase
class UParticleModuleVelocityBase : public UParticleModule
{
public:
	uint8                                        bInWorldSpace : 1;                                 // Mask: 0x1, PropSize: 0x10x30(0x1)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bApplyOwnerScale : 1;                              // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CC4[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleVelocityBase* GetDefaultObj();

};

// 0x90 (0xC8 - 0x38)
// Class Engine.ParticleModuleVelocity
class UParticleModuleVelocity : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                StartVelocity;                                     // 0x38(0x60)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRawDistributionFloat                 StartVelocityRadial;                               // 0x98(0x30)(Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVelocity* GetDefaultObj();

};

// 0x78 (0xB0 - 0x38)
// Class Engine.ParticleModuleVelocityCone
class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionFloat                 Angle;                                             // 0x38(0x30)(Edit, ExportObject, Net, EditFixedSize, GlobalConfig, SubobjectReference)
	struct FRawDistributionFloat                 Velocity;                                          // 0x68(0x30)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FVector                               Direction;                                         // 0x98(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVelocityCone* GetDefaultObj();

};

// 0x60 (0x98 - 0x38)
// Class Engine.ParticleModuleVelocityInheritParent
class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                Scale;                                             // 0x38(0x60)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)

	static class UClass* StaticClass();
	static class UParticleModuleVelocityInheritParent* GetDefaultObj();

};

// 0x68 (0xA0 - 0x38)
// Class Engine.ParticleModuleVelocityOverLifetime
class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                VelOverLife;                                       // 0x38(0x60)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Absolute : 1;                                      // Mask: 0x1, PropSize: 0x10x98(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CC7[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleModuleVelocityOverLifetime* GetDefaultObj();

};

// 0x20 (0xE8 - 0xC8)
// Class Engine.ParticleModuleVelocity_Seeded
class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{
public:
	struct FParticleRandomSeedInfo               RandomSeedInfo;                                    // 0xC8(0x20)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UParticleModuleVelocity_Seeded* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class Engine.ParticleSpriteEmitter
class UParticleSpriteEmitter : public UParticleEmitter
{
public:

	static class UClass* StaticClass();
	static class UParticleSpriteEmitter* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.ParticleSystemReplay
class UParticleSystemReplay : public UObject
{
public:
	int32                                        ClipIDNumber;                                      // 0x28(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CC8[0x14];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UParticleSystemReplay* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PathFollowingAgentInterface
class IPathFollowingAgentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPathFollowingAgentInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PhysicsObjectBlueprintLibrary
class UPhysicsObjectBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPhysicsObjectBlueprintLibrary* GetDefaultObj();

	void GetPhysicsObjectWorldTransform(class UPrimitiveComponent* Component, class FName* BoneName, const struct FTransform& ReturnValue);
	struct FVector GetClosestPhysicsObjectFromWorldLocation(class UPrimitiveComponent* Component, const struct FClosestPhysicsObjectResult& ReturnValue);
	struct FClosestPhysicsObjectResult ExtractClosestPhysicsObjectResults(class FName* OutName, bool ReturnValue);
};

// 0x38 (0x300 - 0x2C8)
// Class Engine.PhysicsSpringComponent
class UPhysicsSpringComponent : public USceneComponent
{
public:
	float                                        SpringStiffness;                                   // 0x2C8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SpringDamping;                                     // 0x2CC(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SpringLengthAtRest;                                // 0x2D0(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpringRadius;                                      // 0x2D4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 SpringChannel;                                     // 0x2D8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x2D9(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2CD5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SpringCompression;                                 // 0x2DC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CD6[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsSpringComponent* GetDefaultObj();

	void GetSpringRestingPoint(const struct FVector& ReturnValue);
	void GetSpringDirection(const struct FVector& ReturnValue);
	void GetSpringCurrentEndPoint(const struct FVector& ReturnValue);
	void GetNormalizedCompressionScalar(float ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.PhysicsThreadLibrary
class UPhysicsThreadLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPhysicsThreadLibrary* GetDefaultObj();

	bool AddForce(const struct FBodyInstanceAsyncPhysicsTickHandle& Handle);
};

// 0x8 (0x2D0 - 0x2C8)
// Class Engine.PhysicsThrusterComponent
class UPhysicsThrusterComponent : public USceneComponent
{
public:
	float                                        ThrustStrength;                                    // 0x2C8(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CDB[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsThrusterComponent* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.SceneCapture
class ASceneCapture : public AActor
{
public:
	class UStaticMeshComponent*                  MeshComp;                                          // 0x4C8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USceneComponent*                       SceneComponent;                                    // 0x4D0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)

	static class UClass* StaticClass();
	static class ASceneCapture* GetDefaultObj();

};

// 0x10 (0x4E8 - 0x4D8)
// Class Engine.PlanarReflection
class APlanarReflection : public ASceneCapture
{
public:
	class UPlanarReflectionComponent*            PlanarReflectionComponent;                         // 0x4D8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, SubobjectReference)
	bool                                         bShowPreviewPlane;                                 // 0x4E0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CDC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APlanarReflection* GetDefaultObj();

	bool OnInterpToggle();
};

// 0xC0 (0x388 - 0x2C8)
// Class Engine.SceneCaptureComponent
class USceneCaptureComponent : public USceneComponent
{
public:
	enum class ESceneCapturePrimitiveRenderMode  PrimitiveRenderMode;                               // 0x2C8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESceneCaptureSource               CaptureSource;                                     // 0x2C9(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCaptureEveryFrame : 1;                            // Mask: 0x1, PropSize: 0x10x2CA(0x1)(Edit, ExportObject, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCaptureOnMovement : 1;                            // Mask: 0x2, PropSize: 0x10x2CA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	bool                                         bAlwaysPersistRenderingState;                      // 0x2CB(0x1)(BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class UPrimitiveComponent>> HiddenComponents;                                  // 0x2D0(0x10)(Edit, ConstParm, BlueprintVisible, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        HiddenActors;                                      // 0x2E0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>> ShowOnlyComponents;                                // 0x2F0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ShowOnlyActors;                                    // 0x300(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LODDistanceFactor;                                 // 0x310(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxViewDistanceOverride;                           // 0x314(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CaptureSortPriority;                               // 0x318(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRayTracingIfEnabled;                           // 0x31C(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FEngineShowFlagsSetting>       ShowFlagSettings;                                  // 0x320(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE7[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	class FString                                ProfilingEventName;                                // 0x360(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE8[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	uint32                                       CaptureCount;                                      // 0x380(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE9[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USceneCaptureComponent* GetDefaultObj();

	class UPrimitiveComponent* ShowOnlyComponent();
	bool ShowOnlyActorComponents();
	void SetCaptureSortPriority(int32* NewCaptureSortPriority);
	class UPrimitiveComponent* RemoveShowOnlyComponent();
	bool RemoveShowOnlyActorComponents();
	class UPrimitiveComponent* HideComponent();
	bool HideActorComponents();
	void ClearShowOnlyComponents();
	void ClearHiddenComponents();
};

// 0x168 (0x4F0 - 0x388)
// Class Engine.PlanarReflectionComponent
class UPlanarReflectionComponent : public USceneCaptureComponent
{
public:
	class UBoxComponent*                         PreviewBox;                                        // 0x388(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NormalDistortionStrength;                          // 0x390(0x4)(Edit, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PrefilterRoughness;                                // 0x394(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PrefilterRoughnessDistance;                        // 0x398(0x4)(Edit, ExportObject, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ScreenPercentage;                                  // 0x39C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ExtraFOV;                                          // 0x3A0(0x4)(BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFromPlaneFadeStart;                        // 0x3A4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFromPlaneFadeEnd;                          // 0x3A8(0x4)(Edit, ExportObject, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFromPlaneFadeoutStart;                     // 0x3AC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFromPlaneFadeoutEnd;                       // 0x3B0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngleFromPlaneFadeStart;                           // 0x3B4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngleFromPlaneFadeEnd;                             // 0x3B8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowPreviewPlane;                                 // 0x3BC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRenderSceneTwoSided;                              // 0x3BD(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CEF[0x132];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlanarReflectionComponent* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class Engine.PlaneReflectionCapture
class APlaneReflectionCapture : public AReflectionCapture
{
public:

	static class UClass* StaticClass();
	static class APlaneReflectionCapture* GetDefaultObj();

};

// 0x20 (0x430 - 0x410)
// Class Engine.PlaneReflectionCaptureComponent
class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float                                        InfluenceRadiusScale;                              // 0x410(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CF2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDrawSphereComponent*                  PreviewInfluenceRadius;                            // 0x418(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBoxComponent*                         PreviewCaptureBox;                                 // 0x420(0x8)(Edit, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CF3[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlaneReflectionCaptureComponent* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class Engine.PlatformInterfaceWebResponse
class UPlatformInterfaceWebResponse : public UObject
{
public:
	class FString                                OriginalURL;                                       // 0x28(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ResponseCode;                                      // 0x38(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        Tag;                                               // 0x3C(0x4)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                StringResponse;                                    // 0x40(0x10)(Edit, BlueprintReadOnly, Parm, ReturnParm, Transient)
	TArray<uint8>                                BinaryResponse;                                    // 0x50(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CF8[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPlatformInterfaceWebResponse* GetDefaultObj();

	void GetNumHeaders(int32 ReturnValue);
	class FString GetHeaderValue(const class FString& ReturnValue);
	int32 GetHeader(class FString* Header, class FString* Value);
};

// 0x0 (0x28 - 0x28)
// Class Engine.PluginBlueprintLibrary
class UPluginBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPluginBlueprintLibrary* GetDefaultObj();

	class FString IsPluginMounted(bool ReturnValue);
	class FString GetPluginVersionName(bool ReturnValue);
	int32 GetPluginVersion(bool ReturnValue);
	class FString GetPluginNameForObjectPath(struct FSoftObjectPath* ObjectPath, bool ReturnValue);
	class FString GetPluginMountedAssetPath(bool ReturnValue);
	class FString GetPluginEditorCustomVirtualPath(bool ReturnValue);
	class FString GetPluginDescriptorFilePath(bool ReturnValue);
	class FString GetPluginDescription(const class FString& OutDescription, bool ReturnValue);
	class FString GetPluginContentDir(bool ReturnValue);
	class FString GetPluginBaseDir(bool ReturnValue);
	void GetEnabledPluginNames(const TArray<class FString>& ReturnValue);
	void GetAdditionalProjectPluginSearchPaths(const TArray<class FString>& ReturnValue);
	void GetAdditionalPluginSearchPaths(const TArray<class FString>& ReturnValue);
};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.PointLight
class APointLight : public ALight
{
public:
	class UPointLightComponent*                  PointLightComponent;                               // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class APointLight* GetDefaultObj();

	float SetRadius();
	float SetLightFalloffExponent();
};

// 0x10 (0x38 - 0x28)
// Class Engine.Polys
class UPolys : public UObject
{
public:
	uint8                                        Pad_2D16[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPolys* GetDefaultObj();

};

// 0x30 (0x548 - 0x518)
// Class Engine.PrecomputedVisibilityOverrideVolume
class APrecomputedVisibilityOverrideVolume : public AVolume
{
public:
	TArray<class AActor*>                        OverrideVisibleActors;                             // 0x518(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        OverrideInvisibleActors;                           // 0x528(0x10)(Edit, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          OverrideInvisibleLevels;                           // 0x538(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APrecomputedVisibilityOverrideVolume* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.RigidBodyBase
class ARigidBodyBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class ARigidBodyBase* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.RadialForceActor
class ARadialForceActor : public ARigidBodyBase
{
public:
	class URadialForceComponent*                 ForceComponent;                                    // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ARadialForceActor* GetDefaultObj();

	void ToggleForce();
	void FireImpulse();
	void EnableForce();
	void DisableForce();
};

// 0x0 (0x28 - 0x28)
// Class Engine.RVOAvoidanceInterface
class IRVOAvoidanceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IRVOAvoidanceInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.Scene
class UScene : public UObject
{
public:

	static class UClass* StaticClass();
	static class UScene* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.SceneCapture2D
class ASceneCapture2D : public ASceneCapture
{
public:
	class USceneCaptureComponent2D*              CaptureComponent2D;                                // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ASceneCapture2D* GetDefaultObj();

	bool OnInterpToggle();
};

// 0x898 (0xC20 - 0x388)
// Class Engine.SceneCaptureComponent2D
class USceneCaptureComponent2D : public USceneCaptureComponent
{
public:
	enum class ECameraProjectionMode             ProjectionType;                                    // 0x388(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D21[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FOVAngle;                                          // 0x38C(0x4)(ExportObject, EditFixedSize, Config, SubobjectReference)
	float                                        OrthoWidth;                                        // 0x390(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2D23[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureRenderTarget2D*                TextureTarget;                                     // 0x398(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESceneCaptureCompositeMode        CompositeMode;                                     // 0x3A0(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D26[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  PostProcessSettings;                               // 0x3B0(0x780)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst)
	float                                        PostProcessBlendWeight;                            // 0xB30(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOverride_CustomNearClippingPlane : 1;             // Mask: 0x1, PropSize: 0x10xB34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D4 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D27[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CustomNearClippingPlane;                           // 0xB38(0x4)(ExportObject, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCustomProjectionMatrix;                        // 0xB3C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D28[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMatrix                               CustomProjectionMatrix;                            // 0xB40(0x80)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseFauxOrthoViewPos;                              // 0xBC0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableOrthographicTiling;                         // 0xBC1(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D2A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumXTiles;                                         // 0xBC4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumYTiles;                                         // 0xBC8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableClipPlane;                                  // 0xBCC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D2B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ClipPlaneBase;                                     // 0xBD0(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ClipPlaneNormal;                                   // 0xBE8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCameraCutThisFrame : 1;                           // Mask: 0x1, PropSize: 0x10xC00(0x1)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1; // Mask: 0x2, PropSize: 0x10xC00(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D2C[0x1F];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USceneCaptureComponent2D* GetDefaultObj();

	TScriptInterface<class IBlendableInterface> RemoveBlendable();
	void CaptureScene();
	float AddOrUpdateBlendable();
};

// 0x18 (0x3A0 - 0x388)
// Class Engine.SceneCaptureComponentCube
class USceneCaptureComponentCube : public USceneCaptureComponent
{
public:
	class UTextureRenderTargetCube*              TextureTarget;                                     // 0x388(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCaptureRotation;                                  // 0x390(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D2E[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USceneCaptureComponentCube* GetDefaultObj();

	void CaptureScene();
};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.SceneCaptureCube
class ASceneCaptureCube : public ASceneCapture
{
public:
	class USceneCaptureComponentCube*            CaptureComponentCube;                              // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ASceneCaptureCube* GetDefaultObj();

	bool OnInterpToggle();
};

// 0x8 (0x290 - 0x288)
// Class Engine.ShadowMapTexture2D
class UShadowMapTexture2D : public UTexture2D
{
public:
	enum class EShadowMapFlags                   ShadowmapFlags;                                    // 0x288(0x1)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D31[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShadowMapTexture2D* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Engine.SkeletalMeshSocket
class USkeletalMeshSocket : public UObject
{
public:
	class FName                                  SocketName;                                        // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	struct FVector                               RelativeLocation;                                  // 0x38(0x18)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              RelativeRotation;                                  // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeScale;                                     // 0x68(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceAlwaysAnimated : 1;                          // Mask: 0x1, PropSize: 0x10x80(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreBoneScaling : 1;                            // Mask: 0x2, PropSize: 0x10x80(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotateBoneScaleForSocket : 1;                     // Mask: 0x4, PropSize: 0x10x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D3A[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkeletalMeshSocket* GetDefaultObj();

	struct FVector InitializeSocketFromLocation();
	class USkeletalMeshComponent* GetSocketLocation(const struct FVector& ReturnValue);
};

// 0x1F0 (0x510 - 0x320)
// Class Engine.SkyLightComponent
class USkyLightComponent : public ULightComponentBase
{
public:
	bool                                         bRealTimeCapture;                                  // 0x320(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESkyLightSourceType               SourceType;                                        // 0x321(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2D44[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          Cubemap;                                           // 0x328(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        SourceCubemapAngle;                                // 0x330(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CubemapResolution;                                 // 0x334(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        SkyDistanceThreshold;                              // 0x338(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCaptureEmissiveOnly;                              // 0x33C(0x1)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLowerHemisphereIsBlack;                           // 0x33D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D45[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          LowerHemisphereColor;                              // 0x340(0x10)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OcclusionMaxDistance;                              // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Contrast;                                          // 0x354(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OcclusionExponent;                                 // 0x358(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinOcclusion;                                      // 0x35C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                OcclusionTint;                                     // 0x360(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCloudAmbientOcclusion : 1;                        // Mask: 0x1, PropSize: 0x10x364(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D5 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D46[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CloudAmbientOcclusionStrength;                     // 0x368(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudAmbientOcclusionExtent;                       // 0x36C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudAmbientOcclusionMapResolutionScale;           // 0x370(0x4)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudAmbientOcclusionApertureScale;                // 0x374(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EOcclusionCombineMode             OcclusionCombineMode;                              // 0x378(0x1)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D49[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bShowIlluminanceMeter : 1;                         // Mask: 0x1, PropSize: 0x10x37C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1D6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D4A[0xAB];                                    // Fixing Size After Last Property  > TateDumper <
	class UTextureCube*                          BlendDestinationCubemap;                           // 0x428(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D4B[0xE0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkyLightComponent* GetDefaultObj();

	void SetVolumetricScatteringIntensity(float NewIntensity);
	void SetSourceCubemapAngle(float* NewValue);
	struct FColor SetOcclusionTint();
	float SetOcclusionExponent();
	float SetOcclusionContrast();
	float SetMinOcclusion();
	struct FLinearColor SetLowerHemisphereColor();
	void SetLightColor(const struct FLinearColor& NewLightColor);
	void SetIntensity(float NewIntensity);
	void SetIndirectLightingIntensity(float NewIntensity);
	float SetCubemapBlend();
	class UTextureCube* SetCubemap();
	void RecaptureSky();
};

// 0x0 (0x28 - 0x28)
// Class Engine.SMInstanceManager
class ISMInstanceManager : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISMInstanceManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SMInstanceManagerProvider
class ISMInstanceManagerProvider : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISMInstanceManagerProvider* GetDefaultObj();

};

// 0x3C8 (0x3F0 - 0x28)
// Class Engine.SoundAttenuation
class USoundAttenuation : public UObject
{
public:
	struct FSoundAttenuationSettings             Attenuation;                                       // 0x28(0x3C8)(ExportObject, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundAttenuation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SoundEffectPresetWidgetInterface
class ISoundEffectPresetWidgetInterface : public IAudioPanelWidgetInterface
{
public:

	static class UClass* StaticClass();
	static class ISoundEffectPresetWidgetInterface* GetDefaultObj();

	void OnPropertyChanged(class USoundEffectPreset** Preset, class FName PropertyName);
	void OnConstructed(class USoundEffectPreset** Preset);
	void GetClass(class UClass* ReturnValue);
};

// 0x18 (0x40 - 0x28)
// Class Engine.SoundEffectSourcePresetChain
class USoundEffectSourcePresetChain : public UObject
{
public:
	TArray<struct FSourceEffectChainEntry>       Chain;                                             // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPlayEffectChainTails : 1;                         // Mask: 0x1, PropSize: 0x10x38(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D50[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundEffectSourcePresetChain* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Engine.SoundGroups
class USoundGroups : public UObject
{
public:
	TArray<struct FSoundGroup>                   SoundGroupProfiles;                                // 0x28(0x10)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_2D51[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundGroups* GetDefaultObj();

};

// 0x40 (0x88 - 0x48)
// Class Engine.SoundNodeModulatorContinuous
class USoundNodeModulatorContinuous : public USoundNode
{
public:
	struct FModulatorContinuousParams            PitchModulationParams;                             // 0x48(0x20)(Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FModulatorContinuousParams            VolumeModulationParams;                            // 0x68(0x20)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeModulatorContinuous* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SoundSubmixWidgetInterface
class ISoundSubmixWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISoundSubmixWidgetInterface* GetDefaultObj();

	void OnConstructed(class USoundSubmixBase* SoundSubmix);
};

// 0x0 (0x28 - 0x28)
// Class Engine.SparseVolumeTexture
class USparseVolumeTexture : public UObject
{
public:

	static class UClass* StaticClass();
	static class USparseVolumeTexture* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class Engine.StaticSparseVolumeTexture
class UStaticSparseVolumeTexture : public USparseVolumeTexture
{
public:
	struct FBox                                  VolumeBounds;                                      // 0x28(0x38)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D52[0xD0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStaticSparseVolumeTexture* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Engine.AnimatedSparseVolumeTexture
class UAnimatedSparseVolumeTexture : public USparseVolumeTexture
{
public:
	int32                                        FrameCount;                                        // 0x28(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D54[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBox                                  VolumeBounds;                                      // 0x30(0x38)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D55[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimatedSparseVolumeTexture* GetDefaultObj();

};

// 0x8 (0x4D8 - 0x4D0)
// Class Engine.SphereReflectionCapture
class ASphereReflectionCapture : public AReflectionCapture
{
public:
	class UDrawSphereComponent*                  DrawCaptureRadius;                                 // 0x4D0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ASphereReflectionCapture* GetDefaultObj();

	void GetSphereCaptureComponent(class USphereReflectionCaptureComponent* ReturnValue);
};

// 0x10 (0x420 - 0x410)
// Class Engine.SphereReflectionCaptureComponent
class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	float                                        InfluenceRadius;                                   // 0x410(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CaptureDistanceScale;                              // 0x414(0x4)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UDrawSphereComponent*                  PreviewInfluenceRadius;                            // 0x418(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USphereReflectionCaptureComponent* GetDefaultObj();

};

// 0x60 (0x88 - 0x28)
// Class Engine.StaticMeshSocket
class UStaticMeshSocket : public UObject
{
public:
	class FName                                  SocketName;                                        // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeLocation;                                  // 0x30(0x18)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              RelativeRotation;                                  // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeScale;                                     // 0x60(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                Tag;                                               // 0x78(0x10)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UStaticMeshSocket* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.StereoLayerShape
class UStereoLayerShape : public UObject
{
public:

	static class UClass* StaticClass();
	static class UStereoLayerShape* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.StereoLayerShapeQuad
class UStereoLayerShapeQuad : public UStereoLayerShape
{
public:

	static class UClass* StaticClass();
	static class UStereoLayerShapeQuad* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.StereoLayerShapeCylinder
class UStereoLayerShapeCylinder : public UStereoLayerShape
{
public:
	float                                        Radius;                                            // 0x28(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        OverlayArc;                                        // 0x2C(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Height;                                            // 0x30(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_2D5A[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStereoLayerShapeCylinder* GetDefaultObj();

	float SetRadius();
	float SetOverlayArc();
	int32 SetHeight();
};

// 0x0 (0x28 - 0x28)
// Class Engine.StereoLayerShapeCubemap
class UStereoLayerShapeCubemap : public UStereoLayerShape
{
public:

	static class UClass* StaticClass();
	static class UStereoLayerShapeCubemap* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Engine.StereoLayerShapeEquirect
class UStereoLayerShapeEquirect : public UStereoLayerShape
{
public:
	struct FBox2D                                LeftUVRect;                                        // 0x28(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FBox2D                                RightUVRect;                                       // 0x50(0x28)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             LeftScale;                                         // 0x78(0x10)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             RightScale;                                        // 0x88(0x10)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             LeftBias;                                          // 0x98(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             RightBias;                                         // 0xA8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UStereoLayerShapeEquirect* GetDefaultObj();

	struct FEquirectProps SetEquirectProps();
};

// 0x188 (0x450 - 0x2C8)
// Class Engine.StereoLayerComponent
class UStereoLayerComponent : public USceneComponent
{
public:
	uint8                                        bLiveTexture : 1;                                  // Mask: 0x1, PropSize: 0x10x2C8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSupportsDepth : 1;                                // Mask: 0x2, PropSize: 0x10x2C8(0x1)(ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNoAlphaChannel : 1;                               // Mask: 0x4, PropSize: 0x10x2C8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1E1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D72[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture*                              Texture;                                           // 0x2D0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	class UTexture*                              LeftTexture;                                       // 0x2D8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bQuadPreserveTextureRatio : 1;                     // Mask: 0x1, PropSize: 0x10x2E0(0x1)(ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1E2 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2D74[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             QuadSize;                                          // 0x2E8(0x10)(Edit, ConstParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBox2D                                UVRect;                                            // 0x2F8(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CylinderRadius;                                    // 0x320(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CylinderOverlayArc;                                // 0x324(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CylinderHeight;                                    // 0x328(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D76[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FEquirectProps                        EquirectProps;                                     // 0x330(0x90)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, EditConst)
	enum class EStereoLayerType                  StereoLayerType;                                   // 0x3C0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EStereoLayerShape                 StereoLayerShape;                                  // 0x3C1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, SubobjectReference)
	uint8                                        Pad_2D77[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UStereoLayerShape*                     Shape;                                             // 0x3C8(0x8)(BlueprintReadOnly, Parm, ReturnParm, Config, DisableEditOnInstance, SubobjectReference)
	int32                                        Priority;                                          // 0x3D0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2D78[0x7C];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStereoLayerComponent* GetDefaultObj();

	struct FBox2D SetUVRect();
	void SetTexture(class UTexture** InTexture);
	struct FVector2D SetQuadSize();
	int32 SetPriority();
	void SetLeftTexture(class UTexture** InTexture);
	struct FEquirectProps SetEquirectProps();
	void MarkTextureForUpdate();
	void GetUVRect(const struct FBox2D& ReturnValue);
	void GetTexture(class UTexture* ReturnValue);
	void GetQuadSize(const struct FVector2D& ReturnValue);
	void GetPriority(int32 ReturnValue);
	void GetLeftTexture(class UTexture* ReturnValue);
};

// 0x40 (0x68 - 0x28)
// Class Engine.SubUVAnimation
class USubUVAnimation : public UObject
{
public:
	class UTexture2D*                            SubUVTexture;                                      // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SubImages_Horizontal;                              // 0x30(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SubImages_Vertical;                                // 0x34(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESubUVBoundingVertexCount         BoundingMode;                                      // 0x38(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EOpacitySourceMode                OpacitySourceMode;                                 // 0x39(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D79[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AlphaThreshold;                                    // 0x3C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D7B[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USubUVAnimation* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Engine.TextPropertyTestObject
class UTextPropertyTestObject : public UObject
{
public:
	class FText                                  DefaultedText;                                     // 0x28(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FText                                  UndefaultedText;                                   // 0x40(0x18)(BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FText                                  TransientText;                                     // 0x58(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTextPropertyTestObject* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.TextRenderActor
class ATextRenderActor : public AActor
{
public:
	class UTextRenderComponent*                  TextRender;                                        // 0x4C8(0x8)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ATextRenderActor* GetDefaultObj();

};

// 0x58 (0x6F0 - 0x698)
// Class Engine.TextRenderComponent
class UTextRenderComponent : public UPrimitiveComponent
{
public:
	class FText                                  Text;                                              // 0x698(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	class UMaterialInterface*                    TextMaterial;                                      // 0x6B0(0x8)(ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UFont*                                 Font;                                              // 0x6B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	enum class EHorizTextAligment                HorizontalAlignment;                               // 0x6C0(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EVerticalTextAligment             VerticalAlignment;                                 // 0x6C1(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2D8E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                TextRenderColor;                                   // 0x6C4(0x4)(ConstParm, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        XScale;                                            // 0x6C8(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        YScale;                                            // 0x6CC(0x4)(ConstParm, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WorldSize;                                         // 0x6D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InvDefaultSize;                                    // 0x6D4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HorizSpacingAdjust;                                // 0x6D8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        VertSpacingAdjust;                                 // 0x6DC(0x4)(Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysRenderAsText : 1;                           // Mask: 0x1, PropSize: 0x10x6E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D90[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextRenderComponent* GetDefaultObj();

	void SetYScale(float* Value);
	void SetXScale(float* Value);
	void SetWorldSize(float* Value);
	void SetVertSpacingAdjust(float* Value);
	void SetVerticalAlignment(enum class EVerticalTextAligment* Value);
	void SetTextRenderColor(struct FColor* Value);
	void SetTextMaterial(class UMaterialInterface* Material);
	void SetText(class FString* Value);
	void SetHorizSpacingAdjust(float* Value);
	void SetHorizontalAlignment(enum class EHorizTextAligment* Value);
	void SetFont(class UFont** Value);
	void K2_SetText(class FText* Value);
	void GetTextWorldSize(const struct FVector& ReturnValue);
	void GetTextLocalSize(const struct FVector& ReturnValue);
};

// 0xA0 (0x158 - 0xB8)
// Class Engine.TimelineComponent
class UTimelineComponent : public UActorComponent
{
public:
	struct FTimeline                             TheTimeline;                                       // 0xB8(0x98)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTimeDilation : 1;                           // Mask: 0x1, PropSize: 0x10x150(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2DAC[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTimelineComponent* GetDefaultObj();

	void Stop();
	void SetVectorCurve(class UCurveVector* NewVectorCurve, class FName VectorTrackName);
	void SetTimelineLengthMode(enum class ETimelineLengthMode NewLengthMode);
	float SetTimelineLength();
	void SetPlayRate(float NewRate);
	void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate);
	void SetNewTime(float* NewTime);
	void SetLooping(bool* bNewLooping);
	void SetLinearColorCurve(class UCurveLinearColor* NewLinearColorCurve, class FName LinearColorTrackName);
	void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation);
	void SetFloatCurve(class UCurveFloat* NewFloatCurve, class FName FloatTrackName);
	void ReverseFromEnd();
	void Reverse();
	void PlayFromStart();
	void Play();
	void OnRep_Timeline(const struct FTimeline& OldTimeline);
	void IsReversing(bool ReturnValue);
	void IsPlaying(bool ReturnValue);
	void IsLooping(bool ReturnValue);
	void GetTimelineLength(float ReturnValue);
	void GetScaledTimelineLength(float ReturnValue);
	void GetPlayRate(float ReturnValue);
	void GetPlaybackPosition(float ReturnValue);
	void GetIgnoreTimeDilation(bool ReturnValue);
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.TriggerBase
class ATriggerBase : public AActor
{
public:
	class UShapeComponent*                       CollisionComponent;                                // 0x4C8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ATriggerBase* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class Engine.TriggerBox
class ATriggerBox : public ATriggerBase
{
public:

	static class UClass* StaticClass();
	static class ATriggerBox* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class Engine.TriggerCapsule
class ATriggerCapsule : public ATriggerBase
{
public:

	static class UClass* StaticClass();
	static class ATriggerCapsule* GetDefaultObj();

};

// 0x0 (0x4D0 - 0x4D0)
// Class Engine.TriggerSphere
class ATriggerSphere : public ATriggerBase
{
public:

	static class UClass* StaticClass();
	static class ATriggerSphere* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Engine.TwitterIntegrationBase
class UTwitterIntegrationBase : public UPlatformInterfaceBase
{
public:

	static class UClass* StaticClass();
	static class UTwitterIntegrationBase* GetDefaultObj();

	class FString TwitterRequest(TArray<class FString>* ParamKeysAndValues, enum class ETwitterRequestMethod* RequestMethod, int32 AccountIndex, bool ReturnValue);
	class FString ShowTweetUI(class FString* InitialMessage, class FString* Picture, bool ReturnValue);
	void Init();
	void GetNumAccounts(int32 ReturnValue);
	void GetAccountName(int32 AccountIndex, const class FString& ReturnValue);
	void CanShowTweetUI(bool ReturnValue);
	void AuthorizeAccounts(bool ReturnValue);
};

// 0x48 (0x108 - 0xC0)
// Class Engine.UserDefinedStruct
class UUserDefinedStruct : public UScriptStruct
{
public:
	enum class EUserDefinedStructureStatus       Status;                                            // 0xC0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DBA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 Guid;                                              // 0xC4(0x10)(Edit, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_2DBB[0x34];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUserDefinedStruct* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Engine.VectorField
class UVectorField : public UObject
{
public:
	struct FBox                                  Bounds;                                            // 0x28(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Intensity;                                         // 0x60(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config)
	uint8                                        Pad_2DE1[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVectorField* GetDefaultObj();

};

// 0x40 (0xA8 - 0x68)
// Class Engine.VectorFieldAnimated
class UVectorFieldAnimated : public UVectorField
{
public:
	class UTexture2D*                            Texture;                                           // 0x68(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	enum class EVectorFieldConstructionOp        ConstructionOp;                                    // 0x70(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DE7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        VolumeSizeX;                                       // 0x74(0x4)(BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        VolumeSizeY;                                       // 0x78(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        VolumeSizeZ;                                       // 0x7C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SubImagesX;                                        // 0x80(0x4)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SubImagesY;                                        // 0x84(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FrameCount;                                        // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FramesPerSecond;                                   // 0x8C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bLoop : 1;                                         // Mask: 0x1, PropSize: 0x10x90(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1ED : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2DEA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UVectorFieldStatic*                    NoiseField;                                        // 0x98(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        NoiseScale;                                        // 0xA0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoiseMax;                                          // 0xA4(0x4)(Edit, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UVectorFieldAnimated* GetDefaultObj();

};

// 0x28 (0x6C0 - 0x698)
// Class Engine.VectorFieldComponent
class UVectorFieldComponent : public UPrimitiveComponent
{
public:
	class UVectorField*                          VectorField;                                       // 0x698(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, DuplicateTransient)
	float                                        Intensity;                                         // 0x6A0(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, Config)
	float                                        Tightness;                                         // 0x6A4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bPreviewVectorField : 1;                           // Mask: 0x1, PropSize: 0x10x6A8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DED[0x17];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVectorFieldComponent* GetDefaultObj();

	void SetIntensity(float NewIntensity);
};

// 0x50 (0xB8 - 0x68)
// Class Engine.VectorFieldStatic
class UVectorFieldStatic : public UVectorField
{
public:
	int32                                        SizeX;                                             // 0x68(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0x6C(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	int32                                        SizeZ;                                             // 0x70(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference)
	bool                                         bAllowCPUAccess;                                   // 0x74(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2DEF[0x43];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVectorFieldStatic* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.VisualLoggerDebugSnapshotInterface
class IVisualLoggerDebugSnapshotInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IVisualLoggerDebugSnapshotInterface* GetDefaultObj();

};

// 0x28 (0x2F0 - 0x2C8)
// Class Engine.WindDirectionalSourceComponent
class UWindDirectionalSourceComponent : public USceneComponent
{
public:
	float                                        Strength;                                          // 0x2C8(0x4)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        Speed;                                             // 0x2CC(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MinGustAmount;                                     // 0x2D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxGustAmount;                                     // 0x2D4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x2D8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bPointWind : 1;                                    // Mask: 0x1, PropSize: 0x10x2DC(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF6[0x13];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWindDirectionalSourceComponent* GetDefaultObj();

	void SetWindType(enum class EWindSourceType* InNewType);
	void SetStrength(float* InNewStrength);
	void SetSpeed(float* InNewSpeed);
	void SetRadius(float* InNewRadius);
	void SetMinimumGustAmount(float* InNewMinGust);
	void SetMaximumGustAmount(float* InNewMaxGust);
};

// 0x8 (0x30 - 0x28)
// Class Engine.WorldPartitionEditorLoaderAdapter
class UWorldPartitionEditorLoaderAdapter : public UObject
{
public:
	uint8                                        Pad_2DF9[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionEditorLoaderAdapter* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Engine.WorldPartitionRuntimeCellData
class UWorldPartitionRuntimeCellData : public UObject
{
public:
	uint8                                        Pad_2DFA[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FBox                                  ContentBounds;                                     // 0x48(0x38)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeCellData* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class Engine.HierarchicalLODSetup
class UHierarchicalLODSetup : public UObject
{
public:
	TArray<struct FHierarchicalSimplification>   HierarchicalLODSetup;                              // 0x28(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Transient, SubobjectReference)
	TSoftObjectPtr<class UMaterialInterface>     OverrideBaseMaterial;                              // 0x38(0x30)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHierarchicalLODSetup* GetDefaultObj();

};

// 0xA8 (0x280 - 0x1D8)
// Class Engine.Texture2DArray
class UTexture2DArray : public UTexture
{
public:
	uint8                                        Pad_2DFC[0x98];                                    // Fixing Size After Last Property  > TateDumper <
	enum class ETextureAddress                   AddressX;                                          // 0x270(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
	enum class ETextureAddress                   AddressY;                                          // 0x271(0x1)(BlueprintVisible, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	enum class ETextureAddress                   AddressZ;                                          // 0x272(0x1)(BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFD[0xD];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTexture2DArray* GetDefaultObj();

};

// 0x438 (0x460 - 0x28)
// Class Engine.Level
class ULevel : public UObject
{
public:
	uint8                                        Pad_2DFE[0x178];                                   // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                OwningWorld;                                       // 0x1A0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UModel*                                Model;                                             // 0x1A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, SubobjectReference)
	TArray<class UModelComponent*>               ModelComponents;                                   // 0x1B0(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class ULevelActorContainer*                  ActorCluster;                                      // 0x1C0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumTextureStreamingUnbuiltComponents;              // 0x1C8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumTextureStreamingDirtyResources;                 // 0x1CC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class ALevelScriptActor*                     LevelScriptActor;                                  // 0x1D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst)
	class ANavigationObjectBase*                 NavListStart;                                      // 0x1D8(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class ANavigationObjectBase*                 NavListEnd;                                        // 0x1E0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UNavigationDataChunk*>          NavDataChunks;                                     // 0x1E8(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LightmapTotalSize;                                 // 0x1F8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowmapTotalSize;                                // 0x1FC(0x4)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       StaticNavigableGeometry;                           // 0x200(0x10)(Edit, ConstParm, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FGuid>                         StreamingTextureGuids;                             // 0x210(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FName>                          StreamingTextures;                                 // 0x220(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       PackedTextureStreamingQualityLevelFeatureLevel;    // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DFF[0xC4];                                    // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 LevelBuildDataId;                                  // 0x2F8(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	class UMapBuildDataRegistry*                 MapBuildData;                                      // 0x308(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntVector                            LightBuildLevelOffset;                             // 0x310(0xC)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsLightingScenario : 1;                           // Mask: 0x1, PropSize: 0x10x31C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1EE : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bTextureStreamingRotationChanged : 1;              // Mask: 0x8, PropSize: 0x10x31C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bStaticComponentsRegisteredInStreamingManager : 1; // Mask: 0x10, PropSize: 0x10x31C(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsVisible : 1;                                    // Mask: 0x20, PropSize: 0x10x31C(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_1EF : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E02[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_1F0 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bIsPartitioned : 1;                                // Mask: 0x40, PropSize: 0x10x31E(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1F1 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E03[0x61];                                    // Fixing Size After Last Property  > TateDumper <
	class AWorldSettings*                        WorldSettings;                                     // 0x380(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AWorldDataLayers*                      WorldDataLayers;                                   // 0x388(0x8)(Edit, ConstParm, DisableEditOnTemplate, SubobjectReference)
	TSoftObjectPtr<class UWorldPartitionRuntimeCell> WorldPartitionRuntimeCell;                         // 0x390(0x30)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, SubobjectReference)
	uint8                                        Pad_2E05[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x3C8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2E06[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FReplicatedStaticActorDestructionInfo> DestroyedReplicatedStaticActors;                   // 0x3E8(0x10)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E07[0x68];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ActorFolder
class UActorFolder : public UObject
{
public:

	static class UClass* StaticClass();
	static class UActorFolder* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.ActorPartitionSubsystem
class UActorPartitionSubsystem : public UWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class UActorPartitionSubsystem* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Engine.AISystemBase
class UAISystemBase : public UObject
{
public:
	struct FSoftClassPath                        AISystemClassName;                                 // 0x28(0x20)(BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, SubobjectReference)
	class FName                                  AISystemModuleName;                                // 0x48(0x8)(ConstParm, ExportObject, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_2E0A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bInstantiateAISystemOnClient;                      // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E0B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAISystemBase* GetDefaultObj();

};

// 0x0 (0x58 - 0x58)
// Class Engine.NullNavSysConfig
class UNullNavSysConfig : public UNavigationSystemConfig
{
public:

	static class UClass* StaticClass();
	static class UNullNavSysConfig* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class Engine.AvoidanceManager
class UAvoidanceManager : public UObject
{
public:
	uint8                                        Pad_2E0E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultTimeToLive;                                 // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockTimeAfterAvoid;                                // 0x34(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LockTimeAfterClean;                                // 0x38(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTimeToPredict;                                // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ArtificialRadiusExpansion;                         // 0x40(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TestHeightDifference;                              // 0x44(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HeightCheckMargin;                                 // 0x48(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E0F[0x94];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAvoidanceManager* GetDefaultObj();

	void RegisterMovementComponent(class UMovementComponent* MovementComp, float* AvoidanceWeight, bool ReturnValue);
	void GetObjectCount(int32 ReturnValue);
	void GetNewAvoidanceUID(int32 ReturnValue);
	void GetAvoidanceVelocityForComponent(class UMovementComponent* MovementComp, const struct FVector& ReturnValue);
};

// 0x48 (0x70 - 0x28)
// Class Engine.NavCollisionBase
class UNavCollisionBase : public UObject
{
public:
	uint8                                        bIsDynamicObstacle : 1;                            // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E10[0x47];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNavCollisionBase* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.NavigationDataChunk
class UNavigationDataChunk : public UObject
{
public:
	class FName                                  NavigationDataName;                                // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UNavigationDataChunk* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.AmbientSound
class AAmbientSound : public AActor
{
public:
	class UAudioComponent*                       AudioComponent;                                    // 0x4C8(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_2E13[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_1F5 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bOverrideAutoplay : 1;                             // Mask: 0x2, PropSize: 0x10x4D4(0x1)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E14[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AAmbientSound* GetDefaultObj();

	void Stop();
	float Play();
	void FadeOut(float* FadeOutDuration, float* FadeVolumeLevel);
	void FadeIn(float* FadeInDuration, float* FadeVolumeLevel);
	void AdjustVolume(float* AdjustVolumeDuration, float* AdjustVolumeLevel);
};

// 0x0 (0x1D8 - 0x1D8)
// Class Engine.AimOffsetBlendSpace
class UAimOffsetBlendSpace : public UBlendSpace
{
public:

	static class UClass* StaticClass();
	static class UAimOffsetBlendSpace* GetDefaultObj();

};

// 0x8 (0x1E0 - 0x1D8)
// Class Engine.BlendSpace1D
class UBlendSpace1D : public UBlendSpace
{
public:
	bool                                         bScaleAnimation;                                   // 0x1D8(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E16[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBlendSpace1D* GetDefaultObj();

};

// 0x0 (0x1E0 - 0x1E0)
// Class Engine.AimOffsetBlendSpace1D
class UAimOffsetBlendSpace1D : public UBlendSpace1D
{
public:

	static class UClass* StaticClass();
	static class UAimOffsetBlendSpace1D* GetDefaultObj();

};

// 0x108 (0x140 - 0x38)
// Class Engine.AnimationSettings
class UAnimationSettings : public UDeveloperSettings
{
public:
	int32                                        CompressCommandletVersion;                         // 0x38(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E17[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        KeyEndEffectorsMatchNameArray;                     // 0x40(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForceRecompression;                                // 0x50(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBelowThreshold;                              // 0x51(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFirstRecompressUsingCurrentOrDefault;             // 0x52(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRaiseMaxErrorToExisting;                          // 0x53(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnablePerformanceLog;                             // 0x54(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bStripAnimationDataOnDedicatedServer;              // 0x55(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	bool                                         bTickAnimationOnSkeletalMeshInit;                  // 0x56(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E19[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimecodeCustomAttributeNameSettings  BoneTimecodeCustomAttributeNameSettings;           // 0x58(0x38)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	TArray<struct FCustomAttributeSetting>       BoneCustomAttributesNames;                         // 0x90(0x10)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<class FString>                        BoneNamesWithCustomAttributes;                     // 0xA0(0x10)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TMap<class FName, enum class ECustomAttributeBlendType> AttributeBlendModes;                               // 0xB0(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECustomAttributeBlendType         DefaultAttributeBlendMode;                         // 0x100(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E1C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        TransformAttributeNames;                           // 0x108(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UUserDefinedStruct>> UserDefinedStructAttributes;                       // 0x118(0x10)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FMirrorFindReplaceExpression>  MirrorFindReplaceExpressions;                      // 0x128(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFrameRate                            DefaultFrameRate;                                  // 0x138(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimationSettings* GetDefaultObj();

	void GetBoneCustomAttributeNamesToImport(const TArray<class FString>& ReturnValue);
};

// 0x0 (0xC0 - 0xC0)
// Class Engine.AnimBlueprintGeneratedStruct
class UAnimBlueprintGeneratedStruct : public UScriptStruct
{
public:

	static class UClass* StaticClass();
	static class UAnimBlueprintGeneratedStruct* GetDefaultObj();

};

// 0x270 (0x5E0 - 0x370)
// Class Engine.AnimBlueprintGeneratedClass
class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	uint8                                        Pad_2E1E[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBakedAnimationStateMachine>   BakedStateMachines;                                // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeleton*                             TargetSkeleton;                                    // 0x388(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	TArray<struct FAnimNotifyEvent>              AnimNotifies;                                      // 0x390(0x10)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TMap<class FName, struct FCachedPoseIndices> OrderedSavedPoseIndicesMap;                        // 0x3A0(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E1F[0x80];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          SyncGroupNames;                                    // 0x470(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FGraphAssetPlayerInformation> GraphAssetPlayerInformation;                       // 0x480(0x50)(Edit, ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst)
	TMap<class FName, struct FAnimGraphBlendOptions> GraphBlendOptions;                                 // 0x4D0(0x50)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAnimNodeData>                 AnimNodeData;                                      // 0x520(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	TMap<class UScriptStruct*, struct FAnimNodeStructData> NodeTypeMap;                                       // 0x530(0x50)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E23[0x60];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimBlueprintGeneratedClass* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.AnimBoneCompressionCodec
class UAnimBoneCompressionCodec : public UObject
{
public:
	class FString                                Description;                                       // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UAnimBoneCompressionCodec* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.AnimBoneCompressionSettings
class UAnimBoneCompressionSettings : public UObject
{
public:
	TArray<class UAnimBoneCompressionCodec*>     Codecs;                                            // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimBoneCompressionSettings* GetDefaultObj();

};

// 0x230 (0x258 - 0x28)
// Class Engine.AnimClassData
class UAnimClassData : public UObject
{
public:
	uint8                                        Pad_2E26[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBakedAnimationStateMachine>   BakedStateMachines;                                // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeleton*                             TargetSkeleton;                                    // 0x40(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	TArray<struct FAnimNotifyEvent>              AnimNotifies;                                      // 0x48(0x10)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TMap<class FName, struct FCachedPoseIndices> OrderedSavedPoseIndicesMap;                        // 0x58(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAnimBlueprintFunction>        AnimBlueprintFunctions;                            // 0xA8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAnimBlueprintFunctionData>    AnimBlueprintFunctionData;                         // 0xB8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, EditConst)
	TArray<FFieldPathProperty_>                  AnimNodeProperties;                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E27[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  LinkedAnimGraphNodeProperties;                     // 0xE8(0x10)(ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2E28[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  LinkedAnimLayerNodeProperties;                     // 0x108(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2E29[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  PreUpdateNodeProperties;                           // 0x128(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E2A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  DynamicResetNodeProperties;                        // 0x148(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E2C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  StateMachineNodeProperties;                        // 0x168(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E2E[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<FFieldPathProperty_>                  InitializationNodeProperties;                      // 0x188(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E31[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<class FName, struct FGraphAssetPlayerInformation> GraphNameAssetPlayers;                             // 0x1A8(0x50)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          SyncGroupNames;                                    // 0x1F8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FAnimGraphBlendOptions> GraphBlendOptions;                                 // 0x208(0x50)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimClassData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimClassInterface
class IAnimClassInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnimClassInterface* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Engine.AnimCompositeBase
class UAnimCompositeBase : public UAnimSequenceBase
{
public:

	static class UClass* StaticClass();
	static class UAnimCompositeBase* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class Engine.AnimComposite
class UAnimComposite : public UAnimCompositeBase
{
public:
	struct FAnimTrack                            AnimationTrack;                                    // 0xB0(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimComposite* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.AnimCompress
class UAnimCompress : public UAnimBoneCompressionCodec
{
public:
	uint8                                        bNeedsSkeleton : 1;                                // Mask: 0x1, PropSize: 0x10x38(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FB : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E36[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAnimationCompressionFormat       TranslationCompressionFormat;                      // 0x3C(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAnimationCompressionFormat       RotationCompressionFormat;                         // 0x3D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAnimationCompressionFormat       ScaleCompressionFormat;                            // 0x3E(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E38[0x1];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimCompress* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimCompress_BitwiseCompressOnly
class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
{
public:

	static class UClass* StaticClass();
	static class UAnimCompress_BitwiseCompressOnly* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimCompress_LeastDestructive
class UAnimCompress_LeastDestructive : public UAnimCompress_BitwiseCompressOnly
{
public:

	static class UClass* StaticClass();
	static class UAnimCompress_LeastDestructive* GetDefaultObj();

};

// 0x20 (0x60 - 0x40)
// Class Engine.AnimCompress_RemoveLinearKeys
class UAnimCompress_RemoveLinearKeys : public UAnimCompress
{
public:
	float                                        MaxPosDiff;                                        // 0x40(0x4)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAngleDiff;                                      // 0x44(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxScaleDiff;                                      // 0x48(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxEffectorDiff;                                   // 0x4C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinEffectorDiff;                                   // 0x50(0x4)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        EffectorDiffSocket;                                // 0x54(0x4)(Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ParentKeyScale;                                    // 0x58(0x4)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRetarget : 1;                                     // Mask: 0x1, PropSize: 0x10x5C(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bActuallyFilterLinearKeys : 1;                     // Mask: 0x2, PropSize: 0x10x5C(0x1)(BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E3A[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimCompress_RemoveLinearKeys* GetDefaultObj();

};

// 0x78 (0xD8 - 0x60)
// Class Engine.AnimCompress_PerTrackCompression
class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
{
public:
	float                                        MaxZeroingThreshold;                               // 0x60(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxPosDiffBitwise;                                 // 0x64(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAngleDiffBitwise;                               // 0x68(0x4)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxScaleDiffBitwise;                               // 0x6C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EAnimationCompressionFormat> AllowedRotationFormats;                            // 0x70(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EAnimationCompressionFormat> AllowedTranslationFormats;                         // 0x80(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EAnimationCompressionFormat> AllowedScaleFormats;                               // 0x90(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bResampleAnimation : 1;                            // Mask: 0x1, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E3F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ResampledFramerate;                                // 0xA4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinKeysForResampling;                              // 0xA8(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAdaptiveError : 1;                             // Mask: 0x1, PropSize: 0x10xAC(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseOverrideForEndEffectors : 1;                   // Mask: 0x2, PropSize: 0x10xAC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_1FF : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E40[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TrackHeightBias;                                   // 0xB0(0x4)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ParentingDivisor;                                  // 0xB4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ParentingDivisorExponent;                          // 0xB8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseAdaptiveError2 : 1;                            // Mask: 0x1, PropSize: 0x10xBC(0x1)(BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_200 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E43[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RotationErrorSourceRatio;                          // 0xC0(0x4)(Edit, ConstParm, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TranslationErrorSourceRatio;                       // 0xC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScaleErrorSourceRatio;                             // 0xC8(0x4)(ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxErrorPerTrackRatio;                             // 0xCC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PerturbationProbeSize;                             // 0xD0(0x4)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E44[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimCompress_PerTrackCompression* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Engine.AnimCompress_RemoveEverySecondKey
class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
{
public:
	int32                                        MinKeys;                                           // 0x40(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bStartAtSecondKey : 1;                             // Mask: 0x1, PropSize: 0x10x44(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E45[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimCompress_RemoveEverySecondKey* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class Engine.AnimCompress_RemoveTrivialKeys
class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
{
public:
	float                                        MaxPosDiff;                                        // 0x40(0x4)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAngleDiff;                                      // 0x44(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxScaleDiff;                                      // 0x48(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E46[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimCompress_RemoveTrivialKeys* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimCurveCompressionCodec
class UAnimCurveCompressionCodec : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAnimCurveCompressionCodec* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimCurveCompressionCodec_CompressedRichCurve
class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
{
public:

	static class UClass* StaticClass();
	static class UAnimCurveCompressionCodec_CompressedRichCurve* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimCurveCompressionCodec_UniformIndexable
class UAnimCurveCompressionCodec_UniformIndexable : public UAnimCurveCompressionCodec
{
public:

	static class UClass* StaticClass();
	static class UAnimCurveCompressionCodec_UniformIndexable* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimCurveCompressionCodec_UniformlySampled
class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
{
public:

	static class UClass* StaticClass();
	static class UAnimCurveCompressionCodec_UniformlySampled* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.AnimCurveCompressionSettings
class UAnimCurveCompressionSettings : public UObject
{
public:
	class UAnimCurveCompressionCodec*            Codec;                                             // 0x28(0x8)(Edit, ConstParm, Parm, ReturnParm, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimCurveCompressionSettings* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class Engine.AnimDataModel
class UAnimDataModel : public UObject
{
public:
	uint8                                        Pad_2E47[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        BracketCounter;                                    // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E48[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            ModifiedEventDynamic;                              // 0x38(0x10)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E49[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoneAnimationTrack>           BoneAnimationTracks;                               // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PlayLength;                                        // 0x70(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FFrameRate                            FrameRate;                                         // 0x74(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	int32                                        NumberOfFrames;                                    // 0x7C(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumberOfKeys;                                      // 0x80(0x4)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAnimationCurveData                   CurveData;                                         // 0x88(0x20)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FAnimatedBoneAttribute>        AnimatedBoneAttributes;                            // 0xA8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPopulated;                                        // 0xB8(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4B[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimDataModel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimMetaData
class UAnimMetaData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAnimMetaData* GetDefaultObj();

};

// 0x140 (0x1F0 - 0xB0)
// Class Engine.AnimMontage
class UAnimMontage : public UAnimCompositeBase
{
public:
	enum class EMontageBlendMode                 BlendModeIn;                                       // 0xB0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMontageBlendMode                 BlendModeOut;                                      // 0xB1(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E50[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAlphaBlend                           BlendIn;                                           // 0xB8(0x30)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FAlphaBlend                           BlendOut;                                          // 0xE8(0x30)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTriggerTime;                               // 0x118(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  SyncGroup;                                         // 0x11C(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        SyncSlotIndex;                                     // 0x124(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMarkerSyncData                       MarkerData;                                        // 0x128(0x20)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCompositeSection>             CompositeSections;                                 // 0x148(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSlotAnimationTrack>           SlotAnimTracks;                                    // 0x158(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableRootMotionTranslation;                      // 0x168(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableRootMotionRotation;                         // 0x169(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableAutoBlendOut;                               // 0x16A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E51[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UBlendProfile*                         BlendProfileIn;                                    // 0x170(0x8)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBlendProfile*                         BlendProfileOut;                                   // 0x178(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ERootMotionRootLock               RootMotionRootLock;                                // 0x180(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E52[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBranchingPointMarker>         BranchingPointMarkers;                             // 0x188(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                BranchingPointStateNotifyIndices;                  // 0x198(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTimeStretchCurve                     TimeStretchCurve;                                  // 0x1A8(0x28)(Edit, Net, OutParm, Transient, EditConst)
	class FName                                  TimeStretchCurveName;                              // 0x1D0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bClientPlayWhenNotRendered : 1;                    // Mask: 0x1, PropSize: 0x10x1D8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bForceTickPoseAndServerUpdateMesh : 1;             // Mask: 0x2, PropSize: 0x10x1D8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        bAnimPauseOnFinish : 1;                            // Mask: 0x4, PropSize: 0x10x1D8(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_201 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E53[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          AnimationTags;                                     // 0x1E0(0x10)(Edit, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimMontage* GetDefaultObj();

	class FName IsValidSectionName(bool ReturnValue);
	void GetSectionName(int32 SectionIndex, class FName ReturnValue);
	class FName GetSectionIndex(int32 ReturnValue);
	void GetNumSections(int32 ReturnValue);
	void GetDefaultBlendOutTime(float ReturnValue);
	void GetDefaultBlendInTime(float ReturnValue);
	void GetBlendOutArgs(const struct FAlphaBlendArgs& ReturnValue);
	void GetBlendInArgs(const struct FAlphaBlendArgs& ReturnValue);
	float CreateSlotAnimationAsDynamicMontage_WithBlendSettings(class UAnimSequenceBase* Asset, int32* LoopCount, class UAnimMontage* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimNotifyLibrary
class UAnimNotifyLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyLibrary* GetDefaultObj();

	void NotifyStateReachedEnd(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimNotifyMirrorInspectionLibrary
class UAnimNotifyMirrorInspectionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyMirrorInspectionLibrary* GetDefaultObj();

	void IsTriggeredByMirroredAnimation(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
	void GetMirrorDataTable(struct FAnimNotifyEventReference* EventReference, class UMirrorDataTable* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimNotifyStateMachineInspectionLibrary
class UAnimNotifyStateMachineInspectionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyStateMachineInspectionLibrary* GetDefaultObj();

	class UAnimInstance* IsTriggeredByStateMachine(struct FAnimNotifyEventReference* EventReference, class FName StateMachineName, bool ReturnValue);
	class FName IsTriggeredByStateInStateMachine(struct FAnimNotifyEventReference* EventReference, class FName StateMachineName, bool ReturnValue);
	class FName IsTriggeredByState(struct FAnimNotifyEventReference* EventReference, bool ReturnValue);
};

// 0x0 (0x30 - 0x30)
// Class Engine.AnimNotifyState_DisableRootMotion
class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_DisableRootMotion* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class Engine.AnimNotifyState_TimedParticleEffect
class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
{
public:
	class UParticleSystem*                       PSTemplate;                                        // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  SocketName;                                        // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               LocationOffset;                                    // 0x40(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              RotationOffset;                                    // 0x58(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bDestroyAtEnd;                                     // 0x70(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E60[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotifyState_TimedParticleEffect* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class Engine.AnimNotifyState_Trail
class UAnimNotifyState_Trail : public UAnimNotifyState
{
public:
	class UParticleSystem*                       PSTemplate;                                        // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  FirstSocketName;                                   // 0x38(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SecondSocketName;                                  // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETrailWidthMode                   WidthScaleMode;                                    // 0x48(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E62[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  WidthScaleCurve;                                   // 0x4C(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRecycleSpawnedSystems : 1;                        // Mask: 0x1, PropSize: 0x10x54(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E63[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotifyState_Trail* GetDefaultObj();

	class UAnimSequenceBase* OverridePSTemplate(class UParticleSystem* ReturnValue);
};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimNotify_PauseClothingSimulation
class UAnimNotify_PauseClothingSimulation : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_PauseClothingSimulation* GetDefaultObj();

};

// 0x28 (0x68 - 0x40)
// Class Engine.AnimNotify_PlaySound
class UAnimNotify_PlaySound : public UAnimNotify
{
public:
	class USoundBase*                            Sound;                                             // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x48(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x4C(0x4)(ConstParm, BlueprintVisible, OutParm, Config, EditConst, InstancedReference)
	uint8                                        bFollow : 1;                                       // Mask: 0x1, PropSize: 0x10x50(0x1)(ConstParm, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_203 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E64[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AttachName;                                        // 0x54(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        PercentChanceToPlay;                               // 0x5C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bPawnIgnoreInFPV;                                  // 0x60(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPawnIgnoreInTPV;                                  // 0x61(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreForLocallyControlled;                       // 0x62(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoFollow;                                         // 0x63(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreIfMeshHidden;                               // 0x64(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreOwnerAttachedSoundMultiplier;               // 0x65(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E66[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimNotify_PlaySound* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimNotify_ResetClothingSimulation
class UAnimNotify_ResetClothingSimulation : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ResetClothingSimulation* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimNotify_ResetDynamics
class UAnimNotify_ResetDynamics : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ResetDynamics* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Engine.AnimNotify_ResumeClothingSimulation
class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ResumeClothingSimulation* GetDefaultObj();

};

// 0x130 (0x1E0 - 0xB0)
// Class Engine.AnimSequence
class UAnimSequence : public UAnimSequenceBase
{
public:
	class UAnimBoneCompressionSettings*          BoneCompressionSettings;                           // 0xB0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	class UAnimCurveCompressionSettings*         CurveCompressionSettings;                          // 0xB8(0x8)(Parm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_2E68[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	enum class EAdditiveAnimationType            AdditiveAnimType;                                  // 0x130(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	enum class EAdditiveBasePoseType             RefPoseType;                                       // 0x131(0x1)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E69[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        RefFrameIndex;                                     // 0x134(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         RefPoseSeq;                                        // 0x138(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RetargetSource;                                    // 0x140(0x8)(Edit, ConstParm, OutParm, ReturnParm, Transient, DuplicateTransient)
	TArray<struct FTransform>                    RetargetSourceAssetReferencePose;                  // 0x148(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAnimInterpolationType            Interpolation;                                     // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, DuplicateTransient)
	bool                                         bEnableRootMotion;                                 // 0x159(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	enum class ERootMotionRootLock               RootMotionRootLock;                                // 0x15A(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceRootLock;                                    // 0x15B(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseNormalizedRootMotionScale;                     // 0x15C(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bRootMotionSettingsCopiedFromMontage;              // 0x15D(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E6B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FAnimSyncMarker>               AuthoredSyncMarkers;                               // 0x160(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2E6C[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FFrameRate                            TargetFrameRate;                                   // 0x180(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	struct FPerPlatformFrameRate                 PlatformTargetFrameRate;                           // 0x188(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, DuplicateTransient)
	TMap<struct FAnimationAttributeIdentifier, struct FAttributeCurve> AttributeCurves;                                   // 0x190(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimSequence* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class Engine.AnimSet
class UAnimSet : public UObject
{
public:
	uint8                                        bAnimRotationOnly : 1;                             // Mask: 0x1, PropSize: 0x10x28(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_204 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2E6E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TrackBoneNames;                                    // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAnimSetMeshLinkup>            LinkupCache;                                       // 0x40(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                BoneUseAnimTranslation;                            // 0x50(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<uint8>                                ForceUseMeshTranslation;                           // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          UseTranslationBoneNames;                           // 0x70(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          ForceMeshTranslationBoneNames;                     // 0x80(0x10)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  PreviewSkelMeshName;                               // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  BestRatioSkelMeshName;                             // 0x98(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E6F[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimSet* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Engine.AnimSingleNodeInstance
class UAnimSingleNodeInstance : public UAnimInstance
{
public:
	class UAnimationAsset*                       CurrentAsset;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FDelegateProperty_                           PostEvaluateAnimEvent;                             // 0x350(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAnimSingleNodeInstance* GetDefaultObj();

	void StopAnim();
	bool SetReverse();
	bool SetPreviewCurveOverride(class FName PoseName, float* Value);
	float SetPositionWithPreviousTime(float* InPosition, bool* bFireNotifies);
	void SetPosition(float* InPosition, bool* bFireNotifies);
	float SetPlayRate();
	void SetPlaying(bool* bIsPlaying);
	void SetMirrorDataTable(class UMirrorDataTable** MirrorDataTable);
	bool SetLooping();
	void SetBlendSpacePosition(struct FVector* InPosition);
	float SetAnimationAsset(class UAnimationAsset** NewAsset);
	float PlayAnim();
	void GetMirrorDataTable(class UMirrorDataTable* ReturnValue);
	void GetLength(float ReturnValue);
	void GetAnimationAsset(class UAnimationAsset* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimStateMachineTypes
class UAnimStateMachineTypes : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAnimStateMachineTypes* GetDefaultObj();

};

// 0x40 (0xF0 - 0xB0)
// Class Engine.AnimStreamable
class UAnimStreamable : public UAnimSequenceBase
{
public:
	int32                                        NumberOfKeys;                                      // 0xB0(0x4)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAnimInterpolationType            Interpolation;                                     // 0xB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2E8F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  RetargetSource;                                    // 0xB8(0x8)(Edit, ConstParm, OutParm, ReturnParm, Transient, DuplicateTransient)
	struct FFrameRate                            SamplingFrameRate;                                 // 0xC0(0x8)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E90[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UAnimBoneCompressionSettings*          BoneCompressionSettings;                           // 0xD8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	class UAnimCurveCompressionSettings*         CurveCompressionSettings;                          // 0xE0(0x8)(Parm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	bool                                         bEnableRootMotion;                                 // 0xE8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	enum class ERootMotionRootLock               RootMotionRootLock;                                // 0xE9(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceRootLock;                                    // 0xEA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseNormalizedRootMotionScale;                     // 0xEB(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_2E91[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimStreamable* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.AssetMappingTable
class UAssetMappingTable : public UObject
{
public:
	TArray<struct FAssetMapping>                 MappedAssets;                                      // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAssetMappingTable* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationAttributeIdentifierExtensions
class UAnimationAttributeIdentifierExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimationAttributeIdentifierExtensions* GetDefaultObj();

	struct FAnimationAttributeIdentifier IsValid(bool ReturnValue);
};

// 0x400 (0x428 - 0x28)
// Class Engine.Skeleton
class USkeleton : public UObject
{
public:
	uint8                                        Pad_2E98[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoneNode>                     BoneTree;                                          // 0x38(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E99[0x118];                                   // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 VirtualBoneGuid;                                   // 0x160(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVirtualBone>                  VirtualBones;                                      // 0x170(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class USkeleton>>      CompatibleSkeletons;                               // 0x180(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class USkeletalMeshSocket*>           Sockets;                                           // 0x190(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_2E9A[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	struct FSmartNameContainer                   SmartNames;                                        // 0x1F0(0x50)(EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E9B[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UBlendProfile*>                 BlendProfiles;                                     // 0x270(0x10)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAnimSlotGroup>                SlotGroups;                                        // 0x280(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E9C[0x188];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x418(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class USkeleton* GetDefaultObj();

	class FName GetBlendProfile(class UBlendProfile* ReturnValue);
	void AddCompatibleSkeleton(class USkeleton* SourceSkeleton);
};

// 0x28 (0x50 - 0x28)
// Class Engine.BlendProfile
class UBlendProfile : public UObject
{
public:
	uint8                                        Pad_2E9D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             OwningSkeleton;                                    // 0x30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBlendProfileBoneEntry>        ProfileEntries;                                    // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EBlendProfileMode                 Mode;                                              // 0x48(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2E9F[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBlendProfile* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.BoneMaskFilter
class UBoneMaskFilter : public UObject
{
public:
	TArray<struct FInputBlendPose>               BlendPoses;                                        // 0x28(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UBoneMaskFilter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.CachedAnimDataLibrary
class UCachedAnimDataLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UCachedAnimDataLibrary* GetDefaultObj();

	struct FCachedAnimStateData StateMachine_IsStateRelevant(bool ReturnValue);
	struct FCachedAnimStateData StateMachine_GetLocalWeight(float ReturnValue);
	struct FCachedAnimStateData StateMachine_GetGlobalWeight(float ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.AnimationCurveIdentifierExtensions
class UAnimationCurveIdentifierExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimationCurveIdentifierExtensions* GetDefaultObj();

	struct FAnimationCurveIdentifier IsValid(bool ReturnValue);
	struct FAnimationCurveIdentifier GetType(enum class ERawCurveTrackTypes ReturnValue);
	struct FAnimationCurveIdentifier GetName(class FName ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.CurveSourceInterface
class ICurveSourceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICurveSourceInterface* GetDefaultObj();

	class FName GetCurveValue(float ReturnValue);
	void GetCurves(const TArray<struct FNamedCurveValue>& OutValues);
	void GetBindingName(class FName ReturnValue);
};

// 0x88 (0xB0 - 0x28)
// Class Engine.DataTable
class UDataTable : public UObject
{
public:
	class UScriptStruct*                         RowStruct;                                         // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EAF[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	uint8                                        bStripFromClientBuilds : 1;                        // Mask: 0x1, PropSize: 0x10x80(0x1)(Edit, ExportObject, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreExtraFields : 1;                            // Mask: 0x2, PropSize: 0x10x80(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMissingFields : 1;                          // Mask: 0x4, PropSize: 0x10x80(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_205 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2EB0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ImportKeyField;                                    // 0x88(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EB2[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataTable* GetDefaultObj();

};

// 0xF0 (0x1A0 - 0xB0)
// Class Engine.MirrorDataTable
class UMirrorDataTable : public UDataTable
{
public:
	TArray<struct FMirrorFindReplaceExpression>  MirrorFindReplaceExpressions;                      // 0xB0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAxis                             MirrorAxis;                                        // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EB4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             Skeleton;                                          // 0xC8(0x8)(ExportObject, Net, EditFixedSize, Transient, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_2EB5[0xD0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMirrorDataTable* GetDefaultObj();

};

// 0x150 (0x178 - 0x28)
// Class Engine.NodeMappingContainer
class UNodeMappingContainer : public UObject
{
public:
	TMap<class FName, struct FNodeItem>          SourceItems;                                       // 0x28(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FNodeItem>          TargetItems;                                       // 0x78(0x50)(Edit, BlueprintVisible, ExportObject, Net, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, class FName>               SourceToTarget;                                    // 0xC8(0x50)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UObject>                SourceAsset;                                       // 0x118(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TSoftObjectPtr<class UObject>                TargetAsset;                                       // 0x148(0x30)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UNodeMappingContainer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NodeMappingProviderInterface
class INodeMappingProviderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INodeMappingProviderInterface* GetDefaultObj();

};

// 0x80 (0x100 - 0x80)
// Class Engine.PoseAsset
class UPoseAsset : public UAnimationAsset
{
public:
	struct FPoseDataContainer                    PoseContainer;                                     // 0x80(0x60)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAdditivePose;                                     // 0xE0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EB7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        BasePoseIndex;                                     // 0xE4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  RetargetSource;                                    // 0xE8(0x8)(Edit, ConstParm, OutParm, ReturnParm, Transient, DuplicateTransient)
	TArray<struct FTransform>                    RetargetSourceAssetReferencePose;                  // 0xF0(0x10)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPoseAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PreviewCollectionInterface
class IPreviewCollectionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IPreviewCollectionInterface* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Engine.PreviewMeshCollection
class UPreviewMeshCollection : public UDataAsset
{
public:
	uint8                                        Pad_2EB8[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             Skeleton;                                          // 0x38(0x8)(ExportObject, Net, EditFixedSize, Transient, EditConst, GlobalConfig, DuplicateTransient)
	TArray<struct FPreviewMeshCollectionEntry>   SkeletalMeshes;                                    // 0x40(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UPreviewMeshCollection* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.Rig
class URig : public UObject
{
public:
	uint8                                        Pad_2EBB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTransformBase>                TransformBases;                                    // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNode>                         Nodes;                                             // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class URig* GetDefaultObj();

};

// 0x88 (0x550 - 0x4C8)
// Class Engine.SkeletalMeshActor
class ASkeletalMeshActor : public AActor
{
public:
	uint8                                        Pad_2EBD[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bShouldDoAnimNotifies : 1;                         // Mask: 0x1, PropSize: 0x10x4D0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_206 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2EBE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x4D8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	class USkeletalMesh*                         ReplicatedMesh;                                    // 0x4E0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPhysicsAsset*                         ReplicatedPhysAsset;                               // 0x4E8(0x8)(Edit, ConstParm, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ReplicatedMaterial0;                               // 0x4F0(0x8)(Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    ReplicatedMaterial1;                               // 0x4F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EBF[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASkeletalMeshActor* GetDefaultObj();

	void OnRep_ReplicatedPhysAsset();
	void OnRep_ReplicatedMesh();
	void OnRep_ReplicatedMaterial1();
	void OnRep_ReplicatedMaterial0();
};

// 0x28 (0xD0 - 0xA8)
// Class Engine.AnimBlueprint
class UAnimBlueprint : public UBlueprint
{
public:
	uint8                                        Pad_2EC0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             TargetSkeleton;                                    // 0xB0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	TArray<struct FAnimGroupInfo>                Groups;                                            // 0xB8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	bool                                         bIsTemplate;                                       // 0xC8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, DuplicateTransient)
	bool                                         bUseMultiThreadedAnimationUpdate;                  // 0xC9(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bWarnAboutBlueprintUsage;                          // 0xCA(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableLinkedAnimLayerInstanceSharing : 1;         // Mask: 0x1, PropSize: 0x10xCB(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC1[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAnimBlueprint* GetDefaultObj();

};

// 0x4C0 (0x4E8 - 0x28)
// Class Engine.AssetManager
class UAssetManager : public UObject
{
public:
	uint8                                        Pad_2EC4[0x308];                                   // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       ObjectReferenceList;                               // 0x330(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsGlobalAsyncScanEnvironment;                     // 0x340(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldGuessTypeAndName;                           // 0x341(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldUseSynchronousLoad;                         // 0x342(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsLoadingFromPakFiles;                            // 0x343(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldAcquireMissingChunksOnLoad;                 // 0x344(0x1)(Edit, ConstParm, Net, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyCookProductionAssets;                         // 0x345(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumBulkScanRequests;                               // 0x348(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsPrimaryAssetDirectoryCurrent;                   // 0x34C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsManagementDatabaseCurrent;                      // 0x34D(0x1)(BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateManagementDatabaseAfterScan;                // 0x34E(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeOnlyOnDiskAssets;                          // 0x34F(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, SubobjectReference)
	bool                                         bHasCompletedInitialScan;                          // 0x350(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumberOfSpawnedNotifications;                      // 0x354(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC8[0x190];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAssetManager* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class Engine.AsyncActionLoadPrimaryAssetBase
class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_2EC9[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAsyncActionLoadPrimaryAssetBase* GetDefaultObj();

};

// 0x10 (0x88 - 0x78)
// Class Engine.AsyncActionLoadPrimaryAsset
class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x78(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UAsyncActionLoadPrimaryAsset* GetDefaultObj();

	class UObject* AsyncLoadPrimaryAsset(struct FPrimaryAssetId* PrimaryAsset, TArray<class FName>* LoadBundles, class UAsyncActionLoadPrimaryAsset* ReturnValue);
};

// 0x10 (0x88 - 0x78)
// Class Engine.AsyncActionLoadPrimaryAssetClass
class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x78(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UAsyncActionLoadPrimaryAssetClass* GetDefaultObj();

	class UObject* AsyncLoadPrimaryAssetClass(struct FPrimaryAssetId* PrimaryAsset, TArray<class FName>* LoadBundles, class UAsyncActionLoadPrimaryAssetClass* ReturnValue);
};

// 0x10 (0x88 - 0x78)
// Class Engine.AsyncActionLoadPrimaryAssetList
class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x78(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UAsyncActionLoadPrimaryAssetList* GetDefaultObj();

	class UObject* AsyncLoadPrimaryAssetList(TArray<struct FPrimaryAssetId>* PrimaryAssetList, TArray<class FName>* LoadBundles, class UAsyncActionLoadPrimaryAssetList* ReturnValue);
};

// 0x10 (0x88 - 0x78)
// Class Engine.AsyncActionLoadPrimaryAssetClassList
class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x78(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UAsyncActionLoadPrimaryAssetClassList* GetDefaultObj();

	class UObject* AsyncLoadPrimaryAssetClassList(TArray<struct FPrimaryAssetId>* PrimaryAssetList, TArray<class FName>* LoadBundles, class UAsyncActionLoadPrimaryAssetClassList* ReturnValue);
};

// 0x10 (0x88 - 0x78)
// Class Engine.AsyncActionChangePrimaryAssetBundles
class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x78(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)

	static class UClass* StaticClass();
	static class UAsyncActionChangePrimaryAssetBundles* GetDefaultObj();

	class UObject* AsyncChangeBundleStateForPrimaryAssetList(TArray<struct FPrimaryAssetId>* PrimaryAssetList, TArray<class FName>* AddBundles, TArray<class FName>* RemoveBundles, class UAsyncActionChangePrimaryAssetBundles* ReturnValue);
	class UObject* AsyncChangeBundleStateForMatchingPrimaryAssets(TArray<class FName>* NewBundles, TArray<class FName>* OldBundles, class UAsyncActionChangePrimaryAssetBundles* ReturnValue);
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.AtmosphericFog
class AAtmosphericFog : public AInfo
{
public:
	class UAtmosphericFogComponent*              AtmosphericFogComponent;                           // 0x4C8(0x8)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class AAtmosphericFog* GetDefaultObj();

};

// 0xF8 (0x3C0 - 0x2C8)
// Class Engine.SkyAtmosphereComponent
class USkyAtmosphereComponent : public USceneComponent
{
public:
	enum class ESkyAtmosphereTransformMode       TransformMode;                                     // 0x2C8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BottomRadius;                                      // 0x2CC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                GroundAlbedo;                                      // 0x2D0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AtmosphereHeight;                                  // 0x2D4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MultiScatteringFactor;                             // 0x2D8(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TraceSampleCountScale;                             // 0x2DC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RayleighScatteringScale;                           // 0x2E0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          RayleighScattering;                                // 0x2E4(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RayleighExponentialDistribution;                   // 0x2F4(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MieScatteringScale;                                // 0x2F8(0x4)(BlueprintVisible, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MieScattering;                                     // 0x2FC(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MieAbsorptionScale;                                // 0x30C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MieAbsorption;                                     // 0x310(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MieAnisotropy;                                     // 0x320(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MieExponentialDistribution;                        // 0x324(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OtherAbsorptionScale;                              // 0x328(0x4)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          OtherAbsorption;                                   // 0x32C(0x10)(EditFixedSize, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTentDistribution                     OtherTentDistribution;                             // 0x33C(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SkyLuminanceFactor;                                // 0x348(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AerialPespectiveViewDistanceScale;                 // 0x358(0x4)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        HeightFogContribution;                             // 0x35C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TransmittanceMinLightElevationAngle;               // 0x360(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AerialPerspectiveStartDepth;                       // 0x364(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF9[0x40];                                    // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 bStaticLightingBuiltGUID;                          // 0x3A8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EFA[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkyAtmosphereComponent* GetDefaultObj();

	void SetSkyLuminanceFactor(struct FLinearColor* NewValue);
	void SetRayleighScatteringScale(float* NewValue);
	void SetRayleighScattering(struct FLinearColor* NewValue);
	void SetRayleighExponentialDistribution(float* NewValue);
	void SetOtherAbsorptionScale(float* NewValue);
	void SetOtherAbsorption(struct FLinearColor* NewValue);
	void SetMultiScatteringFactor(float* NewValue);
	void SetMieScatteringScale(float* NewValue);
	void SetMieScattering(struct FLinearColor* NewValue);
	void SetMieExponentialDistribution(float* NewValue);
	void SetMieAnisotropy(float* NewValue);
	void SetMieAbsorptionScale(float* NewValue);
	void SetMieAbsorption(struct FLinearColor* NewValue);
	void SetHeightFogContribution(float* NewValue);
	void SetAtmosphereHeight(float* NewValue);
	void SetAerialPespectiveViewDistanceScale(float* NewValue);
	void ResetAtmosphereLightDirectionOverride(int32* AtmosphereLightIndex);
	void OverrideAtmosphereLightDirection(int32* AtmosphereLightIndex, struct FVector* LightDirection);
	void IsAtmosphereLightDirectionOverriden(int32* AtmosphereLightIndex, bool ReturnValue);
	void GetOverridenAtmosphereLightDirection(int32* AtmosphereLightIndex, const struct FVector& ReturnValue);
	class UDirectionalLightComponent* GetAtmosphereTransmitanceOnGroundAtPlanetTop(const struct FLinearColor& ReturnValue);
};

// 0x60 (0x420 - 0x3C0)
// Class Engine.AtmosphericFogComponent
class UAtmosphericFogComponent : public USkyAtmosphereComponent
{
public:
	struct FLinearColor                          LUT_TintScatter;                                   // 0x3C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          LUT_TintLoss;                                      // 0x3D0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseDayCycle;                                      // 0x3E0(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F04[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UTexture2D*>                    LossTextures;                                      // 0x3E8(0x10)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture2D*>                    ScatterTextures;                                   // 0x3F8(0x10)(Edit, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureRenderTarget2D*                External_ScatterRT;                                // 0x408(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	class UTextureRenderTarget2D*                External_LossRT;                                   // 0x410(0x8)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F05[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAtmosphericFogComponent* GetDefaultObj();

	void SetSunMultiplier(float* NewSunMultiplier);
	void SetStartDistance(float* NewStartDistance);
	void SetPrecomputeParams(float* DensityHeight, int32* MaxScatteringOrder, int32* InscatterAltitudeSampleNum);
	float SetFogTexturesDirectly(class UTexture2D** ScatterTexture0, class UTexture2D** ScatterTexture1, class UTexture2D** LossTexture0, class UTexture2D** LossTexture1);
	float SetFogOverTimeIndices();
	void SetFogMultiplier(float* NewFogMultiplier);
	void SetDistanceScale(float* NewDistanceScale);
	void SetDistanceOffset(float* NewDistanceOffset);
	void SetDensityOffset(float* NewDensityOffset);
	void SetDensityMultiplier(float NewDensityMultiplier);
	void SetDefaultLightColor(const struct FLinearColor& NewLightColor);
	void SetDefaultBrightness(float NewBrightness);
	void SetAltitudeScale(float NewAltitudeScale);
	void DisableSunDisk(bool NewSunDisk);
	void DisableGroundScattering(bool NewGroundScattering);
};

// 0x10 (0x38 - 0x28)
// Class Engine.AudioBus
class UAudioBus : public UObject
{
public:
	uint8                                        Pad_2F07[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAudioBusChannels                 AudioBusChannels;                                  // 0x30(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F08[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAudioBus* GetDefaultObj();

};

// 0x1A8 (0x1E0 - 0x38)
// Class Engine.AudioSettings
class UAudioSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                       DefaultSoundClassName;                             // 0x38(0x20)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       DefaultMediaSoundClassName;                        // 0x58(0x20)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       DefaultSoundConcurrencyName;                       // 0x78(0x20)(Edit, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       DefaultBaseSoundMix;                               // 0x98(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	struct FSoftObjectPath                       VoiPSoundClass;                                    // 0xB8(0x20)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	struct FSoftObjectPath                       MasterSubmix;                                      // 0xD8(0x20)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       BaseDefaultSubmix;                                 // 0xF8(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       ReverbSubmix;                                      // 0x118(0x20)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       EQSubmix;                                          // 0x138(0x20)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	enum class EVoiceSampleRate                  VoiPSampleRate;                                    // 0x158(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EDefaultAudioCompressionType      DefaultAudioCompressionType;                       // 0x15C(0x1)(ExportObject, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F09[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultReverbSendLevel;                            // 0x160(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaximumConcurrentStreams;                          // 0x164(0x4)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        GlobalMinPitchScale;                               // 0x168(0x4)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GlobalMaxPitchScale;                               // 0x16C(0x4)(ConstParm, BlueprintVisible, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAudioQualitySettings>         QualityLevels;                                     // 0x170(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bAllowPlayWhenSilent : 1;                          // Mask: 0x1, PropSize: 0x10x180(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableMasterEQ : 1;                              // Mask: 0x2, PropSize: 0x10x180(0x1)(ConstParm, BlueprintReadOnly, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowCenterChannel3DPanning : 1;                  // Mask: 0x4, PropSize: 0x10x180(0x1)(Edit, ConstParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_207 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2F0A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       NumStoppingSources;                                // 0x184(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPanningMethod                    PanningMethod;                                     // 0x188(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EMonoChannelUpmixMethod           MonoChannelUpmixMethod;                            // 0x189(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F0B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DialogueFilenameFormat;                            // 0x190(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<struct FSoundDebugEntry>              DebugSounds;                                       // 0x1A0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDefaultAudioBusSettings>      DefaultAudioBuses;                                 // 0x1B0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           DefaultSoundClass;                                 // 0x1C0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundClass*                           DefaultMediaSoundClass;                            // 0x1C8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundConcurrency*                     DefaultSoundConcurrency;                           // 0x1D0(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F0C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAudioSettings* GetDefaultObj();

};

// 0x70 (0x588 - 0x518)
// Class Engine.AudioVolume
class AAudioVolume : public AVolume
{
public:
	float                                        Priority;                                          // 0x518(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x51C(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        BitPad_208 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2F14[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FReverbSettings                       Settings;                                          // 0x520(0x20)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	struct FInteriorSettings                     AmbientZoneSettings;                               // 0x540(0x24)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F15[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FAudioVolumeSubmixSendSettings> SubmixSendSettings;                                // 0x568(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FAudioVolumeSubmixOverrideSettings> SubmixOverrideSettings;                            // 0x578(0x10)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AAudioVolume* GetDefaultObj();

	TArray<struct FAudioVolumeSubmixSendSettings> SetSubmixSendSettings();
	TArray<struct FAudioVolumeSubmixOverrideSettings> SetSubmixOverrideSettings();
	struct FReverbSettings SetReverbSettings();
	void SetPriority(float* NewPriority);
	struct FInteriorSettings SetInteriorSettings();
	bool SetEnabled();
	void OnRep_bEnabled();
};

// 0x0 (0x28 - 0x28)
// Class Engine.ActorSoundParameterInterface
class IActorSoundParameterInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IActorSoundParameterInterface* GetDefaultObj();

	TArray<struct FAudioParameter> GetActorSoundParams();
};

// 0x0 (0x30 - 0x30)
// Class Engine.AudioWidgetSubsystem
class UAudioWidgetSubsystem : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class UAudioWidgetSubsystem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SoundParameterControllerInterface
class ISoundParameterControllerInterface : public IAudioParameterControllerInterface
{
public:

	static class UClass* StaticClass();
	static class ISoundParameterControllerInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.AudioParameterConversionStatics
class UAudioParameterConversionStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAudioParameterConversionStatics* GetDefaultObj();

	class FString StringToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
	TArray<class FString> StringArrayToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
	void ObjectToAudioParameter(class FName* Name, class UObject** Object, const struct FAudioParameter& ReturnValue);
	TArray<class UObject*> ObjectArrayToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
	void IntegerToAudioParameter(class FName* Name, int32 Integer, const struct FAudioParameter& ReturnValue);
	TArray<int32> IntegerArrayToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
	void FloatToAudioParameter(class FName* Name, float Float, const struct FAudioParameter& ReturnValue);
	TArray<float> FloatArrayToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
	void BooleanToAudioParameter(class FName* Name, bool Bool, const struct FAudioParameter& ReturnValue);
	TArray<bool> BooleanArrayToAudioParameter(class FName* Name, const struct FAudioParameter& ReturnValue);
};

// 0x8 (0x520 - 0x518)
// Class Engine.BlockingVolume
class ABlockingVolume : public AVolume
{
public:
	bool                                         bAddToBlockingVolumeList;                          // 0x518(0x1)(Edit, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F30[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ABlockingVolume* GetDefaultObj();

	bool OnInterpToggle();
};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintMapLibrary
class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBlueprintMapLibrary* GetDefaultObj();

	void SetMapPropertyByName(class UObject** Object, class FName PropertyName, TMap<int32, int32>* Value);
	TArray<int32> Map_Values();
	int32 Map_Remove(bool ReturnValue);
	TMap<int32, int32> Map_Length(int32 ReturnValue);
	TArray<int32> Map_Keys();
	TMap<int32, int32> Map_IsNotEmpty(bool ReturnValue);
	TMap<int32, int32> Map_IsEmpty(bool ReturnValue);
	int32 Map_Find(int32* Value, bool ReturnValue);
	int32 Map_Contains(bool ReturnValue);
	TMap<int32, int32> Map_Clear();
	int32 Map_Add(int32* Value);
};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintSetLibrary
class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBlueprintSetLibrary* GetDefaultObj();

	void SetSetPropertyByName(class UObject** Object, class FName PropertyName, TSet<int32>* Value);
	TSet<int32> Set_Union();
	TArray<int32> Set_ToArray();
	TSet<int32> Set_RemoveItems(TArray<int32>* Items);
	int32 Set_Remove(bool ReturnValue);
	TSet<int32> Set_Length(int32 ReturnValue);
	TSet<int32> Set_IsNotEmpty(bool ReturnValue);
	TSet<int32> Set_IsEmpty(bool ReturnValue);
	TSet<int32> Set_Intersection();
	TSet<int32> Set_Difference();
	int32 Set_Contains(bool ReturnValue);
	TSet<int32> Set_Clear();
	TArray<int32> Set_AddItems();
	int32 Set_Add();
};

// 0x40 (0x68 - 0x28)
// Class Engine.BookMark
class UBookMark : public UBookmarkBase
{
public:
	struct FVector                               Location;                                          // 0x28(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x40(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	TArray<class FString>                        HiddenLevels;                                      // 0x58(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UBookMark* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Engine.BrushBuilder
class UBrushBuilder : public UObject
{
public:
	class FString                                BitmapFilename;                                    // 0x28(0x10)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                Tooltip;                                           // 0x38(0x10)(ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig)
	uint8                                        NotifyBadParams : 1;                               // Mask: 0x1, PropSize: 0x10x48(0x1)(ConstParm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_209 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_2F5E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       Vertices;                                          // 0x50(0x10)(Edit, ConstParm, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	TArray<struct FBuilderPoly>                  Polys;                                             // 0x60(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, SubobjectReference)
	class FName                                  Layer;                                             // 0x70(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, SubobjectReference)
	uint8                                        MergeCoplanars : 1;                                // Mask: 0x1, PropSize: 0x10x78(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F61[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBrushBuilder* GetDefaultObj();

};

// 0x0 (0x500 - 0x500)
// Class Engine.BrushShape
class ABrushShape : public ABrush
{
public:

	static class UClass* StaticClass();
	static class ABrushShape* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.CameraBlockingVolume
class ACameraBlockingVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ACameraBlockingVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.CameraLensEffectInterface
class ICameraLensEffectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICameraLensEffectInterface* GetDefaultObj();

	void GetPrimaryParticleComponent(class UFXSystemComponent* ReturnValue);
	void GetParticleComponents(const TArray<class UFXSystemComponent*>& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.CameraLensEffectInterfaceClassSupportLibrary
class UCameraLensEffectInterfaceClassSupportLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UCameraLensEffectInterfaceClassSupportLibrary* GetDefaultObj();

	enum class EInterfaceValidResult SetInterfaceClass(class UClass* Class);
	enum class EInterfaceValidResult IsInterfaceValid();
	enum class EInterfaceValidResult IsInterfaceClassValid();
	struct FCameraLensInterfaceClassSupport GetInterfaceClass(class UClass* ReturnValue);
};

// 0x68 (0xB0 - 0x48)
// Class Engine.CameraModifier_CameraShake
class UCameraModifier_CameraShake : public UCameraModifier
{
public:
	TArray<struct FActiveCameraShakeInfo>        ActiveShakes;                                      // 0x48(0x10)(ConstParm, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class UClass*, struct FPooledCameraShakes> ExpiredPooledShakesMap;                            // 0x58(0x50)(ExportObject, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplitScreenShakeScale;                             // 0xA8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F68[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraModifier_CameraShake* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.CameraShakeSourceActor
class ACameraShakeSourceActor : public AActor
{
public:
	class UCameraShakeSourceComponent*           CameraShakeSourceComponent;                        // 0x4C8(0x8)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class ACameraShakeSourceActor* GetDefaultObj();

};

// 0x28 (0x2F0 - 0x2C8)
// Class Engine.CameraShakeSourceComponent
class UCameraShakeSourceComponent : public USceneComponent
{
public:
	enum class ECameraShakeAttenuation           Attenuation;                                       // 0x2C8(0x1)(ExportObject, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F78[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InnerAttenuationRadius;                            // 0x2CC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OuterAttenuationRadius;                            // 0x2D0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F79[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CameraShake;                                       // 0x2D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	bool                                         bAutoStart;                                        // 0x2E0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2F7A[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCameraShakeSourceComponent* GetDefaultObj();

	bool StopAllCameraShakesOfType();
	bool StopAllCameraShakes();
	struct FRotator StartCameraShake(float* Scale);
	void Start();
	void GetAttenuationFactor(struct FVector* Location, float ReturnValue);
};

// 0x8 (0x1E0 - 0x1D8)
// Class Engine.TextureRenderTarget
class UTextureRenderTarget : public UTexture
{
public:
	float                                        TargetGamma;                                       // 0x1D8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithComputeMaterial : 1;                      // Mask: 0x1, PropSize: 0x10x1DC(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F7C[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureRenderTarget* GetDefaultObj();

};

// 0x28 (0x208 - 0x1E0)
// Class Engine.TextureRenderTarget2D
class UTextureRenderTarget2D : public UTextureRenderTarget
{
public:
	int32                                        SizeX;                                             // 0x1E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0x1E4(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	struct FLinearColor                          ClearColor;                                        // 0x1E8(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig)
	enum class ETextureAddress                   AddressX;                                          // 0x1F8(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
	enum class ETextureAddress                   AddressY;                                          // 0x1F9(0x1)(BlueprintVisible, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        bForceLinearGamma : 1;                             // Mask: 0x1, PropSize: 0x10x1FA(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHDR : 1;                                          // Mask: 0x2, PropSize: 0x10x1FA(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference)
	uint8                                        bGPUSharedFlag : 1;                                // Mask: 0x4, PropSize: 0x10x1FA(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference)
	uint8                                        BitPad_20A : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ETextureRenderTargetFormat        RenderTargetFormat;                                // 0x1FB(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, GlobalConfig, InstancedReference)
	uint8                                        bAutoGenerateMips : 1;                             // Mask: 0x1, PropSize: 0x10x1FC(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, DuplicateTransient)
	uint8                                        BitPad_20B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ETextureFilter                    MipsSamplerFilter;                                 // 0x1FD(0x1)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	enum class ETextureAddress                   MipsAddressU;                                      // 0x1FE(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ReturnParm, Config, GlobalConfig)
	enum class ETextureAddress                   MipsAddressV;                                      // 0x1FF(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig)
	enum class EPixelFormat                      OverrideFormat;                                    // 0x200(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F81[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureRenderTarget2D* GetDefaultObj();

};

// 0x28 (0x230 - 0x208)
// Class Engine.CanvasRenderTarget2D
class UCanvasRenderTarget2D : public UTextureRenderTarget2D
{
public:
	FMulticastInlineDelegateProperty_            OnCanvasRenderTargetUpdate;                        // 0x208(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class UWorld>                 World;                                             // 0x218(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	bool                                         bShouldClearRenderTargetOnReceiveUpdate;           // 0x220(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F85[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCanvasRenderTarget2D* GetDefaultObj();

	void UpdateResource();
	int32 ReceiveUpdate();
	int32 GetSize();
	int32 CreateCanvasRenderTarget2D(class UCanvasRenderTarget2D* ReturnValue);
};

// 0x138 (0x170 - 0x38)
// Class Engine.CollisionProfile
class UCollisionProfile : public UDeveloperSettings
{
public:
	TArray<struct FCollisionResponseTemplate>    Profiles;                                          // 0x38(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<struct FCustomChannelSetup>           DefaultChannelResponses;                           // 0x48(0x10)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	TArray<struct FCustomProfile>                EditProfiles;                                      // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	TArray<struct FRedirector>                   ProfileRedirects;                                  // 0x68(0x10)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<struct FRedirector>                   CollisionChannelRedirects;                         // 0x78(0x10)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_2F87[0xE8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCollisionProfile* GetDefaultObj();

};

// 0x20 (0xA0 - 0x80)
// Class Engine.PluginCommandlet
class UPluginCommandlet : public UCommandlet
{
public:
	uint8                                        Pad_2F88[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPluginCommandlet* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class Engine.SmokeTestCommandlet
class USmokeTestCommandlet : public UCommandlet
{
public:

	static class UClass* StaticClass();
	static class USmokeTestCommandlet* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.ComponentDelegateBinding
class UComponentDelegateBinding : public UDynamicBlueprintBinding
{
public:
	TArray<struct FBlueprintComponentDelegateBinding> ComponentDelegateBindings;                         // 0x28(0x10)(EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UComponentDelegateBinding* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ActorComponentInstanceDataTransientOuter
class UActorComponentInstanceDataTransientOuter : public UObject
{
public:

	static class UClass* StaticClass();
	static class UActorComponentInstanceDataTransientOuter* GetDefaultObj();

};

// 0x90 (0x148 - 0xB8)
// Class Engine.ApplicationLifecycleComponent
class UApplicationLifecycleComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            ApplicationWillDeactivateDelegate;                 // 0xB8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationHasReactivatedDelegate;                 // 0xC8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationWillEnterBackgroundDelegate;            // 0xD8(0x10)(Edit, ExportObject, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationHasEnteredForegroundDelegate;           // 0xE8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationWillTerminateDelegate;                  // 0xF8(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationShouldUnloadResourcesDelegate;          // 0x108(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationReceivedStartupArgumentsDelegate;       // 0x118(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnTemperatureChangeDelegate;                       // 0x128(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnLowPowerModeDelegate;                            // 0x138(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UApplicationLifecycleComponent* GetDefaultObj();

};

// 0x18 (0x6B0 - 0x698)
// Class Engine.ArrowComponent
class UArrowComponent : public UPrimitiveComponent
{
public:
	struct FColor                                ArrowColor;                                        // 0x698(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ArrowSize;                                         // 0x69C(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ArrowLength;                                       // 0x6A0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ScreenSize;                                        // 0x6A4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bIsScreenSizeScaled : 1;                           // Mask: 0x1, PropSize: 0x10x6A8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTreatAsASprite : 1;                               // Mask: 0x2, PropSize: 0x10x6A8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F8B[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UArrowComponent* GetDefaultObj();

	void SetUseInEditorScaling(bool* bNewValue);
	void SetTreatAsASprite(bool* bNewValue);
	float SetScreenSize();
	void SetIsScreenSizeScaled(bool* bNewValue);
	void SetArrowSize(float NewSize);
	float SetArrowLength();
	struct FColor SetArrowFColor();
	struct FLinearColor SetArrowColor();
};

// 0x10 (0x38 - 0x28)
// Class Engine.InitialActiveSoundParams
class UInitialActiveSoundParams : public UObject
{
public:
	TArray<struct FAudioParameter>               AudioParams;                                       // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInitialActiveSoundParams* GetDefaultObj();

};

// 0x9C8 (0xC90 - 0x2C8)
// Class Engine.AudioComponent
class UAudioComponent : public USceneComponent
{
public:
	uint8                                        Pad_2FE3[0x198];                                   // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound;                                             // 0x460(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FAudioParameter>               DefaultParameters;                                 // 0x468(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FAudioParameter>               InstanceParameters;                                // 0x478(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class USoundClass*                           SoundClassOverride;                                // 0x488(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAutoDestroy : 1;                                  // Mask: 0x1, PropSize: 0x10x490(0x1)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bStopWhenOwnerDestroyed : 1;                       // Mask: 0x2, PropSize: 0x10x490(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bShouldRemainActiveIfDropped : 1;                  // Mask: 0x4, PropSize: 0x10x490(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSpatialization : 1;                          // Mask: 0x8, PropSize: 0x10x490(0x1)(ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bOverrideAttenuation : 1;                          // Mask: 0x10, PropSize: 0x10x490(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bOverrideSubtitlePriority : 1;                     // Mask: 0x20, PropSize: 0x10x490(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsUISound : 1;                                    // Mask: 0x40, PropSize: 0x10x490(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnableLowPassFilter : 1;                          // Mask: 0x80, PropSize: 0x10x490(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bOverridePriority : 1;                             // Mask: 0x1, PropSize: 0x10x491(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSuppressSubtitles : 1;                            // Mask: 0x2, PropSize: 0x10x491(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCanPlayMultipleInstances : 1;                     // Mask: 0x4, PropSize: 0x10x491(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDisableParameterUpdatesWhilePlaying : 1;          // Mask: 0x8, PropSize: 0x10x491(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20C : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        BitPad_20D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAutoManageAttachment : 1;                         // Mask: 0x80, PropSize: 0x10x492(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FEA[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  AudioComponentUserID;                              // 0x498(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PitchModulationMin;                                // 0x4A0(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        PitchModulationMax;                                // 0x4A4(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        VolumeModulationMin;                               // 0x4A8(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        VolumeModulationMax;                               // 0x4AC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x4B0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        EnvelopeFollowerAttackTime;                        // 0x4B4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        EnvelopeFollowerReleaseTime;                       // 0x4B8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        Priority;                                          // 0x4BC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        SubtitlePriority;                                  // 0x4C0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FEB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundEffectSourcePresetChain*         SourceEffectChain;                                 // 0x4C8(0x8)(Net, EditFixedSize, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        PitchMultiplier;                                   // 0x4D0(0x4)(ConstParm, BlueprintVisible, OutParm, Config, EditConst, InstancedReference)
	float                                        LowPassFilterFrequency;                            // 0x4D4(0x4)(Edit, ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2FEC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x4E0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FSoundAttenuationSettings             AttenuationOverrides;                              // 0x4E8(0x3C8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x8B0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	TSet<class USoundConcurrency*>               ConcurrencySet;                                    // 0x8B8(0x50)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FEE[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAttachmentRule                   AutoAttachLocationRule;                            // 0x914(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EAttachmentRule                   AutoAttachRotationRule;                            // 0x915(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	enum class EAttachmentRule                   AutoAttachScaleRule;                               // 0x916(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSoundModulationDefaultRoutingSettings ModulationRouting;                                 // 0x918(0x188)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnAudioPlayStateChanged;                           // 0xAA0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF1[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAudioVirtualizationChanged;                      // 0xAC8(0x10)(Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF2[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAudioFinished;                                   // 0xAF0(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF3[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAudioPlaybackPercent;                            // 0xB18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF4[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAudioSingleEnvelopeValue;                        // 0xB40(0x10)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF5[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnAudioMultiEnvelopeValue;                         // 0xB68(0x10)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF6[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	FDelegateProperty_                           OnQueueSubtitles;                                  // 0xB90(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF7[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class USceneComponent>        AutoAttachParent;                                  // 0xBB0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	class FName                                  AutoAttachSocketName;                              // 0xBB8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF8[0xD0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAudioComponent* GetDefaultObj();

	float StopDelayed();
	void Stop();
	class USoundWave* SetWaveParameter();
	float SetVolumeMultiplier();
	bool SetUISound();
	float SetSubmixSend(class USoundSubmixBase* Submix);
	float SetSourceBusSendPreEffect(class USoundSourceBus* SoundSourceBus);
	float SetSourceBusSendPostEffect(class USoundSourceBus* SoundSourceBus);
	void SetSound(class USoundBase* NewSound);
	float SetPitchMultiplier();
	bool SetPaused();
	bool SetOutputToBusOnly();
	enum class EModulationRouting SetModulationRouting(TSet<class USoundModulatorBase*>* Modulators, enum class EModulationDestination* Destination);
	float SetLowPassFilterFrequency();
	void SetLowPassFilterEnabled(bool* InLowPassFilterEnabled);
	int32 SetIntParameter();
	class FName SetFloatParameter(float InFloat);
	class FName SetBoolParameter(bool* InBool);
	float SetAudioBusSendPreEffect();
	float SetAudioBusSendPostEffect();
	enum class EAudioFaderCurve PlayQuantized(class UQuartzClockHandle* InClockHandle, const struct FQuartzQuantizationBoundary& InQuantizationBoundary, FDelegateProperty_ InDelegate);
	float Play();
	void IsVirtualized(bool ReturnValue);
	void IsPlaying(bool ReturnValue);
	void HasCookedFFTData(bool ReturnValue);
	void HasCookedAmplitudeEnvelopeData(bool ReturnValue);
	void GetPlayState(enum class EAudioComponentPlayState ReturnValue);
	void GetModulators(enum class EModulationDestination* Destination, TSet<class USoundModulatorBase*> ReturnValue);
	TArray<struct FSoundWaveSpectralDataPerSound> GetCookedFFTDataForAllPlayingSounds(bool ReturnValue);
	TArray<struct FSoundWaveSpectralData> GetCookedFFTData(bool ReturnValue);
	TArray<struct FSoundWaveEnvelopeDataPerSound> GetCookedEnvelopeDataForAllPlayingSounds(bool ReturnValue);
	float GetCookedEnvelopeData(bool ReturnValue);
	void FadeOut(float* FadeOutDuration, float* FadeVolumeLevel, enum class EAudioFaderCurve* FadeCurve);
	float FadeIn(float* FadeInDuration, float* FadeVolumeLevel, enum class EAudioFaderCurve* FadeCurve);
	struct FSoundAttenuationSettings BP_GetAttenuationSettingsToApply(bool ReturnValue);
	void AdjustVolume(float* AdjustVolumeDuration, float* AdjustVolumeLevel, enum class EAudioFaderCurve* FadeCurve);
	struct FSoundAttenuationSettings AdjustAttenuation();
};

// 0x28 (0x6C0 - 0x698)
// Class Engine.BillboardComponent
class UBillboardComponent : public UPrimitiveComponent
{
public:
	class UTexture2D*                            Sprite;                                            // 0x698(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bIsScreenSizeScaled : 1;                           // Mask: 0x1, PropSize: 0x10x6A0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_301A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ScreenSize;                                        // 0x6A4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        U;                                                 // 0x6A8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        UL;                                                // 0x6AC(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        V;                                                 // 0x6B0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        VL;                                                // 0x6B4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OpacityMaskRefVal;                                 // 0x6B8(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_301D[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBillboardComponent* GetDefaultObj();

	int32 SetUV();
	int32 SetSpriteAndUV();
	class UTexture2D* SetSprite();
	float SetOpacityMaskRefVal();
};

// 0xA8 (0x160 - 0xB8)
// Class Engine.BoundsCopyComponent
class UBoundsCopyComponent : public UActorComponent
{
public:
	TSoftObjectPtr<class AActor>                 BoundsSourceActor;                                 // 0xB8(0x30)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCollidingComponentsForSourceBounds;            // 0xE8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bKeepOwnBoundsScale;                               // 0xE9(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseCollidingComponentsForOwnBounds;               // 0xEA(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3020[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            PostTransform;                                     // 0xF0(0x60)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCopyXBounds;                                      // 0x150(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCopyYBounds;                                      // 0x151(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCopyZBounds;                                      // 0x152(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3021[0xD];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBoundsCopyComponent* GetDefaultObj();

};

// 0x20 (0x6B8 - 0x698)
// Class Engine.ShapeComponent
class UShapeComponent : public UPrimitiveComponent
{
public:
	class UBodySetup*                            ShapeBodySetup;                                    // 0x698(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                ShapeColor;                                        // 0x6A0(0x4)(BlueprintVisible, Parm, ReturnParm, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        bDrawOnlyIfSelected : 1;                           // Mask: 0x1, PropSize: 0x10x6A4(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bShouldCollideWhenPlacing : 1;                     // Mask: 0x2, PropSize: 0x10x6A4(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDynamicObstacle : 1;                              // Mask: 0x4, PropSize: 0x10x6A4(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_20F : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3024[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                AreaClassOverride;                                 // 0x6A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseSystemDefaultObstacleAreaClass : 1;            // Mask: 0x1, PropSize: 0x10x6B0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3025[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UShapeComponent* GetDefaultObj();

};

// 0x28 (0x6E0 - 0x6B8)
// Class Engine.BoxComponent
class UBoxComponent : public UShapeComponent
{
public:
	struct FVector                               BoxExtent;                                         // 0x6B8(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	float                                        LineThickness;                                     // 0x6D0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3029[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBoxComponent* GetDefaultObj();

	float SetLineThickness();
	struct FVector SetBoxExtent(bool bUpdateOverlaps);
	void GetUnscaledBoxExtent(const struct FVector& ReturnValue);
	void GetScaledBoxExtent(const struct FVector& ReturnValue);
};

// 0x28 (0x6C0 - 0x698)
// Class Engine.BrushComponent
class UBrushComponent : public UPrimitiveComponent
{
public:
	class UModel*                                Brush;                                             // 0x698(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	class UBodySetup*                            BrushBodySetup;                                    // 0x6A0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                NavAreaClass;                                      // 0x6A8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                SecondNavAreaClass;                                // 0x6B0(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SurfaceNavAreaHeight;                              // 0x6B8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_302B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBrushComponent* GetDefaultObj();

	void GetBoxBrushXYZ(const struct FVector& ReturnValue);
};

// 0x8 (0x6C0 - 0x6B8)
// Class Engine.CapsuleComponent
class UCapsuleComponent : public UShapeComponent
{
public:
	float                                        CapsuleHalfHeight;                                 // 0x6B8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        CapsuleRadius;                                     // 0x6BC(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UCapsuleComponent* GetDefaultObj();

	float SetCapsuleSize(float InHalfHeight, bool bUpdateOverlaps);
	void SetCapsuleRadius(float* Radius, bool bUpdateOverlaps);
	void SetCapsuleHalfHeight(float* HalfHeight, bool bUpdateOverlaps);
	float GetUnscaledCapsuleSize_WithoutHemisphere(float OutHalfHeightWithoutHemisphere);
	float GetUnscaledCapsuleSize(float OutHalfHeight);
	void GetUnscaledCapsuleRadius(float ReturnValue);
	void GetUnscaledCapsuleHalfHeight_WithoutHemisphere(float ReturnValue);
	void GetUnscaledCapsuleHalfHeight(float ReturnValue);
	void GetShapeScale(float ReturnValue);
	float GetScaledCapsuleSize_WithoutHemisphere(float OutHalfHeightWithoutHemisphere);
	float GetScaledCapsuleSize(float OutHalfHeight);
	void GetScaledCapsuleRadius(float ReturnValue);
	void GetScaledCapsuleHalfHeight_WithoutHemisphere(float ReturnValue);
	void GetScaledCapsuleHalfHeight(float ReturnValue);
};

// 0x38 (0x300 - 0x2C8)
// Class Engine.ChildActorComponent
class UChildActorComponent : public USceneComponent
{
public:
	class UClass*                                ChildActorClass;                                   // 0x2C8(0x8)(BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                ChildActor;                                        // 0x2D0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ChildActorTemplate;                                // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_303E[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UChildActorComponent* GetDefaultObj();

	class UClass* SetChildActorClass();
	void OnChildActorDestroyed(class AActor* DestroyedActor);
	void DestroyChildActor();
	void CreateChildActor();
};

// 0x68 (0x330 - 0x2C8)
// Class Engine.DecalComponent
class UDecalComponent : public USceneComponent
{
public:
	class UMaterialInterface*                    DecalMaterial;                                     // 0x2C8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SortOrder;                                         // 0x2D0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeScreenSize;                                    // 0x2D4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeStartDelay;                                    // 0x2D8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeDuration;                                      // 0x2DC(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FadeInDuration;                                    // 0x2E0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        FadeInStartDelay;                                  // 0x2E4(0x4)(BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bDestroyOwnerAfterFade : 1;                        // Mask: 0x1, PropSize: 0x10x2E8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_213 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3054[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DecalSize;                                         // 0x2F0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLinearColor                          DecalColor;                                        // 0x308(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3055[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDecalComponent* GetDefaultObj();

	void SetSortOrder(int32* Value);
	void SetFadeScreenSize(float NewFadeScreenSize);
	float SetFadeOut(float StartDelay, bool DestroyOwnerAfterFade);
	float SetFadeIn(float StartDelay);
	void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
	void SetDecalColor(struct FLinearColor* Color);
	void GetFadeStartDelay(float ReturnValue);
	void GetFadeInStartDelay(float ReturnValue);
	void GetFadeInDuration(float ReturnValue);
	void GetFadeDuration(float ReturnValue);
	void GetDecalMaterial(class UMaterialInterface* ReturnValue);
	void CreateDynamicMaterialInstance(class UMaterialInstanceDynamic* ReturnValue);
};

// 0x110 (0x430 - 0x320)
// Class Engine.LightComponent
class ULightComponent : public ULightComponentBase
{
public:
	float                                        Temperature;                                       // 0x320(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config)
	float                                        MaxDrawDistance;                                   // 0x324(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDistanceFadeRange;                              // 0x328(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseTemperature : 1;                               // Mask: 0x1, PropSize: 0x10x32C(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Config)
	uint8                                        BitPad_218 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_307B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ShadowMapChannel;                                  // 0x330(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_307C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinRoughness;                                      // 0x338(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpecularScale;                                     // 0x33C(0x4)(Edit, ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowResolutionScale;                             // 0x340(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowBias;                                        // 0x344(0x4)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowSlopeBias;                                   // 0x348(0x4)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowSharpen;                                     // 0x34C(0x4)(Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ContactShadowLength;                               // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        ContactShadowLengthInWS : 1;                       // Mask: 0x1, PropSize: 0x10x354(0x1)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_219 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_307D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ContactShadowCastingIntensity;                     // 0x358(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ContactShadowNonCastingIntensity;                  // 0x35C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        InverseSquaredFalloff : 1;                         // Mask: 0x1, PropSize: 0x10x360(0x1)(Edit, ConstParm, Net, Parm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        CastTranslucentShadows : 1;                        // Mask: 0x2, PropSize: 0x10x360(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastShadowsFromCinematicObjectsOnly : 1;          // Mask: 0x4, PropSize: 0x10x360(0x1)(ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAffectDynamicIndirectLighting : 1;                // Mask: 0x8, PropSize: 0x10x360(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bForceCachedShadowsForMovablePrimitives : 1;       // Mask: 0x10, PropSize: 0x10x360(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21A : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_307E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLightingChannels                     LightingChannels;                                  // 0x364(0x1)(Net, Parm, ZeroConstructor, ReturnParm, EditConst)
	uint8                                        Pad_307F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    LightFunctionMaterial;                             // 0x368(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FVector                               LightFunctionScale;                                // 0x370(0x18)(Edit, ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTextureLightProfile*                  IESTexture;                                        // 0x388(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        bUseIESBrightness : 1;                             // Mask: 0x1, PropSize: 0x10x390(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3080[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IESBrightnessScale;                                // 0x394(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	float                                        LightFunctionFadeDistance;                         // 0x398(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DisabledBrightness;                                // 0x39C(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableLightShaftBloom : 1;                        // Mask: 0x1, PropSize: 0x10x3A0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21C : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3081[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BloomScale;                                        // 0x3A4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BloomThreshold;                                    // 0x3A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BloomMaxBrightness;                                // 0x3AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                BloomTint;                                         // 0x3B0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseRayTracedDistanceFieldShadows;                 // 0x3B4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3082[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RayStartOffsetDepthScale;                          // 0x3B8(0x4)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3083[0x74];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULightComponent* GetDefaultObj();

	void SetVolumetricScatteringIntensity(float NewIntensity);
	void SetUseTemperature(bool* bNewValue);
	void SetUseIESBrightness(bool* bNewValue);
	void SetTransmission(bool* bNewValue);
	void SetTemperature(float NewTemperature);
	void SetSpecularScale(float* NewValue);
	void SetShadowSlopeBias(float* NewValue);
	void SetShadowBias(float* NewValue);
	void SetLightingChannels(bool* bChannel0, bool* bChannel1, bool* bChannel2);
	void SetLightFunctionScale(struct FVector* NewLightFunctionScale);
	void SetLightFunctionMaterial(class UMaterialInterface** NewLightFunctionMaterial);
	void SetLightFunctionFadeDistance(float* NewLightFunctionFadeDistance);
	void SetLightFunctionDisabledBrightness(float* NewValue);
	void SetLightFColor(const struct FColor& NewLightColor);
	void SetLightColor(const struct FLinearColor& NewLightColor, bool bSRGB);
	void SetIntensityScale(float NewIntensity);
	void SetIntensity(float NewIntensity);
	void SetIndirectLightingIntensity(float NewIntensity);
	void SetIESTexture(class UTextureLightProfile** NewValue);
	void SetIESBrightnessScale(float* NewValue);
	void SetForceCachedShadowsForMovablePrimitives(bool* bNewValue);
	void SetEnableLightShaftBloom(bool* bNewValue);
	void SetColorIntensity(const struct FLinearColor& NewIntensity);
	void SetBloomTint(struct FColor* NewValue);
	void SetBloomThreshold(float* NewValue);
	void SetBloomScale(float* NewValue);
	void SetBloomMaxBrightness(float* NewValue);
	void SetAffectTranslucentLighting(bool* bNewValue);
	void SetAffectDynamicIndirectLighting(bool* bNewValue);
};

// 0xE0 (0x510 - 0x430)
// Class Engine.DirectionalLightComponent
class UDirectionalLightComponent : public ULightComponent
{
public:
	float                                        ShadowCascadeBiasDistribution;                     // 0x430(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableLightShaftOcclusion : 1;                    // Mask: 0x1, PropSize: 0x10x434(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_308E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OcclusionMaskDarkness;                             // 0x438(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OcclusionDepthRange;                               // 0x43C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LightShaftOverrideDirection;                       // 0x440(0x18)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WholeSceneDynamicShadowRadius;                     // 0x458(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DynamicShadowDistanceMovableLight;                 // 0x45C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DynamicShadowDistanceStationaryLight;              // 0x460(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        DynamicShadowCascades;                             // 0x464(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CascadeDistributionExponent;                       // 0x468(0x4)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CascadeTransitionFraction;                         // 0x46C(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowDistanceFadeoutFraction;                     // 0x470(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bUseInsetShadowsForMovableObjects : 1;             // Mask: 0x1, PropSize: 0x10x474(0x1)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3091[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FarShadowCascadeCount;                             // 0x478(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FarShadowDistance;                                 // 0x47C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceFieldShadowDistance;                       // 0x480(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForwardShadingPriority;                            // 0x484(0x4)(Edit, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LightSourceAngle;                                  // 0x488(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Config)
	float                                        LightSourceSoftAngle;                              // 0x48C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowSourceAngleFactor;                           // 0x490(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TraceDistance;                                     // 0x494(0x4)(Net, Parm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedAsAtmosphereSunLight : 1;                     // Mask: 0x1, PropSize: 0x10x498(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAtmosphereSunLight : 1;                           // Mask: 0x2, PropSize: 0x10x498(0x1)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_21F : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3095[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AtmosphereSunLightIndex;                           // 0x49C(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          AtmosphereSunDiskColorScale;                       // 0x4A0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPerPixelAtmosphereTransmittance : 1;              // Mask: 0x1, PropSize: 0x10x4B0(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastShadowsOnClouds : 1;                          // Mask: 0x2, PropSize: 0x10x4B0(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastShadowsOnAtmosphere : 1;                      // Mask: 0x4, PropSize: 0x10x4B0(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastCloudShadows : 1;                             // Mask: 0x8, PropSize: 0x10x4B0(0x1)(Edit, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_220 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3098[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CloudShadowStrength;                               // 0x4B4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowOnAtmosphereStrength;                   // 0x4B8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowOnSurfaceStrength;                      // 0x4BC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowDepthBias;                              // 0x4C0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowExtent;                                 // 0x4C4(0x4)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowMinDistance;                            // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowFadeRadius;                             // 0x4CC(0x4)(Edit, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MinimumLightSourceAngle;                           // 0x4D0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowMapResolutionScale;                     // 0x4D4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CloudShadowRaySampleCountScale;                    // 0x4D8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          CloudScatteredLuminanceScale;                      // 0x4DC(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLightmassDirectionalLightSettings    LightmassSettings;                                 // 0x4EC(0x10)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastModulatedShadows : 1;                         // Mask: 0x1, PropSize: 0x10x4FC(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_221 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3099[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                ModulatedShadowColor;                              // 0x500(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShadowAmount;                                      // 0x504(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDirectionalLightComponent* GetDefaultObj();

	void SetShadowSourceAngleFactor(float* NewValue);
	void SetShadowDistanceFadeoutFraction(float* NewValue);
	void SetShadowCascadeBiasDistribution(float* NewValue);
	void SetShadowAmount(float* NewValue);
	void SetOcclusionMaskDarkness(float* NewValue);
	void SetOcclusionDepthRange(float* NewValue);
	void SetLightSourceSoftAngle(float* NewValue);
	void SetLightSourceAngle(float* NewValue);
	void SetLightShaftOverrideDirection(struct FVector* NewValue);
	void SetForwardShadingPriority(int32* NewValue);
	void SetEnableLightShaftOcclusion(bool* bNewValue);
	void SetDynamicShadowDistanceStationaryLight(float* NewValue);
	void SetDynamicShadowDistanceMovableLight(float* NewValue);
	void SetDynamicShadowCascades(int32* NewValue);
	void SetCascadeTransitionFraction(float* NewValue);
	void SetCascadeDistributionExponent(float* NewValue);
	void SetAtmosphereSunLightIndex(int32* NewValue);
	void SetAtmosphereSunLight(bool* bNewValue);
};

// 0x28 (0x6C0 - 0x698)
// Class Engine.DrawFrustumComponent
class UDrawFrustumComponent : public UPrimitiveComponent
{
public:
	bool                                         bFrustumEnabled;                                   // 0x698(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_309B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                FrustumColor;                                      // 0x69C(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        FrustumAngle;                                      // 0x6A0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FrustumAspectRatio;                                // 0x6A4(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FrustumStartDist;                                  // 0x6A8(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FrustumEndDist;                                    // 0x6AC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture*                              Texture;                                           // 0x6B0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_309C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDrawFrustumComponent* GetDefaultObj();

};

// 0x8 (0x6C0 - 0x6B8)
// Class Engine.SphereComponent
class USphereComponent : public UShapeComponent
{
public:
	float                                        SphereRadius;                                      // 0x6B8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_30A1[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USphereComponent* GetDefaultObj();

	void SetSphereRadius(float* InSphereRadius, bool bUpdateOverlaps);
	void GetUnscaledSphereRadius(float ReturnValue);
	void GetShapeScale(float ReturnValue);
	void GetScaledSphereRadius(float ReturnValue);
};

// 0x0 (0x6C0 - 0x6C0)
// Class Engine.DrawSphereComponent
class UDrawSphereComponent : public USphereComponent
{
public:

	static class UClass* StaticClass();
	static class UDrawSphereComponent* GetDefaultObj();

};

// 0xF8 (0x3C0 - 0x2C8)
// Class Engine.ForceFeedbackComponent
class UForceFeedbackComponent : public USceneComponent
{
public:
	class UForceFeedbackEffect*                  ForceFeedbackEffect;                               // 0x2C8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        bAutoDestroy : 1;                                  // Mask: 0x1, PropSize: 0x10x2D0(0x1)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        bStopWhenOwnerDestroyed : 1;                       // Mask: 0x2, PropSize: 0x10x2D0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bLooping : 1;                                      // Mask: 0x4, PropSize: 0x10x2D0(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        bIgnoreTimeDilation : 1;                           // Mask: 0x8, PropSize: 0x10x2D0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bOverrideAttenuation : 1;                          // Mask: 0x10, PropSize: 0x10x2D0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        BitPad_222 : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30A6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        IntensityMultiplier;                               // 0x2D4(0x4)(Edit, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UForceFeedbackAttenuation*             AttenuationSettings;                               // 0x2D8(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FForceFeedbackAttenuationSettings     AttenuationOverrides;                              // 0x2E0(0xC0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnForceFeedbackFinished;                           // 0x3A0(0x10)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30A7[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UForceFeedbackComponent* GetDefaultObj();

	void Stop();
	float SetIntensityMultiplier();
	void SetForceFeedbackEffect(class UForceFeedbackEffect** NewForceFeedbackEffect);
	float Play();
	struct FForceFeedbackAttenuationSettings BP_GetAttenuationSettingsToApply(bool ReturnValue);
	struct FForceFeedbackAttenuationSettings AdjustAttenuation();
};

// 0xB0 (0x1D0 - 0x120)
// Class Engine.InterpToMovementComponent
class UInterpToMovementComponent : public UMovementComponent
{
public:
	float                                        Duration;                                          // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        bPauseOnImpact : 1;                                // Mask: 0x1, PropSize: 0x10x124(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_223 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30B2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bSweep;                                            // 0x128(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	enum class ETeleportType                     TeleportType;                                      // 0x129(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	enum class EInterpToBehaviourType            BehaviourType;                                     // 0x12A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         bCheckIfStillInWorld;                              // 0x12B(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        bForceSubStepping : 1;                             // Mask: 0x1, PropSize: 0x10x12C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        BitPad_224 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30B3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnInterpToReverse;                                 // 0x130(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnInterpToStop;                                    // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnWaitBeginDelegate;                               // 0x150(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnWaitEndDelegate;                                 // 0x160(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnResetDelegate;                                   // 0x170(0x10)(Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	float                                        MaxSimulationTimeStep;                             // 0x180(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	int32                                        MaxSimulationIterations;                           // 0x184(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	TArray<struct FInterpControlPoint>           ControlPoints;                                     // 0x188(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_30B4[0x38];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpToMovementComponent* GetDefaultObj();

	struct FHitResult StopSimulating();
	float RestartMovement();
	void ResetControlPoints();
	float OnInterpToWaitEndDelegate__DelegateSignature();
	float OnInterpToWaitBeginDelegate__DelegateSignature();
	float OnInterpToStopDelegate__DelegateSignature();
	float OnInterpToReverseDelegate__DelegateSignature();
	float OnInterpToResetDelegate__DelegateSignature();
	void FinaliseControlPoints();
	bool AddControlPointPosition();
};

// 0x48 (0x6E0 - 0x698)
// Class Engine.LineBatchComponent
class ULineBatchComponent : public UPrimitiveComponent
{
public:
	uint8                                        Pad_30B5[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULineBatchComponent* GetDefaultObj();

};

// 0x20 (0x450 - 0x430)
// Class Engine.LocalLightComponent
class ULocalLightComponent : public ULightComponent
{
public:
	enum class ELightUnits                       IntensityUnits;                                    // 0x430(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_30BB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InverseExposureBlend;                              // 0x434(0x4)(Edit, ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x438(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        AttenuationRadius;                                 // 0x43C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FLightmassPointLightSettings          LightmassSettings;                                 // 0x440(0xC)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30BC[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULocalLightComponent* GetDefaultObj();

	enum class ELightUnits SetIntensityUnits();
	float SetAttenuationRadius();
	float GetUnitsConversionFactor(float ReturnValue);
};

// 0x98 (0x150 - 0xB8)
// Class Engine.LODSyncComponent
class ULODSyncComponent : public UActorComponent
{
public:
	int32                                        NumLODs;                                           // 0xB8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference)
	int32                                        ForcedLOD;                                         // 0xBC(0x4)(Edit, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MinLOD;                                            // 0xC0(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	uint8                                        Pad_30BD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FComponentSync>                ComponentsToSync;                                  // 0xC8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TMap<class FName, struct FLODMappingData>    CustomLODMapping;                                  // 0xD8(0x50)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentLOD;                                        // 0x128(0x4)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CurrentNumLODs;                                    // 0x12C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimitiveComponent*>           DriveComponents;                                   // 0x130(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimitiveComponent*>           SubComponents;                                     // 0x140(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULODSyncComponent* GetDefaultObj();

	void GetLODSyncDebugText(const class FString& ReturnValue);
};

// 0x18 (0x6B0 - 0x698)
// Class Engine.MaterialBillboardComponent
class UMaterialBillboardComponent : public UPrimitiveComponent
{
public:
	TArray<struct FMaterialSpriteElement>        Elements;                                          // 0x698(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_30C2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialBillboardComponent* GetDefaultObj();

	TArray<struct FMaterialSpriteElement> SetElements();
	class UCurveFloat* AddElement(class UMaterialInterface* Material);
};

// 0x28 (0xE0 - 0xB8)
// Class Engine.MaterialGPUReadbackMessageComponent
class UMaterialGPUReadbackMessageComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            GPUReadbackMessageDelegate;                        // 0xB8(0x10)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FName                                  MessageName;                                       // 0xC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bAutoEnableMessagesOnRegister;                     // 0xD0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_30C7[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialGPUReadbackMessageComponent* GetDefaultObj();

	bool SetMessagesEnabled();
	void GPUReadbackMessageDelegate__DelegateSignature(const TArray<float>& Data, const struct FMaterialGPUMessagePrimitiveInfo& PrimitiveInfo);
};

// 0x48 (0x6E0 - 0x698)
// Class Engine.ModelComponent
class UModelComponent : public UPrimitiveComponent
{
public:
	uint8                                        Pad_30C8[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	class UBodySetup*                            ModelBodySetup;                                    // 0x6B0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30C9[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UModelComponent* GetDefaultObj();

};

// 0x38 (0xF0 - 0xB8)
// Class Engine.PawnNoiseEmitterComponent
class UPawnNoiseEmitterComponent : public UActorComponent
{
public:
	uint8                                        bAIPerceptionSystemCompatibilityMode : 1;          // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_225 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30CB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LastRemoteNoisePosition;                           // 0xC0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        NoiseLifetime;                                     // 0xD8(0x4)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastRemoteNoiseVolume;                             // 0xDC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastRemoteNoiseTime;                               // 0xE0(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastLocalNoiseVolume;                              // 0xE4(0x4)(Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        LastLocalNoiseTime;                                // 0xE8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30CC[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPawnNoiseEmitterComponent* GetDefaultObj();

	struct FVector MakeNoise(float* Loudness);
};

// 0x20 (0xD8 - 0xB8)
// Class Engine.PlatformEventsComponent
class UPlatformEventsComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            PlatformChangedToLaptopModeDelegate;               // 0xB8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            PlatformChangedToTabletModeDelegate;               // 0xC8(0x10)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UPlatformEventsComponent* GetDefaultObj();

	void SupportsConvertibleLaptops(bool ReturnValue);
	void PlatformEventDelegate__DelegateSignature();
	void IsInTabletMode(bool ReturnValue);
	void IsInLaptopMode(bool ReturnValue);
};

// 0x18 (0x468 - 0x450)
// Class Engine.PointLightComponent
class UPointLightComponent : public ULocalLightComponent
{
public:
	uint8                                        bUseInverseSquaredFalloff : 1;                     // Mask: 0x1, PropSize: 0x10x450(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_226 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_30D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LightFalloffExponent;                              // 0x454(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SourceRadius;                                      // 0x458(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Config)
	float                                        SoftSourceRadius;                                  // 0x45C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	float                                        SourceLength;                                      // 0x460(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_30D7[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPointLightComponent* GetDefaultObj();

	void SetUseInverseSquaredFalloff(bool* bNewValue);
	void SetSourceRadius(float* bNewValue);
	void SetSourceLength(float* NewValue);
	void SetSoftSourceRadius(float* bNewValue);
	float SetLightFalloffExponent();
	float SetInverseExposureBlend();
};

// 0x1B0 (0xBF0 - 0xA40)
// Class Engine.PoseableMeshComponent
class UPoseableMeshComponent : public USkinnedMeshComponent
{
public:
	uint8                                        Pad_30F1[0x1B0];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPoseableMeshComponent* GetDefaultObj();

	void SetBoneTransformByName(class FName* BoneName, const struct FTransform& InTransform, enum class EBoneSpaces BoneSpace);
	struct FVector SetBoneScaleByName(class FName* BoneName, enum class EBoneSpaces BoneSpace);
	struct FRotator SetBoneRotationByName(class FName* BoneName, enum class EBoneSpaces BoneSpace);
	void SetBoneLocationByName(class FName* BoneName, struct FVector* InLocation, enum class EBoneSpaces BoneSpace);
	void ResetBoneTransformByName(class FName* BoneName);
	void GetBoneTransformByName(class FName* BoneName, enum class EBoneSpaces BoneSpace, const struct FTransform& ReturnValue);
	void GetBoneScaleByName(class FName* BoneName, enum class EBoneSpaces BoneSpace, const struct FVector& ReturnValue);
	void GetBoneRotationByName(class FName* BoneName, enum class EBoneSpaces BoneSpace, const struct FRotator& ReturnValue);
	void GetBoneLocationByName(class FName* BoneName, enum class EBoneSpaces BoneSpace, const struct FVector& ReturnValue);
	class USkeletalMeshComponent* CopyPoseFromSkeletalComponent();
};

// 0x798 (0xA60 - 0x2C8)
// Class Engine.PostProcessComponent
class UPostProcessComponent : public USceneComponent
{
public:
	uint8                                        Pad_30FB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPostProcessSettings                  Settings;                                          // 0x2D0(0x780)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	float                                        Priority;                                          // 0xA50(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        BlendRadius;                                       // 0xA54(0x4)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        BlendWeight;                                       // 0xA58(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10xA5C(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        bUnbound : 1;                                      // Mask: 0x2, PropSize: 0x10xA5C(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	uint8                                        bWaterPP : 1;                                      // Mask: 0x4, PropSize: 0x10xA5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_30FE[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPostProcessComponent* GetDefaultObj();

	float AddOrUpdateBlendable();
};

// 0x20 (0x470 - 0x450)
// Class Engine.RectLightComponent
class URectLightComponent : public ULocalLightComponent
{
public:
	float                                        SourceWidth;                                       // 0x450(0x4)(Edit, Net, Parm, ZeroConstructor, Config)
	float                                        SourceHeight;                                      // 0x454(0x4)(ExportObject, Net, Parm, ZeroConstructor, Config)
	float                                        BarnDoorAngle;                                     // 0x458(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        BarnDoorLength;                                    // 0x45C(0x4)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture*                              SourceTexture;                                     // 0x460(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3102[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URectLightComponent* GetDefaultObj();

	void SetSourceWidth(float* NewValue);
	void SetSourceTexture(class UTexture** NewValue);
	void SetSourceHeight(float* NewValue);
	void SetBarnDoorLength(float* NewValue);
	void SetBarnDoorAngle(float* NewValue);
};

// 0x38 (0x158 - 0x120)
// Class Engine.RotatingMovementComponent
class URotatingMovementComponent : public UMovementComponent
{
public:
	struct FRotator                              RotationRate;                                      // 0x120(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FVector                               PivotTranslation;                                  // 0x138(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bRotationInLocalSpace : 1;                         // Mask: 0x1, PropSize: 0x10x150(0x1)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3104[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URotatingMovementComponent* GetDefaultObj();

};

// 0xB8 (0x380 - 0x2C8)
// Class Engine.RuntimeVirtualTextureComponent
class URuntimeVirtualTextureComponent : public USceneComponent
{
public:
	TSoftObjectPtr<class AActor>                 BoundsAlignActor;                                  // 0x2C8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetBoundsButton;                                  // 0x2F8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSnapBoundsToLandscape;                            // 0x2F9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3106[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class URuntimeVirtualTexture*                VirtualTexture;                                    // 0x300(0x8)(OutParm, ZeroConstructor, ReturnParm, SubobjectReference)
	bool                                         bEnableScalability;                                // 0x308(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3107[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       ScalabilityGroup;                                  // 0x30C(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bHidePrimitives;                                   // 0x310(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3108[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UVirtualTextureBuilder*                StreamingTexture;                                  // 0x318(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StreamLowMips;                                     // 0x320(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBuildStreamingMipsButton;                         // 0x324(0x1)(ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETextureLossyCompressionAmount    LossyCompressionAmount;                            // 0x325(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseStreamingLowMipsInEditor;                      // 0x326(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBuildDebugStreamingMips;                          // 0x327(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_310A[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	bool                                         bIncludeGrassInStreamingTexture;                   // 0x350(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_310B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FIntPoint>                     DebugBuildStreamingMipsTiles;                      // 0x358(0x10)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                DebugBuildStreamingMipsTilesActorBounds;           // 0x368(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_310C[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URuntimeVirtualTextureComponent* GetDefaultObj();

	struct FBoxSphereBounds Invalidate();
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.SkyAtmosphere
class ASkyAtmosphere : public AInfo
{
public:
	class USkyAtmosphereComponent*               SkyAtmosphereComponent;                            // 0x4C8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class ASkyAtmosphere* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SplineMetadata
class USplineMetadata : public UObject
{
public:

	static class UClass* StaticClass();
	static class USplineMetadata* GetDefaultObj();

};

// 0x118 (0x7B0 - 0x698)
// Class Engine.SplineComponent
class USplineComponent : public UPrimitiveComponent
{
public:
	struct FSplineCurves                         SplineCurves;                                      // 0x698(0x70)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst)
	struct FInterpCurveVector                    SplineInfo;                                        // 0x708(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInterpCurveQuat                      SplineRotInfo;                                     // 0x720(0x18)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInterpCurveVector                    SplineScaleInfo;                                   // 0x738(0x18)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FInterpCurveFloat                     SplineReparamTable;                                // 0x750(0x18)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSplineEditingPerInstance;                    // 0x768(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32B4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReparamStepsPerSegment;                            // 0x76C(0x4)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Duration;                                          // 0x770(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         bStationaryEndpoints;                              // 0x774(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSplineHasBeenEdited;                              // 0x775(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bModifiedByConstructionScript;                     // 0x776(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInputSplinePointsToConstructionScript;            // 0x777(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x778(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	bool                                         bShowSplineDirectionOnAllPoints;                   // 0x779(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysDrawSplineInEditorViewport;                 // 0x77A(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32B6[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SplineDirectionArrowSize;                          // 0x77C(0x4)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          SplineDrawColor;                                   // 0x780(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClosedLoop;                                       // 0x790(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoopPositionOverride;                             // 0x791(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32B8[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LoopPosition;                                      // 0x794(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DefaultUpVector;                                   // 0x798(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USplineComponent* GetDefaultObj();

	void UpdateSpline();
	void SetWorldSplinePointsAndType(TArray<struct FVector>* Points, enum class ESplinePointType Type);
	void SetWorldLocationAtSplinePoint(int32* PointIndex, struct FVector* InLocation);
	bool SetUpVectorAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace);
	struct FLinearColor SetUnselectedSplineSegmentColor();
	bool SetTangentsAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace);
	struct FLinearColor SetTangentColor();
	bool SetTangentAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace);
	void SetSplineWorldPoints(TArray<struct FVector>* Points);
	bool SetSplinePointType(int32* PointIndex, enum class ESplinePointType Type);
	bool SetSplinePoints(TArray<struct FVector>* Points, enum class ESplineCoordinateSpace* CoordinateSpace);
	void SetSplineLocalPoints(TArray<struct FVector>* Points);
	struct FLinearColor SetSelectedSplineSegmentColor();
	bool SetScaleAtSplinePoint(int32* PointIndex);
	bool SetRotationAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace);
	bool SetLocationAtSplinePoint(int32* PointIndex, struct FVector* InLocation, enum class ESplineCoordinateSpace* CoordinateSpace);
	void SetDrawDebug(bool bShow);
	void SetDefaultUpVector(const struct FVector& UpVector, enum class ESplineCoordinateSpace* CoordinateSpace);
	bool SetClosedLoopAtPosition();
	bool SetClosedLoop();
	bool RemoveSplinePoint(int32* Index);
	void IsClosedLoop(bool ReturnValue);
	float GetWorldTangentAtDistanceAlongSpline(const struct FVector& ReturnValue);
	bool GetWorldRotationAtTime(const struct FRotator& ReturnValue);
	float GetWorldRotationAtDistanceAlongSpline(const struct FRotator& ReturnValue);
	bool GetWorldLocationAtTime(const struct FVector& ReturnValue);
	void GetWorldLocationAtSplinePoint(int32* PointIndex, const struct FVector& ReturnValue);
	float GetWorldLocationAtDistanceAlongSpline(const struct FVector& ReturnValue);
	bool GetWorldDirectionAtTime(const struct FVector& ReturnValue);
	float GetWorldDirectionAtDistanceAlongSpline(const struct FVector& ReturnValue);
	void GetVectorPropertyAtSplinePoint(int32* Index, class FName PropertyName, const struct FVector& ReturnValue);
	void GetVectorPropertyAtSplineInputKey(float* InKey, class FName PropertyName, const struct FVector& ReturnValue);
	bool GetUpVectorAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetUpVectorAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetUpVectorAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetUpVectorAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	bool GetTransformAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, bool bUseScale, const struct FTransform& ReturnValue);
	void GetTransformAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, bool bUseScale, const struct FTransform& ReturnValue);
	void GetTransformAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, bool bUseScale, const struct FTransform& ReturnValue);
	float GetTransformAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, bool bUseScale, const struct FTransform& ReturnValue);
	float GetTimeAtDistanceAlongSpline(float ReturnValue);
	bool GetTangentAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetTangentAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetTangentAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetTangentAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetSplinePointType(int32* PointIndex, enum class ESplinePointType ReturnValue);
	void GetSplineLength(float ReturnValue);
	bool GetScaleAtTime(const struct FVector& ReturnValue);
	void GetScaleAtSplinePoint(int32* PointIndex, const struct FVector& ReturnValue);
	void GetScaleAtSplineInputKey(float* InKey, const struct FVector& ReturnValue);
	float GetScaleAtDistanceAlongSpline(const struct FVector& ReturnValue);
	bool GetRotationAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FRotator& ReturnValue);
	void GetRotationAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FRotator& ReturnValue);
	void GetRotationAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FRotator& ReturnValue);
	float GetRotationAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FRotator& ReturnValue);
	bool GetRollAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, float ReturnValue);
	void GetRollAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, float ReturnValue);
	void GetRollAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, float ReturnValue);
	float GetRollAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, float ReturnValue);
	bool GetRightVectorAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetRightVectorAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetRightVectorAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetRightVectorAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetNumberOfSplineSegments(int32 ReturnValue);
	void GetNumberOfSplinePoints(int32 ReturnValue);
	bool GetLocationAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetLocationAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetLocationAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetLocationAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetLocationAndTangentAtSplinePoint(int32* PointIndex, struct FVector* Location, struct FVector* Tangent, enum class ESplineCoordinateSpace* CoordinateSpace);
	struct FVector GetLocalLocationAndTangentAtSplinePoint(int32* PointIndex);
	void GetLeaveTangentAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetInputKeyValueAtDistanceAlongSpline(float ReturnValue);
	float GetInputKeyAtDistanceAlongSpline(float ReturnValue);
	void GetFloatPropertyAtSplinePoint(int32* Index, class FName PropertyName, float ReturnValue);
	void GetFloatPropertyAtSplineInputKey(float* InKey, class FName PropertyName, float ReturnValue);
	void GetDistanceAlongSplineAtSplinePoint(int32* PointIndex, float ReturnValue);
	void GetDistanceAlongSplineAtSplineInputKey(float* InKey, float ReturnValue);
	bool GetDirectionAtTime(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetDirectionAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetDirectionAtSplineInputKey(float* InKey, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	float GetDirectionAtDistanceAlongSpline(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetDefaultUpVector(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	void GetArriveTangentAtSplinePoint(int32* PointIndex, enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	struct FVector FindUpVectorClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	struct FVector FindTransformClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, bool bUseScale, const struct FTransform& ReturnValue);
	struct FVector FindTangentClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	struct FVector FindScaleClosestToWorldLocation(const struct FVector& ReturnValue);
	struct FVector FindRotationClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FRotator& ReturnValue);
	struct FVector FindRollClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, float ReturnValue);
	struct FVector FindRightVectorClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	struct FVector FindLocationClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	struct FVector FindInputKeyClosestToWorldLocation(float ReturnValue);
	struct FVector FindDirectionClosestToWorldLocation(enum class ESplineCoordinateSpace* CoordinateSpace, const struct FVector& ReturnValue);
	TArray<double> DivideSplineIntoPolylineRecursiveWithDistances(enum class ESplineCoordinateSpace* CoordinateSpace, bool ReturnValue);
	TArray<struct FVector> DivideSplineIntoPolylineRecursive(enum class ESplineCoordinateSpace* CoordinateSpace, bool ReturnValue);
	TArray<struct FVector> ConvertSplineToPolyLine(enum class ESplineCoordinateSpace* CoordinateSpace, bool ReturnValue);
	TArray<struct FVector> ConvertSplineSegmentToPolyLine(enum class ESplineCoordinateSpace* CoordinateSpace, bool ReturnValue);
	bool ClearSplinePoints();
	void AddSplineWorldPoint(struct FVector* Position);
	bool AddSplinePointAtIndex(struct FVector* Position, int32* Index, enum class ESplineCoordinateSpace* CoordinateSpace);
	bool AddSplinePoint(struct FVector* Position, enum class ESplineCoordinateSpace* CoordinateSpace);
	void AddSplineLocalPoint(struct FVector* Position);
	bool AddPoints(TArray<struct FSplinePoint>* Points);
	bool AddPoint();
};

// 0x108 (0x870 - 0x768)
// Class Engine.SplineMeshComponent
class USplineMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_32EA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSplineMeshParams                     SplineParams;                                      // 0x770(0xB0)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SplineUpDir;                                       // 0x820(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        SplineBoundaryMin;                                 // 0x838(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FGuid                                 CachedMeshBodySetupGuid;                           // 0x83C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32EB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UBodySetup*                            BodySetup;                                         // 0x850(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)
	float                                        SplineBoundaryMax;                                 // 0x858(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bAllowSplineEditingPerInstance : 1;                // Mask: 0x1, PropSize: 0x10x85C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bSmoothInterpRollScale : 1;                        // Mask: 0x2, PropSize: 0x10x85C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bMeshDirty : 1;                                    // Mask: 0x4, PropSize: 0x10x85C(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_231 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class ESplineMeshAxis                   ForwardAxis;                                       // 0x85D(0x1)(Edit, BlueprintVisible, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_32EE[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        VirtualTextureMainPassMaxDrawDistance;             // 0x860(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bNeverNeedsCookedCollisionData : 1;                // Mask: 0x1, PropSize: 0x10x864(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_32EF[0xB];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USplineMeshComponent* GetDefaultObj();

	void UpdateMesh();
	bool SetStartTangent(const struct FVector& StartTangent);
	bool SetStartScale(const struct FVector2D& StartScale);
	bool SetStartRoll(float StartRoll);
	bool SetStartPosition();
	bool SetStartOffset(const struct FVector2D& StartOffset);
	bool SetStartAndEnd(const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent);
	bool SetSplineUpDir();
	bool SetForwardAxis();
	bool SetEndTangent(const struct FVector& EndTangent);
	bool SetEndScale(const struct FVector2D& EndScale);
	bool SetEndRoll(float EndRoll);
	bool SetEndPosition(const struct FVector& EndPos);
	bool SetEndOffset(const struct FVector2D& EndOffset);
	bool SetBoundaryMin();
	bool SetBoundaryMax();
	void GetStartTangent(const struct FVector& ReturnValue);
	void GetStartScale(const struct FVector2D& ReturnValue);
	void GetStartRoll(float ReturnValue);
	void GetStartPosition(const struct FVector& ReturnValue);
	void GetStartOffset(const struct FVector2D& ReturnValue);
	void GetSplineUpDir(const struct FVector& ReturnValue);
	void GetForwardAxis(enum class ESplineMeshAxis ReturnValue);
	void GetEndTangent(const struct FVector& ReturnValue);
	void GetEndScale(const struct FVector2D& ReturnValue);
	void GetEndRoll(float ReturnValue);
	void GetEndPosition(const struct FVector& ReturnValue);
	void GetEndOffset(const struct FVector2D& ReturnValue);
	void GetBoundaryMin(float ReturnValue);
	void GetBoundaryMax(float ReturnValue);
};

// 0x8 (0x470 - 0x468)
// Class Engine.SpotLightComponent
class USpotLightComponent : public UPointLightComponent
{
public:
	float                                        InnerConeAngle;                                    // 0x468(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config)
	float                                        OuterConeAngle;                                    // 0x46C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config)

	static class UClass* StaticClass();
	static class USpotLightComponent* GetDefaultObj();

	float SetOuterConeAngle();
	float SetInnerConeAngle();
};

// 0x78 (0x340 - 0x2C8)
// Class Engine.VolumetricCloudComponent
class UVolumetricCloudComponent : public USceneComponent
{
public:
	float                                        LayerBottomAltitude;                               // 0x2C8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LayerHeight;                                       // 0x2CC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TracingStartMaxDistance;                           // 0x2D0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EVolumetricCloudTracingMaxDistanceMode TracingMaxDistanceMode;                            // 0x2D4(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_330C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TracingMaxDistance;                                // 0x2D8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PlanetRadius;                                      // 0x2DC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                GroundAlbedo;                                      // 0x2E0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_330D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    Material;                                          // 0x2E8(0x8)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        bUsePerSampleAtmosphericLightTransmittance : 1;    // Mask: 0x1, PropSize: 0x10x2F0(0x1)(Edit, BlueprintReadOnly, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_232 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_330E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SkyLightCloudBottomOcclusion;                      // 0x2F4(0x4)(ConstParm, Net, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ViewSampleCountScale;                              // 0x2F8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReflectionViewSampleCountScaleValue;               // 0x2FC(0x4)(BlueprintVisible, Parm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReflectionViewSampleCountScale;                    // 0x300(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ReflectionSampleCountScale;                        // 0x304(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowViewSampleCountScale;                        // 0x308(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowReflectionViewSampleCountScaleValue;         // 0x30C(0x4)(ConstParm, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowReflectionViewSampleCountScale;              // 0x310(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowReflectionSampleCountScale;                  // 0x314(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ShadowTracingDistance;                             // 0x318(0x4)(ConstParm, BlueprintReadOnly, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        StopTracingTransmittanceThreshold;                 // 0x31C(0x4)(GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AerialPespectiveRayleighScatteringStartDistance;   // 0x320(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AerialPespectiveRayleighScatteringFadeDistance;    // 0x324(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AerialPespectiveMieScatteringStartDistance;        // 0x328(0x4)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AerialPespectiveMieScatteringFadeDistance;         // 0x32C(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3312[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVolumetricCloudComponent* GetDefaultObj();

	void SetViewSampleCountScale(float* NewValue);
	void SetTracingStartMaxDistance(float* NewValue);
	void SetTracingMaxDistance(float* NewValue);
	void SetStopTracingTransmittanceThreshold(float* NewValue);
	void SetSkyLightCloudBottomOcclusion(float* NewValue);
	void SetShadowViewSampleCountScale(float* NewValue);
	void SetShadowTracingDistance(float* NewValue);
	void SetShadowReflectionViewSampleCountScale(float* NewValue);
	void SetShadowReflectionSampleCountScale(float* NewValue);
	void SetReflectionViewSampleCountScale(float* NewValue);
	void SetReflectionSampleCountScale(float* NewValue);
	void SetPlanetRadius(float* NewValue);
	void SetMaterial(class UMaterialInterface** NewValue);
	void SetLayerHeight(float* NewValue);
	void SetLayerBottomAltitude(float* NewValue);
	void SetGroundAlbedo(struct FColor* NewValue);
	void SetbUsePerSampleAtmosphericLightTransmittance(bool* NewValue);
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.VolumetricCloud
class AVolumetricCloud : public AInfo
{
public:
	class UVolumetricCloudComponent*             VolumetricCloudComponent;                          // 0x4C8(0x8)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class AVolumetricCloud* GetDefaultObj();

};

// 0x60 (0x118 - 0xB8)
// Class Engine.WorldPartitionStreamingSourceComponent
class UWorldPartitionStreamingSourceComponent : public UActorComponent
{
public:
	uint8                                        Pad_3318[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EStreamingSourceTargetBehavior    TargetBehavior;                                    // 0xC0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3319[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          TargetGrids;                                       // 0xC8(0x10)(ExportObject, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  TargetGrid;                                        // 0xD8(0x8)(ConstParm, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                DebugColor;                                        // 0xE0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_331A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UHLODLayer*>                    TargetHLODLayers;                                  // 0xE8(0x10)(Edit, ExportObject, BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UHLODLayer*                            TargetHLODLayer;                                   // 0xF8(0x8)(BlueprintReadOnly, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FStreamingSourceShape>         Shapes;                                            // 0x100(0x10)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EStreamingSourcePriority          Priority;                                          // 0x110(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bStreamingSourceEnabled;                           // 0x111(0x1)(Edit, ConstParm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EStreamingSourceTargetState       TargetState;                                       // 0x112(0x1)(Edit, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_331B[0x5];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionStreamingSourceComponent* GetDefaultObj();

	void IsStreamingSourceEnabled(bool ReturnValue);
	void IsStreamingCompleted(bool ReturnValue);
	void EnableStreamingSource();
	void DisableStreamingSource();
};

// 0x78 (0xA0 - 0x28)
// Class Engine.CurveTable
class UCurveTable : public UObject
{
public:
	uint8                                        Pad_331C[0x78];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCurveTable* GetDefaultObj();

};

// 0x28 (0xC8 - 0xA0)
// Class Engine.CompositeCurveTable
class UCompositeCurveTable : public UCurveTable
{
public:
	TArray<class UCurveTable*>                   ParentTables;                                      // 0xA0(0x10)(EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UCurveTable*>                   OldParentTables;                                   // 0xB0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_331E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCompositeCurveTable* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class Engine.CompositeDataTable
class UCompositeDataTable : public UDataTable
{
public:
	TArray<class UDataTable*>                    ParentTables;                                      // 0xB0(0x10)(EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UDataTable*>                    OldParentTables;                                   // 0xC0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3320[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCompositeDataTable* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Engine.EnumCookedMetaData
class UEnumCookedMetaData : public UObject
{
public:
	struct FObjectCookedMetaDataStore            EnumMetaData;                                      // 0x28(0x50)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UEnumCookedMetaData* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class Engine.StructCookedMetaData
class UStructCookedMetaData : public UObject
{
public:
	struct FStructCookedMetaDataStore            StructMetaData;                                    // 0x28(0xA0)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UStructCookedMetaData* GetDefaultObj();

};

// 0xF0 (0x118 - 0x28)
// Class Engine.ClassCookedMetaData
class UClassCookedMetaData : public UObject
{
public:
	struct FStructCookedMetaDataStore            ClassMetaData;                                     // 0x28(0xA0)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, struct FStructCookedMetaDataStore> FunctionsMetaData;                                 // 0xC8(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UClassCookedMetaData* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Engine.StreamingSettings
class UStreamingSettings : public UDeveloperSettings
{
public:
	uint8                                        AsyncLoadingThreadEnabled : 1;                     // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        WarnIfTimeLimitExceeded : 1;                       // Mask: 0x2, PropSize: 0x10x38(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_233 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3323[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TimeLimitExceededMultiplier;                       // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeLimitExceededMinTime;                          // 0x40(0x4)(ConstParm, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MinBulkDataSizeForAsyncLoading;                    // 0x44(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        UseBackgroundLevelStreaming : 1;                   // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, ConstParm, Net, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        AsyncLoadingUseFullTimeLimit : 1;                  // Mask: 0x2, PropSize: 0x10x48(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_234 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3325[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AsyncLoadingTimeLimit;                             // 0x4C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, SubobjectReference)
	float                                        PriorityAsyncLoadingExtraTime;                     // 0x50(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, Config, SubobjectReference)
	float                                        LevelStreamingActorsUpdateTimeLimit;               // 0x54(0x4)(Edit, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PriorityLevelStreamingActorsUpdateExtraTime;       // 0x58(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LevelStreamingComponentsRegistrationGranularity;   // 0x5C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LevelStreamingAddPrimitiveGranularity;             // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LevelStreamingUnregisterComponentsTimeLimit;       // 0x64(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LevelStreamingComponentsUnregistrationGranularity; // 0x68(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        FlushStreamingOnExit : 1;                          // Mask: 0x1, PropSize: 0x10x6C(0x1)(Edit, Parm, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        EventDrivenLoaderEnabled : 1;                      // Mask: 0x2, PropSize: 0x10x6C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_332A[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStreamingSettings* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class Engine.GarbageCollectionSettings
class UGarbageCollectionSettings : public UDeveloperSettings
{
public:
	float                                        TimeBetweenPurgingPendingKillObjects;              // 0x38(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        FlushStreamingOnGC : 1;                            // Mask: 0x1, PropSize: 0x10x3C(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        AllowParallelGC : 1;                               // Mask: 0x2, PropSize: 0x10x3C(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        IncrementalBeginDestroyEnabled : 1;                // Mask: 0x4, PropSize: 0x10x3C(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        MultithreadedDestructionEnabled : 1;               // Mask: 0x8, PropSize: 0x10x3C(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        CreateGCClusters : 1;                              // Mask: 0x10, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        AssetClusteringEnabled : 1;                        // Mask: 0x20, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ActorClusteringEnabled : 1;                        // Mask: 0x40, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BlueprintClusteringEnabled : 1;                    // Mask: 0x80, PropSize: 0x10x3C(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        UseDisregardForGCOnDedicatedServers : 1;           // Mask: 0x1, PropSize: 0x10x3D(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        VerifyGCObjectNames : 1;                           // Mask: 0x2, PropSize: 0x10x3D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        VerifyUObjectsAreNotFGCObjects : 1;                // Mask: 0x4, PropSize: 0x10x3D(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        PendingKillEnabled : 1;                            // Mask: 0x8, PropSize: 0x10x3D(0x1)(EditFixedSize, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_235 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_332F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinGCClusterSize;                                  // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        NumRetriesBeforeForcingGC;                         // 0x44(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxObjectsNotConsideredByGC;                       // 0x48(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SizeOfPermanentObjectPool;                         // 0x4C(0x4)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxObjectsInGame;                                  // 0x50(0x4)(Edit, ConstParm, Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxObjectsInEditor;                                // 0x54(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UGarbageCollectionSettings* GetDefaultObj();

};

// 0x18 (0x530 - 0x518)
// Class Engine.CullDistanceVolume
class ACullDistanceVolume : public AVolume
{
public:
	TArray<struct FCullDistanceSizePair>         CullDistances;                                     // 0x518(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnabled : 1;                                      // Mask: 0x1, PropSize: 0x10x528(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        Pad_3332[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ACullDistanceVolume* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.CurveBase
class UCurveBase : public UObject
{
public:
	uint8                                        Pad_3335[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCurveBase* GetDefaultObj();

	float GetValueRange();
	void GetTimeRange(float MinTime, float* MaxTime);
};

// 0x0 (0x28 - 0x28)
// Class Engine.CurveEdPresetCurve
class UCurveEdPresetCurve : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCurveEdPresetCurve* GetDefaultObj();

};

// 0x88 (0xB8 - 0x30)
// Class Engine.CurveFloat
class UCurveFloat : public UCurveBase
{
public:
	struct FRichCurve                            FloatCurve;                                        // 0x30(0x80)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, EditConst)
	bool                                         bIsEventCurve;                                     // 0xB0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3337[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCurveFloat* GetDefaultObj();

	float GetFloatValue(float ReturnValue);
};

// 0x220 (0x250 - 0x30)
// Class Engine.CurveLinearColor
class UCurveLinearColor : public UCurveBase
{
public:
	struct FRichCurve                            FloatCurves[0x4];                                  // 0x30(0x200)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustHue;                                         // 0x230(0x4)(BlueprintVisible, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustSaturation;                                  // 0x234(0x4)(ConstParm, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustBrightness;                                  // 0x238(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustBrightnessCurve;                             // 0x23C(0x4)(Edit, ConstParm, Net, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustVibrance;                                    // 0x240(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustMinAlpha;                                    // 0x244(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdjustMaxAlpha;                                    // 0x248(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_333C[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCurveLinearColor* GetDefaultObj();

	float GetUnadjustedLinearColorValue(const struct FLinearColor& ReturnValue);
	float GetLinearColorValue(const struct FLinearColor& ReturnValue);
	float GetClampedLinearColorValue(const struct FLinearColor& ReturnValue);
};

// 0x28 (0x2B0 - 0x288)
// Class Engine.CurveLinearColorAtlas
class UCurveLinearColorAtlas : public UTexture2D
{
public:
	uint32                                       TextureSize;                                       // 0x288(0x4)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bSquareResolution : 1;                             // Mask: 0x1, PropSize: 0x10x28C(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_236 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3342[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       TextureHeight;                                     // 0x290(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3343[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UCurveLinearColor*>             GradientCurves;                                    // 0x298(0x10)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3344[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCurveLinearColorAtlas* GetDefaultObj();

	void GetCurvePosition(class UCurveLinearColor** InCurve, float* Position, bool ReturnValue);
};

// 0x180 (0x1B0 - 0x30)
// Class Engine.CurveVector
class UCurveVector : public UCurveBase
{
public:
	struct FRichCurve                            FloatCurves[0x3];                                  // 0x30(0x180)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UCurveVector* GetDefaultObj();

	float GetVectorValue(const struct FVector& ReturnValue);
};

// 0x10 (0x40 - 0x30)
// Class Engine.DataDrivenCVarEngineSubsystem
class UDataDrivenCVarEngineSubsystem : public UEngineSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnDataDrivenCVarDelegate;                          // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataDrivenCVarEngineSubsystem* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class Engine.DataDrivenConsoleVariableSettings
class UDataDrivenConsoleVariableSettings : public UDeveloperSettings
{
public:
	uint8                                        Pad_3346[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDataDrivenConsoleVariable>    CVarsArray;                                        // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3347[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataDrivenConsoleVariableSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DataTableFunctionLibrary
class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UDataTableFunctionLibrary* GetDefaultObj();

	class UDataTable* GetDataTableRowNames(TArray<class FName>* OutRowNames);
	class UDataTable* GetDataTableRowFromName(class FName* RowName, struct FTableRowBase* OutRow, bool ReturnValue);
	class UDataTable* GetDataTableColumnAsString(class FName PropertyName, const TArray<class FString>& ReturnValue);
	enum class EEvaluateCurveTableResult EvaluateCurveTableRow(class FName* RowName, float* OutXY, class FString* ContextString);
	class UDataTable* DoesDataTableRowExist(class FName* RowName, bool ReturnValue);
};

// 0x188 (0xC88 - 0xB00)
// Class Engine.DebugCameraController
class ADebugCameraController : public APrimalPlayerController
{
public:
	uint8                                        bShowSelectedInfo : 1;                             // Mask: 0x1, PropSize: 0x10xB00(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        bIsFrozenRendering : 1;                            // Mask: 0x2, PropSize: 0x10xB00(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsOrbitingSelectedActor : 1;                      // Mask: 0x4, PropSize: 0x10xB00(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOrbitPivotUseCenter : 1;                          // Mask: 0x8, PropSize: 0x10xB00(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableBufferVisualization : 1;                    // Mask: 0x10, PropSize: 0x10xB00(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableBufferVisualizationFullMode : 1;            // Mask: 0x20, PropSize: 0x10xB00(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsBufferVisualizationInputSetup : 1;              // Mask: 0x40, PropSize: 0x10xB00(0x1)(ConstParm, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLastDisplayEnabled : 1;                           // Mask: 0x80, PropSize: 0x10xB00(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3360[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDrawFrustumComponent*                 DrawFrustum;                                       // 0xB08(0x8)(BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class AActor>                 SelectedActor;                                     // 0xB10(0x8)(ExportObject, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class UPrimitiveComponent>    SelectedComponent;                                 // 0xB18(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FHitResult                            SelectedHitPoint;                                  // 0xB20(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class APlayerController*                     OriginalControllerRef;                             // 0xC10(0x8)(Edit, ExportObject, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UPlayer*                               OriginalPlayer;                                    // 0xC18(0x8)(Edit, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SpeedScale;                                        // 0xC20(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InitialMaxSpeed;                                   // 0xC24(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InitialAccel;                                      // 0xC28(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InitialDecel;                                      // 0xC2C(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3363[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADebugCameraController* GetDefaultObj();

	void ToggleDisplay();
	void ShowDebugSelectedInfo();
	void SetPawnMovementSpeedScale(float* NewSpeedScale);
	void ReceiveOnDeactivate(class APlayerController** RestoredPC);
	struct FHitResult ReceiveOnActorSelected(class AActor** NewSelectedActor, struct FVector* SelectHitLocation, struct FVector* SelectHitNormal);
	void ReceiveOnActivate(class APlayerController** OriginalPC);
	void GetSelectedActor(class AActor* ReturnValue);
};

// 0x10 (0x48 - 0x38)
// Class Engine.DebugCameraControllerSettings
class UDebugCameraControllerSettings : public UDeveloperSettings
{
public:
	TArray<struct FDebugCameraControllerSettingsViewModeIndex> CycleViewModes;                                    // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDebugCameraControllerSettings* GetDefaultObj();

};

// 0x0 (0x5C0 - 0x5C0)
// Class Engine.DebugCameraHUD
class ADebugCameraHUD : public AHUD
{
public:

	static class UClass* StaticClass();
	static class ADebugCameraHUD* GetDefaultObj();

};

// 0x58 (0x6F0 - 0x698)
// Class Engine.DebugDrawComponent
class UDebugDrawComponent : public UPrimitiveComponent
{
public:
	uint8                                        Pad_3365[0x58];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDebugDrawComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DebugDrawService
class UDebugDrawService : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UDebugDrawService* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ReporterBase
class UReporterBase : public UObject
{
public:
	uint8                                        Pad_3366[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UReporterBase* GetDefaultObj();

};

// 0x98 (0xC8 - 0x30)
// Class Engine.ReporterGraph
class UReporterGraph : public UReporterBase
{
public:
	uint8                                        Pad_3368[0x98];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UReporterGraph* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.DecalActor
class ADecalActor : public AActor
{
public:
	class UDecalComponent*                       Decal;                                             // 0x4C8(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class ADecalActor* GetDefaultObj();

	void SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);
	void GetDecalMaterial(class UMaterialInterface* ReturnValue);
	void CreateDynamicMaterialInstance(class UMaterialInstanceDynamic* ReturnValue);
};

// 0x0 (0x538 - 0x538)
// Class Engine.DefaultPhysicsVolume
class ADefaultPhysicsVolume : public APhysicsVolume
{
public:

	static class UClass* StaticClass();
	static class ADefaultPhysicsVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DeformableInterface
class IDeformableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDeformableInterface* GetDefaultObj();

};

// 0xCC0 (0x1450 - 0x790)
// Class Engine.DemoNetDriver
class UDemoNetDriver : public UNetDriver
{
public:
	uint8                                        Pad_336B[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	TMap<class FString, struct FRollbackNetStartupActorInfo> RollbackNetStartupActors;                          // 0x7C8(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_336C[0xE4];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        CheckpointSaveMaxMSPerFrame;                       // 0x8FC(0x4)(ExportObject, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_336D[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FMulticastRecordOptions>       MulticastRecordOptions;                            // 0x918(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	TArray<class APlayerController*>             SpectatorControllers;                              // 0x928(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_336E[0xB18];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDemoNetDriver* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DestructibleInterface
class IDestructibleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IDestructibleInterface* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.TextureLODSettings
class UTextureLODSettings : public UObject
{
public:
	TArray<struct FTextureLODGroup>              TextureLODGroups;                                  // 0x28(0x10)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UTextureLODSettings* GetDefaultObj();

};

// 0x98 (0xD0 - 0x38)
// Class Engine.DeviceProfile
class UDeviceProfile : public UTextureLODSettings
{
public:
	class FString                                DeviceType;                                        // 0x38(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst)
	class FString                                BaseProfileName;                                   // 0x48(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bIsVisibleForAssets : 1;                           // Mask: 0x1, PropSize: 0x10x58(0x1)(ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_237 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3373[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDeviceProfile*                        Parent;                                            // 0x60(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_3374[0x28];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        CVars;                                             // 0x90(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FDPMatchingRulestruct>         MatchingRules;                                     // 0xA0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3375[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDeviceProfile* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Engine.DeviceProfileManager
class UDeviceProfileManager : public UObject
{
public:
	TArray<class UDeviceProfile*>                Profiles;                                          // 0x28(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<class UDeviceProfile*>                BackupProfiles;                                    // 0x38(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3377[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDeviceProfileManager* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.DialogueVoice
class UDialogueVoice : public UObject
{
public:
	enum class EGrammaticalGender                Gender;                                            // 0x28(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	enum class EGrammaticalNumber                Plurality;                                         // 0x29(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3378[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 LocalizationGUID;                                  // 0x2C(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3379[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDialogueVoice* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Engine.DialogueWave
class UDialogueWave : public UObject
{
public:
	uint8                                        bMature : 1;                                       // Mask: 0x1, PropSize: 0x10x28(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference)
	uint8                                        bOverride_SubtitleOverride : 1;                    // Mask: 0x2, PropSize: 0x10x28(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_238 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_337B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SpokenText;                                        // 0x30(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                SubtitleOverride;                                  // 0x40(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FDialogueContextMapping>       ContextMappings;                                   // 0x50(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FGuid                                 LocalizationGUID;                                  // 0x60(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UDialogueWave* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.DocumentationActor
class ADocumentationActor : public AActor
{
public:
	uint8                                        Pad_337C[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ADocumentationActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DPICustomScalingRule
class UDPICustomScalingRule : public UObject
{
public:

	static class UClass* StaticClass();
	static class UDPICustomScalingRule* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Engine.EdGraphNode_Documentation
class UEdGraphNode_Documentation : public UEdGraphNode
{
public:
	class FString                                Link;                                              // 0x98(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                Excerpt;                                           // 0xA8(0x10)(ConstParm, ExportObject, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UEdGraphNode_Documentation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ThumbnailInfo
class UThumbnailInfo : public UObject
{
public:

	static class UClass* StaticClass();
	static class UThumbnailInfo* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementAssetDataInterface
class UActorElementAssetDataInterface : public UObject
{
public:
	uint8                                        Pad_3384[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementAssetDataInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementCounterInterface
class UActorElementCounterInterface : public UObject
{
public:
	uint8                                        Pad_3386[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementCounterInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementHierarchyInterface
class UActorElementHierarchyInterface : public UObject
{
public:
	uint8                                        Pad_3389[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementHierarchyInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementObjectInterface
class UActorElementObjectInterface : public UObject
{
public:
	uint8                                        Pad_338D[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementObjectInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementSelectionInterface
class UActorElementSelectionInterface : public UObject
{
public:
	uint8                                        Pad_3390[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementSelectionInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorElementWorldInterface
class UActorElementWorldInterface : public UObject
{
public:
	uint8                                        Pad_3393[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorElementWorldInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ComponentElementCounterInterface
class UComponentElementCounterInterface : public UObject
{
public:
	uint8                                        Pad_3394[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UComponentElementCounterInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ComponentElementHierarchyInterface
class UComponentElementHierarchyInterface : public UObject
{
public:
	uint8                                        Pad_3396[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UComponentElementHierarchyInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ComponentElementObjectInterface
class UComponentElementObjectInterface : public UObject
{
public:
	uint8                                        Pad_3397[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UComponentElementObjectInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ComponentElementSelectionInterface
class UComponentElementSelectionInterface : public UObject
{
public:
	uint8                                        Pad_3398[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UComponentElementSelectionInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ComponentElementWorldInterface
class UComponentElementWorldInterface : public UObject
{
public:
	uint8                                        Pad_339A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UComponentElementWorldInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.EngineElementsLibrary
class UEngineElementsLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UEngineElementsLibrary* GetDefaultObj();

};

// 0x800 (0x828 - 0x28)
// Class Engine.TypedElementCommonActions
class UTypedElementCommonActions : public UObject
{
public:
	uint8                                        Pad_33BB[0x800];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTypedElementCommonActions* GetDefaultObj();

	struct FTypedElementPasteOptions PasteNormalizedElementsFromString(struct FScriptTypedElementListProxy* ElementList, class UWorld* World, const class FString& InputString, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FTypedElementPasteOptions PasteElementsFromString(class UTypedElementSelectionSet* SelectionSet, class UWorld* World, const class FString& InputString, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FTypedElementPasteOptions K2_PasteNormalizedElements(struct FScriptTypedElementListProxy* ElementList, class UWorld* World, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FTypedElementPasteOptions K2_PasteElements(class UTypedElementSelectionSet* SelectionSet, class UWorld* World, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FVector K2_DuplicateSelectedElements(class UTypedElementSelectionSet* SelectionSet, class UWorld* World, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FVector DuplicateNormalizedElements(struct FScriptTypedElementListProxy* ElementList, class UWorld* World, const TArray<struct FScriptTypedElementHandle>& ReturnValue);
	struct FTypedElementDeletionOptions DeleteSelectedElements(class UTypedElementSelectionSet* SelectionSet, class UWorld* World, bool ReturnValue);
	struct FTypedElementDeletionOptions DeleteNormalizedElements(struct FScriptTypedElementListProxy* ElementList, class UWorld* World, bool ReturnValue);
	class FString CopySelectedElementsToString(class UTypedElementSelectionSet* SelectionSet, bool ReturnValue);
	void CopySelectedElements(class UTypedElementSelectionSet* SelectionSet, bool ReturnValue);
	class FString CopyNormalizedElementsToString(struct FScriptTypedElementListProxy* ElementList, bool ReturnValue);
	void CopyNormalizedElements(struct FScriptTypedElementListProxy* ElementList, bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.TypedElementWorldInterface
class ITypedElementWorldInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ITypedElementWorldInterface* GetDefaultObj();

	struct FScriptTypedElementHandle SetWorldTransform(const struct FTransform& InTransform, bool ReturnValue);
	struct FScriptTypedElementHandle SetRelativeTransform(const struct FTransform& InTransform, bool ReturnValue);
	struct FVector SetPivotOffset(bool ReturnValue);
	class UWorld* PromoteElement(const struct FScriptTypedElementHandle& ReturnValue);
	struct FScriptTypedElementHandle NotifyMovementStarted();
	struct FScriptTypedElementHandle NotifyMovementOngoing();
	struct FScriptTypedElementHandle NotifyMovementEnded();
	struct FScriptTypedElementHandle IsTemplateElement(bool ReturnValue);
	struct FTransform GetWorldTransform(bool ReturnValue);
	struct FTransform GetRelativeTransform(bool ReturnValue);
	struct FVector GetPivotOffset(bool ReturnValue);
	struct FScriptTypedElementHandle GetOwnerWorld(class UWorld* ReturnValue);
	struct FScriptTypedElementHandle GetOwnerLevel(class ULevel* ReturnValue);
	struct FBoxSphereBounds GetBounds(bool ReturnValue);
	struct FVector DuplicateElement(class UWorld** InWorld, const struct FScriptTypedElementHandle& ReturnValue);
	struct FTypedElementDeletionOptions DeleteElement(class UWorld** InWorld, bool ReturnValue);
	struct FScriptTypedElementHandle CanPromoteElement(bool ReturnValue);
	enum class ETypedElementWorldType CanMoveElement(bool ReturnValue);
	struct FScriptTypedElementHandle CanEditElement(bool ReturnValue);
	struct FScriptTypedElementHandle CanDuplicateElement(bool ReturnValue);
	struct FScriptTypedElementHandle CanDeleteElement(bool ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class Engine.ObjectElementAssetDataInterface
class UObjectElementAssetDataInterface : public UObject
{
public:
	uint8                                        Pad_3425[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectElementAssetDataInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ObjectElementCounterInterface
class UObjectElementCounterInterface : public UObject
{
public:
	uint8                                        Pad_3427[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectElementCounterInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ObjectElementObjectInterface
class UObjectElementObjectInterface : public UObject
{
public:
	uint8                                        Pad_3428[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectElementObjectInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.ObjectElementSelectionInterface
class UObjectElementSelectionInterface : public UObject
{
public:
	uint8                                        Pad_342B[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectElementSelectionInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.SMInstanceElementAssetDataInterface
class USMInstanceElementAssetDataInterface : public UObject
{
public:
	uint8                                        Pad_342D[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USMInstanceElementAssetDataInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.SMInstanceElementHierarchyInterface
class USMInstanceElementHierarchyInterface : public UObject
{
public:
	uint8                                        Pad_3431[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USMInstanceElementHierarchyInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SMInstanceElementIdMapTransactor
class USMInstanceElementIdMapTransactor : public UObject
{
public:

	static class UClass* StaticClass();
	static class USMInstanceElementIdMapTransactor* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.SMInstanceElementSelectionInterface
class USMInstanceElementSelectionInterface : public UObject
{
public:
	uint8                                        Pad_3433[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USMInstanceElementSelectionInterface* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.SMInstanceElementWorldInterface
class USMInstanceElementWorldInterface : public UObject
{
public:
	uint8                                        Pad_3434[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USMInstanceElementWorldInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LocalMessage
class ULocalMessage : public UObject
{
public:

	static class UClass* StaticClass();
	static class ULocalMessage* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Engine.EngineMessage
class UEngineMessage : public ULocalMessage
{
public:
	class FString                                FailedPlaceMessage;                                // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                MaxedOutMessage;                                   // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                EnteredMessage;                                    // 0x48(0x10)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                LeftMessage;                                       // 0x58(0x10)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                GlobalNameChange;                                  // 0x68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                SpecEnteredMessage;                                // 0x78(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                NewPlayerMessage;                                  // 0x88(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                NewSpecMessage;                                    // 0x98(0x10)(Edit, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UEngineMessage* GetDefaultObj();

};

// 0x10 (0x50 - 0x40)
// Class Engine.AutoDestroySubsystem
class UAutoDestroySubsystem : public UTickableWorldSubsystem
{
public:
	TArray<class AActor*>                        ActorsToPoll;                                      // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAutoDestroySubsystem* GetDefaultObj();

	enum class EEndPlayReason OnActorEndPlay(class AActor** Actor);
};

// 0x0 (0x30 - 0x30)
// Class Engine.CancellableAsyncAction
class UCancellableAsyncAction : public UBlueprintAsyncActionBase
{
public:

	static class UClass* StaticClass();
	static class UCancellableAsyncAction* GetDefaultObj();

	void IsActive(bool ReturnValue);
	void Cancel();
};

// 0x0 (0x28 - 0x28)
// Class Engine.LODSyncInterface
class ILODSyncInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILODSyncInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PoseWatchFolder
class UPoseWatchFolder : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPoseWatchFolder* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PoseWatchElement
class UPoseWatchElement : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPoseWatchElement* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PoseWatchPoseElement
class UPoseWatchPoseElement : public UPoseWatchElement
{
public:

	static class UClass* StaticClass();
	static class UPoseWatchPoseElement* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PoseWatch
class UPoseWatch : public UObject
{
public:

	static class UClass* StaticClass();
	static class UPoseWatch* GetDefaultObj();

};

// 0xC8 (0x590 - 0x4C8)
// Class Engine.ServerStatReplicator
class AServerStatReplicator : public AInfo
{
public:
	bool                                         bUpdateStatNet;                                    // 0x4C8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bOverwriteClientStats;                             // 0x4C9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3443[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       Channels;                                          // 0x4CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, GlobalConfig, SubobjectReference)
	uint32                                       InRate;                                            // 0x4D0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutRate;                                           // 0x4D4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3445[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       MaxPacketOverhead;                                 // 0x4DC(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InRateClientMax;                                   // 0x4E0(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InRateClientMin;                                   // 0x4E4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InRateClientAvg;                                   // 0x4E8(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InPacketsClientMax;                                // 0x4EC(0x4)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InPacketsClientMin;                                // 0x4F0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InPacketsClientAvg;                                // 0x4F4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutRateClientMax;                                  // 0x4F8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutRateClientMin;                                  // 0x4FC(0x4)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutRateClientAvg;                                  // 0x500(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutPacketsClientMax;                               // 0x504(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutPacketsClientMin;                               // 0x508(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutPacketsClientAvg;                               // 0x50C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NetNumClients;                                     // 0x510(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InPackets;                                         // 0x514(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutPackets;                                        // 0x518(0x4)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InBunches;                                         // 0x51C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutBunches;                                        // 0x520(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       OutLoss;                                           // 0x524(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       InLoss;                                            // 0x528(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VoiceBytesSent;                                    // 0x52C(0x4)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VoiceBytesRecv;                                    // 0x530(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VoicePacketsSent;                                  // 0x534(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VoicePacketsRecv;                                  // 0x538(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       PercentInVoice;                                    // 0x53C(0x4)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       PercentOutVoice;                                   // 0x540(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumActorChannels;                                  // 0x544(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumConsideredActors;                               // 0x548(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       PrioritizedActors;                                 // 0x54C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumRelevantActors;                                 // 0x550(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumRelevantDeletedActors;                          // 0x554(0x4)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumReplicatedActorAttempts;                        // 0x558(0x4)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumReplicatedActors;                               // 0x55C(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumActors;                                         // 0x560(0x4)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumNetActors;                                      // 0x564(0x4)(ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumDormantActors;                                  // 0x568(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumInitiallyDormantActors;                         // 0x56C(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumNetGUIDsAckd;                                   // 0x570(0x4)(Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumNetGUIDsPending;                                // 0x574(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NumNetGUIDsUnAckd;                                 // 0x578(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       ObjPathBytes;                                      // 0x57C(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NetGUIDOutRate;                                    // 0x580(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NetGUIDInRate;                                     // 0x584(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       NetSaturated;                                      // 0x588(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_344B[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AServerStatReplicator* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.SystemTimeTimecodeProvider
class USystemTimeTimecodeProvider : public UTimecodeProvider
{
public:
	struct FFrameRate                            FrameRate;                                         // 0x30(0x8)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm)
	bool                                         bGenerateFullFrame;                                // 0x38(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseHighPerformanceClock;                          // 0x39(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_344C[0x6];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USystemTimeTimecodeProvider* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Engine.ViewportStatsSubsystem
class UViewportStatsSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_344F[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UViewportStatsSubsystem* GetDefaultObj();

	int32 RemoveDisplayDelegate();
	struct FVector2D AddTimedDisplay(class FText* Text, struct FLinearColor* Color);
	void AddDisplayDelegate(FDelegateProperty_ Delegate, int32 ReturnValue);
};

// 0x1A8 (0x1D0 - 0x28)
// Class Engine.Font
class UFont : public UObject
{
public:
	uint8                                        Pad_3451[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EFontCacheType                    FontCacheType;                                     // 0x30(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3453[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FFontCharacter>                Characters;                                        // 0x38(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	TArray<class UTexture2D*>                    Textures;                                          // 0x48(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        IsRemapped;                                        // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        EmScale;                                           // 0x5C(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Ascent;                                            // 0x60(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Descent;                                           // 0x64(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Leading;                                           // 0x68(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Kerning;                                           // 0x6C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FFontImportOptionsData                ImportOptions;                                     // 0x70(0xB0)(BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        NumCharacters;                                     // 0x120(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3455[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                MaxCharHeight;                                     // 0x128(0x10)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ScalingFactor;                                     // 0x138(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        LegacyFontSize;                                    // 0x13C(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  LegacyFontName;                                    // 0x140(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCompositeFont                        CompositeFont;                                     // 0x148(0x38)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance)
	uint8                                        Pad_3456[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFont* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Engine.FontFace
class UFontFace : public UObject
{
public:
	uint8                                        Pad_3457[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SourceFilename;                                    // 0x30(0x10)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EFontHinting                      Hinting;                                           // 0x40(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EFontLoadingPolicy                LoadingPolicy;                                     // 0x41(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EFontLayoutMethod                 LayoutMethod;                                      // 0x42(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_345A[0x15];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UFontFace* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.AsyncActionHandleSaveGame
class UAsyncActionHandleSaveGame : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            Completed;                                         // 0x30(0x10)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst)
	uint8                                        Pad_346A[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class USaveGame*                             SaveGameObject;                                    // 0x60(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAsyncActionHandleSaveGame* GetDefaultObj();

	int32 AsyncSaveGameToSlot(class UAsyncActionHandleSaveGame* ReturnValue);
	int32 AsyncLoadGameFromSlot(class UAsyncActionHandleSaveGame* ReturnValue);
};

// 0x78 (0xA0 - 0x28)
// Class Engine.ForceFeedbackEffect
class UForceFeedbackEffect : public UObject
{
public:
	TArray<struct FForceFeedbackChannelDetails>  ChannelDetails;                                    // 0x28(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TMap<class FName, struct FForceFeedbackEffectOverridenChannelDetails> PerDeviceOverrides;                                // 0x38(0x50)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UInputDeviceProperty*>          DeviceProperties;                                  // 0x88(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_3471[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UForceFeedbackEffect* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.InputDeviceProperty
class UInputDeviceProperty : public UObject
{
public:
	float                                        PropertyDuration;                                  // 0x28(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3476[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceProperty* GetDefaultObj();

	struct FPlatformUserId ResetDeviceProperty(struct FInputDeviceId* DeviceID);
	float EvaluateDeviceProperty(struct FInputDeviceId* DeviceID);
	struct FPlatformUserId ApplyDeviceProperty(struct FInputDeviceId* DeviceID);
};

// 0x68 (0x98 - 0x30)
// Class Engine.ColorInputDeviceProperty
class UColorInputDeviceProperty : public UInputDeviceProperty
{
public:
	struct FDeviceColorData                      ColorData;                                         // 0x30(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	TMap<class FName, struct FDeviceColorData>   DeviceOverrideData;                                // 0x38(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3478[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UColorInputDeviceProperty* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Engine.ColorInputDeviceCurveProperty
class UColorInputDeviceCurveProperty : public UInputDeviceProperty
{
public:
	struct FDeviceColorCurveData                 ColorData;                                         // 0x30(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	TMap<class FName, struct FDeviceColorCurveData> DeviceOverrideData;                                // 0x40(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3479[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UColorInputDeviceCurveProperty* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.InputDeviceTriggerEffect
class UInputDeviceTriggerEffect : public UInputDeviceProperty
{
public:
	struct FDeviceTriggerBaseData                BaseTriggerData;                                   // 0x30(0x2)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_347A[0xE];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceTriggerEffect* GetDefaultObj();

};

// 0x78 (0xB8 - 0x40)
// Class Engine.InputDeviceTriggerFeedbackProperty
class UInputDeviceTriggerFeedbackProperty : public UInputDeviceTriggerEffect
{
public:
	struct FDeviceTriggerFeedbackData            TriggerData;                                       // 0x40(0x10)(Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, struct FDeviceTriggerFeedbackData> DeviceOverrideData;                                // 0x50(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_347C[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceTriggerFeedbackProperty* GetDefaultObj();

};

// 0x80 (0xC0 - 0x40)
// Class Engine.InputDeviceTriggerResistanceProperty
class UInputDeviceTriggerResistanceProperty : public UInputDeviceTriggerEffect
{
public:
	struct FDeviceTriggerTriggerResistanceData   TriggerData;                                       // 0x40(0x10)(Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, struct FDeviceTriggerTriggerResistanceData> DeviceOverrideData;                                // 0x50(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_347E[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceTriggerResistanceProperty* GetDefaultObj();

};

// 0x80 (0xC0 - 0x40)
// Class Engine.InputDeviceTriggerVibrationProperty
class UInputDeviceTriggerVibrationProperty : public UInputDeviceTriggerEffect
{
public:
	struct FDeviceTriggerTriggerVibrationData    TriggerData;                                       // 0x40(0x18)(Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, struct FDeviceTriggerTriggerVibrationData> DeviceOverrideData;                                // 0x58(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3481[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceTriggerVibrationProperty* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Engine.InputDeviceAudioBasedVibrationProperty
class UInputDeviceAudioBasedVibrationProperty : public UInputDeviceProperty
{
public:
	struct FAudioBasedVibrationData              Data;                                              // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TMap<class FName, struct FAudioBasedVibrationData> DeviceOverrideData;                                // 0x38(0x50)(Edit, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputDeviceAudioBasedVibrationProperty* GetDefaultObj();

};

// 0x168 (0x198 - 0x30)
// Class Engine.InputDeviceSubsystem
class UInputDeviceSubsystem : public UEngineSubsystem
{
public:
	uint8                                        Pad_348B[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	FMulticastInlineDelegateProperty_            OnInputHardwareDeviceChanged;                      // 0x38(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<struct FActiveDeviceProperty>           ActiveProperties;                                  // 0x48(0x50)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<struct FInputDevicePropertyHandle>      PropertiesPendingRemoval;                          // 0x98(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_348C[0xB0];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputDeviceSubsystem* GetDefaultObj();

	void RemoveDevicePropertyHandles(TSet<struct FInputDevicePropertyHandle> HandlesToRemove);
	void RemoveDevicePropertyByHandle(const struct FInputDevicePropertyHandle& HandleToRemove);
	void RemoveAllDeviceProperties();
	void IsPropertyActive(const struct FInputDevicePropertyHandle& Handle, bool ReturnValue);
	void GetMostRecentlyUsedHardwareDevice(const struct FPlatformUserId& InUserId, const struct FHardwareDeviceIdentifier& ReturnValue);
	void GetInputDeviceHardwareIdentifier(const struct FInputDeviceId& InputDevice, const struct FHardwareDeviceIdentifier& ReturnValue);
	void GetActiveDeviceProperty(const struct FInputDevicePropertyHandle& Handle, class UInputDeviceProperty* ReturnValue);
	struct FActivateDevicePropertyParams ActivateDevicePropertyOfClass(class UClass* PropertyClass, const struct FInputDevicePropertyHandle& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.PlayerStateCountLimiterConfig
class UPlayerStateCountLimiterConfig : public UNetObjectCountLimiterConfig
{
public:

	static class UClass* StaticClass();
	static class UPlayerStateCountLimiterConfig* GetDefaultObj();

};

// 0xF8 (0x3C0 - 0x2C8)
// Class Engine.SpringArmComponent
class USpringArmComponent : public USceneComponent
{
public:
	float                                        TargetArmLength;                                   // 0x2C8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_348F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SocketOffset;                                      // 0x2D0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               TargetOffset;                                      // 0x2E8(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProbeSize;                                         // 0x300(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 ProbeChannel;                                      // 0x304(0x1)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3490[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDoCollisionTest : 1;                              // Mask: 0x1, PropSize: 0x10x308(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsePawnControlRotation : 1;                       // Mask: 0x2, PropSize: 0x10x308(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        bInheritPitch : 1;                                 // Mask: 0x4, PropSize: 0x10x308(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInheritYaw : 1;                                   // Mask: 0x8, PropSize: 0x10x308(0x1)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInheritRoll : 1;                                  // Mask: 0x10, PropSize: 0x10x308(0x1)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableCameraLag : 1;                              // Mask: 0x20, PropSize: 0x10x308(0x1)(EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableCameraRotationLag : 1;                      // Mask: 0x40, PropSize: 0x10x308(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseCameraLagSubstepping : 1;                      // Mask: 0x80, PropSize: 0x10x308(0x1)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDrawDebugLagMarkers : 1;                          // Mask: 0x1, PropSize: 0x10x309(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_23E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3491[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CameraLagSpeed;                                    // 0x30C(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraRotationLagSpeed;                            // 0x310(0x4)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraLagMaxTimeStep;                              // 0x314(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CameraLagMaxDistance;                              // 0x318(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bClampToMaxPhysicsDeltaTime : 1;                   // Mask: 0x1, PropSize: 0x10x31C(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3492[0xA3];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USpringArmComponent* GetDefaultObj();

	void IsCollisionFixApplied(bool ReturnValue);
	void GetUnfixedCameraPosition(const struct FVector& ReturnValue);
	void GetTargetRotation(const struct FRotator& ReturnValue);
};

// 0x30 (0x58 - 0x28)
// Class Engine.TouchInterface
class UTouchInterface : public UObject
{
public:
	TArray<struct FTouchInputControl>            Controls;                                          // 0x28(0x10)(BlueprintReadOnly, Parm, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	float                                        ActiveOpacity;                                     // 0x38(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InactiveOpacity;                                   // 0x3C(0x4)(BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeUntilDeactive;                                 // 0x40(0x4)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TimeUntilReset;                                    // 0x44(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ActivationDelay;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bPreventRecenter;                                  // 0x4C(0x1)(BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3494[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        StartupDelay;                                      // 0x50(0x4)(Edit, BlueprintVisible, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3495[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTouchInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.GameplayStatics
class UGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGameplayStatics* GetDefaultObj();

	void UnRetainAllSoundsInSoundClass(class USoundClass* InSoundClass);
	struct FLatentActionInfo UnloadStreamLevelBySoftObjectPtr(TSoftObjectPtr<class UWorld> Level, bool bShouldBlockOnUnload);
	struct FLatentActionInfo UnloadStreamLevel(bool bShouldBlockOnUnload);
	struct FVector SuggestProjectileVelocity_CustomArc(struct FVector* OutLaunchVelocity, const struct FVector& EndPos, float* OverrideGravityZ, float* ArcParam, bool ReturnValue);
	bool SpawnSoundAttached(class USoundBase* Sound, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, enum class EAttachLocation* LocationType, bool* bStopWhenAttachedToDestroyed, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings, bool bAlwaysPlay, class UAudioComponent* ReturnValue);
	bool SpawnSoundAtLocation(class USoundBase* Sound, struct FVector* Location, struct FRotator* Rotation, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings, class UAudioComponent* ReturnValue);
	bool SpawnSound2D(class USoundBase* Sound, float* VolumeMultiplier, float* PitchMultiplier, bool bPersistAcrossLevelTransition, class UAudioComponent* ReturnValue);
	void SpawnObject(class UClass* ObjectClass, class UObject* Outer, class UObject* ReturnValue);
	bool SpawnForceFeedbackAttached(class UForceFeedbackEffect** ForceFeedbackEffect, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, enum class EAttachLocation* LocationType, bool* bStopWhenAttachedToDestroyed, bool bLooping, class UForceFeedbackAttenuation** AttenuationSettings, class UForceFeedbackComponent* ReturnValue);
	bool SpawnForceFeedbackAtLocation(class UForceFeedbackEffect** ForceFeedbackEffect, struct FVector* Location, struct FRotator* Rotation, bool bLooping, class UForceFeedbackAttenuation** AttenuationSettings, class UForceFeedbackComponent* ReturnValue);
	bool SpawnEmitterAttachedNew(class UParticleSystem** EmitterTemplate, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale, enum class EAttachLocation* LocationType, enum class EPSCPoolMethod* PoolingMethod, bool* bDontSpawnOutOfView, bool* bAllowSpawnLoopingFX, class UParticleSystemComponent* ReturnValue);
	bool SpawnEmitterAttached(class UParticleSystem** EmitterTemplate, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, enum class EAttachLocation* LocationType, bool* bDontSpawnOutOfView, bool* bAllowSpawnLoopingFX, float* OverrideSecondsBeforeInactive, class UParticleSystemComponent* ReturnValue);
	bool SpawnEmitterAtLocation(class UParticleSystem** EmitterTemplate, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale, enum class EPSCPoolMethod* PoolingMethod, bool* bAutoActivateSystem, bool* bDontSpawnOutOfView, float* DontSpawnOutOfViewCheckRadius, bool* bAllowSpawnLoopingFX, float* OverrideSecondsBeforeInactive, class AActor** ParticleSpaceBaseInstigator, class UParticleSystemComponent* ReturnValue);
	bool SpawnDialogueAttached(class UDialogueWave* Dialogue, struct FDialogueContext* Context, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, enum class EAttachLocation* LocationType, bool* bStopWhenAttachedToDestroyed, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings, class UAudioComponent* ReturnValue);
	bool SpawnDialogueAtLocation(class UDialogueWave* Dialogue, struct FDialogueContext* Context, struct FVector* Location, struct FRotator* Rotation, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings, class UAudioComponent* ReturnValue);
	bool SpawnDialogue2D(class UDialogueWave* Dialogue, struct FDialogueContext* Context, float* VolumeMultiplier, float* PitchMultiplier, class UAudioComponent* ReturnValue);
	class USceneComponent* SpawnDecalAttached(class UMaterialInterface** DecalMaterial, struct FVector* DecalSize, class FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, enum class EAttachLocation* LocationType, float* LifeSpan, class UDecalComponent* ReturnValue);
	class UObject* SpawnDecalAtLocation(class UMaterialInterface** DecalMaterial, struct FVector* DecalSize, struct FVector* Location, struct FRotator* Rotation, float* LifeSpan, class UDecalComponent* ReturnValue);
	class UObject* SetWorldOriginLocation(struct FIntVector* NewLocation);
	class UObject* SetViewportMouseCaptureMode(enum class EMouseCaptureMode* MouseCaptureMode);
	bool SetSubtitlesEnabled();
	bool SetSoundMixClassOverride(class USoundMix** InSoundMixModifier, class USoundClass* InSoundClass);
	float SetSoundClassDistanceScale(class USoundClass* SoundClass, float* DistanceAttenuationScale);
	struct FPlatformUserId SetPlayerPlatformUserId(class APlayerController** PlayerController);
	void SetPlayerControllerID(class APlayerController** Player, int32 ControllerId);
	class UObject* SetMaxAudioChannelsScaled(float* MaxChannelCountScale);
	float SetGlobalTimeDilation();
	float SetGlobalPitchModulation(float PitchModulation);
	class UObject* SetGlobalListenerFocusParameters(float FocusAzimuthScale, float NonFocusAzimuthScale, float* FocusDistanceScale, float* NonFocusDistanceScale, float FocusVolumeScale, float NonFocusVolumeScale, float* FocusPriorityScale, float* NonFocusPriorityScale);
	bool SetGamePaused(bool ReturnValue);
	bool SetForceDisableSplitscreen();
	bool SetEnableWorldRendering();
	class UObject* SetBaseSoundMix(class USoundMix** InSoundMix);
	class UObject* SetActiveSpatialPluginByName(class FName InPluginName, bool ReturnValue);
	int32 SaveGameToSlot(bool ReturnValue);
	void RemovePlayer(class APlayerController** Player, bool bDestroyPawn);
	struct FVector RebaseZeroOriginOntoLocal(const struct FVector& ReturnValue);
	struct FVector RebaseLocalOriginOntoZero(const struct FVector& ReturnValue);
	class UObject* PushSoundMixModifier(class USoundMix** InSoundMixModifier);
	bool ProjectWorldToScreen(class APlayerController** Player, struct FVector2D* ScreenPosition, bool ReturnValue);
	class USoundBase* PrimeSound();
	void PrimeAllSoundsInSoundClass(class USoundClass* InSoundClass);
	class UObject* PopSoundMixModifier(class USoundMix** InSoundMixModifier);
	bool PlayWorldCameraShake(const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float ScaleMultiplier);
	class USoundConcurrency* PlaySoundAtLocation(class USoundBase* Sound, struct FVector* Location, struct FRotator* Rotation, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings, class AActor* OwningActor, class UInitialActiveSoundParams** InitialParams, bool bAlwaysPlay);
	class USoundConcurrency* PlaySound2D(class USoundBase* Sound, float* VolumeMultiplier, float* PitchMultiplier, class AActor* OwningActor, bool bIsUISound);
	float PlayDialogueAtLocation(class UDialogueWave* Dialogue, struct FDialogueContext* Context, struct FVector* Location, struct FRotator* Rotation, float* VolumeMultiplier, float* PitchMultiplier, class USoundAttenuation** AttenuationSettings);
	float PlayDialogue2D(class UDialogueWave* Dialogue, struct FDialogueContext* Context, float* VolumeMultiplier, float* PitchMultiplier);
	class FString ParseOption(const class FString& ReturnValue);
	class FString OpenLevelBySoftObjectPtr(TSoftObjectPtr<class UWorld> Level, bool* bAbsolute);
	class FString OpenLevel(bool* bAbsolute);
	void ObjectIsA(class UObject** Object, class UClass* ObjectClass, bool ReturnValue);
	struct FVector MakeHitResult(bool bBlockingHit, bool bInitialOverlap, struct FVector* Location, struct FVector* Normal, class UPhysicalMaterial** PhysMat, class AActor* HitActor, class FName* BoneName, int32 ElementIndex, const struct FHitResult& ReturnValue);
	struct FLatentActionInfo LoadStreamLevelBySoftObjectPtr(TSoftObjectPtr<class UWorld> Level, bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad);
	struct FLatentActionInfo LoadStreamLevel(bool bMakeVisibleAfterLoad, bool bShouldBlockOnLoad);
	int32 LoadGameFromSlot(class USaveGame* ReturnValue);
	class UObject* IsSplitscreenForceDisabled(bool ReturnValue);
	class UObject* IsGamePaused(bool ReturnValue);
	class FString HasOption(class FString* InKey, bool ReturnValue);
	void HasLaunchOption(const class FString& OptionToCheck, bool ReturnValue);
	struct FVector GrassOverlappingSphereCount(float* Radius, int32 ReturnValue);
	class UObject* GetWorldOriginLocation(const struct FIntVector& ReturnValue);
	class UObject* GetWorldDeltaSeconds(double ReturnValue);
	class UObject* GetWorldDeltaRealTimeSeconds(double ReturnValue);
	struct FMinimalViewInfo GetViewProjectionMatrix(const struct FMatrix& ViewMatrix, const struct FMatrix& ProjectionMatrix, const struct FMatrix& ViewProjectionMatrix);
	class UObject* GetViewportMouseCaptureMode(enum class EMouseCaptureMode ReturnValue);
	class UObject* GetUnpausedTimeSeconds(double ReturnValue);
	class UObject* GetTimeSeconds(double ReturnValue);
	struct FHitResult GetSurfaceType(enum class EPhysicalSurface ReturnValue);
	class UObject* GetStreamingLevel(class FName* PackageName, class ULevelStreaming* ReturnValue);
	class UObject* GetRealTimeSeconds(double ReturnValue);
	class UObject* GetPlayerStateFromUniqueNetId(const struct FUniqueNetIdRepl& UniqueID, class APlayerState* ReturnValue);
	class UObject* GetPlayerState(int32 PlayerStateIndex, class APlayerState* ReturnValue);
	class UObject* GetPlayerPawn(int32* PlayerIndex, class APawn* ReturnValue);
	void GetPlayerControllerID(class APlayerController** Player, int32 ReturnValue);
	struct FPlatformUserId GetPlayerControllerFromPlatformUser(class APlayerController* ReturnValue);
	class UObject* GetPlayerControllerFromID(int32 ControllerId, class APlayerController* ReturnValue);
	class UObject* GetPlayerController(int32* PlayerIndex, class APlayerController* ReturnValue);
	class UObject* GetPlayerCharacter(int32* PlayerIndex, class ACharacter* ReturnValue);
	class UObject* GetPlayerCameraManager(int32* PlayerIndex, class APlayerCameraManager* ReturnValue);
	void GetPlatformName(const class FString& ReturnValue);
	void GetObjectClass(class UObject** Object, class UClass* ReturnValue);
	class UObject* GetNumPlayerStates(int32 ReturnValue);
	class UObject* GetNumPlayerControllers(int32 ReturnValue);
	class UObject* GetNumLocalPlayerControllers(int32 ReturnValue);
	class UObject* GetMaxAudioChannelCount(int32 ReturnValue);
	class FString GetKeyValue(const class FString& Pair, class FString* Value);
	class FString GetIntOption(int32* DefaultValue, int32 ReturnValue);
	class UObject* GetGlobalTimeDilation(float ReturnValue);
	class UObject* GetGameState(class AGameStateBase* ReturnValue);
	class UObject* GetGameMode(class AGameModeBase* ReturnValue);
	class UObject* GetGameInstance(class UGameInstance* ReturnValue);
	class UObject* GetEnableWorldRendering(bool ReturnValue);
	class UObject* GetCurrentReverbEffect(class UReverbEffect* ReturnValue);
	class UObject* GetCurrentLevelName(bool bRemovePrefixString, const class FString& ReturnValue);
	class UObject* GetClosestListenerLocation(struct FVector* Location, float* MaximumRange, bool bAllowAttenuationOverride, const struct FVector& ListenerPosition, bool ReturnValue);
	class UObject* GetAvailableSpatialPluginNames(const TArray<class FName>& ReturnValue);
	class UObject* GetAudioTimeSeconds(double ReturnValue);
	TArray<class AActor*> GetAllActorsWithTag();
	TArray<class AActor*> GetAllActorsWithInterface(class UClass* Interface);
	TArray<class AActor*> GetAllActorsOfClassWithTag();
	TArray<class AActor*> GetAllActorsOfClass();
	class UClass* GetActorOfClass(class AActor* ReturnValue);
	bool GetActorArrayBounds(struct FVector* Center, const struct FVector& BoxExtent);
	TArray<class AActor*> GetActorArrayAverageLocation(const struct FVector& ReturnValue);
	class UObject* GetActiveSpatialPluginName(class FName ReturnValue);
	int32 GetAccurateRealTime(double PartialSeconds);
	class UObject* FlushLevelStreaming();
	struct FTransform FinishSpawningActor(class AActor** Actor, enum class ESpawnActorScaleMethod* TransformScaleMethod, class AActor* ReturnValue);
	float FindNearestActor(const TArray<class AActor*>& ActorsToCheck, class AActor* ReturnValue);
	int32 FindCollisionUV(const struct FVector2D& UV, bool ReturnValue);
	void EnableLiveStreaming(bool Enable);
	int32 DoesSaveGameExist(bool ReturnValue);
	struct FVector DeprojectScreenToWorld(class APlayerController** Player, struct FVector2D* ScreenPosition, bool ReturnValue);
	struct FVector DeprojectSceneCaptureToWorld(class ASceneCapture2D* SceneCapture2D, const struct FVector2D& TargetUV, bool ReturnValue);
	int32 DeleteGameInSlot(bool ReturnValue);
	class UObject* DeactivateReverbEffect(class FName TagName);
	bool CreateSound2D(class USoundBase* Sound, float* VolumeMultiplier, float* PitchMultiplier, bool bPersistAcrossLevelTransition, class UAudioComponent* ReturnValue);
	void CreateSaveGameObject(class UClass* SaveGameClass, class USaveGame* ReturnValue);
	struct FPlatformUserId CreatePlayerFromPlatformUser(bool* bSpawnPlayerController, class APlayerController* ReturnValue);
	class UObject* CreatePlayer(int32 ControllerId, bool* bSpawnPlayerController, class APlayerController* ReturnValue);
	class UObject* ClearSoundMixModifiers();
	float ClearSoundMixClassOverride(class USoundMix** InSoundMixModifier, class USoundClass* InSoundClass);
	void CancelAsyncLoading();
	struct FVector BreakHitResult(bool bBlockingHit, bool bInitialOverlap, struct FVector* Location, struct FVector* Normal, class UPhysicalMaterial** PhysMat, class AActor* HitActor, class FName* BoneName, int32 ElementIndex);
	struct FVector BPPointPlaneProject(const struct FVector& PlaneBase, const struct FVector& PlaneNorm, const struct FVector& ReturnValue);
	struct FVector BPPointPlaneDist(const struct FVector& PlaneBase, const struct FVector& PlaneNorm, float ReturnValue);
	bool BlueprintSuggestProjectileVelocity(const struct FVector& TossVelocity, const struct FVector& StartLocation, float* LaunchSpeed, float* OverrideGravityZ, enum class ESuggestProjVelocityTraceOption* TraceOption, bool* bFavorHighArc, bool ReturnValue);
	float Blueprint_PredictProjectilePath_ByTraceChannel(TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination, bool* bTracePath, enum class ECollisionChannel TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, float* OverrideGravityZ, bool ReturnValue);
	float Blueprint_PredictProjectilePath_ByObjectType(TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination, bool* bTracePath, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, float* OverrideGravityZ, bool ReturnValue);
	class UObject* Blueprint_PredictProjectilePath_Advanced(struct FPredictProjectilePathParams* PredictParams, struct FPredictProjectilePathResult* PredictResult, bool ReturnValue);
	struct FTransform BeginSpawningActorFromBlueprint(class UBlueprint* Blueprint, bool bNoCollisionFail, class AActor* ReturnValue);
	struct FTransform BeginDeferredActorSpawnFromClass(enum class ESpawnActorCollisionHandlingMethod* CollisionHandlingOverride, class AActor** Owner, enum class ESpawnActorScaleMethod* TransformScaleMethod, class AActor* ReturnValue);
	void AreSubtitlesEnabled(bool ReturnValue);
	class UObject* AreAnyListenersWithinRange(struct FVector* Location, float* MaximumRange, bool ReturnValue);
	float ApplyRadialDamageIgnoreDamageActors(float BaseDamage, float* DamageRadius, TArray<class AActor*>* IgnoreActors, TArray<class AActor*>* IgnoreDamageActors, class AController** InstigatedByController, bool* bDoFullDamage, enum class ECollisionChannel* DamagePreventionChannel, bool ReturnValue);
	float ApplyRadialDamage(float BaseDamage, float* DamageRadius, TArray<class AActor*>* IgnoreActors, class AController** InstigatedByController, bool* bDoFullDamage, enum class ECollisionChannel* DamagePreventionChannel, bool ReturnValue);
	float ApplyPointDamage(float BaseDamage, struct FVector* HitFromDirection, bool* bForceCollisionCheck, enum class ECollisionChannel* ForceCollisionCheckTraceChannel, float* OriginalDamageOverride, float ReturnValue);
	float ApplyDamage(float BaseDamage, float ReturnValue);
	void AnnounceAccessibleString(class FString* AnnouncementString);
	float ActivateReverbEffect(class UReverbEffect** ReverbEffect, class FName TagName);
};

// 0x60 (0x88 - 0x28)
// Class Engine.HLODProxy
class UHLODProxy : public UObject
{
public:
	TArray<struct FHLODProxyMesh>                ProxyMeshes;                                       // 0x28(0x10)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class UHLODProxyDesc*, struct FHLODProxyMesh> HLODActors;                                        // 0x38(0x50)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHLODProxy* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Engine.HLODEngineSubsystem
class UHLODEngineSubsystem : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class UHLODEngineSubsystem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.HLODProxyDesc
class UHLODProxyDesc : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHLODProxyDesc* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ImportantToggleSettingInterface
class IImportantToggleSettingInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IImportantToggleSettingInterface* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.InheritableComponentHandler
class UInheritableComponentHandler : public UObject
{
public:
	TArray<struct FComponentOverrideRecord>      Records;                                           // 0x28(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UActorComponent*>               UnnecessaryComponents;                             // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInheritableComponentHandler* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InputActionDelegateBinding
class UInputActionDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputActionDelegateBinding> InputActionDelegateBindings;                       // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputActionDelegateBinding* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InputAxisDelegateBinding
class UInputAxisDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputAxisDelegateBinding> InputAxisDelegateBindings;                         // 0x28(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputAxisDelegateBinding* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InputAxisKeyDelegateBinding
class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings;                      // 0x28(0x10)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputAxisKeyDelegateBinding* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InputDeviceLibrary
class UInputDeviceLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UInputDeviceLibrary* GetDefaultObj();

	void PlatformUserId_None(const struct FPlatformUserId& ReturnValue);
	struct FPlatformUserId NotEqual_PlatformUserId(bool ReturnValue);
	struct FInputDeviceId NotEqual_InputDeviceId(bool ReturnValue);
	struct FPlatformUserId IsValidPlatformId(bool ReturnValue);
	void IsValidInputDevice(struct FInputDeviceId* DeviceID, bool ReturnValue);
	void IsUnpairedUserId(struct FPlatformUserId* PlatformId, bool ReturnValue);
	void IsInputDeviceMappedToUnpairedUser(const struct FInputDeviceId& InputDevice, bool ReturnValue);
	void IsDevicePropertyHandleValid(const struct FInputDevicePropertyHandle& InHandle, bool ReturnValue);
	void InputDeviceId_None(const struct FInputDeviceId& ReturnValue);
	void GetUserForUnpairedInputDevices(const struct FPlatformUserId& ReturnValue);
	void GetUserForInputDevice(struct FInputDeviceId* DeviceID, const struct FPlatformUserId& ReturnValue);
	void GetPrimaryPlatformUser(const struct FPlatformUserId& ReturnValue);
	struct FPlatformUserId GetPrimaryInputDeviceForUser(const struct FInputDeviceId& ReturnValue);
	struct FPlatformUserId GetPlayerControllerFromPlatformUser(class APlayerController* ReturnValue);
	void GetPlayerControllerFromInputDevice(struct FInputDeviceId* DeviceID, class APlayerController* ReturnValue);
	void GetInputDeviceConnectionState(struct FInputDeviceId* DeviceID, enum class EInputDeviceConnectionState ReturnValue);
	void GetDefaultInputDevice(const struct FInputDeviceId& ReturnValue);
	struct FPlatformUserId GetAllInputDevicesForUser(TArray<struct FInputDeviceId>* OutInputDevices, int32 ReturnValue);
	void GetAllInputDevices(TArray<struct FInputDeviceId>* OutInputDevices, int32 ReturnValue);
	void GetAllConnectedInputDevices(TArray<struct FInputDeviceId>* OutInputDevices, int32 ReturnValue);
	void GetAllActiveUsers(TArray<struct FPlatformUserId>* OutUsers, int32 ReturnValue);
	struct FPlatformUserId EqualEqual_PlatformUserId(bool ReturnValue);
	struct FInputDeviceId EqualEqual_InputDeviceId(bool ReturnValue);
};

// 0x10 (0x38 - 0x28)
// Class Engine.InputKeyDelegateBinding
class UInputKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputKeyDelegateBinding> InputKeyDelegateBindings;                          // 0x28(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputKeyDelegateBinding* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.InputTouchDelegateBinding
class UInputTouchDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings;                        // 0x28(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputTouchDelegateBinding* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Engine.InputVectorAxisDelegateBinding
class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
{
public:

	static class UClass* StaticClass();
	static class UInputVectorAxisDelegateBinding* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.InstancedPlacemenClientSettings
class UInstancedPlacemenClientSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class UInstancedPlacemenClientSettings* GetDefaultObj();

};

// 0x0 (0x4D8 - 0x4D8)
// Class Engine.InstancedPlacementPartitionActor
class AInstancedPlacementPartitionActor : public AISMPartitionActor
{
public:

	static class UClass* StaticClass();
	static class AInstancedPlacementPartitionActor* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.StringTable
class UStringTable : public UObject
{
public:
	uint8                                        Pad_363D[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UStringTable* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.InterpCurveEdSetup
class UInterpCurveEdSetup : public UObject
{
public:
	TArray<struct FCurveEdTab>                   Tabs;                                              // 0x28(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ActiveTab;                                         // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3642[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInterpCurveEdSetup* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Engine.IntSerialization
class UIntSerialization : public UObject
{
public:
	uint16                                       UnsignedInt16Variable;                             // 0x28(0x2)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3645[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       UnsignedInt32Variable;                             // 0x2C(0x4)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint64                                       UnsignedInt64Variable;                             // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int8                                         SignedInt8Variable;                                // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3647[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int16                                        SignedInt16Variable;                               // 0x3A(0x2)(Edit, ExportObject, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3648[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	int64                                        SignedInt64Variable;                               // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        UnsignedInt8Variable;                              // 0x48(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_364A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SignedInt32Variable;                               // 0x4C(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UIntSerialization* GetDefaultObj();

};

// 0x0 (0x538 - 0x538)
// Class Engine.KillZVolume
class AKillZVolume : public APhysicsVolume
{
public:

	static class UClass* StaticClass();
	static class AKillZVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetArrayLibrary
class UKismetArrayLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetArrayLibrary* GetDefaultObj();

	void SetArrayPropertyByName(class UObject** Object, class FName PropertyName, TArray<int32>* Value);
	TArray<class AActor*> FilterArray();
	int32 Array_Swap();
	TArray<int32> Array_Shuffle();
	bool Array_Set(int32* Index);
	TArray<int32> Array_Reverse();
	int32 Array_Resize();
	int32 Array_RemoveItem(bool ReturnValue);
	int32 Array_Remove();
	int32 Array_RandomFromStream(const struct FRandomStream& RandomStream);
	int32 Array_Random();
	TArray<int32> Array_Length(int32 ReturnValue);
	TArray<int32> Array_LastIndex(int32 ReturnValue);
	int32 Array_IsValidIndex(bool ReturnValue);
	TArray<int32> Array_IsNotEmpty(bool ReturnValue);
	TArray<int32> Array_IsEmpty(bool ReturnValue);
	int32 Array_Insert(int32* Index);
	TArray<int32> Array_Identical(bool ReturnValue);
	int32 Array_Get(int32* Index);
	int32 Array_Find(int32 ReturnValue);
	int32 Array_Contains(bool ReturnValue);
	TArray<int32> Array_Clear();
	TArray<int32> Array_Append();
	int32 Array_AddUnique(int32 ReturnValue);
	int32 Array_Add(int32 ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetGuidLibrary
class UKismetGuidLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetGuidLibrary* GetDefaultObj();

	struct FGuid Parse_StringToGuid(bool* Success);
	struct FGuid NotEqual_GuidGuid(bool ReturnValue);
	void NewGuid(const struct FGuid& ReturnValue);
	struct FGuid IsValid_Guid(bool ReturnValue);
	struct FGuid Invalidate_Guid();
	struct FGuid EqualEqual_GuidGuid(bool ReturnValue);
	struct FGuid Conv_GuidToString(const class FString& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetInputLibrary
class UKismetInputLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetInputLibrary* GetDefaultObj();

	void PointerEvent_IsTouchEvent(const struct FPointerEvent& Input, bool ReturnValue);
	struct FKey PointerEvent_IsMouseButtonDown(const struct FPointerEvent& Input, bool ReturnValue);
	void PointerEvent_GetWheelDelta(const struct FPointerEvent& Input, float ReturnValue);
	void PointerEvent_GetUserIndex(const struct FPointerEvent& Input, int32 ReturnValue);
	void PointerEvent_GetTouchpadIndex(const struct FPointerEvent& Input, int32 ReturnValue);
	void PointerEvent_GetScreenSpacePosition(const struct FPointerEvent& Input, const struct FVector2D& ReturnValue);
	void PointerEvent_GetPointerIndex(const struct FPointerEvent& Input, int32 ReturnValue);
	void PointerEvent_GetLastScreenSpacePosition(const struct FPointerEvent& Input, const struct FVector2D& ReturnValue);
	void PointerEvent_GetGestureType(const struct FPointerEvent& Input, enum class ESlateGesture ReturnValue);
	void PointerEvent_GetGestureDelta(const struct FPointerEvent& Input, const struct FVector2D& ReturnValue);
	void PointerEvent_GetEffectingButton(const struct FPointerEvent& Input, const struct FKey& ReturnValue);
	void PointerEvent_GetCursorDelta(const struct FPointerEvent& Input, const struct FVector2D& ReturnValue);
	struct FSlateModifierKeysState ModifierKeysState_IsShiftDown(bool ReturnValue);
	struct FSlateModifierKeysState ModifierKeysState_IsControlDown(bool ReturnValue);
	struct FSlateModifierKeysState ModifierKeysState_IsCommandDown(bool ReturnValue);
	struct FSlateModifierKeysState ModifierKeysState_IsAltDown(bool ReturnValue);
	struct FKey Key_IsVectorAxis(bool ReturnValue);
	struct FKey Key_IsValid(bool ReturnValue);
	struct FKey Key_IsMouseButton(bool ReturnValue);
	struct FKey Key_IsModifierKey(bool ReturnValue);
	struct FKey Key_IsKeyboardKey(bool ReturnValue);
	struct FKey Key_IsGamepadKey(bool ReturnValue);
	struct FKey Key_IsDigital(bool ReturnValue);
	struct FKey Key_IsButtonAxis(bool ReturnValue);
	struct FKey Key_IsAxis3D(bool ReturnValue);
	struct FKey Key_IsAxis2D(bool ReturnValue);
	struct FKey Key_IsAxis1D(bool ReturnValue);
	struct FKey Key_IsAnalog(bool ReturnValue);
	void Key_GetNavigationDirectionFromKey(const struct FKeyEvent& InKeyEvent, enum class EUINavigation ReturnValue);
	struct FAnalogInputEvent Key_GetNavigationDirectionFromAnalog(enum class EUINavigation ReturnValue);
	void Key_GetNavigationActionFromKey(const struct FKeyEvent& InKeyEvent, enum class EUINavigationAction ReturnValue);
	void Key_GetNavigationAction(struct FKey* InKey, enum class EUINavigationAction ReturnValue);
	bool Key_GetDisplayName(class FText ReturnValue);
	void InputEvent_IsShiftDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsRightShiftDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsRightControlDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsRightCommandDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsRightAltDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsRepeat(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsLeftShiftDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsLeftControlDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsLeftCommandDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsLeftAltDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsControlDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsCommandDown(const struct FInputEvent& Input, bool ReturnValue);
	void InputEvent_IsAltDown(const struct FInputEvent& Input, bool ReturnValue);
	struct FInputChord InputChord_GetDisplayName(class FText ReturnValue);
	void GetUserIndex(const struct FKeyEvent& Input, int32 ReturnValue);
	void GetModifierKeysState(const struct FSlateModifierKeysState& ReturnValue);
	void GetKey(const struct FKeyEvent& Input, const struct FKey& ReturnValue);
	void GetAnalogValue(const struct FAnalogInputEvent& Input, float ReturnValue);
	struct FKey EqualEqual_KeyKey(bool ReturnValue);
	struct FInputChord EqualEqual_InputChordInputChord(bool ReturnValue);
	void CalibrateTilt();
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetInternationalizationLibrary
class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetInternationalizationLibrary* GetDefaultObj();

	bool SetCurrentLocale(bool ReturnValue);
	bool SetCurrentLanguageAndLocale(bool ReturnValue);
	bool SetCurrentLanguage(bool ReturnValue);
	bool SetCurrentCulture(bool ReturnValue);
	bool SetCurrentAssetGroupCulture(bool ReturnValue);
	class FString GetSuitableCulture(const class FString& ReturnValue);
	enum class ELocalizedTextSourceCategory GetNativeCulture(const class FString& ReturnValue);
	bool GetLocalizedCultures(const TArray<class FString>& ReturnValue);
	void GetCurrentLocale(const class FString& ReturnValue);
	void GetCurrentLanguage(const class FString& ReturnValue);
	void GetCurrentCulture(const class FString& ReturnValue);
	class FName GetCurrentAssetGroupCulture(const class FString& ReturnValue);
	bool GetCultureDisplayName(const class FString& ReturnValue);
	bool ClearCurrentAssetGroupCulture();
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetMaterialLibrary
class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetMaterialLibrary* GetDefaultObj();

	class UObject* SetVectorParameterValue(class UMaterialParameterCollection** Collection, class FName ParameterName, const struct FLinearColor& ParameterValue);
	class UObject* SetScalarParameterValue(class UMaterialParameterCollection** Collection, class FName ParameterName, float ParameterValue);
	class UObject* ResetMaterialParameterCollectionInstance(class UMaterialParameterCollection** Collection);
	class UObject* GetVectorParameterValue(class UMaterialParameterCollection** Collection, class FName ParameterName, const struct FLinearColor& ReturnValue);
	class UObject* GetScalarParameterValue(class UMaterialParameterCollection** Collection, class FName ParameterName, float ReturnValue);
	enum class EMIDCreationFlags CreateDynamicMaterialInstance(class UMaterialInterface** Parent, class UMaterialInstanceDynamic* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetMathLibrary
class UKismetMathLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetMathLibrary* GetDefaultObj();

	int32 Xor_IntInt(int32 ReturnValue);
	int64 Xor_Int64Int64(int64 ReturnValue);
	float WrapAngle(float ReturnValue);
	void Wrap(int32* Value, int32* Min, int32* Max, int32 ReturnValue);
	struct FVector WeightedMovingAverage_FVector(float* Weight, const struct FVector& ReturnValue);
	struct FRotator WeightedMovingAverage_FRotator(float* Weight, const struct FRotator& ReturnValue);
	float WeightedMovingAverage_Float(float* Weight, float ReturnValue);
	struct FVector VSizeXYSquared(double ReturnValue);
	struct FVector VSizeXY(double ReturnValue);
	struct FVector2D VSizeSquared2D(float ReturnValue);
	struct FVector VSizeSquared(double ReturnValue);
	struct FVector2D VSize2DSquared(double ReturnValue);
	struct FVector2D VSize2D(double ReturnValue);
	struct FVector VSize(double ReturnValue);
	struct FVector VLerp(float Alpha, const struct FVector& ReturnValue);
	float VInterpTo_SnapWithinDist(float SnapWithinDist, const struct FVector& ReturnValue);
	float VInterpTo_SnapPastDist(float SnapPastDist, const struct FVector& ReturnValue);
	float VInterpTo_Constant_SnapWithinDist(float SnapWithinDist, const struct FVector& ReturnValue);
	float VInterpTo_Constant_SnapPastDist(float SnapPastDist, const struct FVector& ReturnValue);
	float VInterpTo_Constant_ClampDist(float ClampDist, const struct FVector& ReturnValue);
	float VInterpTo_Constant(const struct FVector& ReturnValue);
	float VInterpTo_ClampDist(float ClampDist, const struct FVector& ReturnValue);
	float VInterpTo(const struct FVector& ReturnValue);
	struct FVector VectorSpringInterp(const struct FVectorSpringState& SpringState, float* Stiffness, float* CriticalDampingFactor, float Mass, float TargetVelocityAmount, bool bInitializeFromTarget, const struct FVector& ReturnValue);
	void Vector_Zero(const struct FVector& ReturnValue);
	void Vector_Up(const struct FVector& ReturnValue);
	struct FVector Vector_UnwindEuler();
	struct FVector Vector_UnitCartesianToSpherical(const struct FVector2D& ReturnValue);
	struct FVector Vector_ToRadians(const struct FVector& ReturnValue);
	struct FVector Vector_ToDegrees(const struct FVector& ReturnValue);
	struct FVector Vector_SnappedToGrid(float InGridSize, const struct FVector& ReturnValue);
	struct FVector Vector_SlerpVectorToDirection(struct FVector* Vector, double Alpha, const struct FVector& ReturnValue);
	struct FVector Vector_SlerpNormals(const struct FVector& NormalA, double Alpha, const struct FVector& ReturnValue);
	struct FVector Vector_Set(double* X, double* Y, double* Z);
	void Vector_Right(const struct FVector& ReturnValue);
	struct FVector Vector_Reciprocal(const struct FVector& ReturnValue);
	struct FVector Vector_ProjectOnToNormal(struct FVector* InNormal, const struct FVector& ReturnValue);
	void Vector_One(const struct FVector& ReturnValue);
	struct FVector Vector_NormalUnsafe(const struct FVector& ReturnValue);
	float Vector_Normalize();
	float Vector_Normal2D(const struct FVector& ReturnValue);
	struct FPlane Vector_MirrorByPlane(const struct FVector& ReturnValue);
	void Vector_Left(const struct FVector& ReturnValue);
	struct FVector Vector_IsZero(bool ReturnValue);
	float Vector_IsUnit(bool ReturnValue);
	float Vector_IsUniform(bool ReturnValue);
	struct FVector Vector_IsNormal(bool ReturnValue);
	float Vector_IsNearlyZero(bool ReturnValue);
	struct FVector Vector_IsNAN(bool ReturnValue);
	struct FVector Vector_HeadingAngle(double ReturnValue);
	struct FVector Vector_GetSignVector(const struct FVector& ReturnValue);
	struct FVector Vector_GetProjection(const struct FVector& ReturnValue);
	struct FVector Vector_GetAbsMin(double ReturnValue);
	struct FVector Vector_GetAbsMax(double ReturnValue);
	struct FVector Vector_GetAbs(const struct FVector& ReturnValue);
	void Vector_Forward(const struct FVector& ReturnValue);
	void Vector_Down(const struct FVector& ReturnValue);
	void Vector_DistanceSquared(struct FVector* V1, struct FVector* V2, double ReturnValue);
	void Vector_Distance2DSquared(struct FVector* V1, struct FVector* V2, double ReturnValue);
	void Vector_Distance2D(struct FVector* V1, struct FVector* V2, double ReturnValue);
	void Vector_Distance(struct FVector* V1, struct FVector* V2, double ReturnValue);
	struct FVector Vector_CosineAngle2D(double ReturnValue);
	struct FVector Vector_ComponentMin(const struct FVector& ReturnValue);
	struct FVector Vector_ComponentMax(const struct FVector& ReturnValue);
	struct FVector Vector_ClampSizeMax2D(double* Max, const struct FVector& ReturnValue);
	struct FVector Vector_ClampSizeMax(double* Max, const struct FVector& ReturnValue);
	struct FVector Vector_ClampSize2D(double* Min, double* Max, const struct FVector& ReturnValue);
	float Vector_BoundedToCube(const struct FVector& ReturnValue);
	struct FVector Vector_BoundedToBox(const struct FVector& ReturnValue);
	void Vector_Backward(const struct FVector& ReturnValue);
	struct FVector Vector_Assign(const struct FVector& InVector);
	float Vector_AddBounded();
	void Vector4_Zero(const struct FVector4& ReturnValue);
	struct FVector4 Vector4_SizeSquared3(double ReturnValue);
	struct FVector4 Vector4_SizeSquared(double ReturnValue);
	struct FVector4 Vector4_Size3(double ReturnValue);
	struct FVector4 Vector4_Size(double ReturnValue);
	struct FVector4 Vector4_Set(double* X, double* Y, double* Z, double* W);
	struct FVector4 Vector4_NormalUnsafe3(const struct FVector4& ReturnValue);
	float Vector4_Normalize3();
	float Vector4_Normal3(const struct FVector4& ReturnValue);
	struct FVector4 Vector4_Negated(const struct FVector4& ReturnValue);
	struct FVector4 Vector4_MirrorByVector3(const struct FVector4& ReturnValue);
	struct FVector4 Vector4_IsZero(bool ReturnValue);
	float Vector4_IsUnit3(bool ReturnValue);
	struct FVector4 Vector4_IsNormal3(bool ReturnValue);
	float Vector4_IsNearlyZero3(bool ReturnValue);
	struct FVector4 Vector4_IsNAN(bool ReturnValue);
	struct FVector4 Vector4_DotProduct3(double ReturnValue);
	struct FVector4 Vector4_DotProduct(double ReturnValue);
	struct FVector4 Vector4_CrossProduct3(const struct FVector4& ReturnValue);
	struct FVector4 Vector4_Assign(const struct FVector4& InVector);
	float Vector2DInterpTo_Constant(const struct FVector2D& ReturnValue);
	float Vector2DInterpTo(const struct FVector2D& ReturnValue);
	void Vector2D_Zero(const struct FVector2D& ReturnValue);
	void Vector2D_Unit45Deg(const struct FVector2D& ReturnValue);
	void Vector2D_One(const struct FVector2D& ReturnValue);
	int32 VEase(float Alpha, const struct FVector& ReturnValue);
	void UtcNow(const struct FDateTime& ReturnValue);
	struct FVector4 TransformVector4(struct FMatrix* Matrix, const struct FVector4& ReturnValue);
	struct FTransform TransformRotation(struct FRotator* Rotation, const struct FRotator& ReturnValue);
	struct FTransform TransformLocation(struct FVector* Location, const struct FVector& ReturnValue);
	struct FVector TransformDirection(const struct FVector& ReturnValue);
	void Transform_Determinant(struct FTransform* Transform, float ReturnValue);
	struct FVector2D ToSign2D(const struct FVector2D& ReturnValue);
	struct FVector2D ToRounded2D(const struct FVector2D& ReturnValue);
	double ToDirectionAndLength2D();
	void Today(const struct FDateTime& ReturnValue);
	struct FTransform TLerp(float Alpha, enum class ELerpInterpolationMode* InterpMode, const struct FTransform& ReturnValue);
	float TInterpTo(const struct FTransform& ReturnValue);
	void TimespanZeroValue(const struct FTimespan& ReturnValue);
	struct FTimespan TimespanRatio(float ReturnValue);
	void TimespanMinValue(const struct FTimespan& ReturnValue);
	void TimespanMaxValue(const struct FTimespan& ReturnValue);
	struct FTimespan TimespanFromString(bool ReturnValue);
	int32 TEase(float Alpha, const struct FTransform& ReturnValue);
	double Tan(double ReturnValue);
	struct FVector Subtract_VectorVector(const struct FVector& ReturnValue);
	int32 Subtract_VectorInt(const struct FVector& ReturnValue);
	double Subtract_VectorFloat(const struct FVector& ReturnValue);
	struct FVector4 Subtract_Vector4Vector4(const struct FVector4& ReturnValue);
	struct FVector2D Subtract_Vector2DVector2D(const struct FVector2D& ReturnValue);
	double Subtract_Vector2DFloat(const struct FVector2D& ReturnValue);
	struct FTimespan Subtract_TimespanTimespan(const struct FTimespan& ReturnValue);
	struct FQuat Subtract_QuatQuat(const struct FQuat& ReturnValue);
	struct FLinearColor Subtract_LinearColorLinearColor(const struct FLinearColor& ReturnValue);
	struct FIntPoint Subtract_IntPointIntPoint(const struct FIntPoint& ReturnValue);
	int32 Subtract_IntPointInt(const struct FIntPoint& ReturnValue);
	int32 Subtract_IntInt(int32 ReturnValue);
	int64 Subtract_Int64Int64(int64 ReturnValue);
	float Subtract_DoubleFloat(double ReturnValue);
	double Subtract_DoubleDouble(double ReturnValue);
	struct FTimespan Subtract_DateTimeTimespan(const struct FDateTime& ReturnValue);
	struct FDateTime Subtract_DateTimeDateTime(const struct FTimespan& ReturnValue);
	uint8 Subtract_ByteByte(uint8 ReturnValue);
	double Square(double ReturnValue);
	double Sqrt(double ReturnValue);
	struct FVector2D Spherical2DToUnitCartesian(const struct FVector& ReturnValue);
	double Sin(double ReturnValue);
	int64 SignOfInteger64(int64 ReturnValue);
	int32 SignOfInteger(int32 ReturnValue);
	double SignOfFloat(double ReturnValue);
	struct FVector SetVectorSpringStateVelocity(const struct FVectorSpringState& SpringState);
	int32 SetRandomStreamSeed();
	void SetQuaternionSpringStateAngularVelocity(const struct FQuaternionSpringState& SpringState, const struct FVector& AngularVelocity);
	float SetFloatSpringStateVelocity(const struct FFloatSpringState& SpringState);
	struct FVector2D Set2D(double* X, double* Y);
	bool SelectVector(const struct FVector& ReturnValue);
	bool SelectTransform(const struct FTransform& ReturnValue);
	bool SelectString(const class FString& ReturnValue);
	bool SelectRotator(const struct FRotator& ReturnValue);
	bool SelectObject(class UObject* ReturnValue);
	bool SelectInt(int32 ReturnValue);
	bool SelectFloat(double ReturnValue);
	bool SelectColor(const struct FLinearColor& ReturnValue);
	bool SelectClass(class UClass* ReturnValue);
	struct FRandomStream SeedRandomStream();
	double SafeDivide(double ReturnValue);
	double Round64(int64 ReturnValue);
	double Round(int32 ReturnValue);
	void RotatorFromAxisAndAngle(struct FVector* Axis, float Angle, const struct FRotator& ReturnValue);
	float RotateAngleAxis(struct FVector* Axis, const struct FVector& ReturnValue);
	struct FRotator RLerp(float Alpha, bool bShortestPath, const struct FRotator& ReturnValue);
	struct FRotator RInterpTo_PerAxis(const struct FRotator& ReturnValue);
	struct FRotator RInterpTo_Constant_PerAxis(const struct FRotator& ReturnValue);
	float RInterpTo_Constant(const struct FRotator& ReturnValue);
	float RInterpTo(const struct FRotator& ReturnValue);
	struct FLinearColor RGBToHSV_Vector();
	float RGBtoHSV(struct FLinearColor* InColor);
	struct FLinearColor RGBLinearToHSV(const struct FLinearColor& ReturnValue);
	void ResetVectorSpringState(const struct FVectorSpringState& SpringState);
	struct FRandomStream ResetRandomStream();
	void ResetQuaternionSpringState(const struct FQuaternionSpringState& SpringState);
	void ResetFloatSpringState(const struct FFloatSpringState& SpringState);
	int32 REase(float Alpha, bool bShortestPath, const struct FRotator& ReturnValue);
	float RandomUnitVectorInEllipticalConeInRadiansFromStream(const struct FVector& ReturnValue);
	float RandomUnitVectorInEllipticalConeInRadians(const struct FVector& ReturnValue);
	float RandomUnitVectorInEllipticalConeInDegreesFromStream(const struct FVector& ReturnValue);
	float RandomUnitVectorInEllipticalConeInDegrees(const struct FVector& ReturnValue);
	float RandomUnitVectorInConeInRadiansFromStream(const struct FVector& ReturnValue);
	float RandomUnitVectorInConeInRadians(const struct FVector& ReturnValue);
	float RandomUnitVectorInConeInDegreesFromStream(const struct FVector& ReturnValue);
	float RandomUnitVectorInConeInDegrees(const struct FVector& ReturnValue);
	struct FRandomStream RandomUnitVectorFromStream(const struct FVector& ReturnValue);
	void RandomUnitVector(const struct FVector& ReturnValue);
	bool RandomRotatorFromStream(const struct FRotator& ReturnValue);
	bool RandomRotator(const struct FRotator& ReturnValue);
	struct FRandomStream RandomPointInBoundingBoxFromStream_Box(struct FBox* Box, const struct FVector& ReturnValue);
	struct FVector RandomPointInBoundingBoxFromStream(struct FVector* Center, const struct FVector& ReturnValue);
	void RandomPointInBoundingBox_Box(struct FBox* Box, const struct FVector& ReturnValue);
	struct FVector RandomPointInBoundingBox(struct FVector* Center, const struct FVector& ReturnValue);
	struct FRandomStream RandomIntegerInRangeFromStream(int32* Min, int32* Max, int32 ReturnValue);
	void RandomIntegerInRange(int32* Min, int32* Max, int32 ReturnValue);
	struct FRandomStream RandomIntegerFromStream(int32* Max, int32 ReturnValue);
	void RandomInteger64InRange(int64* Min, int64* Max, int64 ReturnValue);
	void RandomInteger64(int64* Max, int64 ReturnValue);
	void RandomInteger(int32* Max, int32 ReturnValue);
	struct FRandomStream RandomFloatInRangeFromStream(float* Min, float* Max, float ReturnValue);
	void RandomFloatInRange(double* Min, double* Max, double ReturnValue);
	struct FRandomStream RandomFloatFromStream(float ReturnValue);
	void RandomFloat(double ReturnValue);
	void RandomBoolWithWeightFromStream(const struct FRandomStream& RandomStream, float* Weight, bool ReturnValue);
	void RandomBoolWithWeight(float* Weight, bool ReturnValue);
	struct FRandomStream RandomBoolFromStream(bool ReturnValue);
	void RandomBool(bool ReturnValue);
	double RadiansToDegrees(double ReturnValue);
	float QuaternionSpringInterp(const struct FQuaternionSpringState& SpringState, float* Stiffness, float* CriticalDampingFactor, float Mass, float TargetVelocityAmount, bool bInitializeFromTarget, const struct FQuat& ReturnValue);
	struct FQuat Quat_VectorUp(const struct FVector& ReturnValue);
	struct FQuat Quat_VectorRight(const struct FVector& ReturnValue);
	struct FQuat Quat_VectorForward(const struct FVector& ReturnValue);
	struct FVector Quat_UnrotateVector(const struct FVector& ReturnValue);
	struct FQuat Quat_Slerp(double Alpha, const struct FQuat& ReturnValue);
	struct FQuat Quat_SizeSquared(float ReturnValue);
	struct FQuat Quat_Size(float ReturnValue);
	struct FVector Quat_SetFromEuler();
	struct FQuat Quat_SetComponents(float* X, float* Y, float* Z, float* W);
	struct FQuat Quat_Rotator(const struct FRotator& ReturnValue);
	struct FVector Quat_RotateVector(const struct FVector& ReturnValue);
	float Quat_Normalized(const struct FQuat& ReturnValue);
	float Quat_Normalize();
	struct FVector Quat_MakeFromEuler(const struct FQuat& ReturnValue);
	struct FQuat Quat_Log(const struct FQuat& ReturnValue);
	struct FQuat Quat_IsNormalized(bool ReturnValue);
	struct FQuat Quat_IsNonFinite(bool ReturnValue);
	float Quat_IsIdentity(bool ReturnValue);
	struct FQuat Quat_IsFinite(bool ReturnValue);
	struct FQuat Quat_Inversed(const struct FQuat& ReturnValue);
	void Quat_Identity(const struct FQuat& ReturnValue);
	struct FQuat Quat_GetRotationAxis(const struct FVector& ReturnValue);
	struct FQuat Quat_GetAxisZ(const struct FVector& ReturnValue);
	struct FQuat Quat_GetAxisY(const struct FVector& ReturnValue);
	struct FQuat Quat_GetAxisX(const struct FVector& ReturnValue);
	struct FQuat Quat_GetAngle(float ReturnValue);
	struct FVector Quat_FindBetweenVectors(const struct FQuat& ReturnValue);
	struct FVector Quat_FindBetweenNormals(const struct FQuat& ReturnValue);
	struct FQuat Quat_Exp(const struct FQuat& ReturnValue);
	struct FQuat Quat_Euler(const struct FVector& ReturnValue);
	struct FQuat Quat_EnforceShortestArcWith();
	struct FQuat Quat_AngularDistance(float ReturnValue);
	float QInterpTo(const struct FRotator& ReturnValue);
	struct FVector ProjectVectorOnToVector(const struct FVector& ReturnValue);
	struct FVector ProjectVectorOntoPlane(const struct FVector& ReturnValue);
	struct FVector ProjectPointOnToPlane(const struct FVector& PlaneBase, const struct FVector& ReturnValue);
	float PointsAreCoplanar(TArray<struct FVector>* Points, bool ReturnValue);
	void PerlinNoise1D(float* Value, float ReturnValue);
	int32 Percent_IntInt(int32 ReturnValue);
	int64 Percent_Int64Int64(int64 ReturnValue);
	double Percent_FloatFloat(double ReturnValue);
	double Percent_DoubleDouble(double ReturnValue);
	uint8 Percent_ByteByte(uint8 ReturnValue);
	int32 Or_IntInt(int32 ReturnValue);
	int64 Or_Int64Int64(int64 ReturnValue);
	void Now(const struct FDateTime& ReturnValue);
	struct FVector NotEqualExactly_VectorVector(bool ReturnValue);
	struct FVector4 NotEqualExactly_Vector4Vector4(bool ReturnValue);
	struct FVector2D NotEqualExactly_Vector2DVector2D(bool ReturnValue);
	struct FVector NotEqual_VectorVector(float ErrorTolerance, bool ReturnValue);
	struct FVector4 NotEqual_Vector4Vector4(float ErrorTolerance, bool ReturnValue);
	struct FVector2D NotEqual_Vector2DVector2D(float ErrorTolerance, bool ReturnValue);
	struct FTimespan NotEqual_TimespanTimespan(bool ReturnValue);
	struct FRotator NotEqual_RotatorRotator(float ErrorTolerance, bool ReturnValue);
	struct FQuat NotEqual_QuatQuat(float ErrorTolerance, bool ReturnValue);
	class UObject* NotEqual_ObjectObject(bool ReturnValue);
	class FName NotEqual_NameName(bool ReturnValue);
	float NotEqual_MatrixMatrix(bool ReturnValue);
	struct FLinearColor NotEqual_LinearColorLinearColor(bool ReturnValue);
	struct FIntPoint NotEqual_IntPointIntPoint(bool ReturnValue);
	int32 NotEqual_IntInt(bool ReturnValue);
	int64 NotEqual_Int64Int64(bool ReturnValue);
	double NotEqual_DoubleDouble(bool ReturnValue);
	struct FDateTime NotEqual_DateTimeDateTime(bool ReturnValue);
	class UClass* NotEqual_ClassClass(bool ReturnValue);
	uint8 NotEqual_ByteByte(bool ReturnValue);
	bool NotEqual_BoolBool(bool ReturnValue);
	bool Not_PreBool(bool ReturnValue);
	int64 Not_Int64(int64 ReturnValue);
	int32 Not_Int(int32 ReturnValue);
	float NormalSafe2D(const struct FVector2D& ReturnValue);
	void NormalizeToRange(double* Value, double RangeMin, double RangeMax, double ReturnValue);
	struct FRotator NormalizedDeltaRotator(const struct FRotator& ReturnValue);
	void NormalizeAxis(float Angle, float ReturnValue);
	float Normalize2D();
	struct FVector2D Normal2D(const struct FVector2D& ReturnValue);
	float Normal(const struct FVector& ReturnValue);
	struct FVector NegateVector(const struct FVector& ReturnValue);
	struct FRotator NegateRotator(const struct FRotator& ReturnValue);
	struct FVector2D Negated2D(const struct FVector2D& ReturnValue);
	struct FVector NearlyEqual_VectorVector(float ErrorTolerance, bool ReturnValue);
	float NearlyEqual_TransformTransform(bool ReturnValue);
	double NearlyEqual_FloatFloat(double ErrorTolerance, bool ReturnValue);
	double NearlyEqual_DoubleDouble(float ErrorTolerance, bool ReturnValue);
	int32 MultiplyMultiply_IntInt(int32 Exp, int32 ReturnValue);
	double MultiplyMultiply_FloatFloat(double Exp, double ReturnValue);
	void MultiplyByPi(double* Value, double ReturnValue);
	struct FVector Multiply_VectorVector(const struct FVector& ReturnValue);
	int32 Multiply_VectorInt(const struct FVector& ReturnValue);
	double Multiply_VectorFloat(const struct FVector& ReturnValue);
	struct FVector4 Multiply_Vector4Vector4(const struct FVector4& ReturnValue);
	struct FVector2D Multiply_Vector2DVector2D(const struct FVector2D& ReturnValue);
	double Multiply_Vector2DFloat(const struct FVector2D& ReturnValue);
	struct FTimespan Multiply_TimespanFloat(float* Scalar, const struct FTimespan& ReturnValue);
	int32 Multiply_RotatorInt(const struct FRotator& ReturnValue);
	float Multiply_RotatorFloat(const struct FRotator& ReturnValue);
	struct FQuat Multiply_QuatQuat(const struct FQuat& ReturnValue);
	struct FMatrix Multiply_MatrixMatrix(const struct FMatrix& ReturnValue);
	double Multiply_MatrixFloat(const struct FMatrix& ReturnValue);
	struct FLinearColor Multiply_LinearColorLinearColor(const struct FLinearColor& ReturnValue);
	float Multiply_LinearColorFloat(const struct FLinearColor& ReturnValue);
	struct FIntPoint Multiply_IntPointIntPoint(const struct FIntPoint& ReturnValue);
	int32 Multiply_IntPointInt(const struct FIntPoint& ReturnValue);
	int32 Multiply_IntInt(int32 ReturnValue);
	double Multiply_IntFloat(double ReturnValue);
	int64 Multiply_Int64Int64(int64 ReturnValue);
	float Multiply_DoubleFloat(double ReturnValue);
	double Multiply_DoubleDouble(double ReturnValue);
	uint8 Multiply_ByteByte(uint8 ReturnValue);
	struct FVector MirrorVectorByNormal(struct FVector* InNormal, const struct FVector& ReturnValue);
	int32 MinOfIntArray(TArray<int32>* IntArray);
	float MinOfFloatArray();
	uint8 MinOfByteArray();
	int64 MinInt64(int64 ReturnValue);
	bool MinimumAreaRectangle();
	bool MinAreaRectangle(TArray<struct FVector>* InPoints);
	int32 Min(int32 ReturnValue);
	float MedianOfIntArray(TArray<int32>* IntArray);
	int32 MaxOfIntArray(TArray<int32>* IntArray);
	float MaxOfFloatArray();
	uint8 MaxOfByteArray();
	int64 MaxInt64(int64 ReturnValue);
	int32 Max(int32 ReturnValue);
	struct FVector4 Matrix_TransformVector4(const struct FVector4& ReturnValue);
	struct FVector Matrix_TransformVector(const struct FVector4& ReturnValue);
	struct FVector Matrix_TransformPosition(const struct FVector4& ReturnValue);
	struct FMatrix Matrix_ToQuat(const struct FQuat& ReturnValue);
	struct FVector Matrix_SetOrigin();
	struct FMatrix Matrix_SetColumn(enum class EMatrixColumns Column, struct FVector* Value);
	struct FVector Matrix_SetAxis(enum class EAxis* Axis);
	struct FVector Matrix_ScaleTranslation(const struct FMatrix& ReturnValue);
	struct FMatrix Matrix_RemoveTranslation(const struct FMatrix& ReturnValue);
	float Matrix_RemoveScaling();
	enum class EAxis Matrix_Mirror(enum class EAxis* MirrorAxis, const struct FMatrix& ReturnValue);
	struct FVector Matrix_InverseTransformVector(const struct FVector& ReturnValue);
	struct FVector Matrix_InverseTransformPosition(const struct FVector& ReturnValue);
	void Matrix_Identity(const struct FMatrix& ReturnValue);
	struct FMatrix Matrix_GetUnitAxis(enum class EAxis* Axis, const struct FVector& ReturnValue);
	struct FMatrix Matrix_GetUnitAxes(struct FVector* X, struct FVector* Y, struct FVector* Z);
	struct FMatrix Matrix_GetTransposed(const struct FMatrix& ReturnValue);
	struct FMatrix Matrix_GetTransposeAdjoint(const struct FMatrix& ReturnValue);
	float Matrix_GetScaleVector(const struct FVector& ReturnValue);
	struct FMatrix Matrix_GetScaledAxis(enum class EAxis* Axis, const struct FVector& ReturnValue);
	struct FMatrix Matrix_GetScaledAxes(struct FVector* X, struct FVector* Y, struct FVector* Z);
	struct FMatrix Matrix_GetRotDeterminant(float ReturnValue);
	struct FMatrix Matrix_GetRotator(const struct FRotator& ReturnValue);
	struct FMatrix Matrix_GetOrigin(const struct FVector& ReturnValue);
	struct FMatrix Matrix_GetMaximumAxisScale(float ReturnValue);
	float Matrix_GetMatrixWithoutScale(const struct FMatrix& ReturnValue);
	struct FMatrix Matrix_GetInverse(const struct FMatrix& ReturnValue);
	struct FPlane Matrix_GetFrustumTopPlane(bool ReturnValue);
	struct FPlane Matrix_GetFrustumRightPlane(bool ReturnValue);
	struct FPlane Matrix_GetFrustumNearPlane(bool ReturnValue);
	struct FPlane Matrix_GetFrustumLeftPlane(bool ReturnValue);
	struct FPlane Matrix_GetFrustumFarPlane(bool ReturnValue);
	struct FPlane Matrix_GetFrustumBottomPlane(bool ReturnValue);
	struct FMatrix Matrix_GetDeterminant(float ReturnValue);
	struct FMatrix Matrix_GetColumn(enum class EMatrixColumns Column, const struct FVector& ReturnValue);
	struct FMatrix Matrix_ContainsNaN(bool ReturnValue);
	struct FMatrix Matrix_ConcatenateTranslation(struct FVector* Translation, const struct FMatrix& ReturnValue);
	struct FMatrix Matrix_ApplyScale(float* Scale, const struct FMatrix& ReturnValue);
	double MapRangeUnclamped(double* Value, double ReturnValue);
	double MapRangeClamped(double* Value, double ReturnValue);
	void MakeVector_NetQuantizeNormal(double* X, double* Y, double* Z, const struct FVector_NetQuantizeNormal& ReturnValue);
	void MakeVector_NetQuantize100(double* X, double* Y, double* Z, const struct FVector_NetQuantize100& ReturnValue);
	void MakeVector_NetQuantize10(double* X, double* Y, double* Z, const struct FVector_NetQuantize10& ReturnValue);
	void MakeVector_NetQuantize(double* X, double* Y, double* Z, const struct FVector_NetQuantize& ReturnValue);
	void MakeVector4(double* X, double* Y, double* Z, double* W, const struct FVector4& ReturnValue);
	void MakeVector2D(double* X, double* Y, const struct FVector2D& ReturnValue);
	void MakeVector(double* X, double* Y, double* Z, const struct FVector& ReturnValue);
	void MakeTransform(struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale, const struct FTransform& ReturnValue);
	int32 MakeTimespan2(const struct FTimespan& ReturnValue);
	int32 MakeTimespan(const struct FTimespan& ReturnValue);
	void MakeRotFromZY(struct FVector* Z, struct FVector* Y, const struct FRotator& ReturnValue);
	void MakeRotFromZX(struct FVector* Z, struct FVector* X, const struct FRotator& ReturnValue);
	void MakeRotFromZ(struct FVector* Z, const struct FRotator& ReturnValue);
	void MakeRotFromYZ(struct FVector* Y, struct FVector* Z, const struct FRotator& ReturnValue);
	void MakeRotFromYX(struct FVector* Y, struct FVector* X, const struct FRotator& ReturnValue);
	void MakeRotFromY(struct FVector* Y, const struct FRotator& ReturnValue);
	void MakeRotFromXZ(struct FVector* X, struct FVector* Z, const struct FRotator& ReturnValue);
	void MakeRotFromXY(struct FVector* X, struct FVector* Y, const struct FRotator& ReturnValue);
	void MakeRotFromX(struct FVector* X, const struct FRotator& ReturnValue);
	float MakeRotator(const struct FRotator& ReturnValue);
	struct FVector MakeRotationFromAxes(const struct FRotator& ReturnValue);
	struct FTransform MakeRelativeTransform(const struct FTransform& ReturnValue);
	int32 MakeRandomStream(const struct FRandomStream& ReturnValue);
	void MakeQuat(float* X, float* Y, float* Z, float* W, const struct FQuat& ReturnValue);
	struct FFrameRate MakeQualifiedFrameTime(float* SubFrame, const struct FQualifiedFrameTime& ReturnValue);
	float MakePulsatingValue(float ReturnValue);
	struct FVector MakePlaneFromPointAndNormal(struct FVector* Normal, const struct FPlane& ReturnValue);
	void MakeFrameRate(int32* Numerator, int32* Denominator, const struct FFrameRate& ReturnValue);
	int32 MakeDateTime(const struct FDateTime& ReturnValue);
	float MakeColor(const struct FLinearColor& ReturnValue);
	struct FVector MakeBoxSphereBounds(const struct FVector& BoxExtent, float SphereRadius, const struct FBoxSphereBounds& ReturnValue);
	void MakeBox2D(struct FVector2D* Min, struct FVector2D* Max, const struct FBox2D& ReturnValue);
	void MakeBox(struct FVector* Min, struct FVector* Max, const struct FBox& ReturnValue);
	double Loge(double ReturnValue);
	double Log(double ReturnValue);
	struct FVector LinePlaneIntersection_OriginNormal(bool ReturnValue);
	struct FVector LinePlaneIntersection(bool ReturnValue);
	struct FLinearColor LinearColorLerpUsingHSV(float Alpha, const struct FLinearColor& ReturnValue);
	struct FLinearColor LinearColorLerp(float Alpha, const struct FLinearColor& ReturnValue);
	void LinearColor_Yellow(const struct FLinearColor& ReturnValue);
	void LinearColor_White(const struct FLinearColor& ReturnValue);
	void LinearColor_Transparent(const struct FLinearColor& ReturnValue);
	struct FLinearColor LinearColor_ToRGBE(const struct FColor& ReturnValue);
	void LinearColor_ToNewOpacity(struct FLinearColor* InColor, float InOpacity, const struct FLinearColor& ReturnValue);
	float LinearColor_SetTemperature();
	float LinearColor_SetRGBA();
	struct FLinearColor LinearColor_SetRandomHue();
	struct FColor LinearColor_SetFromSRGB();
	struct FLinearColor LinearColor_SetFromPow22(struct FColor* InColor);
	float LinearColor_SetFromHSV();
	struct FLinearColor LinearColor_Set(struct FLinearColor* InColor);
	void LinearColor_Red(const struct FLinearColor& ReturnValue);
	void LinearColor_QuantizeRound(struct FLinearColor* InColor, const struct FColor& ReturnValue);
	void LinearColor_Quantize(struct FLinearColor* InColor, const struct FColor& ReturnValue);
	float LinearColor_IsNearEqual(bool ReturnValue);
	void LinearColor_Green(const struct FLinearColor& ReturnValue);
	void LinearColor_Gray(const struct FLinearColor& ReturnValue);
	void LinearColor_GetMin(struct FLinearColor* InColor, float ReturnValue);
	void LinearColor_GetMax(struct FLinearColor* InColor, float ReturnValue);
	void LinearColor_GetLuminance(struct FLinearColor* InColor, float ReturnValue);
	struct FLinearColor LinearColor_Distance(float ReturnValue);
	float LinearColor_Desaturated(struct FLinearColor* InColor, const struct FLinearColor& ReturnValue);
	void LinearColor_Blue(const struct FLinearColor& ReturnValue);
	void LinearColor_Black(const struct FLinearColor& ReturnValue);
	struct FRotator LessLess_VectorRotator(const struct FVector& ReturnValue);
	struct FTimespan LessEqual_TimespanTimespan(bool ReturnValue);
	int32 LessEqual_IntInt(bool ReturnValue);
	int64 LessEqual_Int64Int64(bool ReturnValue);
	double LessEqual_DoubleDouble(bool ReturnValue);
	struct FDateTime LessEqual_DateTimeDateTime(bool ReturnValue);
	uint8 LessEqual_ByteByte(bool ReturnValue);
	struct FTimespan Less_TimespanTimespan(bool ReturnValue);
	int32 Less_IntInt(bool ReturnValue);
	int64 Less_Int64Int64(bool ReturnValue);
	double Less_DoubleDouble(bool ReturnValue);
	struct FDateTime Less_DateTimeDateTime(bool ReturnValue);
	uint8 Less_ByteByte(bool ReturnValue);
	float LerpAngle(float Alpha, float ReturnValue);
	double Lerp(double Alpha, double ReturnValue);
	struct FVector2D IsZero2D(bool ReturnValue);
	struct FRotator IsRotatorInfiniteOrNaN(bool ReturnValue);
	struct FTransform IsPointInBoxWithTransform_Box(const struct FBox& BoxExtent, bool ReturnValue);
	struct FTransform IsPointInBoxWithTransform(const struct FVector& BoxExtent, bool ReturnValue);
	struct FVector IsPointInBox_Box(struct FBox* Box, bool ReturnValue);
	struct FVector IsPointInBox(const struct FVector& BoxExtent, bool ReturnValue);
	float IsNearlyZero2D(bool ReturnValue);
	struct FDateTime IsMorning(bool ReturnValue);
	int32 IsLeapYear(bool ReturnValue);
	struct FVector IsInfiniteOrNaN(bool ReturnValue);
	struct FDateTime IsAfternoon(bool ReturnValue);
	struct FTransform InvertTransform(const struct FTransform& ReturnValue);
	struct FTransform InverseTransformRotation(struct FRotator* Rotation, const struct FRotator& ReturnValue);
	struct FTransform InverseTransformLocation(struct FVector* Location, const struct FVector& ReturnValue);
	struct FVector InverseTransformDirection(const struct FVector& ReturnValue);
	void IntPoint_Zero(const struct FIntPoint& ReturnValue);
	void IntPoint_Up(const struct FIntPoint& ReturnValue);
	void IntPoint_Right(const struct FIntPoint& ReturnValue);
	void IntPoint_One(const struct FIntPoint& ReturnValue);
	void IntPoint_Left(const struct FIntPoint& ReturnValue);
	void IntPoint_Down(const struct FIntPoint& ReturnValue);
	bool InRange_IntInt(int32* Value, int32* Min, int32* Max, bool ReturnValue);
	bool InRange_Int64Int64(int64* Value, int64* Min, int64* Max, bool ReturnValue);
	bool InRange_FloatFloat(double* Value, double* Min, double* Max, bool ReturnValue);
	double Hypotenuse(double ReturnValue);
	struct FLinearColor HSVToRGBLinear(const struct FLinearColor& ReturnValue);
	struct FLinearColor HSVToRGB_Vector();
	float HSVToRGB(const struct FLinearColor& ReturnValue);
	double GridSnap_Float(double* Location, double ReturnValue);
	struct FRotator GreaterGreater_VectorRotator(const struct FVector& ReturnValue);
	struct FTimespan GreaterEqual_TimespanTimespan(bool ReturnValue);
	int32 GreaterEqual_IntInt(bool ReturnValue);
	int64 GreaterEqual_Int64Int64(bool ReturnValue);
	double GreaterEqual_DoubleDouble(bool ReturnValue);
	struct FDateTime GreaterEqual_DateTimeDateTime(bool ReturnValue);
	uint8 GreaterEqual_ByteByte(bool ReturnValue);
	struct FTimespan Greater_TimespanTimespan(bool ReturnValue);
	int32 Greater_IntInt(bool ReturnValue);
	int64 Greater_Int64Int64(bool ReturnValue);
	double Greater_DoubleDouble(bool ReturnValue);
	struct FDateTime Greater_DateTimeDateTime(bool ReturnValue);
	uint8 Greater_ByteByte(bool ReturnValue);
	struct FDateTime GetYear(int32 ReturnValue);
	float GetYawPitchFromVector();
	TArray<struct FVector> GetVectorArrayAverage(const struct FVector& ReturnValue);
	void GetUpVector(struct FRotator* InRot, const struct FVector& ReturnValue);
	struct FTimespan GetTotalSeconds(float ReturnValue);
	struct FTimespan GetTotalMinutes(float ReturnValue);
	struct FTimespan GetTotalMilliseconds(float ReturnValue);
	struct FTimespan GetTotalHours(float ReturnValue);
	struct FTimespan GetTotalDays(float ReturnValue);
	struct FDateTime GetTimeOfDay(const struct FTimespan& ReturnValue);
	void GetTAU(double ReturnValue);
	float GetSlopeDegreeAngles(const struct FVector& UpVector);
	struct FTimespan GetSeconds(int32 ReturnValue);
	struct FDateTime GetSecond(int32 ReturnValue);
	float GetRotated2D(const struct FVector2D& ReturnValue);
	void GetRightVector(struct FRotator* InRot, const struct FVector& ReturnValue);
	struct FVector GetReflectionVector(const struct FVector& ReturnValue);
	struct FVector GetPointDistanceToSegment(float ReturnValue);
	struct FVector GetPointDistanceToLine(const struct FVector& LineOrigin, const struct FVector& LineDirection, float ReturnValue);
	void GetPI(double ReturnValue);
	struct FDateTime GetMonth(int32 ReturnValue);
	struct FTimespan GetMinutes(int32 ReturnValue);
	struct FDateTime GetMinute(int32 ReturnValue);
	struct FVector GetMinElement(double ReturnValue);
	struct FVector2D GetMin2D(double ReturnValue);
	struct FTimespan GetMilliseconds(int32 ReturnValue);
	struct FDateTime GetMillisecond(int32 ReturnValue);
	struct FVector GetMaxElement(double ReturnValue);
	struct FVector2D GetMax2D(double ReturnValue);
	struct FTimespan GetHours(int32 ReturnValue);
	struct FDateTime GetHour12(int32 ReturnValue);
	struct FDateTime GetHour(int32 ReturnValue);
	void GetForwardVector(struct FRotator* InRot, const struct FVector& ReturnValue);
	struct FTimespan GetDuration(const struct FTimespan& ReturnValue);
	struct FVector GetDirectionUnitVector(const struct FVector& From, const struct FVector& ReturnValue);
	struct FTimespan GetDays(int32 ReturnValue);
	struct FDateTime GetDayOfYear(int32 ReturnValue);
	struct FDateTime GetDay(int32 ReturnValue);
	struct FDateTime GetDate(const struct FDateTime& ReturnValue);
	float GetAzimuthAndElevation(const struct FVector& InDirection);
	struct FRotator GetAxes(struct FVector* X, struct FVector* Y, struct FVector* Z);
	struct FVector2D GetAbsMax2D(double ReturnValue);
	struct FVector2D GetAbs2D(const struct FVector2D& ReturnValue);
	void FWrap(double* Value, double* Min, double* Max, double ReturnValue);
	void FTruncVector(const struct FVector& InVector, const struct FIntVector& ReturnValue);
	double FTrunc64(int64 ReturnValue);
	double FTrunc(int32 ReturnValue);
	float FromSeconds(const struct FTimespan& ReturnValue);
	float FromMinutes(const struct FTimespan& ReturnValue);
	float FromMilliseconds(const struct FTimespan& ReturnValue);
	float FromHours(const struct FTimespan& ReturnValue);
	float FromDays(const struct FTimespan& ReturnValue);
	double Fraction(double ReturnValue);
	double FMod64(int64 ReturnValue);
	double FMod(int32 ReturnValue);
	double FMin(double ReturnValue);
	double FMax(double ReturnValue);
	float FloatSpringInterp(const struct FFloatSpringState& SpringState, float* Stiffness, float* CriticalDampingFactor, float Mass, float TargetVelocityAmount, bool bInitializeFromTarget, float ReturnValue);
	struct FVector FlattenVectorNormal(const struct FVector& ReturnValue);
	struct FVector FlattenVector(const struct FVector& ReturnValue);
	float FixedTurn(float ReturnValue);
	double FInterpTo_Constant(double ReturnValue);
	double FInterpTo(double ReturnValue);
	double FInterpEaseInOut(double Alpha, double ReturnValue);
	struct FVector FindRelativeLookAtRotation(const struct FRotator& ReturnValue);
	struct FVector FindNearestPointsOnLineSegments();
	struct FVector FindLookAtRotation(const struct FRotator& ReturnValue);
	struct FVector FindClosestPointOnSegment(const struct FVector& ReturnValue);
	struct FVector FindClosestPointOnLine(const struct FVector& LineOrigin, const struct FVector& LineDirection, const struct FVector& ReturnValue);
	double FFloor64(int64 ReturnValue);
	double FFloor(int32 ReturnValue);
	void FClamp01(double* Value, double ReturnValue);
	void FClamp(double* Value, double* Min, double* Max, double ReturnValue);
	double FCeil64(int64 ReturnValue);
	double FCeil(int32 ReturnValue);
	float FAngleInterpTo(float ReturnValue);
	float FAngleInterpEaseOut(float Alpha, float ReturnValue);
	float FAngleInterpEaseInOut(float Alpha, float ReturnValue);
	float FAngleInterpEaseIn(float Alpha, float ReturnValue);
	double Exp(double ReturnValue);
	struct FVector EqualExactly_VectorVector(bool ReturnValue);
	struct FVector4 EqualExactly_Vector4Vector4(bool ReturnValue);
	struct FVector2D EqualExactly_Vector2DVector2D(bool ReturnValue);
	struct FVector EqualEqual_VectorVector(float ErrorTolerance, bool ReturnValue);
	struct FVector4 EqualEqual_Vector4Vector4(float ErrorTolerance, bool ReturnValue);
	struct FVector2D EqualEqual_Vector2DVector2D(float ErrorTolerance, bool ReturnValue);
	struct FTransform EqualEqual_TransformTransform(bool ReturnValue);
	struct FTimespan EqualEqual_TimespanTimespan(bool ReturnValue);
	struct FRotator EqualEqual_RotatorRotator(float ErrorTolerance, bool ReturnValue);
	float EqualEqual_QuatQuat(bool ReturnValue);
	class UObject* EqualEqual_ObjectObject(bool ReturnValue);
	class FName EqualEqual_NameName(bool ReturnValue);
	float EqualEqual_MatrixMatrix(bool ReturnValue);
	struct FLinearColor EqualEqual_LinearColorLinearColor(bool ReturnValue);
	int32 EqualEqual_IntInt(bool ReturnValue);
	int64 EqualEqual_Int64Int64(bool ReturnValue);
	double EqualEqual_DoubleDouble(bool ReturnValue);
	struct FDateTime EqualEqual_DateTimeDateTime(bool ReturnValue);
	class UClass* EqualEqual_ClassClass(bool ReturnValue);
	uint8 EqualEqual_ByteByte(bool ReturnValue);
	bool EqualEqual_BoolBool(bool ReturnValue);
	struct FIntPoint Equal_IntPointIntPoint(bool ReturnValue);
	int32 EaseAngle(float Alpha, float ReturnValue);
	int32 Ease(double Alpha, double ReturnValue);
	float DynamicWeightedMovingAverage_FVector(float MaxDistance, const struct FVector& ReturnValue);
	float DynamicWeightedMovingAverage_FRotator(float MaxDistance, const struct FRotator& ReturnValue);
	float DynamicWeightedMovingAverage_Float(float MaxDistance, float ReturnValue);
	struct FVector2D DotProduct2D(double ReturnValue);
	struct FVector Dot_VectorVector(double ReturnValue);
	struct FVector Divide_VectorVector(const struct FVector& ReturnValue);
	int32 Divide_VectorInt(const struct FVector& ReturnValue);
	double Divide_VectorFloat(const struct FVector& ReturnValue);
	struct FVector4 Divide_Vector4Vector4(const struct FVector4& ReturnValue);
	struct FVector2D Divide_Vector2DVector2D(const struct FVector2D& ReturnValue);
	double Divide_Vector2DFloat(const struct FVector2D& ReturnValue);
	struct FTimespan Divide_TimespanFloat(float* Scalar, const struct FTimespan& ReturnValue);
	struct FLinearColor Divide_LinearColorLinearColor(const struct FLinearColor& ReturnValue);
	struct FIntPoint Divide_IntPointIntPoint(const struct FIntPoint& ReturnValue);
	int32 Divide_IntPointInt(const struct FIntPoint& ReturnValue);
	int32 Divide_IntInt(int32 ReturnValue);
	int64 Divide_Int64Int64(int64 ReturnValue);
	float Divide_DoubleFloat(double ReturnValue);
	double Divide_DoubleDouble(double ReturnValue);
	uint8 Divide_ByteByte(uint8 ReturnValue);
	void DistanceSquared2D(struct FVector2D* V1, struct FVector2D* V2, double ReturnValue);
	void Distance2D(struct FVector2D* V1, struct FVector2D* V2, double ReturnValue);
	double DegTan(double ReturnValue);
	double DegSin(double ReturnValue);
	double DegreesToRadians(double ReturnValue);
	double DegCos(double ReturnValue);
	void DegAtan2(double* Y, double* X, double ReturnValue);
	double DegAtan(double ReturnValue);
	double DegAsin(double ReturnValue);
	double DegAcos(double ReturnValue);
	int32 DaysInYear(int32 ReturnValue);
	int32 DaysInMonth(int32 ReturnValue);
	void DateTimeMinValue(const struct FDateTime& ReturnValue);
	void DateTimeMaxValue(const struct FDateTime& ReturnValue);
	struct FDateTime DateTimeFromString(bool ReturnValue);
	struct FDateTime DateTimeFromIsoString(bool ReturnValue);
	struct FVector2D CrossProduct2D(double ReturnValue);
	struct FVector Cross_VectorVector(const struct FVector& ReturnValue);
	float CreateVectorFromYawPitch(const struct FVector& ReturnValue);
	double Cos(double ReturnValue);
	void Conv_VectorToVector2D(const struct FVector& InVector, const struct FVector2D& ReturnValue);
	void Conv_VectorToTransform(struct FVector* InLocation, const struct FTransform& ReturnValue);
	struct FVector Conv_VectorToRotator(const struct FRotator& ReturnValue);
	struct FVector Conv_VectorToQuaternion(const struct FQuat& ReturnValue);
	struct FVector Conv_VectorToLinearColor(const struct FLinearColor& ReturnValue);
	struct FVector4 Conv_Vector4ToVector(const struct FVector& ReturnValue);
	struct FVector4 Conv_Vector4ToRotator(const struct FRotator& ReturnValue);
	struct FVector4 Conv_Vector4ToQuaternion(const struct FQuat& ReturnValue);
	struct FVector2D Conv_Vector2DToVector(float* Z, const struct FVector& ReturnValue);
	struct FVector2D Conv_Vector2DToIntPoint(const struct FIntPoint& ReturnValue);
	void Conv_TransformToMatrix(struct FTransform* Transform, const struct FMatrix& ReturnValue);
	void Conv_RotatorToVector(struct FRotator* InRot, const struct FVector& ReturnValue);
	struct FRotator Conv_RotatorToTransform(const struct FTransform& ReturnValue);
	void Conv_RotatorToQuaternion(struct FRotator* InRot, const struct FQuat& ReturnValue);
	struct FMatrix Conv_MatrixToTransform(const struct FTransform& ReturnValue);
	struct FMatrix Conv_MatrixToRotator(const struct FRotator& ReturnValue);
	struct FLinearColor Conv_LinearColorToVector(const struct FVector& ReturnValue);
	bool Conv_LinearColorToColor(const struct FColor& ReturnValue);
	struct FIntVector Conv_IntVectorToVector(const struct FVector& ReturnValue);
	int32 Conv_IntToVector(const struct FVector& ReturnValue);
	int32 Conv_IntToIntVector(const struct FIntVector& ReturnValue);
	int32 Conv_IntToInt64(int64 ReturnValue);
	int32 Conv_IntToDouble(double ReturnValue);
	int32 Conv_IntToByte(uint8 ReturnValue);
	int32 Conv_IntToBool(bool ReturnValue);
	struct FIntPoint Conv_IntPointToVector2D(const struct FVector2D& ReturnValue);
	int64 Conv_Int64ToInt(int32 ReturnValue);
	int64 Conv_Int64ToDouble(double ReturnValue);
	int64 Conv_Int64ToByte(uint8 ReturnValue);
	void Conv_FloatToDouble(float InFloat, double ReturnValue);
	void Conv_DoubleToVector2D(double InDouble, const struct FVector2D& ReturnValue);
	void Conv_DoubleToVector(double InDouble, const struct FVector& ReturnValue);
	void Conv_DoubleToLinearColor(double InDouble, const struct FLinearColor& ReturnValue);
	void Conv_DoubleToInt64(double InDouble, int64 ReturnValue);
	void Conv_DoubleToFloat(double InDouble, float ReturnValue);
	void Conv_ColorToLinearColor(struct FColor* InColor, const struct FLinearColor& ReturnValue);
	uint8 Conv_ByteToInt64(int64 ReturnValue);
	uint8 Conv_ByteToInt(int32 ReturnValue);
	uint8 Conv_ByteToDouble(double ReturnValue);
	void Conv_BoolToInt(bool* InBool, int32 ReturnValue);
	void Conv_BoolToDouble(bool* InBool, double ReturnValue);
	void Conv_BoolToByte(bool* InBool, uint8 ReturnValue);
	struct FTransform ComposeTransforms(const struct FTransform& ReturnValue);
	struct FRotator ComposeRotators(const struct FRotator& ReturnValue);
	class UClass* ClassIsChildOf(bool ReturnValue);
	struct FVector ClampVectorSize(double* Min, double* Max, const struct FVector& ReturnValue);
	void ClampInt64(int64* Value, int64* Min, int64* Max, int64 ReturnValue);
	void ClampAxis(float Angle, float ReturnValue);
	double ClampAxes2D(const struct FVector2D& ReturnValue);
	double ClampAngle(double ReturnValue);
	void Clamp(int32* Value, int32* Min, int32* Max, int32 ReturnValue);
	float CInterpTo(const struct FLinearColor& ReturnValue);
	struct FVector_NetQuantizeNormal BreakVector_NetQuantizeNormal(double* X, double* Y, double* Z);
	struct FVector_NetQuantize100 BreakVector_NetQuantize100(double* X, double* Y, double* Z);
	struct FVector_NetQuantize10 BreakVector_NetQuantize10(double* X, double* Y, double* Z);
	struct FVector_NetQuantize BreakVector_NetQuantize(double* X, double* Y, double* Z);
	struct FVector4 BreakVector4(double* X, double* Y, double* Z, double* W);
	struct FVector3f BreakVector3f(float* X, float* Y, float* Z);
	struct FVector2D BreakVector2D(double* X, double* Y);
	struct FVector BreakVector(double* X, double* Y, double* Z);
	void BreakTransform(const struct FTransform& InTransform, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale);
	int32 BreakTimespan2(struct FTimespan* InTimespan);
	int32 BreakTimespan(struct FTimespan* InTimespan);
	void BreakRotIntoAxes(struct FRotator* InRot, struct FVector* X, struct FVector* Y, struct FVector* Z);
	float BreakRotator(struct FRotator* InRot);
	int32 BreakRandomStream();
	struct FQuat BreakQuat(float* X, float* Y, float* Z, float* W);
	struct FFrameRate BreakQualifiedFrameTime(float* SubFrame);
	struct FFrameRate BreakFrameRate(int32* Numerator, int32* Denominator);
	int32 BreakDateTime();
	float BreakColor(struct FLinearColor* InColor);
	struct FVector BreakBoxSphereBounds(const struct FVector& BoxExtent, float SphereRadius);
	struct FVector BoundToCube(float* Radius, const struct FVector& ReturnValue);
	bool BooleanXOR(bool ReturnValue);
	bool BooleanOR(bool ReturnValue);
	bool BooleanNOR(bool ReturnValue);
	bool BooleanNAND(bool ReturnValue);
	bool BooleanAND(bool ReturnValue);
	uint8 BMin(uint8 ReturnValue);
	uint8 BMax(uint8 ReturnValue);
	float AverageOfIntArray(TArray<int32>* IntArray);
	void Atan2(double* Y, double* X, double ReturnValue);
	double Atan(double ReturnValue);
	double Asin(double ReturnValue);
	int32 And_IntInt(int32 ReturnValue);
	int64 And_Int64Int64(int64 ReturnValue);
	struct FVector Add_VectorVector(const struct FVector& ReturnValue);
	int32 Add_VectorInt(const struct FVector& ReturnValue);
	double Add_VectorFloat(const struct FVector& ReturnValue);
	struct FVector4 Add_Vector4Vector4(const struct FVector4& ReturnValue);
	struct FVector2D Add_Vector2DVector2D(const struct FVector2D& ReturnValue);
	double Add_Vector2DFloat(const struct FVector2D& ReturnValue);
	struct FTimespan Add_TimespanTimespan(const struct FTimespan& ReturnValue);
	struct FQuat Add_QuatQuat(const struct FQuat& ReturnValue);
	struct FMatrix Add_MatrixMatrix(const struct FMatrix& ReturnValue);
	struct FLinearColor Add_LinearColorLinearColor(const struct FLinearColor& ReturnValue);
	struct FIntPoint Add_IntPointIntPoint(const struct FIntPoint& ReturnValue);
	int32 Add_IntPointInt(const struct FIntPoint& ReturnValue);
	int32 Add_IntInt(int32 ReturnValue);
	int64 Add_Int64Int64(int64 ReturnValue);
	float Add_DoubleFloat(double ReturnValue);
	double Add_DoubleDouble(double ReturnValue);
	struct FTimespan Add_DateTimeTimespan(const struct FDateTime& ReturnValue);
	struct FDateTime Add_DateTimeDateTime(const struct FDateTime& ReturnValue);
	uint8 Add_ByteByte(uint8 ReturnValue);
	double Acos(double ReturnValue);
	int64 Abs_Int64(int64 ReturnValue);
	int32 Abs_Int(int32 ReturnValue);
	double Abs(double ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetNodeHelperLibrary
class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetNodeHelperLibrary* GetDefaultObj();

	void MarkBit(int32 Data, int32* Index);
	void HasUnmarkedBit(int32 Data, int32 NumBits, bool ReturnValue);
	void HasMarkedBit(int32 Data, int32 NumBits, bool ReturnValue);
	void GetValidValue(class UEnum* Enum, uint8 EnumeratorValue, uint8 ReturnValue);
	void GetUnmarkedBit(int32 Data, int32 StartIdx, int32 NumBits, bool bRandom, int32 ReturnValue);
	void GetRandomUnmarkedBit(int32 Data, int32 StartIdx, int32 NumBits, int32 ReturnValue);
	void GetFirstUnmarkedBit(int32 Data, int32 StartIdx, int32 NumBits, int32 ReturnValue);
	void GetEnumeratorValueFromIndex(class UEnum* Enum, uint8 EnumeratorIndex, uint8 ReturnValue);
	void GetEnumeratorUserFriendlyName(class UEnum* Enum, uint8 EnumeratorValue, const class FString& ReturnValue);
	void GetEnumeratorName(class UEnum* Enum, uint8 EnumeratorValue, class FName ReturnValue);
	void ClearBit(int32 Data, int32* Index);
	void ClearAllBits(int32 Data);
	void BitIsMarked(int32 Data, int32* Index, bool ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetRenderingLibrary
class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetRenderingLibrary* GetDefaultObj();

	class UObject* UploadComputeMaterialSplatData(const class FString& SplatDataId, struct FTransform* BoundsLocalToWorld, const TArray<struct FSplatCapsuleBounds>& SplatLocalBounds, const TArray<struct FVector4f>& SplatData, int32 SplatDataFloat4Stride);
	struct FIntVector SetupAuxSceneTexture(enum class EAuxSceneTextures* ID);
	bool SetCastInsetShadowForAllAttachments(class UPrimitiveComponent** PrimitiveComponent);
	int32 ResizeRenderTarget2D();
	class UTextureRenderTarget2D* RenderTargetCreateStaticTexture2DEditorOnly(class FString* Name, enum class ETextureCompressionSettings* CompressionSettings, enum class ETextureMipGenSettings MipSettings, class UTexture2D* ReturnValue);
	class UObject* RemoveComputeMaterialSplatData(const class FString& SplatDataId);
	class UTextureRenderTarget2D* ReleaseRenderTarget2D();
	float ReadRenderTargetUV(const struct FColor& ReturnValue);
	class UTextureRenderTarget2D* ReadRenderTargetRawUVArea(const struct FBox2D& Area, bool* bNormalize, const TArray<struct FLinearColor>& ReturnValue);
	float ReadRenderTargetRawUV(bool* bNormalize, const struct FLinearColor& ReturnValue);
	int32 ReadRenderTargetRawPixelArea(bool* bNormalize, const TArray<struct FLinearColor>& ReturnValue);
	class UTextureRenderTarget2D* ReadRenderTargetRawPixel(int32* X, int32* Y, bool* bNormalize, const struct FLinearColor& ReturnValue);
	class UTextureRenderTarget2D* ReadRenderTargetRaw(const TArray<struct FLinearColor>& OutLinearSamples, bool* bNormalize, bool ReturnValue);
	class UTextureRenderTarget2D* ReadRenderTargetPixel(int32* X, int32* Y, const struct FColor& ReturnValue);
	class UTextureRenderTarget2D* ReadRenderTarget(const TArray<struct FColor>& OutSamples, bool* bNormalize, bool ReturnValue);
	void MakeSkinWeightInfo(int32 Bone0, uint8 Weight0, int32 Bone1, uint8 Weight1, int32 Bone2, uint8 Weight2, int32 Bone3, uint8 Weight3, const struct FSkelMeshSkinWeightInfo& ReturnValue);
	class FString ImportFileAsTexture2D(class UTexture2D* ReturnValue);
	TArray<uint8> ImportBufferAsTexture2D(class UTexture2D* ReturnValue);
	class FString ExportTexture2D(class UTexture2D** Texture);
	class FString ExportRenderTarget();
	class UObject* EndDrawCanvasToRenderTarget(struct FDrawToRenderTargetContext* Context);
	void EnablePathTracing(bool bEnablePathTracer);
	class UTextureRenderTarget2D* DrawMaterialToRenderTarget(class UMaterialInterface* Material);
	enum class EDispatchComputeRenderSlot DispatchComputeMaterialSplatData(class UMaterialInterface* Material, const class FString& SplatDataId, const struct FTransform& OutputTransform, bool bDispatchTiledIndirect, const struct FIntVector& TargetDispatchSize, const struct FIntVector& TargetOutputOffset);
	enum class EDispatchComputeRenderSlot DispatchComputeMaterial(class UMaterialInterface* Material, const struct FIntVector& DispatchSize, const struct FIntVector& DispatchOffset, bool bAsyncCompute);
	class UObject* DisableAuxSceneTexture(enum class EAuxSceneTextures* ID);
	bool CreateRenderTargetVolume(bool bAutoGenerateMipMaps, bool bSupportUAVs, class UTextureRenderTargetVolume* ReturnValue);
	bool CreateRenderTarget2DArray(int32 Slices, bool bAutoGenerateMipMaps, bool bSupportUAVs, class UTextureRenderTarget2DArray* ReturnValue);
	bool CreateRenderTarget2D(bool bAutoGenerateMipMaps, bool bSupportUAVs, class UTextureRenderTarget2D* ReturnValue);
	class UTextureRenderTarget2D* ConvertRenderTargetToTexture2DEditorOnly(class UTexture2D** Texture);
	struct FLinearColor ClearRenderTarget2D();
	struct FLinearColor ClearRenderTarget(int32 MipIdx);
	struct FLinearColor ClearAuxSceneTexture(enum class EAuxSceneTextures* ID);
	struct FMinimalViewInfo CalculateProjectionMatrix(const struct FMatrix& ReturnValue);
	struct FSkelMeshSkinWeightInfo BreakSkinWeightInfo(int32 Bone0, uint8 Weight0, int32 Bone1, uint8 Weight1, int32 Bone2, uint8 Weight2, int32 Bone3, uint8 Weight3);
	struct FVector2D BeginDrawCanvasToRenderTarget(struct FDrawToRenderTargetContext* Context);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetStringLibrary
class UKismetStringLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetStringLibrary* GetDefaultObj();

	void TrimTrailing(class FString* SourceString, const class FString& ReturnValue);
	void Trim(class FString* SourceString, const class FString& ReturnValue);
	void ToUpper(class FString* SourceString, const class FString& ReturnValue);
	void ToLower(class FString* SourceString, const class FString& ReturnValue);
	void TimeSecondsToString(float InSeconds, const class FString& ReturnValue);
	enum class ESearchCase StartsWith(class FString* SourceString, const class FString& InPrefix, bool ReturnValue);
	enum class ESearchCase Split(class FString* SourceString, class FString* InStr, class FString* LeftS, class FString* RightS, enum class ESearchDir* SearchDir, bool ReturnValue);
	void RightPad(class FString* SourceString, int32* ChCount, const class FString& ReturnValue);
	int32 RightChop(class FString* SourceString, const class FString& ReturnValue);
	int32 Right(class FString* SourceString, const class FString& ReturnValue);
	void Reverse(class FString* SourceString, const class FString& ReturnValue);
	enum class ESearchCase ReplaceInline(class FString* SourceString, class FString* ReplacementText, int32 ReturnValue);
	enum class ESearchCase Replace(class FString* SourceString, const class FString& From, const class FString& ReturnValue);
	void ParseIntoArray(class FString* SourceString, const class FString& Delimiter, bool* CullEmptyStrings, const TArray<class FString>& ReturnValue);
	class FString NotEqual_StrStr(bool ReturnValue);
	class FString NotEqual_StriStri(bool ReturnValue);
	int32 Mid(class FString* SourceString, const class FString& ReturnValue);
	enum class ESearchCase MatchesWildcard(class FString* SourceString, class FString* Wildcard, bool ReturnValue);
	class FString Len(int32 ReturnValue);
	void LeftPad(class FString* SourceString, int32* ChCount, const class FString& ReturnValue);
	int32 LeftChop(class FString* SourceString, const class FString& ReturnValue);
	int32 Left(class FString* SourceString, const class FString& ReturnValue);
	TArray<class FString> JoinStringArray(const class FString& Separator, const class FString& ReturnValue);
	void IsNumeric(class FString* SourceString, bool ReturnValue);
	void IsEmpty(const class FString& InString, bool ReturnValue);
	int32 GetSubstring(class FString* SourceString, int32 StartIndex, const class FString& ReturnValue);
	void GetCharacterAsNumber(class FString* SourceString, int32* Index, int32 ReturnValue);
	void GetCharacterArrayFromString(class FString* SourceString, const TArray<class FString>& ReturnValue);
	int32 FindSubstring(class FString* SearchIn, const class FString& SubString, bool* bUseCase, bool* bSearchFromEnd, int32 ReturnValue);
	class FString EqualEqual_StrStr(bool ReturnValue);
	class FString EqualEqual_StriStri(bool ReturnValue);
	enum class ESearchCase EndsWith(class FString* SourceString, class FString* InSuffix, bool ReturnValue);
	void CullArray(class FString* SourceString, const TArray<class FString>& InArray, int32 ReturnValue);
	struct FVector Conv_VectorToString(const class FString& ReturnValue);
	struct FVector3f Conv_Vector3fToString(const class FString& ReturnValue);
	struct FVector2D Conv_Vector2dToString(const class FString& ReturnValue);
	void Conv_TransformToString(struct FTransform* InTrans, const class FString& ReturnValue);
	void Conv_StringToVector3f(const class FString& InString, struct FVector3f* OutConvertedVector, bool* OutIsValid);
	void Conv_StringToVector2D(const class FString& InString, struct FVector2D* OutConvertedVector2D, bool* OutIsValid);
	void Conv_StringToVector(const class FString& InString, struct FVector* OutConvertedVector, bool* OutIsValid);
	void Conv_StringToRotator(const class FString& InString, struct FRotator* OutConvertedRotator, bool* OutIsValid);
	void Conv_StringToName(const class FString& InString, class FName ReturnValue);
	void Conv_StringToInt64(const class FString& InString, int64 ReturnValue);
	void Conv_StringToInt(const class FString& InString, int32 ReturnValue);
	void Conv_StringToDouble(const class FString& InString, double ReturnValue);
	void Conv_StringToColor(const class FString& InString, struct FLinearColor* OutConvertedColor, bool* OutIsValid);
	void Conv_RotatorToString(struct FRotator* InRot, const class FString& ReturnValue);
	void Conv_PlatformUserIdToString(struct FPlatformUserId* InPlatformUserId, const class FString& ReturnValue);
	void Conv_ObjectToString(class UObject** InObj, const class FString& ReturnValue);
	class FName Conv_NameToString(const class FString& ReturnValue);
	struct FMatrix Conv_MatrixToString(const class FString& ReturnValue);
	void Conv_IntVectorToString(struct FIntVector* InIntVec, const class FString& ReturnValue);
	int32 Conv_IntToString(const class FString& ReturnValue);
	struct FIntPoint Conv_IntPointToString(const class FString& ReturnValue);
	int64 Conv_Int64ToString(const class FString& ReturnValue);
	void Conv_InputDeviceIdToString(struct FInputDeviceId* InDeviceId, const class FString& ReturnValue);
	void Conv_DoubleToString(double InDouble, const class FString& ReturnValue);
	void Conv_ColorToString(struct FLinearColor* InColor, const class FString& ReturnValue);
	uint8 Conv_ByteToString(const class FString& ReturnValue);
	void Conv_BoolToString(bool* InBool, const class FString& ReturnValue);
	void Contains(class FString* SearchIn, const class FString& SubString, bool* bUseCase, bool* bSearchFromEnd, bool ReturnValue);
	class FString Concat_StrStr(const class FString& ReturnValue);
	struct FVector2D BuildString_Vector2d(class FString* AppendTo, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Vector(class FString* AppendTo, const struct FVector& InVector, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Rotator(class FString* AppendTo, struct FRotator* InRot, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Object(class FString* AppendTo, class UObject** InObj, class FString* Suffix, const class FString& ReturnValue);
	class FName BuildString_Name(class FString* AppendTo, class FString* Suffix, const class FString& ReturnValue);
	struct FIntVector BuildString_IntVector(class FString* AppendTo, class FString* Suffix, const class FString& ReturnValue);
	int32 BuildString_Int(class FString* AppendTo, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Double(class FString* AppendTo, double InDouble, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Color(class FString* AppendTo, struct FLinearColor* InColor, class FString* Suffix, const class FString& ReturnValue);
	class FString BuildString_Bool(class FString* AppendTo, bool* InBool, class FString* Suffix, const class FString& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetStringTableLibrary
class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetStringTableLibrary* GetDefaultObj();

	void IsRegisteredTableId(class FName TableId, bool ReturnValue);
	class FString IsRegisteredTableEntry(class FName TableId, bool ReturnValue);
	void GetTableNamespace(class FName TableId, const class FString& ReturnValue);
	class FString GetTableEntrySourceString(class FName TableId, const class FString& ReturnValue);
	class FString GetTableEntryMetaData(class FName TableId, class FName* MetaDataId, const class FString& ReturnValue);
	void GetRegisteredStringTables(const TArray<class FName>& ReturnValue);
	class FString GetMetaDataIdsFromStringTableEntry(class FName TableId, const TArray<class FName>& ReturnValue);
	void GetKeysFromStringTable(class FName TableId, const TArray<class FString>& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.KismetSystemLibrary
class UKismetSystemLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UKismetSystemLibrary* GetDefaultObj();

	void UnregisterForRemoteNotifications();
	void UnloadPrimaryAssetList(const TArray<struct FPrimaryAssetId>& PrimaryAssetIdList);
	void UnloadPrimaryAsset(const struct FPrimaryAssetId& PrimaryAssetId);
	void TransactObject(class UObject** Object);
	class UObject* SwitchNetworkMode(enum class ENetModeBP OutNetworkMode);
	void StackTrace();
	struct FHitResult SphereTraceSingleForObjects(float* Radius, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult SphereTraceSingleByProfile(float* Radius, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult SphereTraceSingle(float* Radius, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> SphereTraceMultiForObjects(float* Radius, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> SphereTraceMultiByProfile(float* Radius, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> SphereTraceMulti(float* Radius, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class UPrimitiveComponent*> SphereOverlapComponents_NEW(const struct FVector& SpherePos, float SphereRadius, bool ReturnValue);
	TArray<class UPrimitiveComponent*> SphereOverlapComponents(const struct FVector& SpherePos, float SphereRadius, bool ReturnValue);
	TArray<class AActor*> SphereOverlapActorsSimple(const struct FVector& SpherePos, float SphereRadius, bool ReturnValue);
	TArray<class AActor*> SphereOverlapActors(const struct FVector& SpherePos, float SphereRadius, bool ReturnValue);
	void SnapshotObject(class UObject** Object);
	void ShowPlatformSpecificLeaderboardScreen(const class FString& CategoryName);
	void ShowPlatformSpecificAchievementsScreen(class APlayerController* SpecificPlayer);
	void ShowInterstitialAd();
	void ShowAdBanner(int32 AdIdIndex, bool bShowOnBottomOfScreen);
	void SetWindowTitle(class FText Title);
	bool SetVolumeButtonsHandledBySystem();
	void SetVectorPropertyByName(class UObject** Object, class FName PropertyName, struct FVector* Value);
	void SetVector3fPropertyByName(class UObject** Object, class FName PropertyName, struct FVector3f* Value);
	void SetUserActivity(const struct FUserActivity& UserActivity);
	void SetTransformPropertyByName(class UObject** Object, class FName PropertyName, struct FTransform* Value);
	void SetTextPropertyByName(class UObject** Object, class FName PropertyName, class FText* Value);
	class UObject* SetSuppressViewportTransitionMessage(bool bState);
	void SetStructurePropertyByName(class UObject** Object, class FName PropertyName, struct FGenericStruct* Value);
	void SetStringPropertyByName(class UObject** Object, class FName PropertyName, class FString* Value);
	void SetSoftObjectPropertyByName(class UObject** Object, class FName PropertyName, TSoftObjectPtr<class UObject>* Value);
	void SetSoftClassPropertyByName(class UObject** Object, class FName PropertyName, TSoftClassPtr<class UObject>* Value);
	void SetRotatorPropertyByName(class UObject** Object, class FName PropertyName, struct FRotator* Value);
	void SetObjectPropertyByName(class UObject** Object, class FName PropertyName, class UObject** Value);
	void SetNamePropertyByName(class UObject** Object, class FName PropertyName, class FName* Value);
	void SetLinearColorPropertyByName(class UObject** Object, class FName PropertyName, struct FLinearColor* Value);
	void SetIntPropertyByName(class UObject** Object, class FName PropertyName, int32* Value);
	void SetInterfacePropertyByName(class UObject** Object, class FName PropertyName, TScriptInterface<class IInterface>* Value);
	void SetInt64PropertyByName(class UObject** Object, class FName PropertyName, int64* Value);
	void SetGamepadsBlockDeviceFeedback(bool bBlock);
	void SetFieldPathPropertyByName(class UObject** Object, class FName PropertyName, FFieldPathProperty_* Value);
	void SetDoublePropertyByName(class UObject** Object, class FName PropertyName, double* Value);
	void SetColorPropertyByName(class UObject** Object, class FName PropertyName, struct FColor* Value);
	void SetCollisionProfileNameProperty(class UObject** Object, class FName PropertyName, struct FCollisionProfileName* Value);
	void SetClassPropertyByName(class UObject** Object, class FName PropertyName, class UClass** Value);
	void SetBytePropertyByName(class UObject** Object, class FName PropertyName, uint8* Value);
	void SetBoolPropertyByName(class UObject** Object, class FName PropertyName, bool* Value);
	struct FLatentActionInfo RetriggerableDelay();
	void ResetGamepadAssignmentToController(int32 ControllerId);
	void ResetGamepadAssignments();
	void RegisterForRemoteNotifications();
	class UObject* QuitGame(class APlayerController* SpecificPlayer, enum class EQuitPreference* QuitPreference, bool* bIgnorePlatformRestrictions);
	void PrintWarning(const class FString& InString);
	class FName PrintText(class FText* InText, bool* bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor);
	class FName PrintString(const class FString& InString, bool* bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor);
	void ParseParamValue(const class FString& InString, class FString* InParam, class FString* OutValue, bool ReturnValue);
	void ParseParam(const class FString& InString, class FString* InParam, bool ReturnValue);
	void ParseCommandLine(class FString* InCmdLine, TArray<class FString>* OutTokens, TArray<class FString>* OutSwitches, TMap<class FString, class FString>* OutParams);
	void OnAssetLoaded__DelegateSignature(class UObject* Loaded);
	void OnAssetClassLoaded__DelegateSignature(class UClass* Loaded);
	TSoftObjectPtr<class UObject> NotEqual_SoftObjectReference(bool ReturnValue);
	TSoftClassPtr<class UObject> NotEqual_SoftClassReference(bool ReturnValue);
	struct FPrimaryAssetType NotEqual_PrimaryAssetType(bool ReturnValue);
	struct FPrimaryAssetId NotEqual_PrimaryAssetId(bool ReturnValue);
	void NormalizeFilename(class FString* InFilename, const class FString& ReturnValue);
	bool MoveComponentTo(class USceneComponent* Component, struct FVector* TargetRelativeLocation, struct FRotator* TargetRelativeRotation, bool* bEaseOut, bool* bEaseIn, float* OverTime, bool* bForceShortestRotationPath, enum class EMoveComponentAction MoveAction);
	void MakeTopLevelAssetPath(class FString* PackageName, const class FString& AssetName, const struct FTopLevelAssetPath& ReturnValue);
	class FString MakeSoftObjectPath(const struct FSoftObjectPath& ReturnValue);
	class FString MakeSoftClassPath(const struct FSoftClassPath& ReturnValue);
	void MakeLiteralText(class FText* Value, class FText ReturnValue);
	void MakeLiteralString(class FString* Value, const class FString& ReturnValue);
	void MakeLiteralName(class FName* Value, class FName ReturnValue);
	void MakeLiteralInt64(int64* Value, int64 ReturnValue);
	void MakeLiteralInt(int32* Value, int32 ReturnValue);
	void MakeLiteralDouble(double* Value, double ReturnValue);
	void MakeLiteralByte(uint8* Value, uint8 ReturnValue);
	void MakeLiteralBool(bool* Value, bool ReturnValue);
	bool MakeARFilter(TArray<class FName>* PackageNames, TArray<class FName>* PackagePaths, const TArray<struct FSoftObjectPath>& SoftObjectPaths, const TArray<struct FTopLevelAssetPath>& ClassPaths, const TArray<class FName>& ClassNames, TSet<class FName> RecursiveClassesExclusionSet, const struct FARFilter& ReturnValue);
	void LogString(const class FString& InString, bool bPrintToLog);
	void LoadInterstitialAd(int32 AdIdIndex);
	void LoadClassAsset_Blocking(TSoftClassPtr<class UObject>* AssetClass, class UClass* ReturnValue);
	struct FLatentActionInfo LoadAssetClass(TSoftClassPtr<class UObject>* AssetClass, FDelegateProperty_ OnLoaded);
	void LoadAsset_Blocking(TSoftObjectPtr<class UObject> Asset, class UObject* ReturnValue);
	struct FLatentActionInfo LoadAsset(TSoftObjectPtr<class UObject> Asset, FDelegateProperty_ OnLoaded);
	struct FHitResult LineTraceSingleForObjects(bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult LineTraceSingleByProfile(class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult LineTraceSingle(enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> LineTraceMultiForObjects(bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> LineTraceMultiByProfile(class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> LineTraceMulti(enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	class FString LaunchURL();
	class UObject* K2_UnPauseTimerHandle(const struct FTimerHandle& Handle);
	void K2_UnPauseTimerDelegate(FDelegateProperty_ Delegate);
	void K2_UnPauseTimer(class UObject** Object, const class FString& FunctionName);
	class UObject* K2_TimerExistsHandle(const struct FTimerHandle& Handle, bool ReturnValue);
	void K2_TimerExistsDelegate(FDelegateProperty_ Delegate, bool ReturnValue);
	void K2_TimerExists(class UObject** Object, const class FString& FunctionName, bool ReturnValue);
	void K2_SetTimerForNextTickDelegate(FDelegateProperty_ Delegate, bool bLooping);
	void K2_SetTimerForNextTick(class UObject** Object, const class FString& FunctionName, bool bLooping);
	float K2_SetTimerDelegate(FDelegateProperty_ Delegate, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance, const struct FTimerHandle& ReturnValue);
	float K2_SetTimer(class UObject** Object, const class FString& FunctionName, bool bLooping, float InitialStartDelay, float InitialStartDelayVariance, const struct FTimerHandle& ReturnValue);
	class UObject* K2_PauseTimerHandle(const struct FTimerHandle& Handle);
	void K2_PauseTimerDelegate(FDelegateProperty_ Delegate);
	void K2_PauseTimer(class UObject** Object, const class FString& FunctionName);
	void K2_IsValidTimerHandle(const struct FTimerHandle& Handle, bool ReturnValue);
	class UObject* K2_IsTimerPausedHandle(const struct FTimerHandle& Handle, bool ReturnValue);
	void K2_IsTimerPausedDelegate(FDelegateProperty_ Delegate, bool ReturnValue);
	void K2_IsTimerPaused(class UObject** Object, const class FString& FunctionName, bool ReturnValue);
	class UObject* K2_IsTimerActiveHandle(const struct FTimerHandle& Handle, bool ReturnValue);
	void K2_IsTimerActiveDelegate(FDelegateProperty_ Delegate, bool ReturnValue);
	void K2_IsTimerActive(class UObject** Object, const class FString& FunctionName, bool ReturnValue);
	void K2_InvalidateTimerHandle(const struct FTimerHandle& Handle, const struct FTimerHandle& ReturnValue);
	class UObject* K2_GetTimerRemainingTimeHandle(const struct FTimerHandle& Handle, float ReturnValue);
	void K2_GetTimerRemainingTimeDelegate(FDelegateProperty_ Delegate, float ReturnValue);
	void K2_GetTimerRemainingTime(class UObject** Object, const class FString& FunctionName, float ReturnValue);
	class UObject* K2_GetTimerElapsedTimeHandle(const struct FTimerHandle& Handle, float ReturnValue);
	void K2_GetTimerElapsedTimeDelegate(FDelegateProperty_ Delegate, float ReturnValue);
	void K2_GetTimerElapsedTime(class UObject** Object, const class FString& FunctionName, float ReturnValue);
	class UObject* K2_ClearTimerHandle(const struct FTimerHandle& Handle);
	void K2_ClearTimerDelegate(FDelegateProperty_ Delegate);
	void K2_ClearTimer(class UObject** Object, const class FString& FunctionName);
	class UObject* K2_ClearAndInvalidateTimerHandle(const struct FTimerHandle& Handle);
	TSoftObjectPtr<class UObject> IsValidSoftObjectReference(bool ReturnValue);
	TSoftClassPtr<class UObject> IsValidSoftClassReference(bool ReturnValue);
	void IsValidPrimaryAssetType(const struct FPrimaryAssetType& PrimaryAssetType, bool ReturnValue);
	void IsValidPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, bool ReturnValue);
	void IsValidClass(class UClass* Class, bool ReturnValue);
	void IsValid(class UObject** Object, bool ReturnValue);
	void IsUnattended(bool ReturnValue);
	class UObject* IsStandalone(bool ReturnValue);
	class UObject* IsSplitscreen(bool ReturnValue);
	class UObject* IsServer(bool ReturnValue);
	void IsScreensaverEnabled(bool ReturnValue);
	class UObject* IsRunningOnServer(enum class ENetworkModeResult OutNetworkMode);
	void IsPackagedForDistribution(bool ReturnValue);
	void IsLoggedIn(class APlayerController* SpecificPlayer, bool ReturnValue);
	class UObject* IsListenServer(bool ReturnValue);
	void IsInterstitialAdRequested(bool ReturnValue);
	void IsInterstitialAdAvailable(bool ReturnValue);
	class UObject* IsDedicatedServer(bool ReturnValue);
	void IsControllerAssignedToGamepad(int32 ControllerId, bool ReturnValue);
	class UObject* IsClient(bool ReturnValue);
	void HideAdBanner();
	class UObject* HasMultipleLocalPlayers(bool ReturnValue);
	void GetVolumeButtonsHandledBySystem(bool ReturnValue);
	void GetUniqueDeviceId(const class FString& ReturnValue);
	void GetSystemPath(class UObject** Object, const class FString& ReturnValue);
	void GetSupportedFullscreenResolutions(const TArray<struct FIntPoint>& Resolutions, bool ReturnValue);
	void GetSoftObjectReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, TSoftObjectPtr<class UObject> ReturnValue);
	void GetSoftObjectPath(class UObject** Object, const struct FSoftObjectPath& ReturnValue);
	void GetSoftClassReferenceFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, TSoftClassPtr<class UObject> ReturnValue);
	void GetSoftClassPath(class UClass* Class, const struct FSoftClassPath& ReturnValue);
	void GetRenderingMaterialQualityLevel(int32 ReturnValue);
	void GetRenderingDetailMode(int32 ReturnValue);
	void GetProjectSavedDirectory(const class FString& ReturnValue);
	void GetProjectDirectory(const class FString& ReturnValue);
	void GetProjectContentDirectory(const class FString& ReturnValue);
	void GetPrimaryAssetsWithBundleState(const TArray<class FName>& RequiredBundles, const TArray<class FName>& ExcludedBundles, const TArray<struct FPrimaryAssetType>& ValidTypes, bool bForceCurrentState, const TArray<struct FPrimaryAssetId>& OutPrimaryAssetIdList);
	void GetPrimaryAssetIdList(const struct FPrimaryAssetType& PrimaryAssetType, const TArray<struct FPrimaryAssetId>& OutPrimaryAssetIdList);
	TSoftObjectPtr<class UObject> GetPrimaryAssetIdFromSoftObjectReference(const struct FPrimaryAssetId& ReturnValue);
	TSoftClassPtr<class UObject> GetPrimaryAssetIdFromSoftClassReference(const struct FPrimaryAssetId& ReturnValue);
	void GetPrimaryAssetIdFromObject(class UObject** Object, const struct FPrimaryAssetId& ReturnValue);
	void GetPrimaryAssetIdFromClass(class UClass* Class, const struct FPrimaryAssetId& ReturnValue);
	void GetPreferredLanguages(const TArray<class FString>& ReturnValue);
	void GetPlatformUserName(const class FString& ReturnValue);
	void GetPlatformUserDir(const class FString& ReturnValue);
	class UObject* GetPersistentTimeInSeconds(double ReturnValue);
	void GetPathName(class UObject** Object, const class FString& ReturnValue);
	void GetOuterObject(class UObject** Object, class UObject* ReturnValue);
	void GetObjectName(class UObject** Object, const class FString& ReturnValue);
	void GetObjectFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, class UObject* ReturnValue);
	void GetMinYResolutionForUI(int32 ReturnValue);
	void GetMinYResolutionFor3DView(int32 ReturnValue);
	void GetLocalCurrencySymbol(const class FString& ReturnValue);
	void GetLocalCurrencyCode(const class FString& ReturnValue);
	class UObject* GetGameTimeInSeconds(double ReturnValue);
	void GetGamepadControllerName(int32 ControllerId, const class FString& ReturnValue);
	void GetGamepadButtonGlyph(const class FString& ButtonKey, int32 ControllerIndex, class UTexture2D* ReturnValue);
	void GetGameName(const class FString& ReturnValue);
	void GetGameBundleId(const class FString& ReturnValue);
	void GetFrameCount(int64 ReturnValue);
	void GetEngineVersion(const class FString& ReturnValue);
	void GetDisplayName(class UObject** Object, const class FString& ReturnValue);
	void GetDeviceId(const class FString& ReturnValue);
	void GetDefaultLocale(const class FString& ReturnValue);
	void GetDefaultLanguage(const class FString& ReturnValue);
	void GetCurrentBundleState(const struct FPrimaryAssetId& PrimaryAssetId, bool bForceCurrentState, const TArray<class FName>& OutBundles, bool ReturnValue);
	void GetConvenientWindowedResolutions(const TArray<struct FIntPoint>& Resolutions, bool ReturnValue);
	class FString GetConsoleVariableStringValue(const class FString& ReturnValue);
	class FString GetConsoleVariableIntValue(int32 ReturnValue);
	class FString GetConsoleVariableFloatValue(float ReturnValue);
	class FString GetConsoleVariableBoolValue(bool ReturnValue);
	struct FVector GetComponentBounds(class USceneComponent* Component, const struct FVector& BoxExtent, float SphereRadius);
	void GetCommandLine(const class FString& ReturnValue);
	void GetClassFromPrimaryAssetId(const struct FPrimaryAssetId& PrimaryAssetId, class UClass* ReturnValue);
	void GetClassDisplayName(class UClass* Class, const class FString& ReturnValue);
	void GetBuildVersion(const class FString& ReturnValue);
	void GetBuildConfiguration(const class FString& ReturnValue);
	void GetAdIDCount(int32 ReturnValue);
	class UClass* GetActorListFromComponentList(const TArray<class UPrimitiveComponent*>& ComponentList, const TArray<class AActor*>& OutActorList);
	struct FVector GetActorBounds(class AActor** Actor, const struct FVector& BoxExtent);
	void ForceCloseAdBanner();
	class UObject* FlushPersistentDebugLines();
	class UObject* FlushDebugStrings();
	class UObject* ExecuteConsoleCommand(const class FString& Command, class APlayerController* SpecificPlayer);
	TSoftObjectPtr<class UObject> EqualEqual_SoftObjectReference(bool ReturnValue);
	TSoftClassPtr<class UObject> EqualEqual_SoftClassReference(bool ReturnValue);
	struct FPrimaryAssetType EqualEqual_PrimaryAssetType(bool ReturnValue);
	struct FPrimaryAssetId EqualEqual_PrimaryAssetId(bool ReturnValue);
	void EndTransaction(int32 ReturnValue);
	float DrawDebugString(const struct FVector& TextLocation, class FString* Text, class AActor* TestBaseActor, const struct FLinearColor& TextColor);
	bool DrawDebugSphere(struct FVector* Center, float* Radius);
	bool DrawDebugPoint(struct FVector* Position, const struct FLinearColor& PointColor);
	bool DrawDebugPlane(struct FVector* Location, const struct FLinearColor& PlaneColor);
	bool DrawDebugLineTraceHitResult();
	bool DrawDebugLine();
	bool DrawDebugFrustum();
	bool DrawDebugFloatHistoryTransform(struct FLinearColor* DrawColor);
	bool DrawDebugFloatHistoryLocation(struct FLinearColor* DrawColor);
	bool DrawDebugCylinder(float* Radius);
	bool DrawDebugCoordinateSystem(float* Scale);
	bool DrawDebugConeInDegrees();
	bool DrawDebugCone();
	bool DrawDebugCircle_Old(struct FVector* Center, struct FRotator* Rotation, float* Radius);
	bool DrawDebugCircle(struct FVector* Center, float* Radius);
	bool DrawDebugCapsuleWithExtents(const struct FVector& Top, const struct FVector& Bottom, float* Radius);
	bool DrawDebugCapsule(struct FVector* Center, float* HalfHeight, float* Radius, struct FRotator* Rotation);
	bool DrawDebugCamera();
	bool DrawDebugBox(struct FVector* Center, struct FRotator* Rotation);
	bool DrawDebugArrow();
	class UObject* DoesImplementInterface(class UClass* Interface, bool ReturnValue);
	struct FLatentActionInfo DelayUntilNextTick();
	struct FLatentActionInfo Delay();
	class UObject* CreateCopyForUndoBuffer();
	class FString ConvertToRelativePath(const class FString& ReturnValue);
	class FString ConvertToAbsolutePath(const class FString& ReturnValue);
	TSoftObjectPtr<class UObject> Conv_SoftObjRefToSoftObjPath(const struct FSoftObjectPath& ReturnValue);
	TSoftClassPtr<class UObject> Conv_SoftObjRefToSoftClassPath(const struct FSoftClassPath& ReturnValue);
	void Conv_SoftObjPathToSoftObjRef(const struct FSoftObjectPath& SoftObjectPath, TSoftObjectPtr<class UObject> ReturnValue);
	TSoftObjectPtr<class UObject> Conv_SoftObjectReferenceToString(const class FString& ReturnValue);
	TSoftObjectPtr<class UObject> Conv_SoftObjectReferenceToObject(class UObject* ReturnValue);
	TSoftClassPtr<class UObject> Conv_SoftClassReferenceToString(const class FString& ReturnValue);
	TSoftClassPtr<class UObject> Conv_SoftClassReferenceToClass(class UClass* ReturnValue);
	void Conv_SoftClassPathToSoftClassRef(const struct FSoftClassPath& SoftClassPath, TSoftClassPtr<class UObject> ReturnValue);
	void Conv_PrimaryAssetTypeToString(const struct FPrimaryAssetType& PrimaryAssetType, const class FString& ReturnValue);
	void Conv_PrimaryAssetIdToString(const struct FPrimaryAssetId& PrimaryAssetId, const class FString& ReturnValue);
	void Conv_ObjectToSoftObjectReference(class UObject** Object, TSoftObjectPtr<class UObject> ReturnValue);
	void Conv_ObjectToClass(class UObject** Object, class UClass* Class, class UClass* ReturnValue);
	void Conv_InterfaceToObject(TScriptInterface<class IInterface> Interface, class UObject* ReturnValue);
	void Conv_ClassToSoftClassReference(class UClass* Class, TSoftClassPtr<class UObject> ReturnValue);
	bool ControlScreensaver();
	TArray<class UPrimitiveComponent*> ComponentOverlapComponents(class UPrimitiveComponent* Component, bool ReturnValue);
	TArray<class AActor*> ComponentOverlapActors(class UPrimitiveComponent* Component, bool ReturnValue);
	void CollectGarbage();
	struct FHitResult CapsuleTraceSingleForObjects(float* Radius, float* HalfHeight, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult CapsuleTraceSingleByProfile(float* Radius, float* HalfHeight, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult CapsuleTraceSingle(float* Radius, float* HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> CapsuleTraceMultiForObjects(float* Radius, float* HalfHeight, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> CapsuleTraceMultiByProfile(float* Radius, float* HalfHeight, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> CapsuleTraceMulti(float* Radius, float* HalfHeight, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class UPrimitiveComponent*> CapsuleOverlapComponents(struct FVector* CapsulePos, float* Radius, float* HalfHeight, bool ReturnValue);
	TArray<class AActor*> CapsuleOverlapActors(struct FVector* CapsulePos, float* Radius, float* HalfHeight, bool ReturnValue);
	class UObject* CanRunCosmeticEvents(enum class ENetworkModeResult OutNetworkMode);
	class FString CanLaunchURL(bool ReturnValue);
	void CancelTransaction(int32* Index);
	class FString BreakTopLevelAssetPath();
	class FString BreakSoftObjectPath(const struct FSoftObjectPath& InSoftObjectPath);
	class FString BreakSoftClassPath(const struct FSoftClassPath& InSoftClassPath);
	bool BreakARFilter(const struct FARFilter& InARFilter, TArray<class FName>* PackageNames, TArray<class FName>* PackagePaths, const TArray<struct FSoftObjectPath>& SoftObjectPaths, const TArray<struct FTopLevelAssetPath>& ClassPaths, const TArray<class FName>& ClassNames, TSet<class FName> RecursiveClassesExclusionSet);
	struct FHitResult BoxTraceSingleForObjects(const struct FRotator& Orientation, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult BoxTraceSingleByProfile(const struct FRotator& Orientation, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	struct FHitResult BoxTraceSingle(const struct FRotator& Orientation, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> BoxTraceMultiForObjects(const struct FRotator& Orientation, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> BoxTraceMultiByProfile(const struct FRotator& Orientation, class FName ProfileName, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class AActor*> BoxTraceMulti(const struct FRotator& Orientation, enum class ETraceTypeQuery TraceChannel, bool bTraceComplex, enum class EDrawDebugTrace DrawDebugType, const TArray<struct FHitResult>& OutHits, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, bool ReturnValue);
	TArray<class UPrimitiveComponent*> BoxOverlapComponents(bool ReturnValue);
	TArray<class AActor*> BoxOverlapActors(const struct FVector& BoxExtent, bool ReturnValue);
	class UObject* BeginTransaction(class FString* Context, int32 ReturnValue);
	struct FDebugFloatHistory AddFloatHistorySample(float* Value, const struct FDebugFloatHistory& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintPathsLibrary
class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBlueprintPathsLibrary* GetDefaultObj();

	void VideoCaptureDir(const class FString& ReturnValue);
	void ValidatePath(class FString* InPath, bool bDidSucceed, class FText* OutReason);
	void Split(class FString* InPath, class FString* PathPart, class FString* FilenamePart, class FString* ExtensionPart);
	void SourceConfigDir(const class FString& ReturnValue);
	void ShouldSaveToUserDir(bool ReturnValue);
	void ShaderWorkingDir(const class FString& ReturnValue);
	void SetProjectFilePath(class FString* NewGameProjectFilePath);
	void SetExtension(class FString* InPath, class FString* InNewExtension, const class FString& ReturnValue);
	void ScreenShotDir(const class FString& ReturnValue);
	void SandboxesDir(const class FString& ReturnValue);
	void RootDir(const class FString& ReturnValue);
	void RemoveDuplicateSlashes(class FString* InPath, class FString* OutPath);
	void ProjectUserDir(const class FString& ReturnValue);
	void ProjectSavedDir(const class FString& ReturnValue);
	void ProjectPluginsDir(const class FString& ReturnValue);
	void ProjectPersistentDownloadDir(const class FString& ReturnValue);
	void ProjectModsDir(const class FString& ReturnValue);
	void ProjectLogDir(const class FString& ReturnValue);
	void ProjectIntermediateDir(const class FString& ReturnValue);
	void ProjectDir(const class FString& ReturnValue);
	void ProjectContentDir(const class FString& ReturnValue);
	void ProjectConfigDir(const class FString& ReturnValue);
	void ProfilingDir(const class FString& ReturnValue);
	void NormalizeFilename(class FString* InPath, class FString* OutPath);
	void NormalizeDirectoryName(class FString* InPath, class FString* OutPath);
	void MakeValidFileName(const class FString& InString, class FString* InReplacementChar, const class FString& ReturnValue);
	void MakeStandardFilename(class FString* InPath, class FString* OutPath);
	void MakePlatformFilename(class FString* InPath, class FString* OutPath);
	void MakePathRelativeTo(class FString* InPath, class FString* InRelativeTo, class FString* OutPath, bool ReturnValue);
	void LaunchDir(const class FString& ReturnValue);
	void IsSamePath(class FString* PathA, class FString* PathB, bool ReturnValue);
	void IsRestrictedPath(class FString* InPath, bool ReturnValue);
	void IsRelative(class FString* InPath, bool ReturnValue);
	void IsProjectFilePathSet(bool ReturnValue);
	void IsDrive(class FString* InPath, bool ReturnValue);
	void HasProjectPersistentDownloadDir(bool ReturnValue);
	void GetToolTipLocalizationPaths(const TArray<class FString>& ReturnValue);
	void GetRestrictedFolderNames(const TArray<class FString>& ReturnValue);
	void GetRelativePathToRoot(const class FString& ReturnValue);
	void GetPropertyNameLocalizationPaths(const TArray<class FString>& ReturnValue);
	void GetProjectFilePath(const class FString& ReturnValue);
	void GetPath(class FString* InPath, const class FString& ReturnValue);
	void GetInvalidFileSystemChars(const class FString& ReturnValue);
	void GetGameLocalizationPaths(const TArray<class FString>& ReturnValue);
	void GetExtension(class FString* InPath, bool* bIncludeDot, const class FString& ReturnValue);
	void GetEngineLocalizationPaths(const TArray<class FString>& ReturnValue);
	void GetEditorLocalizationPaths(const TArray<class FString>& ReturnValue);
	void GetCleanFilename(class FString* InPath, const class FString& ReturnValue);
	void GetBaseFilename(class FString* InPath, bool* bRemovePath, const class FString& ReturnValue);
	void GeneratedConfigDir(const class FString& ReturnValue);
	void GameUserDeveloperDir(const class FString& ReturnValue);
	void GameSourceDir(const class FString& ReturnValue);
	void GameDevelopersDir(const class FString& ReturnValue);
	void GameAgnosticSavedDir(const class FString& ReturnValue);
	void FileExists(class FString* InPath, bool ReturnValue);
	void FeaturePackDir(const class FString& ReturnValue);
	void EnterprisePluginsDir(const class FString& ReturnValue);
	void EnterpriseFeaturePackDir(const class FString& ReturnValue);
	void EnterpriseDir(const class FString& ReturnValue);
	void EngineVersionAgnosticUserDir(const class FString& ReturnValue);
	void EngineUserDir(const class FString& ReturnValue);
	void EngineSourceDir(const class FString& ReturnValue);
	void EngineSavedDir(const class FString& ReturnValue);
	void EnginePluginsDir(const class FString& ReturnValue);
	void EngineIntermediateDir(const class FString& ReturnValue);
	void EngineDir(const class FString& ReturnValue);
	void EngineContentDir(const class FString& ReturnValue);
	void EngineConfigDir(const class FString& ReturnValue);
	void DirectoryExists(class FString* InPath, bool ReturnValue);
	void DiffDir(const class FString& ReturnValue);
	class FString CreateTempFilename(class FString* Path, const class FString& Extension, const class FString& ReturnValue);
	void ConvertToSandboxPath(class FString* InPath, class FString* InSandboxName, const class FString& ReturnValue);
	void ConvertRelativePathToFull(class FString* InPath, class FString* InBasePath, const class FString& ReturnValue);
	void ConvertFromSandboxPath(class FString* InPath, class FString* InSandboxName, const class FString& ReturnValue);
	void Combine(TArray<class FString>* InPaths, const class FString& ReturnValue);
	void CollapseRelativeDirectories(class FString* InPath, class FString* OutPath, bool ReturnValue);
	void CloudDir(const class FString& ReturnValue);
	void ChangeExtension(class FString* InPath, class FString* InNewExtension, const class FString& ReturnValue);
	void BugItDir(const class FString& ReturnValue);
	void AutomationTransientDir(const class FString& ReturnValue);
	void AutomationLogDir(const class FString& ReturnValue);
	void AutomationDir(const class FString& ReturnValue);
};

// 0xD0 (0x290 - 0x1C0)
// Class Engine.PlatformGameInstance
class UPlatformGameInstance : public UGameInstance
{
public:
	FMulticastInlineDelegateProperty_            ApplicationWillDeactivateDelegate;                 // 0x1C0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationHasReactivatedDelegate;                 // 0x1D0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationWillEnterBackgroundDelegate;            // 0x1E0(0x10)(Edit, ExportObject, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationHasEnteredForegroundDelegate;           // 0x1F0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationWillTerminateDelegate;                  // 0x200(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationShouldUnloadResourcesDelegate;          // 0x210(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationReceivedStartupArgumentsDelegate;       // 0x220(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationRegisteredForRemoteNotificationsDelegate; // 0x230(0x10)(BlueprintReadOnly, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationRegisteredForUserNotificationsDelegate; // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x250(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationReceivedRemoteNotificationDelegate;     // 0x260(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationReceivedLocalNotificationDelegate;      // 0x270(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	FMulticastInlineDelegateProperty_            ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x280(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UPlatformGameInstance* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintPlatformLibrary
class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBlueprintPlatformLibrary* GetDefaultObj();

	void SetAllowedDeviceOrientation(enum class EScreenOrientation NewAllowedDeviceOrientation);
	void ScheduleLocalNotificationFromNow(int32 InSecondsFromNow, class FText Title, class FText* Body, class FText* Action, const class FString& ActivationEvent, int32 ReturnValue);
	void ScheduleLocalNotificationBadgeFromNow(int32 InSecondsFromNow, const class FString& ActivationEvent);
	void ScheduleLocalNotificationBadgeAtTime(const struct FDateTime& FireDateTime, bool LocalTime, const class FString& ActivationEvent, int32 ReturnValue);
	void ScheduleLocalNotificationAtTime(const struct FDateTime& FireDateTime, bool LocalTime, class FText Title, class FText* Body, class FText* Action, const class FString& ActivationEvent, int32 ReturnValue);
	void GetLaunchNotification(bool NotificationLaunchedApp, const class FString& ActivationEvent, int32 FireDate);
	void GetDeviceOrientation(enum class EScreenOrientation ReturnValue);
	void GetAllowedDeviceOrientation(enum class EScreenOrientation ReturnValue);
	void ClearAllLocalNotifications();
	int32 CancelLocalNotificationById();
	void CancelLocalNotification(const class FString& ActivationEvent);
};

// 0x0 (0x28 - 0x28)
// Class Engine.BlueprintTypeConversions
class UBlueprintTypeConversions : public UObject
{
public:

	static class UClass* StaticClass();
	static class UBlueprintTypeConversions* GetDefaultObj();

	void ConvertSetType(TSet<int32> Inset, TSet<int32> ReturnValue);
	void ConvertMapType(TMap<int32, int32> InMap, TMap<int32, int32> ReturnValue);
	void ConvertFVector4fToFVector4d(int32 InFromData, int32 ReturnValue);
	void ConvertFVector4dToFVector4f(int32 InFromData, int32 ReturnValue);
	void ConvertFVector3fToFVector3d(int32 InFromData, int32 ReturnValue);
	void ConvertFVector3dToFVector3f(int32 InFromData, int32 ReturnValue);
	void ConvertFVector2fToFVector2d(int32 InFromData, int32 ReturnValue);
	void ConvertFVector2dToFVector2f(int32 InFromData, int32 ReturnValue);
	void ConvertFTransform3fToFTransform3d(int32 InFromData, int32 ReturnValue);
	void ConvertFTransform3dToFTransform3f(int32 InFromData, int32 ReturnValue);
	void ConvertFRotator3fToFRotator3d(int32 InFromData, int32 ReturnValue);
	void ConvertFRotator3dToFRotator3f(int32 InFromData, int32 ReturnValue);
	void ConvertFQuat4fToFQuat4d(int32 InFromData, int32 ReturnValue);
	void ConvertFQuat4dToFQuat4f(int32 InFromData, int32 ReturnValue);
	void ConvertFPlane4fToFPlane4d(int32 InFromData, int32 ReturnValue);
	void ConvertFPlane4dToFPlane4f(int32 InFromData, int32 ReturnValue);
	void ConvertFMatrix44fToFMatrix44d(int32 InFromData, int32 ReturnValue);
	void ConvertFMatrix44dToFMatrix44f(int32 InFromData, int32 ReturnValue);
	void ConvertFBox2fToFBox2d(int32 InFromData, int32 ReturnValue);
	void ConvertFBox2dToFBox2f(int32 InFromData, int32 ReturnValue);
	void ConvertArrayType(const TArray<int32>& InArray, const TArray<int32>& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.ImportanceSamplingLibrary
class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UImportanceSamplingLibrary* GetDefaultObj();

	float RandomSobolFloat(int32* Index, float ReturnValue);
	struct FVector RandomSobolCell3D(int32* Index, int32* NumCells, struct FVector* Cell, const struct FVector& ReturnValue);
	struct FVector2D RandomSobolCell2D(int32* Index, int32* NumCells, struct FVector2D* Cell, const struct FVector2D& ReturnValue);
	int32 NextSobolFloat(int32* Index, float* PreviousValue, float ReturnValue);
	void NextSobolCell3D(int32* Index, int32* NumCells, struct FVector* PreviousValue, const struct FVector& ReturnValue);
	void NextSobolCell2D(int32* Index, int32* NumCells, struct FVector2D* PreviousValue, const struct FVector2D& ReturnValue);
	void MakeImportanceTexture(class UTexture2D** Texture, enum class EImportanceWeight WeightingFunc, const struct FImportanceTexture& ReturnValue);
	int32 ImportanceSample(struct FImportanceTexture* Texture, float Intensity, const struct FVector2D& SamplePosition, const struct FLinearColor& SampleColor, float SampleIntensity, float SampleSize);
	struct FImportanceTexture BreakImportanceTexture(class UTexture2D** Texture, enum class EImportanceWeight WeightingFunc);
};

// 0x20 (0x48 - 0x28)
// Class Engine.Layer
class ULayer : public UObject
{
public:
	class FName                                  LayerName;                                         // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	uint8                                        bIsVisible : 1;                                    // Mask: 0x1, PropSize: 0x10x30(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2CC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F17[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLayerActorStats>              ActorStats;                                        // 0x38(0x10)(Parm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULayer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LevelPartitionInterface
class ILevelPartitionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILevelPartitionInterface* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Engine.ActorContainer
class UActorContainer : public UObject
{
public:
	TMap<class FName, class AActor*>             Actors;                                            // 0x28(0x50)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UActorContainer* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.LevelActorContainer
class ULevelActorContainer : public UObject
{
public:
	TArray<class AActor*>                        Actors;                                            // 0x28(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class ULevelActorContainer* GetDefaultObj();

};

// 0x10 (0x4D8 - 0x4C8)
// Class Engine.LevelBounds
class ALevelBounds : public AActor
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x4C8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, Transient, SubobjectReference)
	bool                                         bAutoUpdateBounds;                                 // 0x4D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F19[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALevelBounds* GetDefaultObj();

};

// 0x90 (0x558 - 0x4C8)
// Class Engine.LevelInstance
class ALevelInstance : public AActor
{
public:
	uint8                                        Pad_3F1A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UWorld>                 CookedWorldAsset;                                  // 0x4D0(0x30)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FGuid                                 LevelInstanceSpawnGuid;                            // 0x500(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F1B[0x48];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALevelInstance* GetDefaultObj();

	void OnRep_LevelInstanceSpawnGuid();
};

// 0x8 (0x2D0 - 0x2C8)
// Class Engine.LevelInstanceComponent
class ULevelInstanceComponent : public USceneComponent
{
public:
	uint8                                        Pad_3F1D[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelInstanceComponent* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.LevelInstanceEditorInstanceActor
class ALevelInstanceEditorInstanceActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ALevelInstanceEditorInstanceActor* GetDefaultObj();

};

// 0x0 (0x1C0 - 0x1C0)
// Class Engine.LevelStreamingLevelInstanceEditor
class ULevelStreamingLevelInstanceEditor : public ULevelStreamingAlwaysLoaded
{
public:

	static class UClass* StaticClass();
	static class ULevelStreamingLevelInstanceEditor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LevelInstanceEditorObject
class ULevelInstanceEditorObject : public UObject
{
public:

	static class UClass* StaticClass();
	static class ULevelInstanceEditorObject* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.LevelInstancePivot
class ALevelInstancePivot : public AActor
{
public:
	uint8                                        Pad_3F1E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALevelInstancePivot* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LevelInstanceInterface
class ILevelInstanceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILevelInstanceInterface* GetDefaultObj();

};

// 0x20 (0x1E0 - 0x1C0)
// Class Engine.LevelStreamingLevelInstance
class ULevelStreamingLevelInstance : public ULevelStreamingDynamic
{
public:
	uint8                                        Pad_3F1F[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelStreamingLevelInstance* GetDefaultObj();

};

// 0x190 (0x1C0 - 0x30)
// Class Engine.LevelInstanceSubsystem
class ULevelInstanceSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_3F20[0x190];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULevelInstanceSubsystem* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.LevelScriptActor
class ALevelScriptActor : public AActor
{
public:
	uint8                                        bInputEnabled : 1;                                 // Mask: 0x1, PropSize: 0x10x4C8(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAbsoluteMaxDistance : 1;                     // Mask: 0x2, PropSize: 0x10x4C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableScriptReplication : 1;                      // Mask: 0x4, PropSize: 0x10x4C8(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F22[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALevelScriptActor* GetDefaultObj();

	void WorldOriginLocationChanged(struct FIntVector* OldOriginLocation, struct FIntVector* NewOriginLocation);
	bool SetCinematicMode(bool* bHidePlayer);
	void RemoteEvent(class FName* EventName, bool ReturnValue);
	class AGameState* OnGameStateReady();
	void LevelReset();
};

// 0x0 (0xA8 - 0xA8)
// Class Engine.LevelScriptBlueprint
class ULevelScriptBlueprint : public UBlueprint
{
public:

	static class UClass* StaticClass();
	static class ULevelScriptBlueprint* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.LightmappedSurfaceCollection
class ULightmappedSurfaceCollection : public UObject
{
public:
	class UModel*                                SourceModel;                                       // 0x28(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                Surfaces;                                          // 0x30(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULightmappedSurfaceCollection* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.LightmassCharacterIndirectDetailVolume
class ALightmassCharacterIndirectDetailVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ALightmassCharacterIndirectDetailVolume* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.LightmassImportanceVolume
class ALightmassImportanceVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ALightmassImportanceVolume* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.LightmassPrimitiveSettingsObject
class ULightmassPrimitiveSettingsObject : public UObject
{
public:
	struct FLightmassPrimitiveSettings           LightmassSettings;                                 // 0x28(0x18)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ULightmassPrimitiveSettingsObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LightWeightInstanceBlueprintFunctionLibrary
class ULightWeightInstanceBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class ULightWeightInstanceBlueprintFunctionLibrary* GetDefaultObj();

	class UDataLayerInstance* CreateNewLightWeightInstance(struct FTransform* Transform, class UWorld* World, const struct FActorInstanceHandle& ReturnValue);
	void ConvertActorToLightWeightInstance(class AActor** Actor, const struct FActorInstanceHandle& ReturnValue);
};

// 0x20 (0x48 - 0x28)
// Class Engine.ActorInstanceHandleInterface
class UActorInstanceHandleInterface : public UObject
{
public:
	uint8                                        Pad_3F28[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UActorInstanceHandleInterface* GetDefaultObj();

};

// 0xA0 (0x568 - 0x4C8)
// Class Engine.LightWeightInstanceManager
class ALightWeightInstanceManager : public AActor
{
public:
	uint8                                        Pad_3F2A[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UClass*                                RepresentedClass;                                  // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                AcceptedClass;                                     // 0x4E0(0x8)(Edit, BlueprintVisible, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTransform>                    InstanceTransforms;                                // 0x4E8(0x10)(BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F2B[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                FreeIndices;                                       // 0x548(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<bool>                                 ValidIndices;                                      // 0x558(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ALightWeightInstanceManager* GetDefaultObj();

	void OnRep_Transforms();
};

// 0x70 (0x5D8 - 0x568)
// Class Engine.LightWeightInstanceStaticMeshManager
class ALightWeightInstanceStaticMeshManager : public ALightWeightInstanceManager
{
public:
	uint8                                        Pad_3F2C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UStaticMesh>            StaticMesh;                                        // 0x570(0x30)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference)
	class UHierarchicalInstancedStaticMeshComponent* InstancedStaticMeshComponent;                      // 0x5A0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<int32>                                RenderingIndicesToDataIndices;                     // 0x5A8(0x10)(ConstParm, BlueprintVisible, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<int32>                                DataIndicesToRenderingIndices;                     // 0x5B8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F2D[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALightWeightInstanceStaticMeshManager* GetDefaultObj();

	void OnRep_StaticMesh();
};

// 0x10 (0x528 - 0x518)
// Class Engine.LocationVolume
class ALocationVolume : public AVolume
{
public:
	uint8                                        Pad_3F2F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                DebugColor;                                        // 0x520(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsRuntime : 1;                                    // Mask: 0x1, PropSize: 0x10x524(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3F30[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALocationVolume* GetDefaultObj();

	void Unload();
	void Load();
	void IsLoaded(bool ReturnValue);
};

// 0x88 (0x550 - 0x4C8)
// Class Engine.LODActor
class ALODActor : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x4C8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TMap<struct FHLODInstancingKey, class UInstancedStaticMeshComponent*> InstancedStaticMeshComponents;                     // 0x4D0(0x50)(BlueprintReadOnly, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class UHLODProxy*                            Proxy;                                             // 0x520(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x528(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        LODDrawDistance;                                   // 0x530(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LODLevel;                                          // 0x534(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        SubActors;                                         // 0x538(0x10)(Edit, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        CachedNumHLODLevels;                               // 0x548(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F32[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ALODActor* GetDefaultObj();

	enum class EEndPlayReason OnSubActorEndPlay(class AActor** Actor);
};

// 0x6C8 (0x708 - 0x40)
// Class Engine.MaterialEditorOnlyData
class UMaterialEditorOnlyData : public UMaterialInterfaceEditorOnlyData
{
public:
	struct FColorMaterialInput                   BaseColor;                                         // 0x40(0x30)(BlueprintReadOnly, Config, DisableEditOnInstance, GlobalConfig)
	struct FScalarMaterialInput                  Metallic;                                          // 0x70(0x30)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  Specular;                                          // 0xA0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  Roughness;                                         // 0xD0(0x30)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  Anisotropy;                                        // 0x100(0x30)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FVectorMaterialInput                  Normal;                                            // 0x130(0x38)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FVectorMaterialInput                  Tangent;                                           // 0x168(0x38)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FColorMaterialInput                   EmissiveColor;                                     // 0x1A0(0x30)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  Opacity;                                           // 0x1D0(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  OpacityMask;                                       // 0x200(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVectorMaterialInput                  WorldPositionOffset;                               // 0x230(0x38)(Edit, ConstParm, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FColorMaterialInput                   SubsurfaceColor;                                   // 0x268(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  ClearCoat;                                         // 0x298(0x30)(Edit, BlueprintVisible, ExportObject, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  ClearCoatRoughness;                                // 0x2C8(0x30)(Edit, ConstParm, OutParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  AmbientOcclusion;                                  // 0x2F8(0x30)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FScalarMaterialInput                  Refraction;                                        // 0x328(0x30)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  SSAOIntensity;                                     // 0x358(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  SSAOInfluence;                                     // 0x388(0x30)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  SSAOLightInfluence;                                // 0x3B8(0x30)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  ToonOutlineWidth;                                  // 0x3E8(0x30)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2MaterialInput                 CustomizedUVs[0x8];                                // 0x418(0x1C0)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMaterialAttributesInput              MaterialAttributes;                                // 0x5D8(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FScalarMaterialInput                  PixelDepthOffset;                                  // 0x608(0x30)(Edit, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FShadingModelMaterialInput            ShadingModelFromMaterialExpression;                // 0x638(0x28)(Edit, ConstParm, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F34[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FScalarMaterialInput                  SurfaceThickness;                                  // 0x668(0x30)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FStrataMaterialInput                  FrontMaterial;                                     // 0x698(0x28)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F35[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMaterialExpressionCollection         ExpressionCollection;                              // 0x6C8(0x30)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FParameterGroupData>           ParameterGroupData;                                // 0x6F8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, EditConst)

	static class UClass* StaticClass();
	static class UMaterialEditorOnlyData* GetDefaultObj();

};

// 0x178 (0x210 - 0x98)
// Class Engine.Material
class UMaterial : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                     PhysMaterial;                                      // 0x98(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	class UPhysicalMaterialMask*                 PhysMaterialMask;                                  // 0xA0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPhysicalMaterial*                     PhysicalMaterialMap[0x8];                          // 0xA8(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPhysicalMaterial*>             RenderTracePhysicalMaterialOutputs;                // 0xE8(0x10)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EMaterialDomain                   MaterialDomain;                                    // 0xF8(0x1)(Edit, ConstParm, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference)
	enum class EBlendMode                        BlendMode;                                         // 0xF9(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, GlobalConfig, DuplicateTransient)
	enum class EDecalBlendMode                   DecalBlendMode;                                    // 0xFA(0x1)(ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EMaterialDecalResponse            MaterialDecalResponse;                             // 0xFB(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_3F36[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMaterialOverrideNanite               NaniteOverrideMaterial;                            // 0x100(0x40)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       CachedConnectedInputs;                             // 0x140(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EMaterialShadingModel             ShadingModel;                                      // 0x144(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	uint8                                        bCastDynamicShadowAsMasked : 1;                    // Mask: 0x1, PropSize: 0x10x145(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2CD : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	struct FMaterialShadingModelField            ShadingModels;                                     // 0x146(0x2)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference)
	float                                        OpacityMaskClipValue;                              // 0x148(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bEnableSeparateTranslucency : 1;                   // Mask: 0x1, PropSize: 0x10x14C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableResponsiveAA : 1;                           // Mask: 0x2, PropSize: 0x10x14C(0x1)(ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bScreenSpaceReflections : 1;                       // Mask: 0x4, PropSize: 0x10x14C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bContactShadows : 1;                               // Mask: 0x8, PropSize: 0x10x14C(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        TwoSided : 1;                                      // Mask: 0x10, PropSize: 0x10x14C(0x1)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bIsThinSurface : 1;                                // Mask: 0x20, PropSize: 0x10x14C(0x1)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2CE : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F37[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUsedWithCustomDepths : 1;                         // Mask: 0x1, PropSize: 0x10x150(0x1)(Net, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2CF : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F38[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        DitheredLODTransition : 1;                         // Mask: 0x1, PropSize: 0x10x154(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        DitherOpacityMask : 1;                             // Mask: 0x2, PropSize: 0x10x154(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowNegativeEmissiveColor : 1;                   // Mask: 0x4, PropSize: 0x10x154(0x1)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bToonOutlineWidthInWorldUnits : 1;                 // Mask: 0x8, PropSize: 0x10x154(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D0 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMaterialTranslucencyPass         TranslucencyPass;                                  // 0x155(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETranslucencyLightingMode         TranslucencyLightingMode;                          // 0x156(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig)
	uint8                                        bEnableMobileSeparateTranslucency : 1;             // Mask: 0x1, PropSize: 0x10x157(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowAdditionalSkyLightMultiplier : 1;            // Mask: 0x2, PropSize: 0x10x157(0x1)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowFullSceneColorTranslucentPath : 1;           // Mask: 0x4, PropSize: 0x10x157(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D1 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	int32                                        NumCustomizedUVs;                                  // 0x158(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucencyDirectionalLightingIntensity;          // 0x15C(0x4)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentShadowDensityScale;                     // 0x160(0x4)(Edit, ExportObject, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentSelfShadowDensityScale;                 // 0x164(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentSelfShadowSecondDensityScale;           // 0x168(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentSelfShadowSecondOpacity;                // 0x16C(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentBackscatteringExponent;                 // 0x170(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          TranslucentMultipleScatteringExtinction;           // 0x174(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TranslucentShadowStartOffset;                      // 0x184(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableDepthTest : 1;                             // Mask: 0x1, PropSize: 0x10x188(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bWriteOnlyAlpha : 1;                               // Mask: 0x2, PropSize: 0x10x188(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGenerateSphericalParticleNormals : 1;             // Mask: 0x4, PropSize: 0x10x188(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTangentSpaceNormal : 1;                           // Mask: 0x8, PropSize: 0x10x188(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseEmissiveForDynamicAreaLighting : 1;            // Mask: 0x10, PropSize: 0x10x188(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedAsSpecialEngineMaterial : 1;                  // Mask: 0x20, PropSize: 0x10x188(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithSkeletalMesh : 1;                         // Mask: 0x40, PropSize: 0x10x188(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedWithEditorCompositing : 1;                    // Mask: 0x80, PropSize: 0x10x188(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithParticleSprites : 1;                      // Mask: 0x1, PropSize: 0x10x189(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedWithBeamTrails : 1;                           // Mask: 0x2, PropSize: 0x10x189(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedWithMeshParticles : 1;                        // Mask: 0x4, PropSize: 0x10x189(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedWithNiagaraSprites : 1;                       // Mask: 0x8, PropSize: 0x10x189(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithNiagaraRibbons : 1;                       // Mask: 0x10, PropSize: 0x10x189(0x1)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithNiagaraMeshParticles : 1;                 // Mask: 0x20, PropSize: 0x10x189(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithGeometryCache : 1;                        // Mask: 0x40, PropSize: 0x10x189(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithStaticLighting : 1;                       // Mask: 0x80, PropSize: 0x10x189(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithMorphTargets : 1;                         // Mask: 0x1, PropSize: 0x10x18A(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithSplineMeshes : 1;                         // Mask: 0x2, PropSize: 0x10x18A(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithInstancedStaticMeshes : 1;                // Mask: 0x4, PropSize: 0x10x18A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bUsedWithGeometryCollections : 1;                  // Mask: 0x8, PropSize: 0x10x18A(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsesDistortion : 1;                               // Mask: 0x10, PropSize: 0x10x18A(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRootNodeOverridesDefaultDistortion : 1;           // Mask: 0x20, PropSize: 0x10x18A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithClothing : 1;                             // Mask: 0x40, PropSize: 0x10x18A(0x1)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D2 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F3A[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUsedWithWater : 1;                                // Mask: 0x1, PropSize: 0x10x18C(0x1)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithHairStrands : 1;                          // Mask: 0x2, PropSize: 0x10x18C(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithLidarPointCloud : 1;                      // Mask: 0x4, PropSize: 0x10x18C(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithVirtualHeightfieldMesh : 1;               // Mask: 0x8, PropSize: 0x10x18C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithNanite : 1;                               // Mask: 0x10, PropSize: 0x10x18C(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsedWithVolumetricCloud : 1;                      // Mask: 0x20, PropSize: 0x10x18C(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D3 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F3B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUsedWithUI : 1;                                   // Mask: 0x1, PropSize: 0x10x190(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAutomaticallySetUsageInEditor : 1;                // Mask: 0x2, PropSize: 0x10x190(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFullyRough : 1;                                   // Mask: 0x4, PropSize: 0x10x190(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseFullPrecision : 1;                             // Mask: 0x8, PropSize: 0x10x190(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D4 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMaterialFloatPrecisionMode       FloatPrecisionMode;                                // 0x191(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseLightmapDirectionality : 1;                    // Mask: 0x1, PropSize: 0x10x192(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileEnableHighQualityBRDF : 1;                  // Mask: 0x2, PropSize: 0x10x192(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseAlphaToCoverage : 1;                           // Mask: 0x4, PropSize: 0x10x192(0x1)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D5 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F3E[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForwardRenderUsePreintegratedGFForSimpleIBL : 1;  // Mask: 0x1, PropSize: 0x10x194(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D6 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F3F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseHQForwardReflections : 1;                      // Mask: 0x1, PropSize: 0x10x198(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForwardBlendsSkyLightCubemaps : 1;                // Mask: 0x2, PropSize: 0x10x198(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUsePlanarForwardReflections : 1;                  // Mask: 0x4, PropSize: 0x10x198(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNormalCurvatureToRoughness : 1;                   // Mask: 0x8, PropSize: 0x10x198(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        AllowTranslucentCustomDepthWrites : 1;             // Mask: 0x10, PropSize: 0x10x198(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowFrontLayerTranslucency : 1;                  // Mask: 0x20, PropSize: 0x10x198(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Wireframe : 1;                                     // Mask: 0x40, PropSize: 0x10x198(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D7 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMaterialShadingRate              ShadingRate;                                       // 0x199(0x1)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCanMaskedBeAssumedOpaque : 1;                     // Mask: 0x1, PropSize: 0x10x19A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMasked : 1;                                     // Mask: 0x2, PropSize: 0x10x19A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsPreviewMaterial : 1;                            // Mask: 0x4, PropSize: 0x10x19A(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsFunctionPreviewMaterial : 1;                    // Mask: 0x8, PropSize: 0x10x19A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseMaterialAttributes : 1;                        // Mask: 0x10, PropSize: 0x10x19A(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableExecWire : 1;                               // Mask: 0x20, PropSize: 0x10x19A(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEnableNewHLSLGenerator : 1;                       // Mask: 0x40, PropSize: 0x10x19A(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bCastRayTracedShadows : 1;                         // Mask: 0x80, PropSize: 0x10x19A(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseTranslucencyVertexFog : 1;                     // Mask: 0x1, PropSize: 0x10x19B(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bApplyCloudFogging : 1;                            // Mask: 0x2, PropSize: 0x10x19B(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsSky : 1;                                        // Mask: 0x4, PropSize: 0x10x19B(0x1)(ConstParm, ExportObject, Net, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bComputeFogPerPixel : 1;                           // Mask: 0x8, PropSize: 0x10x19B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOutputTranslucentVelocity : 1;                    // Mask: 0x10, PropSize: 0x10x19B(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAllowDevelopmentShaderCompile : 1;                // Mask: 0x20, PropSize: 0x10x19B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsMaterialEditorStatsMaterial : 1;                // Mask: 0x40, PropSize: 0x10x19B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D8 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EBlendableLocation                BlendableLocation;                                 // 0x19C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BlendableOutputAlpha : 1;                          // Mask: 0x1, PropSize: 0x10x19D(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableStencilTest : 1;                            // Mask: 0x2, PropSize: 0x10x19D(0x1)(Net, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2D9 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	enum class EMaterialStencilCompare           StencilCompare;                                    // 0x19E(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        StencilRefValue;                                   // 0x19F(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ERefractionMode                   RefractionMode;                                    // 0x1A0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ERefractionMode                   RefractionMethod;                                  // 0x1A1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F42[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        BlendablePriority;                                 // 0x1A4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsBlendable : 1;                                  // Mask: 0x1, PropSize: 0x10x1A8(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F43[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       UsageFlagWarnings;                                 // 0x1AC(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        RefractionDepthBias;                               // 0x1B0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MaxWorldPositionOffsetDisplacement;                // 0x1B4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3F44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 StateId;                                           // 0x1BC(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F45[0x30];                                    // Fixing Size After Last Property  > TateDumper <
	int32                                        SSRQuality;                                        // 0x1FC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)
	class FString                                CustomMainCode;                                    // 0x200(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterial* GetDefaultObj();

};

// 0xA0 (0xE0 - 0x40)
// Class Engine.MaterialInstanceEditorOnlyData
class UMaterialInstanceEditorOnlyData : public UMaterialInterfaceEditorOnlyData
{
public:
	struct FStaticParameterSetEditorOnlyData     StaticParameters;                                  // 0x40(0xA0)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UMaterialInstanceEditorOnlyData* GetDefaultObj();

};

// 0x50 (0x280 - 0x230)
// Class Engine.MaterialInstanceDynamic
class UMaterialInstanceDynamic : public UMaterialInstance
{
public:
	uint8                                        Pad_3F51[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialInstanceDynamic* GetDefaultObj();

	struct FMaterialParameterInfo SetVectorParameterValueByInfo(struct FLinearColor* Value);
	void SetVectorParameterValue(class FName ParameterName, struct FLinearColor* Value);
	struct FMaterialParameterInfo SetTextureParameterValueByInfo(class UTexture** Value);
	void SetTextureParameterValue(class FName ParameterName, class UTexture** Value);
	void SetSparseVolumeTextureParameterValue(class FName ParameterName, class USparseVolumeTexture** Value);
	struct FMaterialParameterInfo SetScalarParameterValueByInfo(float* Value);
	void SetScalarParameterValue(class FName ParameterName, float* Value);
	int32 SetScalarParameterByIndex(float* Value, bool ReturnValue);
	struct FMaterialParameterInfo SetRuntimeVirtualTextureParameterValueByInfo(class URuntimeVirtualTexture** Value);
	void SetRuntimeVirtualTextureParameterValue(class FName ParameterName, class URuntimeVirtualTexture** Value);
	void SetDoubleVectorParameterValue(class FName ParameterName, struct FVector4* Value);
	class UMaterialInstance* K2_InterpolateMaterialInstanceParams(float Alpha);
	struct FMaterialParameterInfo K2_GetVectorParameterValueByInfo(const struct FLinearColor& ReturnValue);
	void K2_GetVectorParameterValue(class FName ParameterName, const struct FLinearColor& ReturnValue);
	struct FMaterialParameterInfo K2_GetTextureParameterValueByInfo(class UTexture* ReturnValue);
	void K2_GetTextureParameterValue(class FName ParameterName, class UTexture* ReturnValue);
	struct FMaterialParameterInfo K2_GetScalarParameterValueByInfo(float ReturnValue);
	void K2_GetScalarParameterValue(class FName ParameterName, float ReturnValue);
	void K2_CopyMaterialInstanceParameters(class UMaterialInterface** Source, bool* bQuickParametersOnly);
	void InitializeScalarParameterAndGetIndex(class FName ParameterName, float* Value, int32* OutParameterIndex, bool ReturnValue);
	class UMaterialInstance* CopyParameterOverrides();
	void CopyInterpParameters(class UMaterialInstance** Source);
};

// 0x48 (0x70 - 0x28)
// Class Engine.MaterialParameterCollection
class UMaterialParameterCollection : public UObject
{
public:
	struct FGuid                                 StateId;                                           // 0x28(0x10)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FCollectionScalarParameter>    ScalarParameters;                                  // 0x38(0x10)(BlueprintVisible, Parm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FCollectionVectorParameter>    VectorParameters;                                  // 0x48(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F57[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMaterialParameterCollection* GetDefaultObj();

	void GetVectorParameterNames(const TArray<class FName>& ReturnValue);
	void GetVectorParameterDefaultValue(class FName ParameterName, bool* bParameterFound, const struct FLinearColor& ReturnValue);
	void GetScalarParameterNames(const TArray<class FName>& ReturnValue);
	void GetScalarParameterDefaultValue(class FName ParameterName, bool* bParameterFound, float ReturnValue);
};

// 0x0 (0x518 - 0x518)
// Class Engine.MeshMergeCullingVolume
class AMeshMergeCullingVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AMeshMergeCullingVolume* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Engine.MeshSimplificationSettings
class UMeshSimplificationSettings : public UDeveloperSettings
{
public:
	class FName                                  MeshReductionModuleName;                           // 0x38(0x8)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bMeshReductionBackwardCompatible;                  // 0x40(0x1)(Net, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F58[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UMeshSimplificationSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.MeshVertexPainterKismetLibrary
class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMeshVertexPainterKismetLibrary* GetDefaultObj();

	class UStaticMeshComponent* RemovePaintedVertices();
	class UStaticMeshComponent* PaintVerticesSingleColor(struct FLinearColor* FillColor, bool* bConvertToSRGB);
	struct FLinearColor PaintVerticesLerpAlongAxis(struct FLinearColor* EndColor, enum class EVertexPaintAxis* Axis, bool* bConvertToSRGB);
};

// 0x248 (0x270 - 0x28)
// Class Engine.Model
class UModel : public UObject
{
public:
	uint8                                        Pad_3F5B[0x248];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UModel* GetDefaultObj();

};

// 0x28 (0x4F0 - 0x4C8)
// Class Engine.NavigationObjectBase
class ANavigationObjectBase : public AActor
{
public:
	uint8                                        Pad_3F5C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x4D0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, SubobjectReference)
	class UBillboardComponent*                   GoodSprite;                                        // 0x4D8(0x8)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UBillboardComponent*                   BadSprite;                                         // 0x4E0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsPIEPlayerStart : 1;                             // Mask: 0x1, PropSize: 0x10x4E8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F5D[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ANavigationObjectBase* GetDefaultObj();

};

// 0x0 (0x1DE8 - 0x1DE8)
// Class Engine.SimulatedClientNetConnection
class USimulatedClientNetConnection : public UNetConnection
{
public:

	static class UClass* StaticClass();
	static class USimulatedClientNetConnection* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.NetworkSettings
class UNetworkSettings : public UDeveloperSettings
{
public:
	uint8                                        bVerifyPeer : 1;                                   // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableMultiplayerWorldOriginRebasing : 1;         // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DB : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F5F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FNetworkEmulationProfileDescription> NetworkEmulationProfiles;                          // 0x40(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UNetworkSettings* GetDefaultObj();

};

// 0x20 (0x4E8 - 0x4C8)
// Class Engine.BandwidthTestActor
class ABandwidthTestActor : public AActor
{
public:
	struct FBandwidthTestGenerator               BandwidthGenerator;                                // 0x4C8(0x20)(ConstParm, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABandwidthTestActor* GetDefaultObj();

};

// 0x2030 (0x20A0 - 0x70)
// Class Engine.DataStreamChannel
class UDataStreamChannel : public UChannel
{
public:
	uint8                                        Pad_3F60[0x2030];                                  // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataStreamChannel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ActorReplicationBridge
class UActorReplicationBridge : public UObjectReplicationBridge
{
public:

	static class UClass* StaticClass();
	static class UActorReplicationBridge* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class Engine.NetFaultConfig
class UNetFaultConfig : public UEscalationManagerConfig
{
public:

	static class UClass* StaticClass();
	static class UNetFaultConfig* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NetPushModelHelpers
class UNetPushModelHelpers : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UNetPushModelHelpers* GetDefaultObj();

	void MarkPropertyDirtyFromRepIndex(class UObject** Object, int32* RepIndex, class FName PropertyName);
	void MarkPropertyDirty(class UObject** Object, class FName PropertyName);
};

// 0x60 (0x88 - 0x28)
// Class Engine.RPCDoSDetectionConfig
class URPCDoSDetectionConfig : public UObject
{
public:
	bool                                         bRPCDoSDetection;                                  // 0x28(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	bool                                         bRPCDoSAnalytics;                                  // 0x29(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_3F64[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        HitchTimeQuotaMS;                                  // 0x2C(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        HitchSuspendDetectionTimeMS;                       // 0x30(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_3F65[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        DetectionSeverity;                                 // 0x38(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	int32                                        InitialConnectToleranceMS;                         // 0x48(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_3F66[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          RPCBlockWhitelist;                                 // 0x50(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	TArray<class FName>                          RPCBlockAllowlist;                                 // 0x60(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FRPCAnalyticsThreshold>        RPCAnalyticsThresholds;                            // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       RPCAnalyticsOverrideChance;                        // 0x80(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class URPCDoSDetectionConfig* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Engine.NetworkSubsystem
class UNetworkSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_3F69[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UNetworkSubsystem* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Engine.ObjectLibrary
class UObjectLibrary : public UObject
{
public:
	class UClass*                                ObjectBaseClass;                                   // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bHasBlueprintClasses;                              // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F6A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       Objects;                                           // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<TWeakObjectPtr<class UObject>>        WeakObjects;                                       // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseWeakReferences;                                // 0x58(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsFullyLoaded;                                    // 0x59(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F6C[0x4E];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectLibrary* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.ObjectReferencer
class UObjectReferencer : public UObject
{
public:
	TArray<class UObject*>                       ReferencedObjects;                                 // 0x28(0x10)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UObjectReferencer* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ObjectTraceWorldSubsystem
class UObjectTraceWorldSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_3F6D[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UObjectTraceWorldSubsystem* GetDefaultObj();

};

// 0x328 (0x408 - 0xE0)
// Class Engine.PackageMapClient
class UPackageMapClient : public UPackageMap
{
public:
	uint8                                        Pad_3F6E[0x328];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPackageMapClient* GetDefaultObj();

};

// 0x0 (0x558 - 0x558)
// Class Engine.PackedLevelActor
class APackedLevelActor : public ALevelInstance
{
public:

	static class UClass* StaticClass();
	static class APackedLevelActor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.EngineHandlerComponentFactory
class UEngineHandlerComponentFactory : public UHandlerComponentFactory
{
public:

	static class UClass* StaticClass();
	static class UEngineHandlerComponentFactory* GetDefaultObj();

};

// 0x48 (0x580 - 0x538)
// Class Engine.PainCausingVolume
class APainCausingVolume : public APhysicsVolume
{
public:
	uint8                                        bPainCausing : 1;                                  // Mask: 0x1, PropSize: 0x10x538(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DC : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F6F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DamagePerSec;                                      // 0x53C(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x540(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        PainInterval;                                      // 0x548(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bEntryPain : 1;                                    // Mask: 0x1, PropSize: 0x10x54C(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bPainWalkingOnly : 1;                              // Mask: 0x2, PropSize: 0x10x54C(0x1)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bTriggerUndermeshDetection : 1;                    // Mask: 0x4, PropSize: 0x10x54C(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bContainsMultipleOverlapComponents : 1;            // Mask: 0x8, PropSize: 0x10x54C(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreWildDinos : 1;                              // Mask: 0x10, PropSize: 0x10x54C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BACKUP_bPainCausing : 1;                           // Mask: 0x20, PropSize: 0x10x54C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DD : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F71[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftClassPtr<class AActor>>          ActorClassesToExclude;                             // 0x550(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class AActor>>          ActorClassesToInclude;                             // 0x560(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AController*                           DamageInstigator;                                  // 0x570(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F72[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APainCausingVolume* GetDefaultObj();

};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.ParticleEventManager
class AParticleEventManager : public AActor
{
public:

	static class UClass* StaticClass();
	static class AParticleEventManager* GetDefaultObj();

};

// 0x28 (0xE0 - 0xB8)
// Class Engine.AsyncPhysicsInputComponent
class UAsyncPhysicsInputComponent : public UActorComponent
{
public:
	class UClass*                                DataClass;                                         // 0xB8(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAsyncPhysicsData*>             BufferedData;                                      // 0xC0(0x10)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncPhysicsData*                     DataToConsume;                                     // 0xD0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class UAsyncPhysicsData*                     DataToWrite;                                       // 0xD8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAsyncPhysicsInputComponent* GetDefaultObj();

	void ServerRPCBufferInput(class UAsyncPhysicsData** AsyncPhysicsData);
	void GetDataToWrite(class UAsyncPhysicsData* ReturnValue);
	void GetDataToConsume(class UAsyncPhysicsData* ReturnValue);
};

// 0x278 (0x2B0 - 0x38)
// Class Engine.BodySetup
class UBodySetup : public UBodySetupCore
{
public:
	struct FKAggregateGeom                       AggGeom;                                           // 0x38(0x68)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAlwaysFullAnimWeight : 1;                         // Mask: 0x1, PropSize: 0x10xA0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsiderForBounds : 1;                            // Mask: 0x2, PropSize: 0x10xA0(0x1)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeshCollideAll : 1;                               // Mask: 0x4, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoubleSidedGeometry : 1;                          // Mask: 0x8, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        bGenerateNonMirroredCollision : 1;                 // Mask: 0x10, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSharedCookedData : 1;                             // Mask: 0x20, PropSize: 0x10xA0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGenerateMirroredCollision : 1;                    // Mask: 0x40, PropSize: 0x10xA0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportUVsAndFaceRemap : 1;                       // Mask: 0x80, PropSize: 0x10xA0(0x1)(ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DE : 3;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bNeverNeedsCookedCollisionData : 1;                // Mask: 0x8, PropSize: 0x10xA1(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2DF : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3F75[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UPhysicalMaterial*                     PhysMaterial;                                      // 0xA8(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	struct FWalkableSlopeOverride                WalkableSlopeOverride;                             // 0xB0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst)
	uint8                                        Pad_3F77[0x70];                                    // Fixing Size After Last Property  > TateDumper <
	struct FBodyInstance                         DefaultInstance;                                   // 0x130(0x150)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm)
	uint8                                        Pad_3F78[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BuildScale3D;                                      // 0x288(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F79[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UBodySetup* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ConstraintInstanceBlueprintLibrary
class UConstraintInstanceBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UConstraintInstanceBlueprintLibrary* GetDefaultObj();

	void SetProjectionParams(const struct FConstraintInstanceAccessor& Accessor, bool bEnableProjection, float* ProjectionLinearAlpha, float* ProjectionAngularAlpha);
	void SetParentDominates(const struct FConstraintInstanceAccessor& Accessor, bool bParentDominates);
	void SetOrientationDriveTwistAndSwing(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableTwistDrive, bool* bEnableSwingDrive);
	void SetOrientationDriveSLERP(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableSLERP);
	void SetMassConditioningEnabled(const struct FConstraintInstanceAccessor& Accessor, bool bEnableMassConditioning);
	void SetLinearVelocityTarget(const struct FConstraintInstanceAccessor& Accessor, struct FVector* InVelTarget);
	void SetLinearVelocityDrive(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableDriveX, bool* bEnableDriveY, bool* bEnableDriveZ);
	void SetLinearSoftLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool* bSoftLinearLimit, float* LinearLimitStiffness, float* LinearLimitDamping, float* LinearLimitRestitution, float* LinearLimitContactDistance);
	void SetLinearPositionTarget(const struct FConstraintInstanceAccessor& Accessor, struct FVector* InPosTarget);
	void SetLinearPositionDrive(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableDriveX, bool* bEnableDriveY, bool* bEnableDriveZ);
	void SetLinearPlasticity(const struct FConstraintInstanceAccessor& Accessor, bool bLinearPlasticity, float* LinearPlasticityThreshold, enum class EConstraintPlasticityType* PlasticityType);
	void SetLinearLimits(const struct FConstraintInstanceAccessor& Accessor, enum class ELinearConstraintMotion XMotion, enum class ELinearConstraintMotion YMotion, enum class ELinearConstraintMotion ZMotion, float* Limit);
	void SetLinearDriveParams(const struct FConstraintInstanceAccessor& Accessor, float* PositionStrength, float* VelocityStrength, float* InForceLimit);
	void SetLinearBreakable(const struct FConstraintInstanceAccessor& Accessor, bool bLinearBreakable, float* LinearBreakThreshold);
	void SetDisableCollision(const struct FConstraintInstanceAccessor& Accessor, bool bDisableCollision);
	void SetContactTransferScale(const struct FConstraintInstanceAccessor& Accessor, float ContactTransferScale);
	void SetAngularVelocityTarget(const struct FConstraintInstanceAccessor& Accessor, struct FVector* InVelTarget);
	void SetAngularVelocityDriveTwistAndSwing(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableTwistDrive, bool* bEnableSwingDrive);
	void SetAngularVelocityDriveSLERP(const struct FConstraintInstanceAccessor& Accessor, bool* bEnableSLERP);
	void SetAngularSoftTwistLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool* bSoftTwistLimit, float* TwistLimitStiffness, float* TwistLimitDamping, float* TwistLimitRestitution, float TwistLimitContactDistance);
	void SetAngularSoftSwingLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool bSoftSwingLimit, float SwingLimitStiffness, float SwingLimitDamping, float SwingLimitRestitution, float SwingLimitContactDistance);
	void SetAngularPlasticity(const struct FConstraintInstanceAccessor& Accessor, bool bAngularPlasticity, float AngularPlasticityThreshold);
	void SetAngularOrientationTarget(const struct FConstraintInstanceAccessor& Accessor, struct FRotator* InPosTarget);
	void SetAngularLimits(const struct FConstraintInstanceAccessor& Accessor, enum class EAngularConstraintMotion Swing1MotionType, float* Swing1LimitAngle, enum class EAngularConstraintMotion Swing2MotionType, float* Swing2LimitAngle, enum class EAngularConstraintMotion TwistMotionType, float* TwistLimitAngle);
	void SetAngularDriveParams(const struct FConstraintInstanceAccessor& Accessor, float* PositionStrength, float* VelocityStrength, float* InForceLimit);
	void SetAngularDriveMode(const struct FConstraintInstanceAccessor& Accessor, enum class EAngularDriveMode* DriveMode);
	void SetAngularBreakable(const struct FConstraintInstanceAccessor& Accessor, bool bAngularBreakable, float* AngularBreakThreshold);
	void GetProjectionParams(const struct FConstraintInstanceAccessor& Accessor, bool bEnableProjection, float* ProjectionLinearAlpha, float* ProjectionAngularAlpha);
	void GetParentDominates(const struct FConstraintInstanceAccessor& Accessor, bool ReturnValue);
	void GetOrientationDriveTwistAndSwing(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableTwistDrive, bool* bOutEnableSwingDrive);
	void GetOrientationDriveSLERP(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableSLERP);
	void GetMassConditioningEnabled(const struct FConstraintInstanceAccessor& Accessor, bool ReturnValue);
	void GetLinearVelocityTarget(const struct FConstraintInstanceAccessor& Accessor, struct FVector* OutVelTarget);
	void GetLinearVelocityDrive(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableDriveX, bool* bOutEnableDriveY, bool* bOutEnableDriveZ);
	void GetLinearSoftLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool* bSoftLinearLimit, float* LinearLimitStiffness, float* LinearLimitDamping, float* LinearLimitRestitution, float* LinearLimitContactDistance);
	void GetLinearPositionTarget(const struct FConstraintInstanceAccessor& Accessor, const struct FVector& OutPosTarget);
	void GetLinearPositionDrive(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableDriveX, bool* bOutEnableDriveY, bool* bOutEnableDriveZ);
	void GetLinearPlasticity(const struct FConstraintInstanceAccessor& Accessor, bool bLinearPlasticity, float* LinearPlasticityThreshold, enum class EConstraintPlasticityType* PlasticityType);
	void GetLinearLimits(const struct FConstraintInstanceAccessor& Accessor, enum class ELinearConstraintMotion XMotion, enum class ELinearConstraintMotion YMotion, enum class ELinearConstraintMotion ZMotion, float* Limit);
	void GetLinearDriveParams(const struct FConstraintInstanceAccessor& Accessor, float OutPositionStrength, float OutVelocityStrength, float OutForceLimit);
	void GetLinearBreakable(const struct FConstraintInstanceAccessor& Accessor, bool bLinearBreakable, float* LinearBreakThreshold);
	void GetDisableCollsion(const struct FConstraintInstanceAccessor& Accessor, bool ReturnValue);
	void GetContactTransferScale(const struct FConstraintInstanceAccessor& Accessor, float ContactTransferScale);
	void GetAttachedBodyNames(const struct FConstraintInstanceAccessor& Accessor, class FName* ParentBody, class FName* ChildBody);
	void GetAngularVelocityTarget(const struct FConstraintInstanceAccessor& Accessor, struct FVector* OutVelTarget);
	void GetAngularVelocityDriveTwistAndSwing(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableTwistDrive, bool* bOutEnableSwingDrive);
	void GetAngularVelocityDriveSLERP(const struct FConstraintInstanceAccessor& Accessor, bool* bOutEnableSLERP);
	void GetAngularSoftTwistLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool* bSoftTwistLimit, float* TwistLimitStiffness, float* TwistLimitDamping, float* TwistLimitRestitution, float TwistLimitContactDistance);
	void GetAngularSoftSwingLimitParams(const struct FConstraintInstanceAccessor& Accessor, bool bSoftSwingLimit, float SwingLimitStiffness, float SwingLimitDamping, float SwingLimitRestitution, float SwingLimitContactDistance);
	void GetAngularPlasticity(const struct FConstraintInstanceAccessor& Accessor, bool bAngularPlasticity, float AngularPlasticityThreshold);
	void GetAngularOrientationTarget(const struct FConstraintInstanceAccessor& Accessor, const struct FRotator& OutPosTarget);
	void GetAngularLimits(const struct FConstraintInstanceAccessor& Accessor, enum class EAngularConstraintMotion Swing1MotionType, float* Swing1LimitAngle, enum class EAngularConstraintMotion Swing2MotionType, float* Swing2LimitAngle, enum class EAngularConstraintMotion TwistMotionType, float* TwistLimitAngle);
	void GetAngularDriveParams(const struct FConstraintInstanceAccessor& Accessor, float OutPositionStrength, float OutVelocityStrength, float OutForceLimit);
	void GetAngularDriveMode(const struct FConstraintInstanceAccessor& Accessor, enum class EAngularDriveMode OutDriveMode);
	void GetAngularBreakable(const struct FConstraintInstanceAccessor& Accessor, bool bAngularBreakable, float* AngularBreakThreshold);
	void CopyParams(const struct FConstraintInstanceAccessor& Accessor, const struct FConstraintInstanceAccessor& SourceAccessor, bool bKeepPosition, bool bKeepRotation);
};

// 0x40 (0xF8 - 0xB8)
// Class Engine.PhysicalAnimationComponent
class UPhysicalAnimationComponent : public UActorComponent
{
public:
	float                                        StrengthMultiplyer;                                // 0xB8(0x4)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FF4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0xC0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_3FF5[0x30];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicalAnimationComponent* GetDefaultObj();

	void SetStrengthMultiplyer(float* InStrengthMultiplyer);
	void SetSkeletalMeshComponent(class USkeletalMeshComponent** InSkeletalMeshComponent);
	class FName GetBodyTargetTransform(const struct FTransform& ReturnValue);
	struct FPhysicalAnimationData ApplyPhysicalAnimationSettingsBelow(bool bIncludeSelf);
	struct FPhysicalAnimationData ApplyPhysicalAnimationSettings();
	class FName ApplyPhysicalAnimationProfileBelow(class FName ProfileName, bool bIncludeSelf, bool* bClearNotFound);
};

// 0x10 (0x38 - 0x28)
// Class Engine.PhysicalMaterialMask
class UPhysicalMaterialMask : public UObject
{
public:
	int32                                        UVChannelIndex;                                    // 0x28(0x4)(BlueprintVisible, Net, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ETextureAddress                   AddressX;                                          // 0x2C(0x1)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
	enum class ETextureAddress                   AddressY;                                          // 0x2D(0x1)(BlueprintVisible, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_3FF6[0xA];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicalMaterialMask* GetDefaultObj();

};

// 0x128 (0x150 - 0x28)
// Class Engine.PhysicsAsset
class UPhysicsAsset : public UObject
{
public:
	uint8                                        Pad_3FF7[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoundsBodies;                                      // 0x30(0x10)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USkeletalBodySetup*>            SkeletalBodySetups;                                // 0x40(0x10)(Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UPhysicsConstraintTemplate*>    ConstraintSetup;                                   // 0x50(0x10)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPhysicsAssetSolverSettings           SolverSettings;                                    // 0x60(0x1C)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FSolverIterations                     SolverIterations;                                  // 0x7C(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	enum class EPhysicsAssetSolverType           SolverType;                                        // 0x94(0x1)(Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bNotForDedicatedServer : 1;                        // Mask: 0x1, PropSize: 0x10x95(0x1)(BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2E8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_3FF9[0xA2];                                    // Fixing Size After Last Property  > TateDumper <
	class UThumbnailInfo*                        ThumbnailInfo;                                     // 0x138(0x8)(Edit, BlueprintReadOnly, Net, Parm, Config, SubobjectReference)
	TArray<class UBodySetup*>                    BodySetup;                                         // 0x140(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)

	static class UClass* StaticClass();
	static class UPhysicsAsset* GetDefaultObj();

};

// 0x18 (0x2C8 - 0x2B0)
// Class Engine.SkeletalBodySetup
class USkeletalBodySetup : public UBodySetup
{
public:
	bool                                         bSkipScaleFromAnimation;                           // 0x2B0(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FFA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPhysicalAnimationProfile>     PhysicalAnimationData;                             // 0x2B8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)

	static class UClass* StaticClass();
	static class USkeletalBodySetup* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.PhysicsCollisionHandler
class UPhysicsCollisionHandler : public UObject
{
public:
	float                                        ImpactThreshold;                                   // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ImpactReFireDelay;                                 // 0x2C(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundBase*                            DefaultImpactSound;                                // 0x30(0x8)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LastImpactSoundTime;                               // 0x38(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_3FFB[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsCollisionHandler* GetDefaultObj();

};

// 0x20 (0x4E8 - 0x4C8)
// Class Engine.PhysicsConstraintActor
class APhysicsConstraintActor : public ARigidBodyBase
{
public:
	class UPhysicsConstraintComponent*           ConstraintComp;                                    // 0x4C8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                ConstraintActor1;                                  // 0x4D0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                ConstraintActor2;                                  // 0x4D8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDisableCollision : 1;                             // Mask: 0x1, PropSize: 0x10x4E0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3FFE[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APhysicsConstraintActor* GetDefaultObj();

};

// 0x2D8 (0x5A0 - 0x2C8)
// Class Engine.PhysicsConstraintComponent
class UPhysicsConstraintComponent : public USceneComponent
{
public:
	class AActor*                                ConstraintActor1;                                  // 0x2C8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FConstrainComponentPropName           ComponentName1;                                    // 0x2D0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	class AActor*                                ConstraintActor2;                                  // 0x2D8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FConstrainComponentPropName           ComponentName2;                                    // 0x2E0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4019[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class UPhysicsConstraintTemplate*            ConstraintSetup;                                   // 0x2F8(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnConstraintBroken;                                // 0x300(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnPlasticDeformation;                              // 0x310(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FConstraintInstance                   ConstraintInstance;                                // 0x320(0x278)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_401A[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsConstraintComponent* GetDefaultObj();

	void SetOrientationDriveTwistAndSwing(bool* bEnableTwistDrive, bool* bEnableSwingDrive);
	void SetOrientationDriveSLERP(bool* bEnableSLERP);
	float SetLinearZLimit();
	float SetLinearYLimit();
	float SetLinearXLimit();
	void SetLinearVelocityTarget(struct FVector* InVelTarget);
	void SetLinearVelocityDrive(bool* bEnableDriveX, bool* bEnableDriveY, bool* bEnableDriveZ);
	void SetLinearPositionTarget(struct FVector* InPosTarget);
	void SetLinearPositionDrive(bool* bEnableDriveX, bool* bEnableDriveY, bool* bEnableDriveZ);
	void SetLinearPlasticity(bool bLinearPlasticity, float* LinearPlasticityThreshold, enum class EConstraintPlasticityType* PlasticityType);
	void SetLinearDriveParams(float* PositionStrength, float* VelocityStrength, float* InForceLimit);
	void SetLinearBreakable(bool bLinearBreakable, float* LinearBreakThreshold);
	void SetDisableCollision(bool bDisableCollision);
	void SetContactTransferScale(float ContactTransferScale);
	struct FVector SetConstraintReferencePosition();
	struct FVector SetConstraintReferenceOrientation();
	struct FTransform SetConstraintReferenceFrame();
	class FName SetConstrainedComponents();
	void SetAngularVelocityTarget(struct FVector* InVelTarget);
	void SetAngularVelocityDriveTwistAndSwing(bool* bEnableTwistDrive, bool* bEnableSwingDrive);
	void SetAngularVelocityDriveSLERP(bool* bEnableSLERP);
	void SetAngularVelocityDrive(bool* bEnableSwingDrive, bool* bEnableTwistDrive);
	enum class EAngularConstraintMotion SetAngularTwistLimit(float* TwistLimitAngle);
	enum class EAngularConstraintMotion SetAngularSwing2Limit(float* Swing2LimitAngle);
	enum class EAngularConstraintMotion SetAngularSwing1Limit(float* Swing1LimitAngle);
	void SetAngularPlasticity(bool bAngularPlasticity, float AngularPlasticityThreshold);
	void SetAngularOrientationTarget(struct FRotator* InPosTarget);
	void SetAngularOrientationDrive(bool* bEnableSwingDrive, bool* bEnableTwistDrive);
	void SetAngularDriveParams(float* PositionStrength, float* VelocityStrength, float* InForceLimit);
	void SetAngularDriveMode(enum class EAngularDriveMode* DriveMode);
	void SetAngularBreakable(bool bAngularBreakable, float* AngularBreakThreshold);
	void IsBroken(bool ReturnValue);
	void GetCurrentTwist(float ReturnValue);
	void GetCurrentSwing2(float ReturnValue);
	void GetCurrentSwing1(float ReturnValue);
	struct FVector GetConstraintForce();
	void GetConstraint(const struct FConstraintInstanceAccessor& ReturnValue);
	class FName GetConstrainedComponents();
	void BreakConstraint();
};

// 0x3E8 (0x410 - 0x28)
// Class Engine.PhysicsConstraintTemplate
class UPhysicsConstraintTemplate : public UObject
{
public:
	struct FConstraintInstance                   DefaultInstance;                                   // 0x28(0x278)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm)
	TArray<struct FPhysicsConstraintProfileHandle> ProfileHandles;                                    // 0x2A0(0x10)(Edit, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FConstraintProfileProperties          DefaultProfile;                                    // 0x2B0(0x160)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UPhysicsConstraintTemplate* GetDefaultObj();

};

// 0x438 (0x4F0 - 0xB8)
// Class Engine.PhysicsHandleComponent
class UPhysicsHandleComponent : public UActorComponent
{
public:
	class UPrimitiveComponent*                   GrabbedComponent;                                  // 0xB8(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_402D[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        BitPad_2F1 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bSoftAngularConstraint : 1;                        // Mask: 0x2, PropSize: 0x10xC8(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSoftLinearConstraint : 1;                         // Mask: 0x4, PropSize: 0x10xC8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bInterpolateTarget : 1;                            // Mask: 0x8, PropSize: 0x10xC8(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F2 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_402E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LinearDamping;                                     // 0xCC(0x4)(Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        LinearStiffness;                                   // 0xD0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        AngularDamping;                                    // 0xD4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        AngularStiffness;                                  // 0xD8(0x4)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4030[0xC4];                                    // Fixing Size After Last Property  > TateDumper <
	float                                        InterpolationSpeed;                                // 0x1A0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4031[0x34C];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsHandleComponent* GetDefaultObj();

	struct FRotator SetTargetRotation();
	struct FRotator SetTargetLocationAndRotation(struct FVector* NewLocation);
	void SetTargetLocation(struct FVector* NewLocation);
	float SetLinearStiffness();
	float SetLinearDamping();
	float SetInterpolationSpeed();
	float SetAngularStiffness();
	float SetAngularDamping();
	void ReleaseComponent();
	void GrabComponentAtLocationWithRotation(class UPrimitiveComponent* Component, class FName InBoneName, struct FVector* Location, struct FRotator* Rotation);
	struct FVector GrabComponentAtLocation(class UPrimitiveComponent* Component, class FName InBoneName);
	bool GrabComponent(class UPrimitiveComponent* Component, class FName InBoneName);
	struct FVector GetTargetLocationAndRotation(const struct FRotator& TargetRotation);
	void GetGrabbedComponent(class UPrimitiveComponent* ReturnValue);
};

// 0x100 (0x1E0 - 0xE0)
// Class Engine.PhysicsSettings
class UPhysicsSettings : public UPhysicsSettingsCore
{
public:
	struct FRigidBodyErrorCorrection             PhysicErrorCorrection;                             // 0xE0(0x34)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, SubobjectReference)
	enum class ESettingsLockedAxis               LockedAxis;                                        // 0x114(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	enum class ESettingsDOF                      DefaultDegreesOfFreedom;                           // 0x115(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSuppressFaceRemapTable;                           // 0x116(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSupportUVFromHitResults;                          // 0x117(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, Config, SubobjectReference)
	bool                                         bDisableActiveActors;                              // 0x118(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bDisableKinematicStaticPairs;                      // 0x119(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	bool                                         bDisableKinematicKinematicPairs;                   // 0x11A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	bool                                         bDisableCCD;                                       // 0x11B(0x1)(ConstParm, BlueprintVisible, ReturnParm, Transient, Config, SubobjectReference)
	float                                        AnimPhysicsMinDeltaTime;                           // 0x11C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSimulateAnimPhysicsAfterReset;                    // 0x120(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4036[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinPhysicsDeltaTime;                               // 0x124(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxPhysicsDeltaTime;                               // 0x128(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	bool                                         bSubstepping;                                      // 0x12C(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	bool                                         bSubsteppingAsync;                                 // 0x12D(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bTickPhysicsAsync;                                 // 0x12E(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4037[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AsyncFixedTimeStepSize;                            // 0x130(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MaxSubstepDeltaTime;                               // 0x134(0x4)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	int32                                        MaxSubsteps;                                       // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	float                                        SyncSceneSmoothingFactor;                          // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	float                                        InitialAverageFrameRate;                           // 0x140(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	int32                                        PhysXTreeRebuildRate;                              // 0x144(0x4)(Edit, Net, ReturnParm, Transient, Config, SubobjectReference)
	TArray<struct FPhysicalSurfaceName>          PhysicalSurfaces;                                  // 0x148(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	struct FBroadphaseSettings                   DefaultBroadphaseSettings;                         // 0x158(0x80)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinDeltaVelocityForHitEvents;                      // 0x1D8(0x4)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FChaosPhysicsSettings                 ChaosSettings;                                     // 0x1DC(0x3)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_403A[0x1];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsSettings* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.PhysicsThruster
class APhysicsThruster : public ARigidBodyBase
{
public:
	class UPhysicsThrusterComponent*             ThrusterComponent;                                 // 0x4C8(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class APhysicsThruster* GetDefaultObj();

};

// 0x38 (0x300 - 0x2C8)
// Class Engine.RadialForceComponent
class URadialForceComponent : public USceneComponent
{
public:
	float                                        Radius;                                            // 0x2C8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class ERadialImpulseFalloff             Falloff;                                           // 0x2CC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, DuplicateTransient)
	uint8                                        Pad_403B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseStrength;                                   // 0x2D0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bImpulseVelChange : 1;                             // Mask: 0x1, PropSize: 0x10x2D4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreOwningActor : 1;                            // Mask: 0x2, PropSize: 0x10x2D4(0x1)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F3 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_403D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ForceStrength;                                     // 0x2D8(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DestructibleDamage;                                // 0x2DC(0x4)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<enum class EObjectTypeQuery>          ObjectTypesToAffect;                               // 0x2E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_403F[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URadialForceComponent* GetDefaultObj();

	enum class EObjectTypeQuery RemoveObjectTypeToAffect();
	void FireImpulse();
	enum class EObjectTypeQuery AddObjectTypeToAffect();
};

// 0x98 (0x360 - 0x2C8)
// Class Engine.PhysicsFieldComponent
class UPhysicsFieldComponent : public USceneComponent
{
public:
	uint8                                        Pad_4040[0x98];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UPhysicsFieldComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.PhysicsFieldStatics
class UPhysicsFieldStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPhysicsFieldStatics* GetDefaultObj();

	enum class EFieldVectorType EvalPhysicsVectorField(const struct FVector& ReturnValue);
	enum class EFieldScalarType EvalPhysicsScalarField(float ReturnValue);
	enum class EFieldIntegerType EvalPhysicsIntegerField(int32 ReturnValue);
};

// 0x10 (0x500 - 0x4F0)
// Class Engine.PlayerStart
class APlayerStart : public ANavigationObjectBase
{
public:
	class FName                                  PlayerStartTag;                                    // 0x4F0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        SpawnPointRegion;                                  // 0x4F8(0x4)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4049[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class APlayerStart* GetDefaultObj();

};

// 0x0 (0x500 - 0x500)
// Class Engine.PlayerStartPIE
class APlayerStartPIE : public APlayerStart
{
public:

	static class UClass* StaticClass();
	static class APlayerStartPIE* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.PrecomputedVisibilityVolume
class APrecomputedVisibilityVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class APrecomputedVisibilityVolume* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Engine.PrimaryAssetLabel
class UPrimaryAssetLabel : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetRules                    Rules;                                             // 0x30(0xC)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLabelAssetsInMyDirectory : 1;                     // Mask: 0x1, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsRuntimeLabel : 1;                               // Mask: 0x2, PropSize: 0x10x3C(0x1)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F4 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_404B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<TSoftObjectPtr<class UObject>>        ExplicitAssets;                                    // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ExplicitBlueprints;                                // 0x50(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FCollectionReference                  AssetCollection;                                   // 0x60(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UPrimaryAssetLabel* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.HealthSnapshotBlueprintLibrary
class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UHealthSnapshotBlueprintLibrary* GetDefaultObj();

	void StopPerformanceSnapshots();
	void StartPerformanceSnapshots();
	bool LogPerformanceSnapshot();
};

// 0x0 (0x30 - 0x30)
// Class Engine.LevelStreamingProfilingSubsystem
class ULevelStreamingProfilingSubsystem : public UWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class ULevelStreamingProfilingSubsystem* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.ProxyLODMeshSimplificationSettings
class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
{
public:
	class FName                                  ProxyLODMeshReductionModuleName;                   // 0x38(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UProxyLODMeshSimplificationSettings* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Engine.RectLight
class ARectLight : public ALight
{
public:
	class URectLightComponent*                   RectLightComponent;                                // 0x4D8(0x8)(Edit, Parm, ZeroConstructor, ReturnParm, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class ARectLight* GetDefaultObj();

};

// 0x1A0 (0x1D8 - 0x38)
// Class Engine.RendererSettings
class URendererSettings : public UDeveloperSettings
{
public:
	enum class EMobileShadingPath                MobileShadingPath;                                 // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4052[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMobileSupportGPUScene : 1;                        // Mask: 0x1, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F5 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4053[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EMobileAntiAliasingMethod         MobileAntiAliasing;                                // 0x40(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EMobileFloatPrecisionMode         MobileFloatPrecisionMode;                          // 0x41(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4054[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMobileAllowDitheredLODTransition : 1;             // Mask: 0x1, PropSize: 0x10x44(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileVirtualTextures : 1;                        // Mask: 0x2, PropSize: 0x10x44(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDiscardUnusedQualityLevels : 1;                   // Mask: 0x4, PropSize: 0x10x44(0x1)(ConstParm, Net, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F6 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4055[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EShaderCompressionFormat          ShaderCompressionFormat;                           // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4056[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bOcclusionCulling : 1;                             // Mask: 0x1, PropSize: 0x10x4C(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F7 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4057[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinScreenRadiusForLights;                          // 0x50(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinScreenRadiusForEarlyZPass;                      // 0x54(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        MinScreenRadiusForCSMdepth;                        // 0x58(0x4)(Edit, Net, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPrecomputedVisibilityWarning : 1;                 // Mask: 0x1, PropSize: 0x10x5C(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTextureStreaming : 1;                             // Mask: 0x2, PropSize: 0x10x5C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseDXT5NormalMaps : 1;                            // Mask: 0x4, PropSize: 0x10x5C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bVirtualTextures : 1;                              // Mask: 0x8, PropSize: 0x10x5C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bVirtualTextureEnableAutoImport : 1;               // Mask: 0x10, PropSize: 0x10x5C(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bVirtualTexturedLightmaps : 1;                     // Mask: 0x20, PropSize: 0x10x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bVirtualTextureAnisotropicFiltering : 1;           // Mask: 0x40, PropSize: 0x10x5C(0x1)(ConstParm, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableVirtualTextureOpacityMask : 1;              // Mask: 0x80, PropSize: 0x10x5C(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4059[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       VirtualTextureTileSize;                            // 0x60(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VirtualTextureTileBorderSize;                      // 0x64(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint32                                       VirtualTextureFeedbackFactor;                      // 0x68(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, InstancedReference, SubobjectReference)
	enum class EWorkingColorSpace                WorkingColorSpaceChoice;                           // 0x6C(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, SubobjectReference)
	uint8                                        Pad_405A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             RedChromaticityCoordinate;                         // 0x70(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, SubobjectReference)
	struct FVector2D                             GreenChromaticityCoordinate;                       // 0x80(0x10)(ZeroConstructor, Transient, Config, SubobjectReference)
	struct FVector2D                             BlueChromaticityCoordinate;                        // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, SubobjectReference)
	struct FVector2D                             WhiteChromaticityCoordinate;                       // 0xA0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, SubobjectReference)
	uint8                                        bClearCoatEnableSecondNormal : 1;                  // Mask: 0x1, PropSize: 0x10xB0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F8 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_405B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDynamicGlobalIlluminationMethod  DynamicGlobalIllumination;                         // 0xB4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EReflectionMethod                 Reflections;                                       // 0xB5(0x1)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_405C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReflectionCaptureResolution;                       // 0xB8(0x4)(Edit, ConstParm, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        ReflectionEnvironmentLightmapMixBasedOnRoughness : 1; // Mask: 0x1, PropSize: 0x10xBC(0x1)(ConstParm, ExportObject, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseHardwareRayTracingForLumen : 1;                // Mask: 0x2, PropSize: 0x10xBC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2F9 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_405D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ELumenRayLightingMode             LumenRayLightingMode;                              // 0xC0(0x1)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_405F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        LumenFrontLayerTranslucencyReflections : 1;        // Mask: 0x1, PropSize: 0x10xC4(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_2FA : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4060[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ELumenSoftwareTracingMode         LumenSoftwareTracingMode;                          // 0xC8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EShadowMapMethod                  ShadowMapMethod;                                   // 0xC9(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4061[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bEnableRayTracing : 1;                             // Mask: 0x1, PropSize: 0x10xCC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, SubobjectReference)
	uint8                                        bEnableRayTracingShadows : 1;                      // Mask: 0x2, PropSize: 0x10xCC(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableRayTracingSkylight : 1;                     // Mask: 0x4, PropSize: 0x10xCC(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableRayTracingTextureLOD : 1;                   // Mask: 0x8, PropSize: 0x10xCC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnablePathTracing : 1;                            // Mask: 0x10, PropSize: 0x10xCC(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGenerateMeshDistanceFields : 1;                   // Mask: 0x20, PropSize: 0x10xCC(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2FB : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4062[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceFieldVoxelDensity;                         // 0xD0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNanite : 1;                                       // Mask: 0x1, PropSize: 0x10xD4(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowStaticLighting : 1;                          // Mask: 0x2, PropSize: 0x10xD4(0x1)(Edit, ConstParm, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseNormalMapsForStaticLighting : 1;               // Mask: 0x4, PropSize: 0x10xD4(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForwardShading : 1;                               // Mask: 0x8, PropSize: 0x10xD4(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bVertexFoggingForOpaque : 1;                       // Mask: 0x10, PropSize: 0x10xD4(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSeparateTranslucency : 1;                         // Mask: 0x20, PropSize: 0x10xD4(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2FC : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4063[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ETranslucentSortPolicy            TranslucentSortPolicy;                             // 0xD8(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4064[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TranslucentSortAxis;                               // 0xE0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EFixedFoveationLevels             HMDFixedFoveationLevel;                            // 0xF8(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4065[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bHMDFixedFoveationDynamic : 1;                     // Mask: 0x1, PropSize: 0x10xFC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2FD : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4066[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ECustomDepthStencil               CustomDepthStencil;                                // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4067[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bCustomDepthTaaJitter : 1;                         // Mask: 0x1, PropSize: 0x10x104(0x1)(Edit, ExportObject, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2FE : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4068[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAlphaChannelMode                 bEnableAlphaChannelInPostProcessing;               // 0x108(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4069[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bDefaultFeatureBloom : 1;                          // Mask: 0x1, PropSize: 0x10x10C(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultFeatureAmbientOcclusion : 1;               // Mask: 0x2, PropSize: 0x10x10C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultFeatureAmbientOcclusionStaticFraction : 1; // Mask: 0x4, PropSize: 0x10x10C(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultFeatureAutoExposure : 1;                   // Mask: 0x8, PropSize: 0x10x10C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_2FF : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_406A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAutoExposureMethodUI             DefaultFeatureAutoExposure;                        // 0x110(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_406B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultFeatureAutoExposureBias;                    // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bExtendDefaultLuminanceRangeInAutoExposureSettings : 1; // Mask: 0x1, PropSize: 0x10x118(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultFeatureMotionBlur : 1;                     // Mask: 0x2, PropSize: 0x10x118(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultFeatureLensFlare : 1;                      // Mask: 0x4, PropSize: 0x10x118(0x1)(Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bTemporalUpsampling : 1;                           // Mask: 0x8, PropSize: 0x10x118(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_300 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_406C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EAntiAliasingMethod               DefaultFeatureAntiAliasing;                        // 0x11C(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ECompositingSampleCount           MSAASampleCount;                                   // 0x11D(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ELightUnits                       DefaultLightUnits;                                 // 0x11E(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDefaultBackBufferPixelFormat     DefaultBackBufferPixelFormat;                      // 0x11F(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRenderUnbuiltPreviewShadowsInGame : 1;            // Mask: 0x1, PropSize: 0x10x120(0x1)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bStencilForLODDither : 1;                          // Mask: 0x2, PropSize: 0x10x120(0x1)(ExportObject, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_301 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_406F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EEarlyZPass                       EarlyZPass;                                        // 0x124(0x1)(ConstParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4071[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bEarlyZPassOnlyMaterialMasking : 1;                // Mask: 0x1, PropSize: 0x10x128(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableCSMCaching : 1;                             // Mask: 0x2, PropSize: 0x10x128(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDBuffer : 1;                                      // Mask: 0x4, PropSize: 0x10x128(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_302 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4073[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EClearSceneOptions                ClearSceneMethod;                                  // 0x12C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EVelocityOutputPass               VelocityPass;                                      // 0x12D(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EVertexDeformationOutputsVelocity VertexDeformationOutputsVelocity;                  // 0x12E(0x1)(ConstParm, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4074[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bSelectiveBasePassOutputs : 1;                     // Mask: 0x1, PropSize: 0x10x130(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDefaultParticleCutouts : 1;                       // Mask: 0x2, PropSize: 0x10x130(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_303 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4075[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        GPUSimulationTextureSizeX;                         // 0x134(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        GPUSimulationTextureSizeY;                         // 0x138(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGlobalClipPlane : 1;                              // Mask: 0x1, PropSize: 0x10x13C(0x1)(ConstParm, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_304 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4076[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EGBufferFormat                    GBufferFormat;                                     // 0x140(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4077[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bUseGPUMorphTargets : 1;                           // Mask: 0x1, PropSize: 0x10x144(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNvidiaAftermathEnabled : 1;                       // Mask: 0x2, PropSize: 0x10x144(0x1)(ConstParm, Net, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMultiView : 1;                                    // Mask: 0x4, PropSize: 0x10x144(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobilePostProcessing : 1;                         // Mask: 0x8, PropSize: 0x10x144(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileMultiView : 1;                              // Mask: 0x10, PropSize: 0x10x144(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileUseHWsRGBEncoding : 1;                      // Mask: 0x20, PropSize: 0x10x144(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bRoundRobinOcclusion : 1;                          // Mask: 0x40, PropSize: 0x10x144(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMeshStreaming : 1;                                // Mask: 0x80, PropSize: 0x10x144(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableHeterogeneousVolumes : 1;                   // Mask: 0x1, PropSize: 0x10x145(0x1)(ExportObject, BlueprintReadOnly, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_305 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4078[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WireframeCullThreshold;                            // 0x148(0x4)(BlueprintVisible, ExportObject, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportStationarySkylight : 1;                    // Mask: 0x1, PropSize: 0x10x14C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportLowQualityLightmaps : 1;                   // Mask: 0x2, PropSize: 0x10x14C(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportPointLightWholeSceneShadows : 1;           // Mask: 0x4, PropSize: 0x10x14C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportSkyAtmosphere : 1;                         // Mask: 0x8, PropSize: 0x10x14C(0x1)(BlueprintReadOnly, EditFixedSize, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportSkyAtmosphereAffectsHeightFog : 1;         // Mask: 0x10, PropSize: 0x10x14C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportCloudShadowOnForwardLitTranslucent : 1;    // Mask: 0x20, PropSize: 0x10x14C(0x1)(ConstParm, BlueprintVisible, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportTranslucentPerObjectShadow : 1;            // Mask: 0x40, PropSize: 0x10x14C(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportCloudShadowOnSingleLayerWater : 1;         // Mask: 0x80, PropSize: 0x10x14C(0x1)(Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bEnableStrata : 1;                                 // Mask: 0x1, PropSize: 0x10x14D(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        StrataOpaqueMaterialRoughRefraction : 1;           // Mask: 0x2, PropSize: 0x10x14D(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        StrataDebugAdvancedVisualizationShaders : 1;       // Mask: 0x4, PropSize: 0x10x14D(0x1)(BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMaterialRoughDiffuse : 1;                         // Mask: 0x8, PropSize: 0x10x14D(0x1)(BlueprintVisible, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMaterialEnergyConservation : 1;                   // Mask: 0x10, PropSize: 0x10x14D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOrderedIndependentTransparencyEnable : 1;         // Mask: 0x20, PropSize: 0x10x14D(0x1)(Edit, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportSkinCacheShaders : 1;                      // Mask: 0x40, PropSize: 0x10x14D(0x1)(BlueprintVisible, BlueprintReadOnly, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSkipCompilingGPUSkinVF : 1;                       // Mask: 0x80, PropSize: 0x10x14D(0x1)(Edit, ConstParm, BlueprintVisible, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_407A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	enum class ESkinCacheDefaultBehavior         DefaultSkinCacheBehavior;                          // 0x150(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_407B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SkinCacheSceneMemoryLimitInMB;                     // 0x154(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileEnableStaticAndCSMShadowReceivers : 1;      // Mask: 0x1, PropSize: 0x10x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileEnableMovableLightCSMShaderCulling : 1;     // Mask: 0x2, PropSize: 0x10x158(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileForwardEnableLocalLights : 1;               // Mask: 0x4, PropSize: 0x10x158(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileForwardEnableClusteredReflections : 1;      // Mask: 0x8, PropSize: 0x10x158(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileEnableNoPrecomputedLightingCSMShader : 1;   // Mask: 0x10, PropSize: 0x10x158(0x1)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileAllowDistanceFieldShadows : 1;              // Mask: 0x20, PropSize: 0x10x158(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileAllowMovableDirectionalLights : 1;          // Mask: 0x40, PropSize: 0x10x158(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileAllowMovableSpotlightShadows : 1;           // Mask: 0x80, PropSize: 0x10x158(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupport16BitBoneIndex : 1;                        // Mask: 0x1, PropSize: 0x10x159(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGPUSkinLimit2BoneInfluences : 1;                  // Mask: 0x2, PropSize: 0x10x159(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportDepthOnlyIndexBuffers : 1;                 // Mask: 0x4, PropSize: 0x10x159(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportReversedIndexBuffers : 1;                  // Mask: 0x8, PropSize: 0x10x159(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bMobileAmbientOcclusion : 1;                       // Mask: 0x10, PropSize: 0x10x159(0x1)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseUnlimitedBoneInfluences : 1;                   // Mask: 0x20, PropSize: 0x10x159(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_306 : 2;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_407E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        UnlimitedBonInfluencesThreshold;                   // 0x15C(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       DefaultBoneInfluenceLimit;                         // 0x160(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       MaxSkinBones;                                      // 0x164(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class EMobilePlanarReflectionMode       MobilePlanarReflectionMode;                        // 0x168(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4080[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bMobileSupportsGen4TAA : 1;                        // Mask: 0x1, PropSize: 0x10x16C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_307 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4081[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPerPlatformBool                      bStreamSkeletalMeshLODs;                           // 0x170(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	struct FPerPlatformBool                      bDiscardSkeletalMeshOptionalLODs;                  // 0x171(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
	uint8                                        Pad_4083[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSoftObjectPath                       VisualizeCalibrationColorMaterialPath;             // 0x178(0x20)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       VisualizeCalibrationCustomMaterialPath;            // 0x198(0x20)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, SubobjectReference)
	struct FSoftObjectPath                       VisualizeCalibrationGrayscaleMaterialPath;         // 0x1B8(0x20)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class URendererSettings* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.RendererOverrideSettings
class URendererOverrideSettings : public UDeveloperSettings
{
public:
	uint8                                        bSupportAllShaderPermutations : 1;                 // Mask: 0x1, PropSize: 0x10x38(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4086[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URendererOverrideSettings* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class Engine.SubsurfaceProfile
class USubsurfaceProfile : public UObject
{
public:
	struct FSubsurfaceProfileStruct              Settings;                                          // 0x28(0x9C)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4087[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USubsurfaceProfile* GetDefaultObj();

};

// 0xA88 (0x2870 - 0x1DE8)
// Class Engine.ReplayNetConnection
class UReplayNetConnection : public UNetConnection
{
public:
	uint8                                        Pad_4088[0xA88];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UReplayNetConnection* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Engine.ReplaySubsystem
class UReplaySubsystem : public UGameInstanceSubsystem
{
public:
	bool                                         bLoadDefaultMapOnStop;                             // 0x30(0x1)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_408C[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UReplaySubsystem* GetDefaultObj();

	void RequestCheckpoint();
	void IsRecording(bool ReturnValue);
	void IsPlaying(bool ReturnValue);
	void GetReplayCurrentTime(float ReturnValue);
	void GetActiveReplayName(const class FString& ReturnValue);
};

// 0x38 (0x60 - 0x28)
// Class Engine.ReverbEffect
class UReverbEffect : public UObject
{
public:
	bool                                         bBypassEarlyReflections;                           // 0x28(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_408F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReflectionsDelay;                                  // 0x2C(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        GainHF;                                            // 0x30(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReflectionsGain;                                   // 0x34(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bBypassLateReflections;                            // 0x38(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4090[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LateDelay;                                         // 0x3C(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DecayTime;                                         // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Density;                                           // 0x44(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Diffusion;                                         // 0x48(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AirAbsorptionGainHF;                               // 0x4C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DecayHFRatio;                                      // 0x50(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        LateGain;                                          // 0x54(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Gain;                                              // 0x58(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        RoomRolloffFactor;                                 // 0x5C(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UReverbEffect* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.RuntimeOptionsBase
class URuntimeOptionsBase : public UObject
{
public:
	uint8                                        Pad_4093[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URuntimeOptionsBase* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class Engine.SCS_Node
class USCS_Node : public UObject
{
public:
	class UClass*                                ComponentClass;                                    // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	class UActorComponent*                       ComponentTemplate;                                 // 0x30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FBlueprintCookedComponentInstancingData CookedComponentInstancingData;                     // 0x38(0x48)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  AttachToName;                                      // 0x80(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ParentComponentOrVariableName;                     // 0x88(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  ParentComponentOwnerClassName;                     // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bIsParentComponentNative;                          // 0x98(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4094[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USCS_Node*>                     ChildNodes;                                        // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBPVariableMetaDataEntry>      MetaDataArray;                                     // 0xB0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FGuid                                 VariableGuid;                                      // 0xC0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class FName                                  InternalVariableName;                              // 0xD0(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class USCS_Node* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class Engine.SimpleConstructionScript
class USimpleConstructionScript : public UObject
{
public:
	TArray<class USCS_Node*>                     RootNodes;                                         // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class USCS_Node*>                     AllNodes;                                          // 0x38(0x10)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USCS_Node*                             DefaultSceneRootNode;                              // 0x48(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4095[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USimpleConstructionScript* GetDefaultObj();

};

// 0x80 (0x148 - 0xC8)
// Class Engine.SkinnedAsset
class USkinnedAsset : public UStreamableRenderAsset
{
public:
	uint8                                        Pad_409A[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RotOffset;                                         // 0xD0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FRotator                              ItemSlotAttachmentRotOffset;                       // 0xE8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               LocOffset;                                         // 0x100(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ScaleMultiplier;                                   // 0x118(0x18)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ItemSlotAttachmentLocOffset;                       // 0x130(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USkinnedAsset* GetDefaultObj();

	int32 FindSocketInfo(class FName InSocketName, class USkeletalMeshSocket* ReturnValue);
	void FindSocket(class FName InSocketName, class USkeletalMeshSocket* ReturnValue);
};

// 0x470 (0x5B8 - 0x148)
// Class Engine.SkeletalMesh
class USkeletalMesh : public USkinnedAsset
{
public:
	uint8                                        Pad_40AE[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	class USkeleton*                             Skeleton;                                          // 0x168(0x8)(ExportObject, Net, EditFixedSize, Transient, EditConst, GlobalConfig, DuplicateTransient)
	struct FBoxSphereBounds                      ImportedBounds;                                    // 0x170(0x38)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBoxSphereBounds                      ExtendedBounds;                                    // 0x1A8(0x38)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               PositiveBoundsExtension;                           // 0x1E0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               NegativeBoundsExtension;                           // 0x1F8(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSkeletalMaterial>             Materials;                                         // 0x210(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	TArray<struct FBoneMirrorInfo>               SkelMirrorTable;                                   // 0x220(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSkeletalMeshLODInfo>          LODInfo;                                           // 0x230(0x10)(Edit, Net, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AF[0x50];                                    // Fixing Size After Last Property  > TateDumper <
	struct FPerQualityLevelInt                   MinQualityLevelLOD;                                // 0x290(0x68)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       MinLOD;                                            // 0x2F8(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	struct FPerPlatformBool                      DisableBelowMinLodStripping;                       // 0x2FC(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	enum class EAxis                             SkelMirrorAxis;                                    // 0x2FD(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EAxis                             SkelMirrorFlipAxis;                                // 0x2FE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bUseFullPrecisionUVs : 1;                          // Mask: 0x1, PropSize: 0x10x2FF(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        bUseHighPrecisionTangentBasis : 1;                 // Mask: 0x2, PropSize: 0x10x2FF(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHasBeenSimplified : 1;                            // Mask: 0x4, PropSize: 0x10x2FF(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bHasVertexColors : 1;                              // Mask: 0x8, PropSize: 0x10x2FF(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30D : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bEnablePerPolyCollision : 1;                       // Mask: 0x20, PropSize: 0x10x2FF(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowCPUAcccess : 1;                         // Mask: 0x40, PropSize: 0x10x2FF(0x1)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_30E : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	class UBodySetup*                            BodySetup;                                         // 0x300(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)
	class UPhysicsAsset*                         PhysicsAsset;                                      // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	class UPhysicsAsset*                         ShadowPhysicsAsset;                                // 0x310(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<class UNodeMappingContainer*>         NodeMappingData;                                   // 0x318(0x10)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportRayTracing : 1;                            // Mask: 0x1, PropSize: 0x10x328(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_30F : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40B1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        RayTracingMinLOD;                                  // 0x32C(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EClothLODBiasMode                 ClothLODBiasMode;                                  // 0x330(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UMorphTarget*>                  MorphTargets;                                      // 0x338(0x10)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, DuplicateTransient)
	uint8                                        Pad_40B3[0x178];                                   // Fixing Size After Last Property  > TateDumper <
	class UClass*                                PostProcessAnimBlueprint;                          // 0x4C0(0x8)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UClothingAssetBase*>            MeshClothingAssets;                                // 0x4C8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSkeletalMeshSamplingInfo             SamplingInfo;                                      // 0x4D8(0x30)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x508(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<class USkeletalMeshSocket*>           Sockets;                                           // 0x518(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_40B4[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSkinWeightProfileInfo>        SkinWeightProfiles;                                // 0x538(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class UMeshDeformer*                         DefaultMeshDeformer;                               // 0x548(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSkeletalMeshOptimizationSettings> OptimizationSettings;                              // 0x550(0x10)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ItemSlotAttachmentScaleMultiplier;                 // 0x560(0x18)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseToGroundBoneName;                             // 0x578(0x8)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  CloseToGroundOppositeBoneName;                     // 0x580(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FGroundBoneChain>              GroundBonesChains;                                 // 0x588(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultTraceLength;                                // 0x598(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        TraceStartOffset;                                  // 0x59C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InterpolationSpeed;                                // 0x5A0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpolationSpeedUpward;                          // 0x5A4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CachedInitialSphereRadiusBounds;                   // 0x5A8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreMasterPoseLODs : 1;                         // Mask: 0x1, PropSize: 0x10x5AC(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowParallelAnimations : 1;                      // Mask: 0x2, PropSize: 0x10x5AC(0x1)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowLODStreaming : 1;                            // Mask: 0x4, PropSize: 0x10x5AC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bFullLODStreaming : 1;                             // Mask: 0x8, PropSize: 0x10x5AC(0x1)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCookRemoveLOD0 : 1;                               // Mask: 0x10, PropSize: 0x10x5AC(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsoleDropLOD0 : 1;                              // Mask: 0x20, PropSize: 0x10x5AC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsoleDropLOD0onLowMemPlatform : 1;              // Mask: 0x40, PropSize: 0x10x5AC(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventLODStreamingOnWindows : 1;                 // Mask: 0x80, PropSize: 0x10x5AC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ConsoleDropLODNewTriangleCount;                    // 0x5B0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformBool                      bRemovingLOD0FromCook;                             // 0x5B4(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B7[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USkeletalMesh* GetDefaultObj();

	void SetSkeleton(class USkeleton** InSkeleton);
	TArray<class UMorphTarget*> SetMorphTargets();
	TMap<enum class EPerQualityLevels, int32> SetMinLODForQualityLevels(int32 Default);
	TArray<class UClothingAssetBase*> SetMeshClothingAssets();
	void SetMaterials(TArray<struct FSkeletalMaterial>* InMaterials);
	class USkeletalMeshLODSettings* SetLODSettings();
	TSoftObjectPtr<class UObject> SetDefaultAnimatingRig();
	void NumSockets(int32 ReturnValue);
	void K2_GetAllMorphTargetNames(const TArray<class FString>& ReturnValue);
	bool IsSectionUsingCloth(bool ReturnValue);
	void GetSocketByIndex(int32* Index, class USkeletalMeshSocket* ReturnValue);
	void GetSkeleton(class USkeleton* ReturnValue);
	void GetShadowPhysicsAsset(class UPhysicsAsset* ReturnValue);
	void GetPhysicsAsset(class UPhysicsAsset* ReturnValue);
	void GetNodeMappingData(const TArray<class UNodeMappingContainer*>& ReturnValue);
	class UBlueprint* GetNodeMappingContainer(class UNodeMappingContainer* ReturnValue);
	void GetMorphTargetsPtrConv(const TArray<class UMorphTarget*>& ReturnValue);
	TMap<enum class EPerQualityLevels, int32> GetMinLODForQualityLevels(int32 Default);
	void GetMeshClothingAssets(const TArray<class UClothingAssetBase*>& ReturnValue);
	void GetMaterials(const TArray<struct FSkeletalMaterial>& ReturnValue);
	void GetLODSettings(class USkeletalMeshLODSettings* ReturnValue);
	void GetImportedBounds(const struct FBoxSphereBounds& ReturnValue);
	void GetDefaultAnimatingRig(TSoftObjectPtr<class UObject> ReturnValue);
	void GetBounds(const struct FBoxSphereBounds& ReturnValue);
	int32 FindSocketAndIndex(class FName InSocketName, class USkeletalMeshSocket* ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.SkeletalMeshEditorData
class USkeletalMeshEditorData : public UObject
{
public:

	static class UClass* StaticClass();
	static class USkeletalMeshEditorData* GetDefaultObj();

};

// 0x88 (0xB8 - 0x30)
// Class Engine.SkeletalMeshLODSettings
class USkeletalMeshLODSettings : public UDataAsset
{
public:
	struct FPerQualityLevelInt                   MinQualityLevelLOD;                                // 0x30(0x68)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       MinLOD;                                            // 0x98(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	struct FPerPlatformBool                      DisableBelowMinLodStripping;                       // 0x9C(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	bool                                         bOverrideLODStreamingSettings;                     // 0x9D(0x1)(Edit, BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformBool                      bSupportLODStreaming;                              // 0x9E(0x1)(ConstParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40BE[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPerPlatformInt                       MaxNumStreamedLODs;                                // 0xA0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       MaxNumOptionalLODs;                                // 0xA4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSkeletalMeshLODGroupSettings> LODGroups;                                         // 0xA8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class USkeletalMeshLODSettings* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.SkeletalMeshSimplificationSettings
class USkeletalMeshSimplificationSettings : public UDeveloperSettings
{
public:
	class FName                                  SkeletalMeshReductionModuleName;                   // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USkeletalMeshSimplificationSettings* GetDefaultObj();

};

// 0x3F8 (0x420 - 0x28)
// Class Engine.ButtonStyleAsset
class UButtonStyleAsset : public UObject
{
public:
	uint8                                        Pad_40BF[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FButtonStyle                          ButtonStyle;                                       // 0x30(0x3F0)(Edit, Parm, ReturnParm, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UButtonStyleAsset* GetDefaultObj();

};

// 0xAD8 (0xB00 - 0x28)
// Class Engine.CheckBoxStyleAsset
class UCheckBoxStyleAsset : public UObject
{
public:
	uint8                                        Pad_40C0[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCheckBoxStyle                        CheckBoxStyle;                                     // 0x30(0xAD0)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UCheckBoxStyleAsset* GetDefaultObj();

};

// 0xD8 (0x100 - 0x28)
// Class Engine.SlateBrushAsset
class USlateBrushAsset : public UObject
{
public:
	uint8                                        Pad_40C1[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSlateBrush                           Brush;                                             // 0x30(0xD0)(ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)

	static class UClass* StaticClass();
	static class USlateBrushAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SlateTextureAtlasInterface
class ISlateTextureAtlasInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISlateTextureAtlasInterface* GetDefaultObj();

};

// 0x1E0 (0x208 - 0x28)
// Class Engine.SoundClass
class USoundClass : public UObject
{
public:
	struct FSoundClassProperties                 Properties;                                        // 0x28(0x1B8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class USoundClass*>                   ChildClasses;                                      // 0x1E0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FPassiveSoundMixModifier>      PassiveSoundMixModifiers;                          // 0x1F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundClass*                           ParentClass;                                       // 0x200(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class USoundClass* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Engine.SoundConcurrency
class USoundConcurrency : public UObject
{
public:
	struct FSoundConcurrencySettings             Concurrency;                                       // 0x28(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundConcurrency* GetDefaultObj();

};

// 0x438 (0x5A0 - 0x168)
// Class Engine.SoundCue
class USoundCue : public USoundBase
{
public:
	class USoundNode*                            FirstNode;                                         // 0x168(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        VolumeMultiplier;                                  // 0x170(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x174(0x4)(ConstParm, BlueprintVisible, OutParm, Config, EditConst, InstancedReference)
	struct FSoundAttenuationSettings             AttenuationOverrides;                              // 0x178(0x3C8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        SubtitleColorIndex;                                // 0x540(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSubtitleCue>                  Subtitles;                                         // 0x548(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	TArray<struct FLocalizedSpokenText>          LocalizedSpokenTexts;                              // 0x558(0x10)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FSoftObjectPath                       AnimTexture;                                       // 0x568(0x20)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        SubtitlePriority;                                  // 0x588(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bPrimeOnLoad : 1;                                  // Mask: 0x1, PropSize: 0x10x590(0x1)(Edit, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bOverrideAttenuation : 1;                          // Mask: 0x2, PropSize: 0x10x590(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bExcludeFromRandomNodeBranchCulling : 1;           // Mask: 0x4, PropSize: 0x10x590(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasPlayWhenSilent : 1;                            // Mask: 0x8, PropSize: 0x10x590(0x1)(BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_316 : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40C8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CookedQualityIndex;                                // 0x594(0x4)(ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40C9[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundCue* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Engine.SoundMix
class USoundMix : public UObject
{
public:
	uint8                                        bApplyEQ : 1;                                      // Mask: 0x1, PropSize: 0x10x28(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, EditConst, DuplicateTransient)
	uint8                                        BitPad_318 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40CC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        EQPriority;                                        // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FAudioEQEffect                        EQSettings;                                        // 0x30(0x40)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FSoundClassAdjuster>           SoundClassEffects;                                 // 0x70(0x10)(BlueprintVisible, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        InitialDelay;                                      // 0x80(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FadeInTime;                                        // 0x84(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	float                                        FadeOutTime;                                       // 0x8C(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundMix* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Engine.SoundNodeAssetReferencer
class USoundNodeAssetReferencer : public USoundNode
{
public:

	static class UClass* StaticClass();
	static class USoundNodeAssetReferencer* GetDefaultObj();

};

// 0x3D8 (0x420 - 0x48)
// Class Engine.SoundNodeAttenuation
class USoundNodeAttenuation : public USoundNode
{
public:
	class USoundAttenuation*                     AttenuationSettings;                               // 0x48(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FSoundAttenuationSettings             AttenuationOverrides;                              // 0x50(0x3C8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        bOverrideAttenuation : 1;                          // Mask: 0x1, PropSize: 0x10x418(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40CF[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeAttenuation* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeBranch
class USoundNodeBranch : public USoundNode
{
public:
	class FName                                  BoolParameterName;                                 // 0x48(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeBranch* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeConcatenator
class USoundNodeConcatenator : public USoundNode
{
public:
	TArray<float>                                InputVolume;                                       // 0x48(0x10)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeConcatenator* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeDelay
class USoundNodeDelay : public USoundNode
{
public:
	float                                        DelayMin;                                          // 0x48(0x4)(BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DelayMax;                                          // 0x4C(0x4)(Edit, ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeDelay* GetDefaultObj();

};

// 0x28 (0x70 - 0x48)
// Class Engine.SoundNodeDialoguePlayer
class USoundNodeDialoguePlayer : public USoundNode
{
public:
	struct FDialogueWaveParameter                DialogueWaveParameter;                             // 0x48(0x20)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	uint8                                        bLooping : 1;                                      // Mask: 0x1, PropSize: 0x10x68(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_40D0[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeDialoguePlayer* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeDistanceCrossFade
class USoundNodeDistanceCrossFade : public USoundNode
{
public:
	TArray<struct FDistanceDatum>                CrossFadeInput;                                    // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeDistanceCrossFade* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeDoppler
class USoundNodeDoppler : public USoundNode
{
public:
	float                                        DopplerIntensity;                                  // 0x48(0x4)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseSmoothing;                                     // 0x4C(0x1)(ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SmoothingInterpSpeed;                              // 0x50(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D3[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeDoppler* GetDefaultObj();

};

// 0x148 (0x190 - 0x48)
// Class Engine.SoundNodeEnveloper
class USoundNodeEnveloper : public USoundNode
{
public:
	float                                        LoopStart;                                         // 0x48(0x4)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        LoopEnd;                                           // 0x4C(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DurationAfterLoop;                                 // 0x50(0x4)(Edit, ConstParm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LoopCount;                                         // 0x54(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLoopIndefinitely : 1;                             // Mask: 0x1, PropSize: 0x10x58(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bLoop : 1;                                         // Mask: 0x2, PropSize: 0x10x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_319 : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40D5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDistributionFloatConstantCurve*       VolumeInterpCurve;                                 // 0x60(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UDistributionFloatConstantCurve*       PitchInterpCurve;                                  // 0x68(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRuntimeFloatCurve                    VolumeCurve;                                       // 0x70(0x88)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRuntimeFloatCurve                    PitchCurve;                                        // 0xF8(0x88)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PitchMin;                                          // 0x180(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        PitchMax;                                          // 0x184(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        VolumeMin;                                         // 0x188(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        VolumeMax;                                         // 0x18C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeEnveloper* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeGroupControl
class USoundNodeGroupControl : public USoundNode
{
public:
	TArray<int32>                                GroupSizes;                                        // 0x48(0x10)(ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeGroupControl* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeLooping
class USoundNodeLooping : public USoundNode
{
public:
	int32                                        LoopCount;                                         // 0x48(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bLoopIndefinitely : 1;                             // Mask: 0x1, PropSize: 0x10x4C(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D8[0x3];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeLooping* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Engine.SoundNodeMature
class USoundNodeMature : public USoundNode
{
public:

	static class UClass* StaticClass();
	static class USoundNodeMature* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeMixer
class USoundNodeMixer : public USoundNode
{
public:
	TArray<float>                                InputVolume;                                       // 0x48(0x10)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeMixer* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeModulator
class USoundNodeModulator : public USoundNode
{
public:
	float                                        PitchMin;                                          // 0x48(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        PitchMax;                                          // 0x4C(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        VolumeMin;                                         // 0x50(0x4)(Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        VolumeMax;                                         // 0x54(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeModulator* GetDefaultObj();

};

// 0x28 (0x70 - 0x48)
// Class Engine.SoundNodeOscillator
class USoundNodeOscillator : public USoundNode
{
public:
	uint8                                        bModulateVolume : 1;                               // Mask: 0x1, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bModulatePitch : 1;                                // Mask: 0x2, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31B : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40DD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AmplitudeMin;                                      // 0x4C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        AmplitudeMax;                                      // 0x50(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FrequencyMin;                                      // 0x54(0x4)(Edit, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        FrequencyMax;                                      // 0x58(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OffsetMin;                                         // 0x5C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	float                                        OffsetMax;                                         // 0x60(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	float                                        CenterMin;                                         // 0x64(0x4)(BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        CenterMax;                                         // 0x68(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40DE[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeOscillator* GetDefaultObj();

};

// 0x8 (0x60 - 0x58)
// Class Engine.SoundNodeParamCrossFade
class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
{
public:
	class FName                                  ParamName;                                         // 0x58(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeParamCrossFade* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeQualityLevel
class USoundNodeQualityLevel : public USoundNode
{
public:
	int32                                        CookedQualityLevelIndex;                           // 0x48(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E0[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeQualityLevel* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Engine.SoundNodeSoundClass
class USoundNodeSoundClass : public USoundNode
{
public:
	class USoundClass*                           SoundClassOverride;                                // 0x48(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E1[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundNodeSoundClass* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeSwitch
class USoundNodeSwitch : public USoundNode
{
public:
	class FName                                  IntParameterName;                                  // 0x48(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeSwitch* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Engine.SoundNodeWaveParam
class USoundNodeWaveParam : public USoundNode
{
public:
	class FName                                  WaveParameterName;                                 // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeWaveParam* GetDefaultObj();

};

// 0x50 (0x98 - 0x48)
// Class Engine.SoundNodeWavePlayer
class USoundNodeWavePlayer : public USoundNodeAssetReferencer
{
public:
	TSoftObjectPtr<class USoundWave>             SoundWaveAssetPtr;                                 // 0x48(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class USoundWave*                            SoundWave;                                         // 0x78(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	uint8                                        BitPad_31C : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bLooping : 1;                                      // Mask: 0x2, PropSize: 0x10x80(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        BitPad_31D : 6;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40E4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bForceSoftLoad : 1;                                // Mask: 0x1, PropSize: 0x10x88(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_31E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_40E6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundNodeRandom*                      SoftLoadParent;                                    // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundNodeWavePlayer* GetDefaultObj();

};

// 0x18 (0x480 - 0x468)
// Class Engine.SoundSourceBus
class USoundSourceBus : public USoundWave
{
public:
	enum class ESourceBusChannels                SourceBusChannels;                                 // 0x468(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        SourceBusDuration;                                 // 0x46C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioBus*                             AudioBus;                                          // 0x470(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	uint8                                        bAutoDeactivateWhenSilent : 1;                     // Mask: 0x1, PropSize: 0x10x478(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40E9[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundSourceBus* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.SoundSubmixBase
class USoundSubmixBase : public UObject
{
public:
	bool                                         bAutoDisable;                                      // 0x28(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_40ED[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AutoDisableTime;                                   // 0x2C(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USoundSubmixBase*>              ChildSubmixes;                                     // 0x30(0x10)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundSubmixBase* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Engine.SoundSubmixWithParentBase
class USoundSubmixWithParentBase : public USoundSubmixBase
{
public:
	class USoundSubmixBase*                      ParentSubmix;                                      // 0x40(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundSubmixWithParentBase* GetDefaultObj();

};

// 0x180 (0x1C8 - 0x48)
// Class Engine.SoundSubmix
class USoundSubmix : public USoundSubmixWithParentBase
{
public:
	uint8                                        bMuteWhenBackgrounded : 1;                         // Mask: 0x1, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_325 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4103[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class USoundEffectSubmixPreset*>      SubmixEffectChain;                                 // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundfieldEncodingSettingsBase*       AmbisonicsPluginSettings;                          // 0x60(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        EnvelopeFollowerAttackTime;                        // 0x68(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        EnvelopeFollowerReleaseTime;                       // 0x6C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        OutputVolume;                                      // 0x70(0x4)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        WetLevel;                                          // 0x74(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        DryLevel;                                          // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4104[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSoundModulationDestinationSettings   OutputVolumeModulation;                            // 0x80(0x60)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoundModulationDestinationSettings   WetLevelModulation;                                // 0xE0(0x60)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoundModulationDestinationSettings   DryLevelModulation;                                // 0x140(0x60)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSendToAudioLink : 1;                              // Mask: 0x1, PropSize: 0x10x1A0(0x1)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_326 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4105[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UAudioLinkSettingsAbstract*            AudioLinkSettings;                                 // 0x1A8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	FMulticastInlineDelegateProperty_            OnSubmixRecordedFileDone;                          // 0x1B0(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4106[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class USoundSubmix* GetDefaultObj();

	class UObject* StopSpectralAnalysis();
	class UObject* StopRecordingOutput(enum class EAudioRecordingExportType ExportType, class FString* Name, class FString* Path, class USoundWave* ExistingSoundWaveToOverwrite);
	class UObject* StopEnvelopeFollowing();
	class UObject* StartSpectralAnalysis(enum class EFFTSize* FFTSize, enum class EFFTPeakInterpolationMethod* InterpolationMethod, enum class EFFTWindowType* WindowType, float* HopSize, enum class EAudioSpectrumType SpectrumType);
	class UObject* StartRecordingOutput(float ExpectedDuration);
	class UObject* StartEnvelopeFollowing();
	class UObject* SetSubmixWetLevel(float InWetLevel);
	class UObject* SetSubmixOutputVolume(float InOutputVolume);
	class UObject* SetSubmixDryLevel(float InDryLevel);
	class UObject* RemoveSpectralAnalysisDelegate(FDelegateProperty_ OnSubmixSpectralAnalysisBP);
	class UObject* AddSpectralAnalysisDelegate(const TArray<struct FSoundSubmixSpectralAnalysisBandSettings>& InBandSettings, FDelegateProperty_ OnSubmixSpectralAnalysisBP, float UpdateRate, float* DecibelNoiseFloor, bool* bDoNormalize, bool* bDoAutoRange, float* AutoRangeAttackTime, float* AutoRangeReleaseTime);
	class UObject* AddEnvelopeFollowerDelegate(FDelegateProperty_* OnSubmixEnvelopeBP);
};

// 0x28 (0x70 - 0x48)
// Class Engine.SoundfieldSubmix
class USoundfieldSubmix : public USoundSubmixWithParentBase
{
public:
	class FName                                  SoundfieldEncodingFormat;                          // 0x48(0x8)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundfieldEncodingSettingsBase*       EncodingSettings;                                  // 0x50(0x8)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USoundfieldEffectBase*>         SoundfieldEffectChain;                             // 0x58(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EncodingSettingsClass;                             // 0x68(0x8)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundfieldSubmix* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class Engine.EndpointSubmix
class UEndpointSubmix : public USoundSubmixBase
{
public:
	class FName                                  EndpointType;                                      // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	class UClass*                                EndpointSettingsClass;                             // 0x48(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UAudioEndpointSettingsBase*            EndpointSettings;                                  // 0x50(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UEndpointSubmix* GetDefaultObj();

};

// 0x38 (0x78 - 0x40)
// Class Engine.SoundfieldEndpointSubmix
class USoundfieldEndpointSubmix : public USoundSubmixBase
{
public:
	class FName                                  SoundfieldEndpointType;                            // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EndpointSettingsClass;                             // 0x48(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundfieldEndpointSettingsBase*       EndpointSettings;                                  // 0x50(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                EncodingSettingsClass;                             // 0x58(0x8)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class USoundfieldEncodingSettingsBase*       EncodingSettings;                                  // 0x60(0x8)(ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class USoundfieldEffectBase*>         SoundfieldEffectChain;                             // 0x68(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class USoundfieldEndpointSubmix* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.SplineMeshActor
class ASplineMeshActor : public AActor
{
public:
	class USplineMeshComponent*                  SplineMeshComponent;                               // 0x4C8(0x8)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class ASplineMeshActor* GetDefaultObj();

};

// 0x1A0 (0x268 - 0xC8)
// Class Engine.StaticMesh
class UStaticMesh : public UStreamableRenderAsset
{
public:
	uint8                                        Pad_4119[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	struct FPerQualityLevelInt                   MinQualityLevelLOD;                                // 0xE8(0x68)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FPerPlatformInt                       MinLOD;                                            // 0x150(0x4)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig)
	uint8                                        Pad_411A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStaticMaterial>               StaticMaterials;                                   // 0x158(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	float                                        LightmapUVDensity;                                 // 0x168(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        LightMapResolution;                                // 0x16C(0x4)(ConstParm, ExportObject, Parm, ReturnParm)
	int32                                        LightMapCoordinateIndex;                           // 0x170(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	float                                        DistanceFieldSelfShadowBias;                       // 0x174(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class UBodySetup*                            BodySetup;                                         // 0x178(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)
	int32                                        LODForCollision;                                   // 0x180(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bGenerateMeshDistanceField : 1;                    // Mask: 0x1, PropSize: 0x10x184(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bStripComplexCollisionForConsole : 1;              // Mask: 0x2, PropSize: 0x10x184(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHasNavigationData : 1;                            // Mask: 0x4, PropSize: 0x10x184(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportUniformlyDistributedSampling : 1;          // Mask: 0x8, PropSize: 0x10x184(0x1)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        bSupportPhysicalMaterialMasks : 1;                 // Mask: 0x10, PropSize: 0x10x184(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bSupportRayTracing : 1;                            // Mask: 0x20, PropSize: 0x10x184(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bForceIntoHLOD : 1;                                // Mask: 0x40, PropSize: 0x10x184(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bDoFastBuild : 1;                                  // Mask: 0x80, PropSize: 0x10x184(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsBuiltAtRuntime : 1;                             // Mask: 0x1, PropSize: 0x10x185(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_329 : 1;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        bAllowCPUAccess : 1;                               // Mask: 0x4, PropSize: 0x10x185(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bSupportGpuUniformlyDistributedSampling : 1;       // Mask: 0x8, PropSize: 0x10x185(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_32A : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_411D[0x22];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class UStaticMeshSocket*>             Sockets;                                           // 0x1A8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	uint8                                        Pad_411E[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PositiveBoundsExtension;                           // 0x1C8(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FVector                               NegativeBoundsExtension;                           // 0x1E0(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBoxSphereBounds                      ExtendedBounds;                                    // 0x1F8(0x38)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        ElementToIgnoreForTexFactor;                       // 0x230(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_411F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UAssetUserData*>                AssetUserData;                                     // 0x238(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UNavCollisionBase*                     NavCollision;                                      // 0x248(0x8)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, SubobjectReference)
	float                                        StreamingDistanceMultiplier;                       // 0x250(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	int32                                        FarOverrideLOD;                                    // 0x254(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bReallyDoesWantLightMapUVs : 1;                    // Mask: 0x1, PropSize: 0x10x258(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bHighQualityDistanceField : 1;                     // Mask: 0x2, PropSize: 0x10x258(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCastFarShadow : 1;                                // Mask: 0x4, PropSize: 0x10x258(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        bConsoleDropLOD0 : 1;                              // Mask: 0x8, PropSize: 0x10x258(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bConsoleDropLOD0onLowMemPlatform : 1;              // Mask: 0x10, PropSize: 0x10x258(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bAllowLODStreaming : 1;                            // Mask: 0x20, PropSize: 0x10x258(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bPreventLODStreamingOnWindows : 1;                 // Mask: 0x40, PropSize: 0x10x258(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTriReductions : 1;                          // Mask: 0x80, PropSize: 0x10x258(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bForceAllowMeshStreaming : 1;                      // Mask: 0x1, PropSize: 0x10x259(0x1)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_32B : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4121[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPerPlatformBool                      bRemovingLOD0FromCook;                             // 0x25C(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4122[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CustomTag;                                         // 0x260(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class UStaticMesh* GetDefaultObj();

	void SetStaticMaterials(TArray<struct FStaticMaterial>* InStaticMaterials);
	TMap<enum class EPerQualityLevels, int32> SetMinLODForQualityLevels(int32 Default);
	void SetMinimumLODForPlatforms(TMap<class FName, int32> PlatformMinimumLODs);
	void SetMinimumLODForPlatform(class FName PlatformName, int32* InMinLOD);
	void SetBodySetup(class UBodySetup** InBodySetup);
	void RemoveSocket(class UStaticMeshSocket* Socket);
	int32 GetStaticMeshDescription(class UStaticMeshDescription* ReturnValue);
	void GetStaticMaterials(const TArray<struct FStaticMaterial>& ReturnValue);
	void GetSocketsByTag(class FString* InSocketTag, const TArray<class UStaticMeshSocket*>& ReturnValue);
	int32 GetNumTriangles(int32 ReturnValue);
	void GetNumSections(int32* InLOD, int32 ReturnValue);
	void GetNumLODs(int32 ReturnValue);
	TMap<enum class EPerQualityLevels, int32> GetMinLODForQualityLevels(int32 Default);
	TMap<class FName, int32> GetMinimumLODForQualityLevels();
	void GetMinimumLODForQualityLevel(class FName QualityLevel, int32 ReturnValue);
	void GetMinimumLODForPlatforms(TMap<class FName, int32> PlatformMinimumLODs);
	void GetMinimumLODForPlatform(class FName PlatformName, int32 ReturnValue);
	void GetMaterialIndex(class FName* MaterialSlotName, int32 ReturnValue);
	void GetMaterial(int32 MaterialIndex, class UMaterialInterface* ReturnValue);
	void GetBounds(const struct FBoxSphereBounds& ReturnValue);
	void GetBoundingBox(const struct FBox& ReturnValue);
	void GetBodySetup(class UBodySetup* ReturnValue);
	void FindSocket(class FName InSocketName, class UStaticMeshSocket* ReturnValue);
	void CreateStaticMeshDescription(class UObject* Outer, class UStaticMeshDescription* ReturnValue);
	void BuildFromStaticMeshDescriptions(const TArray<class UStaticMeshDescription*>& StaticMeshDescriptions, bool bBuildSimpleCollision, bool bFastBuild);
	void AddSocket(class UStaticMeshSocket* Socket);
	void AddMaterial(class UMaterialInterface* Material, class FName ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.StaticMeshDescriptionBulkData
class UStaticMeshDescriptionBulkData : public UMeshDescriptionBaseBulkData
{
public:

	static class UClass* StaticClass();
	static class UStaticMeshDescriptionBulkData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.StereoLayerFunctionLibrary
class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UStereoLayerFunctionLibrary* GetDefaultObj();

	void ShowSplashScreen();
	void SetSplashScreen(class UTexture** Texture, struct FVector2D* Scale, const struct FVector& Offset, bool* bShowLoadingMovie, bool* bShowOnSet);
	void HideSplashScreen();
	void EnableAutoLoadingSplashScreen(bool* InAutoShowEnabled);
};

// 0x0 (0xB8 - 0xB8)
// Class Engine.ActorTextureStreamingBuildDataComponent
class UActorTextureStreamingBuildDataComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UActorTextureStreamingBuildDataComponent* GetDefaultObj();

};

// 0x50 (0x518 - 0x4C8)
// Class Engine.ServerStreamingLevelsVisibility
class AServerStreamingLevelsVisibility : public AActor
{
public:
	uint8                                        Pad_4126[0x50];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AServerStreamingLevelsVisibility* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.TextureMipDataProviderFactory
class UTextureMipDataProviderFactory : public UAssetUserData
{
public:

	static class UClass* StaticClass();
	static class UTextureMipDataProviderFactory* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.AudioSubsystemCollectionRoot
class UAudioSubsystemCollectionRoot : public UObject
{
public:
	uint8                                        Pad_4128[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UAudioSubsystemCollectionRoot* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.SubsystemBlueprintLibrary
class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USubsystemBlueprintLibrary* GetDefaultObj();

	void GetWorldSubsystem(class UObject** ContextObject, class UClass* Class, class UWorldSubsystem* ReturnValue);
	void GetLocalPlayerSubSystemFromPlayerController(class APlayerController** PlayerController, class UClass* Class, class ULocalPlayerSubsystem* ReturnValue);
	void GetLocalPlayerSubsystem(class UObject** ContextObject, class UClass* Class, class ULocalPlayerSubsystem* ReturnValue);
	void GetGameInstanceSubsystem(class UObject** ContextObject, class UClass* Class, class UGameInstanceSubsystem* ReturnValue);
	void GetEngineSubsystem(class UClass* Class, class UEngineSubsystem* ReturnValue);
	void GetAudioEngineSubsystem(class UObject** ContextObject, class UClass* Class, class UAudioEngineSubsystem* ReturnValue);
};

// 0x0 (0x4C8 - 0x4C8)
// Class Engine.TargetPoint
class ATargetPoint : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATargetPoint* GetDefaultObj();

};

// 0x350 (0x378 - 0x28)
// Class Engine.AutomationTestSettings
class UAutomationTestSettings : public UObject
{
public:
	TArray<class FString>                        EngineTestModules;                                 // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        EditorTestModules;                                 // 0x38(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	struct FSoftObjectPath                       AutomationTestmap;                                 // 0x48(0x20)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps;                         // 0x68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        AssetsToOpen;                                      // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        MapsToPIETest;                                     // 0x88(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseAllProjectMapsToPlayInPIE;                     // 0x98(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_412B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBuildPromotionTestSettings           BuildPromotionTest;                                // 0xA0(0x1F0)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FMaterialEditorPromotionSettings      MaterialEditorPromotionTest;                       // 0x290(0x30)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	struct FParticleEditorPromotionSettings      ParticleEditorPromotionTest;                       // 0x2C0(0x10)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBlueprintEditorPromotionSettings     BlueprintEditorPromotionTest;                      // 0x2D0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        TestLevelFolders;                                  // 0x300(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<struct FExternalToolDefinition>       ExternalTools;                                     // 0x310(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FEditorImportExportTestDefinition> ImportExportTestDefinitions;                       // 0x320(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FLaunchOnTestSettings>         LaunchOnSettings;                                  // 0x330(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FIntPoint                             DefaultScreenshotResolution;                       // 0x340(0x8)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        PIETestDuration;                                   // 0x348(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        DefaultInteractiveFramerate;                       // 0x34C(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        DefaultInteractiveFramerateWaitTime;               // 0x350(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        DefaultInteractiveFramerateDuration;               // 0x354(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<class FString>                        AutoRunConsoleCommands;                            // 0x358(0x10)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        AutoRunMapFilterWhitelist;                         // 0x368(0x10)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UAutomationTestSettings* GetDefaultObj();

};

// 0x78 (0xA0 - 0x28)
// Class Engine.TransactionDiffingTestObject
class UTransactionDiffingTestObject : public UObject
{
public:
	TArray<class FName>                          NamesArray;                                        // 0x28(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  AdditionalName;                                    // 0x38(0x8)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       ObjectsArray;                                      // 0x40(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UObject*                               AdditionalObject;                                  // 0x50(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<TSoftObjectPtr<class UObject>>        SoftObjectsArray;                                  // 0x58(0x10)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UObject>                AdditionalSoftObject;                              // 0x68(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        PropertyData;                                      // 0x98(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_412E[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTransactionDiffingTestObject* GetDefaultObj();

};

// 0x18 (0x1F0 - 0x1D8)
// Class Engine.Texture2DDynamic
class UTexture2DDynamic : public UTexture
{
public:
	uint8                                        Pad_412F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EPixelFormat                      Format;                                            // 0x1E0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	uint8                                        Pad_4130[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTexture2DDynamic* GetDefaultObj();

};

// 0x98 (0x270 - 0x1D8)
// Class Engine.TextureCubeArray
class UTextureCubeArray : public UTexture
{
public:
	uint8                                        Pad_4131[0x98];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureCubeArray* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Engine.TextureEncodingProjectSettings
class UTextureEncodingProjectSettings : public UDeveloperSettings
{
public:
	uint8                                        bFinalUsesRDO : 1;                                 // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        BitPad_32D : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4132[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int8                                         FinalRDOLambda;                                    // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureEncodeEffort              FinalEffortLevel;                                  // 0x3D(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureUniversalTiling           FinalUniversalTiling;                              // 0x3E(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_4133[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	uint8                                        bFastUsesRDO : 1;                                  // Mask: 0x1, PropSize: 0x10x40(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        BitPad_32E : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_4134[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int8                                         FastRDOLambda;                                     // 0x44(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureEncodeEffort              FastEffortLevel;                                   // 0x45(0x1)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureUniversalTiling           FastUniversalTiling;                               // 0x46(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureEncodeSpeed               CookUsesSpeed;                                     // 0x47(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	enum class ETextureEncodeSpeed               EditorUsesSpeed;                                   // 0x48(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)
	uint8                                        Pad_4135[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureEncodingProjectSettings* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Engine.TextureEncodingUserSettings
class UTextureEncodingUserSettings : public UDeveloperSettings
{
public:
	enum class ETextureEncodeSpeedOverride       ForceEncodeSpeed;                                  // 0x38(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4136[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureEncodingUserSettings* GetDefaultObj();

};

// 0x8 (0x290 - 0x288)
// Class Engine.TextureLightProfile
class UTextureLightProfile : public UTexture2D
{
public:
	float                                        Brightness;                                        // 0x288(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance)
	float                                        TextureMultiplier;                                 // 0x28C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UTextureLightProfile* GetDefaultObj();

};

// 0x20 (0x200 - 0x1E0)
// Class Engine.TextureRenderTarget2DArray
class UTextureRenderTarget2DArray : public UTextureRenderTarget
{
public:
	int32                                        SizeX;                                             // 0x1E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0x1E4(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	int32                                        Slices;                                            // 0x1E8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, GlobalConfig, InstancedReference, SubobjectReference)
	struct FLinearColor                          ClearColor;                                        // 0x1EC(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig)
	enum class EPixelFormat                      OverrideFormat;                                    // 0x1FC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHDR : 1;                                          // Mask: 0x1, PropSize: 0x10x1FD(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference)
	uint8                                        bForceLinearGamma : 1;                             // Mask: 0x2, PropSize: 0x10x1FD(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4137[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureRenderTarget2DArray* GetDefaultObj();

};

// 0x20 (0x200 - 0x1E0)
// Class Engine.TextureRenderTargetCube
class UTextureRenderTargetCube : public UTextureRenderTarget
{
public:
	int32                                        SizeX;                                             // 0x1E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	struct FLinearColor                          ClearColor;                                        // 0x1E4(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig)
	enum class EPixelFormat                      OverrideFormat;                                    // 0x1F4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHDR : 1;                                          // Mask: 0x1, PropSize: 0x10x1F5(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference)
	uint8                                        bForceLinearGamma : 1;                             // Mask: 0x2, PropSize: 0x10x1F5(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4139[0xA];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureRenderTargetCube* GetDefaultObj();

};

// 0x20 (0x200 - 0x1E0)
// Class Engine.TextureRenderTargetVolume
class UTextureRenderTargetVolume : public UTextureRenderTarget
{
public:
	int32                                        SizeX;                                             // 0x1E0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0x1E4(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	int32                                        SizeZ;                                             // 0x1E8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, GlobalConfig, InstancedReference)
	struct FLinearColor                          ClearColor;                                        // 0x1EC(0x10)(ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig)
	enum class EPixelFormat                      OverrideFormat;                                    // 0x1FC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHDR : 1;                                          // Mask: 0x1, PropSize: 0x10x1FD(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, GlobalConfig, InstancedReference)
	uint8                                        bForceLinearGamma : 1;                             // Mask: 0x2, PropSize: 0x10x1FD(0x1)(Edit, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        bHalfResolutionByQuality : 1;                      // Mask: 0x4, PropSize: 0x10x1FD(0x1)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_413B[0x2];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTextureRenderTargetVolume* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class Engine.TimelineTemplate
class UTimelineTemplate : public UObject
{
public:
	float                                        TimelineLength;                                    // 0x28(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETimelineLengthMode               LengthMode;                                        // 0x2C(0x1)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bAutoPlay : 1;                                     // Mask: 0x1, PropSize: 0x10x2D(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        bLoop : 1;                                         // Mask: 0x2, PropSize: 0x10x2D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        bReplicated : 1;                                   // Mask: 0x4, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIgnoreTimeDilation : 1;                           // Mask: 0x8, PropSize: 0x10x2D(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_32F : 4;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_413D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FTTEventTrack>                 EventTracks;                                       // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTTFloatTrack>                 FloatTracks;                                       // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTTVectorTrack>                VectorTracks;                                      // 0x50(0x10)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FTTLinearColorTrack>           LinearColorTracks;                                 // 0x60(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FBPVariableMetaDataEntry>      MetaDataArray;                                     // 0x70(0x10)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FGuid                                 TimelineGuid;                                      // 0x80(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETickingGroup                     TimelineTickGroup;                                 // 0x90(0x1)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_413F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  VariableName;                                      // 0x94(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class FName                                  DirectionPropertyName;                             // 0x9C(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  UpdateFunctionName;                                // 0xA4(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  FinishedFunctionName;                              // 0xAC(0x8)(BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4140[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTimelineTemplate* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.TriggerVolume
class ATriggerVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ATriggerVolume* GetDefaultObj();

};

// 0x50 (0xB8 - 0x68)
// Class Engine.UserDefinedEnum
class UUserDefinedEnum : public UEnum
{
public:
	TMap<class FName, class FText>               DisplayNameMap;                                    // 0x68(0x50)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UUserDefinedEnum* GetDefaultObj();

};

// 0x278 (0x2B0 - 0x38)
// Class Engine.UserInterfaceSettings
class UUserInterfaceSettings : public UDeveloperSettings
{
public:
	enum class ERenderFocusRule                  RenderFocusRule;                                   // 0x38(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4141[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TMap<enum class EMouseCursor, struct FHardwareCursorReference> HardwareCursors;                                   // 0x40(0x50)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<enum class EMouseCursor, struct FSoftClassPath> SoftwareCursors;                                   // 0x90(0x50)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        DefaultCursor;                                     // 0xE0(0x20)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        TextEditBeamCursor;                                // 0x100(0x20)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        CrosshairsCursor;                                  // 0x120(0x20)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        HandCursor;                                        // 0x140(0x20)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        GrabHandCursor;                                    // 0x160(0x20)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        GrabHandClosedCursor;                              // 0x180(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FSoftClassPath                        SlashedCircleCursor;                               // 0x1A0(0x20)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ApplicationScale;                                  // 0x1C0(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EUIScalingRule                    UIScaleRule;                                       // 0x1C4(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        Pad_4142[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSoftClassPath                        CustomScalingRuleClass;                            // 0x1C8(0x20)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FRuntimeFloatCurve                    UIScaleCurve;                                      // 0x1E8(0x88)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	bool                                         bAllowHighDPIInGameMode;                           // 0x270(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	uint8                                        Pad_4143[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FIntPoint                             DesignScreenSize;                                  // 0x274(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLoadWidgetsOnDedicatedServer;                     // 0x27C(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, SubobjectReference)
	bool                                         bAuthorizeAutomaticWidgetVariableCreation;         // 0x27D(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4145[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UObject*>                       CursorClasses;                                     // 0x280(0x10)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                CustomScalingRuleClassInstance;                    // 0x290(0x8)(Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UDPICustomScalingRule*                 CustomScalingRule;                                 // 0x298(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4147[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UUserInterfaceSettings* GetDefaultObj();

};

// 0x388 (0x3B0 - 0x28)
// Class Engine.Canvas
class UCanvas : public UObject
{
public:
	float                                        OrgX;                                              // 0x28(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        OrgY;                                              // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClipX;                                             // 0x30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	float                                        ClipY;                                             // 0x34(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FColor                                DrawColor;                                         // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        bCenterX : 1;                                      // Mask: 0x1, PropSize: 0x10x3C(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bCenterY : 1;                                      // Mask: 0x2, PropSize: 0x10x3C(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bNoSmooth : 1;                                     // Mask: 0x4, PropSize: 0x10x3C(0x1)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        BitPad_332 : 5;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_416E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SizeX;                                             // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, InstancedReference)
	int32                                        SizeY;                                             // 0x44(0x4)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
	uint8                                        Pad_416F[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlane                                ColorModulate;                                     // 0x50(0x20)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultTexture;                                    // 0x70(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	class UTexture2D*                            GradientTexture0;                                  // 0x78(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig)
	class UReporterGraph*                        ReporterGraph;                                     // 0x80(0x8)(ConstParm, BlueprintReadOnly, Net, Config, SubobjectReference)
	uint8                                        Pad_4170[0x328];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UCanvas* GetDefaultObj();

	struct FColor SetDrawColor();
	class FString K2_TextSize(struct FVector2D* Scale, const struct FVector2D& ReturnValue);
	class FString K2_StrLen(const struct FVector2D& ReturnValue);
	struct FVector K2_Project(const struct FVector& ReturnValue);
	class UTexture* K2_DrawTriangle(TArray<struct FCanvasUVTri>* Triangles);
	enum class EBlendMode K2_DrawTexture(struct FVector2D* ScreenPosition, float* Rotation, const struct FVector2D& PivotPoint);
	struct FLinearColor K2_DrawText(struct FVector2D* ScreenPosition, struct FVector2D* Scale, float* Kerning, struct FVector2D* ShadowOffset);
	struct FLinearColor K2_DrawPolygon(struct FVector2D* ScreenPosition, struct FVector2D* Radius);
	void K2_DrawMaterialTriangle(class UMaterialInterface** RenderMaterial, TArray<struct FCanvasUVTri>* Triangles);
	bool K2_DrawMaterial(class UMaterialInterface** RenderMaterial, struct FVector2D* ScreenPosition, float* Rotation, const struct FVector2D& PivotPoint);
	struct FLinearColor K2_DrawLine();
	enum class EBlendMode K2_DrawBoxEx(struct FVector2D* ScreenPosition);
	struct FLinearColor K2_DrawBox(struct FVector2D* ScreenPosition);
	struct FVector2D K2_DrawBorder(struct FVector2D* ScreenPosition, float* Rotation, const struct FVector2D& PivotPoint);
	struct FVector K2_Deproject(struct FVector2D* ScreenPosition);
	void IsPositionInFrontOfViewport(struct FVector* Location, bool ReturnValue);
	struct FVector2D BPDrawTextWrapped(class UFont** InFont, class FString* InText, float* X, float* Y, float XScale, float YScale, float ReturnValue);
	bool BPDrawTextCentered(class UFont** InFont, class FString* InText, float* X, float* Y, float XScale, float YScale, float ReturnValue);
};

// 0x108 (0x130 - 0x28)
// Class Engine.Console
class UConsole : public UObject
{
public:
	uint8                                        Pad_4171[0x10];                                    // Fixing Size After Last Property  > TateDumper <
	class ULocalPlayer*                          ConsoleTargetPlayer;                               // 0x38(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultTexture_Black;                              // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2D*                            DefaultTexture_White;                              // 0x48(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4172[0x18];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        HistoryBuffer;                                     // 0x68(0x10)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4173[0xB8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UConsole* GetDefaultObj();

};

// 0x140 (0x168 - 0x28)
// Class Engine.InputSettings
class UInputSettings : public UObject
{
public:
	TArray<struct FInputAxisConfigEntry>         AxisConfig;                                        // 0x28(0x10)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FPerPlatformSettings                  PlatformSettings;                                  // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, GlobalConfig, DuplicateTransient)
	uint8                                        bAltEnterTogglesFullscreen : 1;                    // Mask: 0x1, PropSize: 0x10x48(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bF11TogglesFullscreen : 1;                         // Mask: 0x2, PropSize: 0x10x48(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bUseMouseForTouch : 1;                             // Mask: 0x4, PropSize: 0x10x48(0x1)(Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableMouseSmoothing : 1;                         // Mask: 0x8, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableFOVScaling : 1;                             // Mask: 0x10, PropSize: 0x10x48(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bCaptureMouseOnLaunch : 1;                         // Mask: 0x20, PropSize: 0x10x48(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableLegacyInputScales : 1;                      // Mask: 0x40, PropSize: 0x10x48(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableMotionControls : 1;                         // Mask: 0x80, PropSize: 0x10x48(0x1)(Edit, ConstParm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bFilterInputByPlatformUser : 1;                    // Mask: 0x1, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableInputDeviceSubsystem : 1;                   // Mask: 0x2, PropSize: 0x10x49(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bShouldFlushPressedKeysOnViewportFocusLost : 1;    // Mask: 0x4, PropSize: 0x10x49(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableDynamicComponentInputBinding : 1;           // Mask: 0x8, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bAlwaysShowTouchInterface : 1;                     // Mask: 0x10, PropSize: 0x10x49(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bShowConsoleOnFourFingerTap : 1;                   // Mask: 0x20, PropSize: 0x10x49(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        bEnableGestureRecognizer : 1;                      // Mask: 0x40, PropSize: 0x10x49(0x1)(ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        bUseAutocorrect : 1;                               // Mask: 0x80, PropSize: 0x10x49(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_417B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ExcludedAutocorrectOS;                             // 0x50(0x10)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        ExcludedAutocorrectCultures;                       // 0x60(0x10)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class FString>                        ExcludedAutocorrectDeviceModels;                   // 0x70(0x10)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EMouseCaptureMode                 DefaultViewportMouseCaptureMode;                   // 0x80(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	enum class EMouseLockMode                    DefaultViewportMouseLockMode;                      // 0x81(0x1)(Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_417C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FOVScale;                                          // 0x84(0x4)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	float                                        DoubleClickTime;                                   // 0x88(0x4)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_417D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FInputActionKeyMapping>        ActionMappings;                                    // 0x90(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FInputAxisKeyMapping>          AxisMappings;                                      // 0xA0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TArray<struct FInputActionSpeechMapping>     SpeechMappings;                                    // 0xB0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftClassPtr<class UPlayerInput>            DefaultPlayerInputClass;                           // 0xC0(0x30)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TSoftClassPtr<class UInputComponent>         DefaultInputComponentClass;                        // 0xF0(0x30)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FSoftObjectPath                       DefaultTouchInterface;                             // 0x120(0x20)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	TArray<struct FKey>                          ConsoleKeys;                                       // 0x140(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_417E[0x18];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UInputSettings* GetDefaultObj();

	void SaveKeyMappings();
	bool RemoveAxisMapping();
	bool RemoveActionMapping();
	void GetInputSettings(class UInputSettings* ReturnValue);
	TArray<class FName> GetAxisNames();
	TArray<struct FInputAxisKeyMapping> GetAxisMappingByName();
	void GetActionNames(const TArray<class FName>& ActionNames);
	TArray<struct FInputActionKeyMapping> GetActionMappingByName();
	void ForceRebuildKeymaps();
	bool AddAxisMapping();
	bool AddActionMapping();
};

// 0x28 (0x68 - 0x40)
// Class Engine.InputPlatformSettings
class UInputPlatformSettings : public UPlatformSettings
{
public:
	int32                                        MaxTriggerFeedbackPosition;                        // 0x40(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTriggerFeedbackStrength;                        // 0x44(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTriggerVibrationTriggerPosition;                // 0x48(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTriggerVibrationFrequency;                      // 0x4C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MaxTriggerVibrationAmplitude;                      // 0x50(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_417F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FHardwareDeviceIdentifier>     HardwareDevices;                                   // 0x58(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)

	static class UClass* StaticClass();
	static class UInputPlatformSettings* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.VectorFieldVolume
class AVectorFieldVolume : public AActor
{
public:
	class UVectorFieldComponent*                 VectorFieldComponent;                              // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, SubobjectReference)

	static class UClass* StaticClass();
	static class AVectorFieldVolume* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Engine.TireType
class UTireType : public UDataAsset
{
public:
	float                                        FrictionScale;                                     // 0x30(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4180[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UTireType* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.VisualLoggerAutomationTests
class UVisualLoggerAutomationTests : public UObject
{
public:

	static class UClass* StaticClass();
	static class UVisualLoggerAutomationTests* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.VisualLoggerFilterVolume
class AVisualLoggerFilterVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AVisualLoggerFilterVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.VisualLoggerKismetLibrary
class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UVisualLoggerKismetLibrary* GetDefaultObj();

	void RedirectVislog(class UObject* SourceOwner, class UObject* DestinationOwner);
	class UObject* LogText(class FString* Text, class FName LogCategory, bool bAddToMessageLog);
	float LogSegment(class FString* Text, const struct FLinearColor& ObjectColor, class FName CategoryName, bool bAddToMessageLog);
	class UObject* LogLocation(struct FVector* Location, class FString* Text, const struct FLinearColor& ObjectColor, float* Radius, class FName LogCategory, bool bAddToMessageLog);
	class UObject* LogBox(const struct FBox& BoxShape, class FString* Text, const struct FLinearColor& ObjectColor, class FName LogCategory, bool bAddToMessageLog);
	bool EnableRecording();
};

// 0x10 (0x80 - 0x70)
// Class Engine.VoiceChannel
class UVoiceChannel : public UChannel
{
public:
	uint8                                        Pad_4188[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVoiceChannel* GetDefaultObj();

};

// 0x40 (0xF8 - 0xB8)
// Class Engine.VOIPTalker
class UVOIPTalker : public UActorComponent
{
public:
	struct FVoiceSettings                        Settings;                                          // 0xB8(0x18)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4189[0x28];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVOIPTalker* GetDefaultObj();

	void RegisterWithPlayerState(class APlayerState* OwningState);
	void GetVoiceLevel(float ReturnValue);
	void CreateTalkerForPlayer(class APlayerState* OwningState, class UVOIPTalker* ReturnValue);
	void BPOnTalkingEnd();
	class UAudioComponent* BPOnTalkingBegin();
};

// 0x0 (0x28 - 0x28)
// Class Engine.VOIPStatics
class UVOIPStatics : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UVOIPStatics* GetDefaultObj();

	void SetMicThreshold(float InThreshold);
};

// 0xA8 (0x280 - 0x1D8)
// Class Engine.VolumeTexture
class UVolumeTexture : public UTexture
{
public:
	uint8                                        Pad_418C[0x98];                                    // Fixing Size After Last Property  > TateDumper <
	enum class ETextureAddress                   AddressMode;                                       // 0x270(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference)
	uint8                                        Pad_418D[0xF];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVolumeTexture* GetDefaultObj();

};

// 0x8 (0x520 - 0x518)
// Class Engine.VolumetricLightmapDensityVolume
class AVolumetricLightmapDensityVolume : public AVolume
{
public:
	struct FInt32Interval                        AllowedMipLevelRange;                              // 0x518(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AVolumetricLightmapDensityVolume* GetDefaultObj();

};

// 0x18 (0x2A0 - 0x288)
// Class Engine.LightMapVirtualTexture2D
class ULightMapVirtualTexture2D : public UTexture2D
{
public:
	TArray<int8>                                 TypeToLayer;                                       // 0x288(0x10)(Edit, BlueprintVisible, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_418E[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ULightMapVirtualTexture2D* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class Engine.RuntimeVirtualTexture
class URuntimeVirtualTexture : public UObject
{
public:
	int32                                        TileCount;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference)
	int32                                        TileSize;                                          // 0x2C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, GlobalConfig)
	int32                                        TileBorderSize;                                    // 0x30(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	enum class ERuntimeVirtualTextureMaterialType MaterialType;                                      // 0x34(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         bCompressTextures;                                 // 0x35(0x1)(Edit, ConstParm, BlueprintVisible, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bUseLowQualityCompression;                         // 0x36(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bClearTextures;                                    // 0x37(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSinglePhysicalSpace;                              // 0x38(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrivateSpace;                                     // 0x39(0x1)(Edit, ExportObject, Net, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bAdaptive;                                         // 0x3A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bContinuousUpdate;                                 // 0x3B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        RemoveLowMips;                                     // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ETextureGroup                     LODGroup;                                          // 0x40(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference)
	uint8                                        Pad_4191[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TileCount_LowQuality;                              // 0x44(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Size;                                              // 0x48(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config)
	uint8                                        Pad_4192[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class URuntimeVirtualTextureStreamingProxy*  StreamingTexture;                                  // 0x50(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4193[0x88];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URuntimeVirtualTexture* GetDefaultObj();

	void GetTileSize(int32 ReturnValue);
	void GetTileCount(int32 ReturnValue);
	void GetTileBorderSize(int32 ReturnValue);
	void GetSize(int32 ReturnValue);
	void GetPageTableSize(int32 ReturnValue);
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.RuntimeVirtualTextureVolume
class ARuntimeVirtualTextureVolume : public AActor
{
public:
	class URuntimeVirtualTextureComponent*       VirtualTextureComponent;                           // 0x4C8(0x8)(Edit, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ARuntimeVirtualTextureVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.VirtualTexture
class UVirtualTexture : public UObject
{
public:

	static class UClass* StaticClass();
	static class UVirtualTexture* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.LightMapVirtualTexture
class ULightMapVirtualTexture : public UVirtualTexture
{
public:

	static class UClass* StaticClass();
	static class ULightMapVirtualTexture* GetDefaultObj();

};

// 0x8 (0x290 - 0x288)
// Class Engine.RuntimeVirtualTextureStreamingProxy
class URuntimeVirtualTextureStreamingProxy : public UTexture2D
{
public:
	uint8                                        Pad_4195[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class URuntimeVirtualTextureStreamingProxy* GetDefaultObj();

};

// 0x18 (0x2A0 - 0x288)
// Class Engine.VirtualTexture2D
class UVirtualTexture2D : public UTexture2D
{
public:
	struct FVirtualTextureBuildSettings          Settings;                                          // 0x288(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnInstance, SubobjectReference)
	bool                                         bContinuousUpdate;                                 // 0x290(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bSinglePhysicalSpace;                              // 0x291(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4196[0xE];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UVirtualTexture2D* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.VirtualTextureBuilder
class UVirtualTextureBuilder : public UObject
{
public:
	class UVirtualTexture2D*                     Texture;                                           // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst)
	uint64                                       BuildHash;                                         // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UVirtualTextureBuilder* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Engine.VirtualTexturePoolConfig
class UVirtualTexturePoolConfig : public UObject
{
public:
	int32                                        DefaultSizeInMegabyte;                             // 0x28(0x4)(BlueprintVisible, Net, Parm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4197[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVirtualTextureSpacePoolConfig> Pools;                                             // 0x30(0x10)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, SubobjectReference)

	static class UClass* StaticClass();
	static class UVirtualTexturePoolConfig* GetDefaultObj();

};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.WindDirectionalSource
class AWindDirectionalSource : public AInfo
{
public:
	class UWindDirectionalSourceComponent*       Component;                                         // 0x4C8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)

	static class UClass* StaticClass();
	static class AWindDirectionalSource* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class Engine.WorldComposition
class UWorldComposition : public UObject
{
public:
	uint8                                        Pad_4198[0x20];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<class ULevelStreaming*>               TilesStreaming;                                    // 0x48(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       TilesStreamingTimeThreshold;                       // 0x58(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bLoadAllTilesDuringCinematic;                      // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bRebaseOriginIn3DSpace;                            // 0x61(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_4199[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RebaseOriginDistance;                              // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<struct FEditorTileInitialState>       TileInitialState;                                  // 0x68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TArray<class ATileStreamingVolume*>          TileVolumes;                                       // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	double                                       LastTimeSwitchedContainedVolumes;                  // 0x88(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_419A[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldComposition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionBlueprintLibrary
class UWorldPartitionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionBlueprintLibrary* GetDefaultObj();

	void UnpinActors(const TArray<struct FGuid>& InActorsToUnpin);
	void UnloadActors(const TArray<struct FGuid>& InActorsToUnload);
	void PinActors(const TArray<struct FGuid>& InActorsToPin);
	void LoadActors(const TArray<struct FGuid>& InActorsToLoad);
	void GetRuntimeWorldBounds(const struct FBox& ReturnValue);
	void GetIntersectingActorDescs(struct FBox* InBox, const TArray<struct FActorDesc>& OutActorDescs, bool ReturnValue);
	void GetEditorWorldBounds(const struct FBox& ReturnValue);
	void GetActorDescs(const TArray<struct FActorDesc>& OutActorDescs, bool ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class Engine.ActorDescContainer
class UActorDescContainer : public UObject
{
public:
	class UWorld*                                World;                                             // 0x28(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UActorDescContainer* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Engine.ContentBundleDescriptor
class UContentBundleDescriptor : public UObject
{
public:
	class FString                                DisplayName;                                       // 0x28(0x10)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient)
	struct FColor                                DebugColor;                                        // 0x38(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FGuid                                 Guid;                                              // 0x3C(0x10)(Edit, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_419F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PackageRoot;                                       // 0x50(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UContentBundleDescriptor* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ContentBundleUnsavedActorMonitor
class UContentBundleUnsavedActorMonitor : public UObject
{
public:

	static class UClass* StaticClass();
	static class UContentBundleUnsavedActorMonitor* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Engine.ContentBundleEngineSubsystem
class UContentBundleEngineSubsystem : public UEngineSubsystem
{
public:
	uint8                                        Pad_41A0[0x70];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContentBundleEngineSubsystem* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Engine.ContentBundleManager
class UContentBundleManager : public UObject
{
public:
	uint8                                        Pad_41A1[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UContentBundleManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.ContentBundleDuplicateForPIEHelper
class UContentBundleDuplicateForPIEHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class UContentBundleDuplicateForPIEHelper* GetDefaultObj();

};

// 0x2E8 (0x7B0 - 0x4C8)
// Class Engine.WorldDataLayers
class AWorldDataLayers : public AInfo
{
public:
	uint8                                        Pad_41A4[0xA0];                                    // Fixing Size After Last Property  > TateDumper <
	TSet<class UDataLayerInstance*>              DataLayerInstances;                                // 0x568(0x50)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, TWeakObjectPtr<class UDataLayerInstance>> DeprecatedDataLayerNameToDataLayerInstance;        // 0x5B8(0x50)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<class UDataLayer*>                      WorldDataLayers;                                   // 0x608(0x50)(Edit, ConstParm, DisableEditOnTemplate, SubobjectReference)
	uint8                                        Pad_41A5[0x158];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AWorldDataLayers* GetDefaultObj();

	void OnDataLayerRuntimeStateChanged(class UDataLayerInstance* InDataLayer, enum class EDataLayerRuntimeState InState);
};

// 0x30 (0x58 - 0x28)
// Class Engine.DataLayer
class UDataLayer : public UObject
{
public:
	class FName                                  DataLayerLabel;                                    // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        bIsRuntime : 1;                                    // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        BitPad_334 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41A9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	enum class EDataLayerRuntimeState            InitialRuntimeState;                               // 0x34(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_41AA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                DebugColor;                                        // 0x38(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataLayer*                            Parent;                                            // 0x40(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	TArray<class UDataLayer*>                    Children;                                          // 0x48(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UDataLayer* GetDefaultObj();

	void IsVisible(bool ReturnValue);
	void IsRuntime(bool ReturnValue);
	void IsInitiallyVisible(bool ReturnValue);
	void IsInitiallyActive(bool ReturnValue);
	void IsEffectiveVisible(bool ReturnValue);
	void IsDynamicallyLoaded(bool ReturnValue);
	void GetInitialState(enum class EDataLayerState ReturnValue);
	void GetInitialRuntimeState(enum class EDataLayerRuntimeState ReturnValue);
	void GetDebugColor(const struct FColor& ReturnValue);
	void GetDataLayerLabel(class FName ReturnValue);
	void Equals(struct FActorDataLayer* ActorDataLayer, bool ReturnValue);
};

// 0x8 (0x30 - 0x28)
// Class Engine.DataLayerAsset
class UDataLayerAsset : public UObject
{
public:
	enum class EDataLayerType                    DataLayerType;                                     // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41AD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                DebugColor;                                        // 0x2C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UDataLayerAsset* GetDefaultObj();

	void IsRuntime(bool ReturnValue);
	void GetType(enum class EDataLayerType ReturnValue);
	void GetDebugColor(const struct FColor& ReturnValue);
};

// 0x20 (0x48 - 0x28)
// Class Engine.DataLayerInstance
class UDataLayerInstance : public UObject
{
public:
	enum class EDataLayerRuntimeState            InitialRuntimeState;                               // 0x28(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_41AF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataLayerInstance*                    Parent;                                            // 0x30(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	TArray<class UDataLayerInstance*>            Children;                                          // 0x38(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UDataLayerInstance* GetDefaultObj();

	void IsVisible(bool ReturnValue);
	void IsRuntime(bool ReturnValue);
	void IsInitiallyVisible(bool ReturnValue);
	void IsEffectiveVisible(bool ReturnValue);
	void GetType(enum class EDataLayerType ReturnValue);
	void GetInitialRuntimeState(enum class EDataLayerRuntimeState ReturnValue);
	void GetDebugColor(const struct FColor& ReturnValue);
};

// 0x8 (0x50 - 0x48)
// Class Engine.DataLayerInstanceWithAsset
class UDataLayerInstanceWithAsset : public UDataLayerInstance
{
public:
	class UDataLayerAsset*                       DataLayerAsset;                                    // 0x48(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, DisableEditOnInstance)

	static class UClass* StaticClass();
	static class UDataLayerInstanceWithAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.DataLayerLoadingPolicy
class UDataLayerLoadingPolicy : public UObject
{
public:

	static class UClass* StaticClass();
	static class UDataLayerLoadingPolicy* GetDefaultObj();

};

// 0x150 (0x180 - 0x30)
// Class Engine.DataLayerSubsystem
class UDataLayerSubsystem : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnDataLayerRuntimeStateChanged;                    // 0x30(0x10)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst)
	TSoftClassPtr<class UDataLayerLoadingPolicy> DataLayerLoadingPolicyClass;                       // 0x40(0x30)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UDataLayerLoadingPolicy*               DataLayerLoadingPolicy;                            // 0x70(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, SubobjectReference)
	uint8                                        Pad_41BF[0x108];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UDataLayerSubsystem* GetDefaultObj();

	void SetDataLayerStateByLabel(class FName InDataLayerLabel, enum class EDataLayerState InState);
	void SetDataLayerState(const struct FActorDataLayer& InDataLayer, enum class EDataLayerState InState);
	void SetDataLayerRuntimeStateByLabel(class FName InDataLayerLabel, enum class EDataLayerRuntimeState InState, bool bInIsRecursive);
	void SetDataLayerRuntimeState(const struct FActorDataLayer& InDataLayer, enum class EDataLayerRuntimeState InState, bool bInIsRecursive);
	void SetDataLayerInstanceRuntimeState(class UDataLayerAsset* InDataLayerAsset, enum class EDataLayerRuntimeState InState, bool bInIsRecursive);
	void GetLoadedDataLayerNames(TSet<class FName> ReturnValue);
	void GetDataLayerStateByLabel(class FName InDataLayerLabel, enum class EDataLayerState ReturnValue);
	void GetDataLayerState(const struct FActorDataLayer& InDataLayer, enum class EDataLayerState ReturnValue);
	void GetDataLayerRuntimeStateByLabel(class FName InDataLayerLabel, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayerRuntimeState(const struct FActorDataLayer& InDataLayer, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayerInstanceRuntimeState(class UDataLayerAsset* InDataLayerAsset, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayerInstanceFromAsset(class UDataLayerAsset* InDataLayerAsset, class UDataLayerInstance* ReturnValue);
	void GetDataLayerInstanceEffectiveRuntimeState(class UDataLayerAsset* InDataLayerAsset, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayerFromName(class FName InDataLayerName, class UDataLayerInstance* ReturnValue);
	void GetDataLayerFromLabel(class FName InDataLayerLabel, class UDataLayerInstance* ReturnValue);
	void GetDataLayerEffectiveRuntimeStateByLabel(class FName InDataLayerLabel, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayerEffectiveRuntimeState(const struct FActorDataLayer& InDataLayer, enum class EDataLayerRuntimeState ReturnValue);
	void GetDataLayer(const struct FActorDataLayer& InDataLayer, class UDataLayerInstance* ReturnValue);
	void GetActiveDataLayerNames(TSet<class FName> ReturnValue);
};

// 0x18 (0x60 - 0x48)
// Class Engine.DeprecatedDataLayerInstance
class UDeprecatedDataLayerInstance : public UDataLayerInstance
{
public:
	class FName                                  Label;                                             // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  DeprecatedDataLayerFName;                          // 0x50(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class EDataLayerType                    DataLayerType;                                     // 0x58(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FColor                                DebugColor;                                        // 0x5C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)

	static class UClass* StaticClass();
	static class UDeprecatedDataLayerInstance* GetDefaultObj();

};

// 0x10 (0x2D8 - 0x2C8)
// Class Engine.WorldPartitionDestructibleHLODComponent
class UWorldPartitionDestructibleHLODComponent : public USceneComponent
{
public:
	TArray<class FName>                          DestructibleActors;                                // 0x2C8(0x10)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldPartitionDestructibleHLODComponent* GetDefaultObj();

};

// 0x168 (0x440 - 0x2D8)
// Class Engine.WorldPartitionDestructibleHLODMeshComponent
class UWorldPartitionDestructibleHLODMeshComponent : public UWorldPartitionDestructibleHLODComponent
{
public:
	class UMaterialInterface*                    DestructibleHLODMaterial;                          // 0x2D8(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FWorldPartitionDestructibleHLODState  DestructibleHLODState;                             // 0x2E0(0x148)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              VisibilityMaterial;                                // 0x428(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UTexture2DDynamic*                     VisibilityTexture;                                 // 0x430(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41C2[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionDestructibleHLODMeshComponent* GetDefaultObj();

};

// 0x50 (0x518 - 0x4C8)
// Class Engine.WorldPartitionHLOD
class AWorldPartitionHLOD : public AActor
{
public:
	uint32                                       LODLevel;                                          // 0x4C8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRequireWarmup;                                    // 0x4CC(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UWorldPartitionRuntimeCell> SourceCell;                                        // 0x4D0(0x30)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class FName                                  SourceCellName;                                    // 0x500(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FGuid                                 SourceCellGuid;                                    // 0x508(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class AWorldPartitionHLOD* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.HLODBuilderSettings
class UHLODBuilderSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHLODBuilderSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.NullHLODBuilder
class UNullHLODBuilder : public UHLODBuilder
{
public:

	static class UClass* StaticClass();
	static class UNullHLODBuilder* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionDestructibleInHLODInterface
class IWorldPartitionDestructibleInHLODInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWorldPartitionDestructibleInHLODInterface* GetDefaultObj();

	void SetHLODDestructionTag(struct FWorldPartitionHLODDestructionTag* InDestructionTag);
	void GetHLODDestructionTag(const struct FWorldPartitionHLODDestructionTag& ReturnValue);
};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionDestructibleInHLODSupportLibrary
class UWorldPartitionDestructibleInHLODSupportLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionDestructibleInHLODSupportLibrary* GetDefaultObj();

	void DestroyInHLOD(TScriptInterface<class IWorldPartitionDestructibleInHLODInterface>* DestructibleInHLOD);
	float DamageInHLOD(TScriptInterface<class IWorldPartitionDestructibleInHLODInterface>* DestructibleInHLOD);
};

// 0x60 (0x88 - 0x28)
// Class Engine.HLODLayer
class UHLODLayer : public UObject
{
public:
	enum class EHLODLayerType                    LayerType;                                         // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                HLODBuilderClass;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UHLODBuilderSettings*                  HLODBuilderSettings;                               // 0x38(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, SubobjectReference)
	uint8                                        bIsSpatiallyLoaded : 1;                            // Mask: 0x1, PropSize: 0x10x40(0x1)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        BitPad_335 : 7;                                    // Fixing Bit-Field Size  > TateDumper <
	uint8                                        Pad_41C8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CellSize;                                          // 0x44(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	double                                       LoadingRange;                                      // 0x48(0x8)(Edit, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TSoftObjectPtr<class UHLODLayer>             ParentLayer;                                       // 0x50(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UClass*                                HLODModifierClass;                                 // 0x80(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UHLODLayer* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionHLODModifier
class UWorldPartitionHLODModifier : public UObject
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionHLODModifier* GetDefaultObj();

};

// 0xF8 (0x128 - 0x30)
// Class Engine.HLODSubsystem
class UHLODSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_41C9[0xF8];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UHLODSubsystem* GetDefaultObj();

};

// 0x48 (0x510 - 0x4C8)
// Class Engine.NavigationDataChunkActor
class ANavigationDataChunkActor : public APartitionActor
{
public:
	TArray<class UNavigationDataChunk*>          NavDataChunks;                                     // 0x4C8(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBox                                  DataChunkActorBounds;                              // 0x4D8(0x38)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ANavigationDataChunkActor* GetDefaultObj();

};

// 0x118 (0x140 - 0x28)
// Class Engine.WorldPartition
class UWorldPartition : public UObject
{
public:
	uint8                                        Pad_41CA[0x38];                                    // Fixing Size After Last Property  > TateDumper <
	class UActorDescContainer*                   ActorDescContainer;                                // 0x60(0x8)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, SubobjectReference)
	class UWorldPartitionRuntimeHash*            RuntimeHash;                                       // 0x68(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorld*                                World;                                             // 0x70(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	bool                                         bEnableStreaming;                                  // 0x78(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41CB[0x87];                                    // Fixing Size After Last Property  > TateDumper <
	class UWorldPartitionStreamingPolicy*        StreamingPolicy;                                   // 0x100(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class ATileStreamingVolume*>          TileVolumes;                                       // 0x110(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CD[0x20];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionActorLoaderInterface
class IWorldPartitionActorLoaderInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWorldPartitionActorLoaderInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionEditorHash
class UWorldPartitionEditorHash : public UObject
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionEditorHash* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionEditorPerProjectUserSettings
class UWorldPartitionEditorPerProjectUserSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionEditorPerProjectUserSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionEditorSpatialHash
class UWorldPartitionEditorSpatialHash : public UWorldPartitionEditorHash
{
public:

	static class UClass* StaticClass();
	static class UWorldPartitionEditorSpatialHash* GetDefaultObj();

};

// 0x20 (0x1E0 - 0x1C0)
// Class Engine.WorldPartitionLevelStreamingDynamic
class UWorldPartitionLevelStreamingDynamic : public ULevelStreamingDynamic
{
public:
	bool                                         bShouldBeAlwaysLoaded;                             // 0x1C0(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TWeakObjectPtr<class UWorldPartitionRuntimeLevelStreamingCell> StreamingCell;                                     // 0x1C4(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TWeakObjectPtr<class UWorldPartition>        OuterWorldPartition;                               // 0x1CC(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D0[0xC];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionLevelStreamingDynamic* GetDefaultObj();

};

// 0x288 (0x2B0 - 0x28)
// Class Engine.WorldPartitionStreamingPolicy
class UWorldPartitionStreamingPolicy : public UObject
{
public:
	uint8                                        Pad_41D1[0x288];                                   // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionStreamingPolicy* GetDefaultObj();

};

// 0x50 (0x300 - 0x2B0)
// Class Engine.WorldPartitionLevelStreamingPolicy
class UWorldPartitionLevelStreamingPolicy : public UWorldPartitionStreamingPolicy
{
public:
	TMap<class FName, class FName>               SubObjectsToCellRemapping;                         // 0x2B0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldPartitionLevelStreamingPolicy* GetDefaultObj();

};

// 0xD0 (0x598 - 0x4C8)
// Class Engine.WorldPartitionMiniMap
class AWorldPartitionMiniMap : public AInfo
{
public:
	struct FBox                                  MiniMapWorldBounds;                                // 0x4C8(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FBox2D                                UVOffset;                                          // 0x500(0x28)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            MiniMapTexture;                                    // 0x528(0x8)(Edit, BlueprintVisible, ExportObject, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TSet<struct FActorDataLayer>                 ExcludedDataLayers;                                // 0x530(0x50)(Edit, ConstParm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        WorldUnitsPerPixel;                                // 0x580(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        BuilderCellSize;                                   // 0x584(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	enum class ESceneCaptureSource               CaptureSource;                                     // 0x588(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	uint32                                       CaptureWarmupFrames;                               // 0x58C(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        MiniMapTileSize;                                   // 0x590(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D3[0x4];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AWorldPartitionMiniMap* GetDefaultObj();

};

// 0x0 (0x518 - 0x518)
// Class Engine.WorldPartitionMiniMapVolume
class AWorldPartitionMiniMapVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AWorldPartitionMiniMapVolume* GetDefaultObj();

};

// 0x20 (0x4E8 - 0x4C8)
// Class Engine.WorldPartitionReplay
class AWorldPartitionReplay : public AActor
{
public:
	TArray<class FName>                          StreamingSourceNames;                              // 0x4C8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D4[0x10];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class AWorldPartitionReplay* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Engine.WorldPartitionRuntimeCell
class UWorldPartitionRuntimeCell : public UObject
{
public:
	uint8                                        Pad_41D5[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	bool                                         bIsAlwaysLoaded;                                   // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          DataLayers;                                        // 0x38(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FWorldPartitionRuntimeCellDebugInfo   DebugInfo;                                         // 0x48(0x30)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	int32                                        Priority;                                          // 0x78(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bClientOnlyVisible;                                // 0x7C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsHLOD;                                           // 0x7D(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	bool                                         bBlockOnSlowLoading;                               // 0x7E(0x1)(Edit, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41D7[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	struct FGuid                                 ContentBundleID;                                   // 0x80(0x10)(ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	struct FGuid                                 CellGuid;                                          // 0x90(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	class UWorldPartitionRuntimeCellData*        RuntimeCellData;                                   // 0xA0(0x8)(ConstParm, ExportObject, Net, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeCell* GetDefaultObj();

};

// 0x60 (0xE0 - 0x80)
// Class Engine.WorldPartitionRuntimeCellDataSpatialHash
class UWorldPartitionRuntimeCellDataSpatialHash : public UWorldPartitionRuntimeCellData
{
public:
	struct FVector                               Position;                                          // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Extent;                                            // 0x98(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        Level;                                             // 0x9C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_41D8[0x40];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeCellDataSpatialHash* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionCell
class IWorldPartitionCell : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWorldPartitionCell* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Engine.WorldPartitionRuntimeCellOwner
class IWorldPartitionRuntimeCellOwner : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWorldPartitionRuntimeCellOwner* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class Engine.RuntimeHashExternalStreamingObjectBase
class URuntimeHashExternalStreamingObjectBase : public UObject
{
public:
	uint8                                        Pad_41D9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	TSoftObjectPtr<class UWorld>                 OwningWorld;                                       // 0x30(0x30)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, GlobalConfig, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class UWorld>                 OuterWorld;                                        // 0x60(0x30)(Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class URuntimeHashExternalStreamingObjectBase* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Engine.WorldPartitionRuntimeHash
class UWorldPartitionRuntimeHash : public UObject
{
public:
	uint8                                        Pad_41DA[0x8];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeHash* GetDefaultObj();

};

// 0x8 (0xB0 - 0xA8)
// Class Engine.WorldPartitionRuntimeLevelStreamingCell
class UWorldPartitionRuntimeLevelStreamingCell : public UWorldPartitionRuntimeCell
{
public:
	class UWorldPartitionLevelStreamingDynamic*  LevelStreaming;                                    // 0xA8(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeLevelStreamingCell* GetDefaultObj();

	void OnLevelShown();
	void OnLevelHidden();
};

// 0x8 (0x4D0 - 0x4C8)
// Class Engine.SpatialHashRuntimeGridInfo
class ASpatialHashRuntimeGridInfo : public AInfo
{
public:
	struct FSpatialHashRuntimeGrid               GridSettings;                                      // 0x4C8(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DB[0x7];                                     // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class ASpatialHashRuntimeGridInfo* GetDefaultObj();

};

// 0x60 (0xF0 - 0x90)
// Class Engine.RuntimeSpatialHashExternalStreamingObject
class URuntimeSpatialHashExternalStreamingObject : public URuntimeHashExternalStreamingObjectBase
{
public:
	TArray<struct FSpatialHashStreamingGrid>     StreamingGrids;                                    // 0x90(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	TMap<class FName, class FName>               CellToLevelStreamingPackage;                       // 0xA0(0x50)(ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class URuntimeSpatialHashExternalStreamingObject* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Engine.WorldPartitionRuntimeSpatialHash
class UWorldPartitionRuntimeSpatialHash : public UWorldPartitionRuntimeHash
{
public:
	bool                                         bEnableZCulling;                                   // 0x30(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FSpatialHashStreamingGrid>     StreamingGrids;                                    // 0x38(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)
	uint8                                        Pad_41DD[0x58];                                    // Fixing Size After Last Property  > TateDumper <
	TArray<TWeakObjectPtr<class URuntimeSpatialHashExternalStreamingObject>> ExternalStreamingObjects;                          // 0xA0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Transient, GlobalConfig, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class UWorldPartitionRuntimeSpatialHash* GetDefaultObj();

};

// 0x80 (0xC0 - 0x40)
// Class Engine.WorldPartitionSubsystem
class UWorldPartitionSubsystem : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_41E1[0x80];                                    // Fixing Size Of Struct > TateDumper <

	static class UClass* StaticClass();
	static class UWorldPartitionSubsystem* GetDefaultObj();

	bool IsStreamingCompleted(bool ReturnValue);
	void IsAllStreamingCompleted(bool ReturnValue);
};

// 0x0 (0x518 - 0x518)
// Class Engine.WorldPartitionVolume
class AWorldPartitionVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AWorldPartitionVolume* GetDefaultObj();

};

}


