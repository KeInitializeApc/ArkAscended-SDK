#pragma once

// Dumped with TateDumper!


#include "../SDK.hpp"

namespace SDK
{
namespace Params
{
//---------------------------------------------------------------------------------------------------------------------
// PARAMETERS
//---------------------------------------------------------------------------------------------------------------------

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListEntryButton.OnGetContextMenuContent
struct UDataListEntryButton_OnGetContextMenuContent_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DataListEntryButton.GetStringValue
struct UDataListEntryButton_GetStringValue_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DataListEntryButton.GetOverridenStringValue
struct UDataListEntryButton_GetOverridenStringValue_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListEntryButton.ClickedSecondaryButton
struct UDataListEntryButton_ClickedSecondaryButton_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListEntryButton.ClickedButton
struct UDataListEntryButton_ClickedButton_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.AhoCorasickMatch.SearchWords
struct UAhoCorasickMatch_SearchWords_Params
{
public:
	class FString                                Text;                                              // 0x0(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	struct FAhoCorasickMatcher                   Matcher;                                           // 0x10(0x18)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class FString>                        OutKeys;                                           // 0x28(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Config, InstancedReference, SubobjectReference)
	TArray<struct FIntArray>                     OutValues;                                         // 0x38(0x10)(ConstParm, BlueprintReadOnly, Net, Config, InstancedReference, SubobjectReference)
	bool                                         bFilterOverlaps;                                   // 0x48(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bGetShortest;                                      // 0x49(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1AAC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.AhoCorasickMatch.AddWords
struct UAhoCorasickMatch_AddWords_Params
{
public:
	TArray<class FString>                        WordList;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FAhoCorasickMatcher                   Matcher;                                           // 0x10(0x18)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.AIAttackCoordinator.UpdateAttackGroup
struct AAIAttackCoordinator_UpdateAttackGroup_Params
{
public:
	TArray<class APrimalDinoAIController*>       AttackGroup;                                       // 0x0(0x10)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.AIAttackCoordinator.RemoveAttacker
struct AAIAttackCoordinator_RemoveAttacker_Params
{
public:
	class APrimalDinoAIController*               Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.AIAttackCoordinator.GetNumAttackersWithPriorityForTarget
struct AAIAttackCoordinator_GetNumAttackersWithPriorityForTarget_Params
{
public:
	class AActor*                                Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1ABC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.AIAttackCoordinator.GetNumAttackersForTarget
struct AAIAttackCoordinator_GetNumAttackersForTarget_Params
{
public:
	class AActor*                                Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1AC4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.AIAttackCoordinator.CalculateAttackerPriorityWeight
struct AAIAttackCoordinator_CalculateAttackerPriorityWeight_Params
{
public:
	class APrimalDinoAIController*               Attacker;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1ACE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.AIAttackCoordinator.AddAttackerCharacter
struct AAIAttackCoordinator_AddAttackerCharacter_Params
{
public:
	class APrimalDinoCharacter*                  Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.AIAttackCoordinator.AddAttacker
struct AAIAttackCoordinator_AddAttacker_Params
{
public:
	class APrimalDinoAIController*               Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.AllClustersInventory.OnFinishedSaveForChangingItems
struct UAllClustersInventory_OnFinishedSaveForChangingItems_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_1B0B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.AllClustersInventory.OnFinishedReadLockForCreateLock
struct UAllClustersInventory_OnFinishedReadLockForCreateLock_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_1B0F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         Locked;                                            // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_1B10[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.AllClustersInventory.OnFinishedLoadForChangingItems
struct UAllClustersInventory_OnFinishedLoadForChangingItems_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_1B14[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<struct FItemNetInfo>                  ArkItems;                                          // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.AllClustersInventory.OnFinishedCreateLockForChangingItems
struct UAllClustersInventory_OnFinishedCreateLockForChangingItems_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_1B1D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.AllClustersInventory.OnFinishedClearLockForChangingItems
struct UAllClustersInventory_OnFinishedClearLockForChangingItems_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_1B20[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.BaseBoxTrigger.OnTriggerEndOverlap
struct ABaseBoxTrigger_OnTriggerEndOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1C89[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.BaseBoxTrigger.OnTriggerBeginOverlap
struct ABaseBoxTrigger_OnTriggerBeginOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1CA1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BaseBoxTrigger.IsCharacterTouchingTrigger
struct ABaseBoxTrigger_IsCharacterTouchingTrigger_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1CA5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BaseBoxTrigger.GetAllCharactersTouchingTrigger
struct ABaseBoxTrigger_GetAllCharactersTouchingTrigger_Params
{
public:
	TArray<class APrimalCharacter*>              OutCharacters;                                     // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.BaseBoxTrigger.BPOnTriggerEndOverlap
struct ABaseBoxTrigger_BPOnTriggerEndOverlap_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1CAB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x108 (0x108 - 0x0)
// Function ShooterGame.BaseBoxTrigger.BPOnTriggerBeginOverlap
struct ABaseBoxTrigger_BPOnTriggerBeginOverlap_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x14(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_1CB1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x18(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.BasePlayerController.SimulateInputKey
struct ABasePlayerController_SimulateInputKey_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         bPressed;                                          // 0x18(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CBB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BasePlayerController.ServerCheat
struct ABasePlayerController_ServerCheat_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BasePlayerController.Say
struct ABasePlayerController_Say_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.BasePlayerController.ClientSetSpectatorCamera
struct ABasePlayerController_ClientSetSpectatorCamera_Params
{
public:
	struct FVector                               CameraLocation;                                    // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              CameraRotation;                                    // 0x18(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BasePlayerController.ClientSendRoundEndEvent
struct ABasePlayerController_ClientSendRoundEndEvent_Params
{
public:
	bool                                         bIsWinner;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CC9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ExpendedTimeInSeconds;                             // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUserWidget.StopAnimationByString
struct UPrimalUserWidget_StopAnimationByString_Params
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ConstParm, Net, OutParm)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalUserWidget.SetZOrderInViewport
struct UPrimalUserWidget_SetZOrderInViewport_Params
{
public:
	int32                                        ZOrder;                                            // 0x0(0x4)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalUserWidget.PlayAnimationByString
struct UPrimalUserWidget_PlayAnimationByString_Params
{
public:
	class FString                                Name;                                              // 0x0(0x10)(ConstParm, Net, OutParm)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1CD9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUserWidget.OnWidgetGamepadActiveChangedBP
struct UPrimalUserWidget_OnWidgetGamepadActiveChangedBP_Params
{
public:
	bool                                         bIsGamepadActive;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalUserWidget.NumCharactersThatFit
struct UPrimalUserWidget_NumCharactersThatFit_Params
{
public:
	class FString                                TheString;                                         // 0x0(0x10)(Edit, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        WidthThreshold;                                    // 0x10(0x4)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1CDF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UFont*                                 TheFont;                                           // 0x18(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUserWidget.HandleVirtualBack
struct UPrimalUserWidget_HandleVirtualBack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalUserWidget.HandleKeyUp
struct UPrimalUserWidget_HandleKeyUp_Params
{
public:
	struct FKey                                  TheKey;                                            // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1CE8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUserWidget.GetOverrideHighligteableWidgetBP
struct UPrimalUserWidget_GetOverrideHighligteableWidgetBP_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalUserWidget.ExecuteCommandForPrimalUI
struct UPrimalUserWidget_ExecuteCommandForPrimalUI_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalUserWidget.BPExecutedCommandForPrimalUI
struct UPrimalUserWidget_BPExecutedCommandForPrimalUI_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalUI.UsingProController
struct UPrimalUI_UsingProController_Params
{
public:
	bool                                         DebugOut;                                          // 0x0(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUI.ShowDLCConfirmationDialog
struct UPrimalUI_ShowDLCConfirmationDialog_Params
{
public:
	enum class EDLCSelector                      DLC;                                               // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CF7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UUI_GenericConfirmationDialog*         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalUI.ShowConfirmationDialogBP
struct UPrimalUI_ShowConfirmationDialogBP_Params
{
public:
	class FString                                TitleText;                                         // 0x0(0x10)(Edit, Net, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                MessageText;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         IsJustOKBox;                                       // 0x20(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1CFE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUI.SetHighlightedWidget
struct UPrimalUI_SetHighlightedWidget_Params
{
public:
	class UWidget*                               Widget;                                            // 0x0(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst)
	bool                                         bSetLastHighlightedPosition;                       // 0x8(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D06[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.ProcessSplitscreen
struct UPrimalUI_ProcessSplitscreen_Params
{
public:
	bool                                         ScaleX;                                            // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalUI.PlayHapticEffect
struct UPrimalUI_PlayHapticEffect_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EHapticEffectType                 Type;                                              // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_1D1C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class UWorld*                                World;                                             // 0x28(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUI.OpenTheStoreDLCPage
struct UPrimalUI_OpenTheStoreDLCPage_Params
{
public:
	class FString                                TheDLCName;                                        // 0x0(0x10)(Edit, BlueprintVisible, Parm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x168 (0x168 - 0x0)
// Function ShooterGame.PrimalUI.OnMouseButtonDownEvent
struct UPrimalUI_OnMouseButtonDownEvent_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FPointerEvent                         MouseEvent;                                        // 0x38(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FEventReply                           ReturnValue;                                       // 0xB0(0xB8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.PrimalUI.OnKeyUpEvent
struct UPrimalUI_OnKeyUpEvent_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FKeyEvent                             InKeyboardEvent;                                   // 0x38(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FEventReply                           ReturnValue;                                       // 0x78(0xB8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.PrimalUI.OnKeyDownEvent
struct UPrimalUI_OnKeyDownEvent_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FKeyEvent                             InKeyboardEvent;                                   // 0x38(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FEventReply                           ReturnValue;                                       // 0x78(0xB8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.PrimalUI.OnGamepadButtonDownEvent
struct UPrimalUI_OnGamepadButtonDownEvent_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FControllerEvent                      ControllerEvent;                                   // 0x38(0x40)(Edit, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FEventReply                           ReturnValue;                                       // 0x78(0xB8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.OnGamepadActiveChangedBP
struct UPrimalUI_OnGamepadActiveChangedBP_Params
{
public:
	bool                                         bIsGamepadActive;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.OnGamepadActiveChanged
struct UPrimalUI_OnGamepadActiveChanged_Params
{
public:
	bool                                         bIsGamepadActive;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.OnDLCConfirmationDialogClosed
struct UPrimalUI_OnDLCConfirmationDialogClosed_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.OnCreateCredits
struct UPrimalUI_OnCreateCredits_Params
{
public:
	class UWidget*                               Widget;                                            // 0x0(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.OnConfirmationDialogClosedBP
struct UPrimalUI_OnConfirmationDialogClosedBP_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.OnConfirmationDialogClosed
struct UPrimalUI_OnConfirmationDialogClosed_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.IsRightTriggerDown
struct UPrimalUI_IsRightTriggerDown_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.IsLeftTriggerDown
struct UPrimalUI_IsLeftTriggerDown_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUI.HTTPGetString
struct UPrimalUI_HTTPGetString_Params
{
public:
	class FString                                InURL;                                             // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetWidgetToScaleForHandheld
struct UPrimalUI_GetWidgetToScaleForHandheld_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetSizeboxForExtraHandheldScaling
struct UPrimalUI_GetSizeboxForExtraHandheldScaling_Params
{
public:
	class USizeBox*                              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetShooterHud
struct UPrimalUI_GetShooterHud_Params
{
public:
	class AShooterHUD*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetPlayerState
struct UPrimalUI_GetPlayerState_Params
{
public:
	class AShooterPlayerState*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetPC
struct UPrimalUI_GetPC_Params
{
public:
	class AShooterPlayerController*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetPawn
struct UPrimalUI_GetPawn_Params
{
public:
	class APrimalCharacter*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.GetOpenComboBox
struct UPrimalUI_GetOpenComboBox_Params
{
public:
	class UComboBoxString*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalUI.DoExtraScalingForSplitscreen
struct UPrimalUI_DoExtraScalingForSplitscreen_Params
{
public:
	struct FVector2D                             PlayerSize;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.ClickedSecondaryButton
struct UPrimalUI_ClickedSecondaryButton_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.ClickedButton
struct UPrimalUI_ClickedButton_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.CheckGamepadActiveChanged
struct UPrimalUI_CheckGamepadActiveChanged_Params
{
public:
	bool                                         bIsGamepadActive;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalUI.ChangeChildrenTextColorBP
struct UPrimalUI_ChangeChildrenTextColorBP_Params
{
public:
	class UPanelWidget*                          Parent;                                            // 0x0(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FSlateColor                           NewColor;                                          // 0x8(0x14)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         Recursive;                                         // 0x1C(0x1)(BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1D5D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI.BPProcessSplitscreenAndAddToViewport
struct UPrimalUI_BPProcessSplitscreenAndAddToViewport_Params
{
public:
	bool                                         ScaleX;                                            // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1D5F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ZOrder;                                            // 0x4(0x4)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.BPHighlightWidgetOnStart
struct UPrimalUI_BPHighlightWidgetOnStart_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.BPHandleDockedModeChange
struct UPrimalUI_BPHandleDockedModeChange_Params
{
public:
	bool                                         bIsDocked;                                         // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x3C (0x3C - 0x0)
// Function ShooterGame.PrimalUI.BPGameTick
struct UPrimalUI_BPGameTick_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InDeltaTime;                                       // 0x38(0x4)(ConstParm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalUI.BPGamepadReleased
struct UPrimalUI_BPGamepadReleased_Params
{
public:
	struct FKey                                  TheKey;                                            // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1D64[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.BPEscapeClosed
struct UPrimalUI_BPEscapeClosed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI.BPCycleHighlighted
struct UPrimalUI_BPCycleHighlighted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalUI.BPControlHighlighted
struct UPrimalUI_BPControlHighlighted_Params
{
public:
	enum class EControlDirection                 Dir;                                               // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D68[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FKey                                  TheKey;                                            // 0x8(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        AnalogValue;                                       // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1D6A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BaseSelectableButtonWidget.BPSetSelected
struct UBaseSelectableButtonWidget_BPSetSelected_Params
{
public:
	bool                                         bSelected;                                         // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BaseSelectableButtonWidget.BPIsSelected
struct UBaseSelectableButtonWidget_BPIsSelected_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BaseSelectableButtonWidget.BPGetButton
struct UBaseSelectableButtonWidget_BPGetButton_Params
{
public:
	class UCustomButtonWidget*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.ShooterGameState.StartMassTeleport
struct AShooterGameState_StartMassTeleport_Params
{
public:
	struct FMassTeleportData                     MassTeleportData;                                  // 0x0(0x120)(Edit, ConstParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTeleportDestination                  TeleportDestination;                               // 0x120(0x40)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	class AActor*                                InitiatingActor;                                   // 0x160(0x8)(Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        TeleportActors;                                    // 0x168(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                BuffToApply;                                       // 0x178(0x8)(Edit, EditFixedSize, Parm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TeleportDuration;                                  // 0x180(0x4)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        TeleportRadius;                                    // 0x184(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bTeleportingSnapsToGround;                         // 0x188(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bMaintainRotation;                                 // 0x189(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1DB6[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x140 (0x140 - 0x0)
// Function ShooterGame.ShooterGameState.ShouldMassTeleportMoveActor
struct AShooterGameState_ShouldMassTeleportMoveActor_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DBC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMassTeleportData                     WithMassTeleportData;                              // 0x10(0x120)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x130(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1DBD[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameState.SetNextEnvironmentIndex
struct AShooterGameState_SetNextEnvironmentIndex_Params
{
public:
	int32                                        NewNextEnvironmentIndex;                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameState.SetEnvironmentIndex
struct AShooterGameState_SetEnvironmentIndex_Params
{
public:
	int32                                        NewEnvironmentIndex;                               // 0x0(0x4)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.RemoveRelevantPOIActor
struct AShooterGameState_RemoveRelevantPOIActor_Params
{
public:
	class AActor*                                POI;                                               // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameState.QueueExplorerNoteForDeferredUnlock
struct AShooterGameState_QueueExplorerNoteForDeferredUnlock_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.PrintCDODebugForChar
struct AShooterGameState_PrintCDODebugForChar_Params
{
public:
	class APrimalCharacter*                      ReferenceChar;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.PrintCDODebug
struct AShooterGameState_PrintCDODebug_Params
{
public:
	class APrimalCharacter*                      ReferenceChar;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FCDODebugData                         CDODebugData;                                      // 0x8(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.ShooterGameState.PrepareActorForMassTeleport
struct AShooterGameState_PrepareActorForMassTeleport_Params
{
public:
	class AActor*                                PrepareActor;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1DED[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMassTeleportData                     WithMassTeleportData;                              // 0x10(0x120)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.OnNewClassInitialized
struct AShooterGameState_OnNewClassInitialized_Params
{
public:
	class UClass*                                ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.ShooterGameState.OnHUDNotification
struct AShooterGameState_OnHUDNotification_Params
{
public:
	struct FHUDNotification                      Notification;                                      // 0x0(0x60)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E01[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPLiveTeams
struct AShooterGameState_NetUpdateOfflinePvPLiveTeams_Params
{
public:
	TArray<int32>                                NewPreventOfflinePvPLiveTeams;                     // 0x0(0x10)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPExpiringTeams
struct AShooterGameState_NetUpdateOfflinePvPExpiringTeams_Params
{
public:
	TArray<int32>                                NewPreventOfflinePvPExpiringTeams;                 // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<float>                                NewPreventOfflinePvPExpiringTimes;                 // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.ShooterGameState.NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction
struct AShooterGameState_NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector_NetQuantize                   AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator_NetQuantize                  AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                EffectOwnerToIgnore;                               // 0x38(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MaxRangeToReplicate;                               // 0x40(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E11[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       AttachToComponent;                                 // 0x48(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x50(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	class FName                                  AttachSocketName;                                  // 0x54(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bOnlySendToEffectOwner;                            // 0x5C(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         IsSimpleFoliageInteraction;                        // 0x5D(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E14[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               FoliageOrigin_ImpactPoint;                         // 0x60(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               TraceEndpoint;                                     // 0x78(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterGameState.NetAddFloatingText
struct AShooterGameState_NetAddFloatingText_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                FloatingTextString;                                // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FColor                                FloatingTextColor;                                 // 0x28(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ScaleX;                                            // 0x2C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ScaleY;                                            // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TextLifeSpan;                                      // 0x34(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               TextVelocity;                                      // 0x38(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MinScale;                                          // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeInTime;                                        // 0x54(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        OnlySendToTeamID;                                  // 0x5C(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameState.NetAddFloatingDamageText
struct AShooterGameState_NetAddFloatingDamageText_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DamageAmount;                                      // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        FromTeamID;                                        // 0x1C(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        OnlySendToTeamID;                                  // 0x20(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E21[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameState.Multi_SpawnCosmeticActor
struct AShooterGameState_Multi_SpawnCosmeticActor_Params
{
public:
	class UClass*                                SpawnActorOfClass;                                 // 0x0(0x8)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               SpawnAtLocation;                                   // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnWithRotation;                                 // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.ShooterGameState.IsValidMassTeleportData
struct AShooterGameState_IsValidMassTeleportData_Params
{
public:
	struct FMassTeleportData                     CheckData;                                         // 0x0(0x120)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x120(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E2B[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameState.IsUniqueDinoAlreadySpawned
struct AShooterGameState_IsUniqueDinoAlreadySpawned_Params
{
public:
	TSoftClassPtr<class APrimalDinoCharacter>    UniqueDino;                                        // 0x0(0x30)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E31[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.IsTeamIDInvincible
struct AShooterGameState_IsTeamIDInvincible_Params
{
public:
	int32                                        TargetingTeamID;                                   // 0x0(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bInvincibleOnlyWhenOffline;                        // 0x4(0x1)(Edit, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x5(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E35[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.IsMassTeleportInProgress
struct AShooterGameState_IsMassTeleportInProgress_Params
{
public:
	class AActor*                                InitiatingActor;                                   // 0x0(0x8)(Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E3A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.IsEngramClassHidden
struct AShooterGameState_IsEngramClassHidden_Params
{
public:
	class UClass*                                ForItemClass;                                      // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E3E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.HTTPPostRequest
struct AShooterGameState_HTTPPostRequest_Params
{
public:
	class FString                                InURL;                                             // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, InstancedReference, SubobjectReference)
	class FString                                Content;                                           // 0x10(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.HTTPGetRequest
struct AShooterGameState_HTTPGetRequest_Params
{
public:
	class FString                                InURL;                                             // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameState.GetStartTimeHour
struct AShooterGameState_GetStartTimeHour_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.GetOfflineDamagePreventionTime
struct AShooterGameState_GetOfflineDamagePreventionTime_Params
{
public:
	int32                                        TargetingTeamID;                                   // 0x0(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.GetNetworkTimeDelta
struct AShooterGameState_GetNetworkTimeDelta_Params
{
public:
	class AShooterGameState*                     GameState;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	double                                       NetTime;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bTimeUntil;                                        // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E4F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameState.GetItemMaxQuantityOverride
struct AShooterGameState_GetItemMaxQuantityOverride_Params
{
public:
	class UClass*                                ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FMaxItemQuantityOverride              OutMaxQuantity;                                    // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E58[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.GetIniArray
struct AShooterGameState_GetIniArray_Params
{
public:
	class FString                                SectionName;                                       // 0x0(0x10)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FGameIniData>                  ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameState.GetGamePhase
struct AShooterGameState_GetGamePhase_Params
{
public:
	enum class EGamePhase                        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.GetDayTimeString
struct AShooterGameState_GetDayTimeString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameState.GetDayCycleSpeed
struct AShooterGameState_GetDayCycleSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.GetCleanServerSessionName
struct AShooterGameState_GetCleanServerSessionName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterGameState.ForceStartMatch
struct AShooterGameState_ForceStartMatch_Params
{
public:
	bool                                         PreventFinishTheMatch;                             // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         UseQuetzalBus;                                     // 0x1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameState.CDOGetPrintStringForObjectProperty
struct AShooterGameState_CDOGetPrintStringForObjectProperty_Params
{
public:
	class UObject*                               TheObject;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  PropertyName;                                      // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                OutString;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E72[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterGameState.CDOGetPrintStringForObjectProperties
struct AShooterGameState_CDOGetPrintStringForObjectProperties_Params
{
public:
	class UObject*                               TheObject;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class FName>                          PropertyNames;                                     // 0x8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                OutString;                                         // 0x18(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E79[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.CancelMassTeleport
struct AShooterGameState_CancelMassTeleport_Params
{
public:
	class AActor*                                WithInitiatingActor;                               // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1E7E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterGameState.BPNetSpawnActorAtLocation
struct AShooterGameState_BPNetSpawnActorAtLocation_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                EffectOwnerToIgnore;                               // 0x38(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MaxRangeToReplicate;                               // 0x40(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E90[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       AttachToComponent;                                 // 0x48(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x50(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	class FName                                  AttachSocketName;                                  // 0x54(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bOnlySendToEffectOwner;                            // 0x5C(0x1)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_1E94[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.BPDrawGameStateHUD
struct AShooterGameState_BPDrawGameStateHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameState.BaseSpawnBuffAndAttachToCharacter
struct AShooterGameState_BaseSpawnBuffAndAttachToCharacter_Params
{
public:
	class UClass*                                Buff;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      PrimalCharacter;                                   // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ExperiencePoints;                                  // 0x10(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_1EA2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff*                           ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterGameState.BaseProjectWorldToScreenPosition
struct AShooterGameState_BaseProjectWorldToScreenPosition_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class APlayerController*                     ThePC;                                             // 0x18(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.BaseIsTribeID
struct AShooterGameState_BaseIsTribeID_Params
{
public:
	int32                                        TeamID;                                            // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1EB1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.BaseGetCustomActors
struct AShooterGameState_BaseGetCustomActors_Params
{
public:
	class FName                                  SearchCustomTag;                                   // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class ACustomActorList*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.BaseGetAllShooterControllers
struct AShooterGameState_BaseGetAllShooterControllers_Params
{
public:
	TArray<class AShooterPlayerController*>      ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameState.BaseGetAllShooterCharactersOfTeam
struct AShooterGameState_BaseGetAllShooterCharactersOfTeam_Params
{
public:
	int32                                        KillerTeam;                                        // 0x0(0x4)(Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1EB9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterCharacter*>             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameState.BaseGetAllShooterCharacters
struct AShooterGameState_BaseGetAllShooterCharacters_Params
{
public:
	TArray<class AShooterCharacter*>             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameState.BaseGetAllDinoCharactersOfTeam
struct AShooterGameState_BaseGetAllDinoCharactersOfTeam_Params
{
public:
	int32                                        KillerTeam;                                        // 0x0(0x4)(Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1EBF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameState.BaseDrawTileOnCanvas
struct AShooterGameState_BaseDrawTileOnCanvas_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class UTexture*                              Tex;                                               // 0x8(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        X;                                                 // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x14(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        XL;                                                // 0x18(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        YL;                                                // 0x1C(0x4)(ConstParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        U;                                                 // 0x20(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x24(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        UL;                                                // 0x28(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        VL;                                                // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FColor                                DrawColor;                                         // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_1EC7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameState.AllowDownloadDino
struct AShooterGameState_AllowDownloadDino_Params
{
public:
	TSoftClassPtr<class APrimalDinoCharacter>    TheDinoClass;                                      // 0x0(0x30)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1ECF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameState.AllowDinoTame
struct AShooterGameState_AllowDinoTame_Params
{
public:
	class APrimalDinoCharacter*                  DinoChar;                                          // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1ED7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameState.AllowDinoClassTame
struct AShooterGameState_AllowDinoClassTame_Params
{
public:
	class UClass*                                DinoCharClass;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1EDA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.AddTokens
struct AShooterGameState_AddTokens_Params
{
public:
	int32                                        Quantity;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        byTribe;                                           // 0x4(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameState.AddRelevantPOIActor
struct AShooterGameState_AddRelevantPOIActor_Params
{
public:
	class AActor*                                POI;                                               // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterGameState.AddFloatingText
struct AShooterGameState_AddFloatingText_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                FloatingTextString;                                // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FColor                                FloatingTextColor;                                 // 0x28(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ScaleX;                                            // 0x2C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ScaleY;                                            // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TextLifeSpan;                                      // 0x34(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               TextVelocity;                                      // 0x38(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MinScale;                                          // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeInTime;                                        // 0x54(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1EF1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.SetTarget
struct UBeamWeaponComponent_SetTarget_Params
{
public:
	class AActor*                                Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetTarget
struct UBeamWeaponComponent_GetTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetParticleSystem
struct UBeamWeaponComponent_GetParticleSystem_Params
{
public:
	class UParticleSystemComponent*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetLastStoppedFiringTime
struct UBeamWeaponComponent_GetLastStoppedFiringTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetIsFiring
struct UBeamWeaponComponent_GetIsFiring_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetIsCharging
struct UBeamWeaponComponent_GetIsCharging_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetImpactParticleSystem
struct UBeamWeaponComponent_GetImpactParticleSystem_Params
{
public:
	class UParticleSystemComponent*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetChargeupParticleSystem
struct UBeamWeaponComponent_GetChargeupParticleSystem_Params
{
public:
	class UParticleSystemComponent*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.BeamWeaponComponent.GetBeamEndLocation
struct UBeamWeaponComponent_GetBeamEndLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponController.StartChargingBeams
struct UBeamWeaponController_StartChargingBeams_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponController.StartChargingBeam
struct UBeamWeaponController_StartChargingBeam_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BeamWeaponController.OnBeamStoppedFiringHandler
struct UBeamWeaponController_OnBeamStoppedFiringHandler_Params
{
public:
	class UBeamWeaponComponent*                  BeamWeaponComp;                                    // 0x0(0x8)(Edit, ExportObject, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BeamWeaponController.GetBeamWeaponComponents
struct UBeamWeaponController_GetBeamWeaponComponents_Params
{
public:
	TArray<class UBeamWeaponComponent*>          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponController.FireBeams
struct UBeamWeaponController_FireBeams_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.BeamWeaponController.FireBeam
struct UBeamWeaponController_FireBeam_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetDinoParentClass
struct UBinocularsWidgetUI_GetDinoParentClass_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharUsesStat
struct UBinocularsWidgetUI_GetCharUsesStat_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FE4[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharTorpidMaxStatus
struct UBinocularsWidgetUI_GetCharTorpidMaxStatus_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FE5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharTorpidCurrentStatus
struct UBinocularsWidgetUI_GetCharTorpidCurrentStatus_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FE7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharNumStatPointsString
struct UBinocularsWidgetUI_GetCharNumStatPointsString_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_1FE9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharHealthMaxStatus
struct UBinocularsWidgetUI_GetCharHealthMaxStatus_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FED[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BinocularsWidgetUI.GetCharHealthCurrentStatus
struct UBinocularsWidgetUI_GetCharHealthCurrentStatus_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_1FF1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BiomeZoneVolume.OnEndOverlap
struct ABiomeZoneVolume_OnEndOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BiomeZoneVolume.OnBeginOverlap
struct ABiomeZoneVolume_OnBeginOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.BiomeZoneVolume.IsPointUnderwater
struct ABiomeZoneVolume_IsPointUnderwater_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFastPath;                                         // 0x20(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2004[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumWaterHeight;                                // 0x24(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreVacuumStructures;                           // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnorePainCausingVolumes;                         // 0x29(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2005[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.BiomeZoneVolume.IsPointInVacuumBase
struct ABiomeZoneVolume_IsPointInVacuumBase_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2009[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.BiomeZoneVolume.GetWaterVolumeAtPoint
struct ABiomeZoneVolume_GetWaterVolumeAtPoint_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFastPath;                                         // 0x20(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_200E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinimumWaterHeight;                                // 0x24(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreVacuumStructures;                           // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnorePainCausingVolumes;                         // 0x29(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_200F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APhysicsVolume*                        ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.BiomeZoneVolume.GetPhysicsVolumeAtLocation
struct ABiomeZoneVolume_GetPhysicsVolumeAtLocation_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFastPath;                                         // 0x20(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2015[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APhysicsVolume*                        ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.BiomeZoneVolume.GetBiomeZoneVolume
struct ABiomeZoneVolume_GetBiomeZoneVolume_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class ABiomeZoneVolume*                      ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.BiomeZoneVolume.GetAllBiomeZones
struct ABiomeZoneVolume_GetAllBiomeZones_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	TArray<class ABiomeZoneVolume*>              BiomeZones;                                        // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnRelevantEffect
struct UBiomeZoneVolumeEffectUtility_SpawnRelevantEffect_Params
{
public:
	TArray<struct FBiomeZoneVolumeEffect>        Effects;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                AttachTo;                                          // 0x10(0x8)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bIsImpactActor;                                    // 0x30(0x1)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2029[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x188 (0x188 - 0x0)
// Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnImpactEffect
struct UBiomeZoneVolumeEffectUtility_SpawnImpactEffect_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	struct FBiomeZoneImpactEffect                ImpactEffect;                                      // 0xF8(0x80)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                Owner;                                             // 0x178(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	class AActor*                                ReturnValue;                                       // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.BiomeZoneVolumeEffectUtility.GetRelevantEffect
struct UBiomeZoneVolumeEffectUtility_GetRelevantEffect_Params
{
public:
	TArray<struct FBiomeZoneVolumeEffect>        Effects;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                SourceActor;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Transient, InstancedReference, SubobjectReference)
	struct FVector                               ForLocation;                                       // 0x18(0x18)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsImpactActor;                                    // 0x30(0x1)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2036[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBiomeZoneVolumeEffect                ReturnValue;                                       // 0x38(0x48)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.BuildingUI.GetStructurePlacer
struct UBuildingUI_GetStructurePlacer_Params
{
public:
	class APrimalStructurePlacer*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.BuildingUI.GetStructureIcon
struct UBuildingUI_GetStructureIcon_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CachedDB.PopulateDB
struct UCachedDB_PopulateDB_Params
{
public:
	TArray<struct FAssetData>                    CustomAssetList;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PointOfInterestActor.IsPointOfInterestValid
struct APointOfInterestActor_IsPointOfInterestValid_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1E0 (0x1E0 - 0x0)
// Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestData
struct APointOfInterestActor_GetMyPointOfInterestData_Params
{
public:
	struct FPointOfInterestData                  ReturnValue;                                       // 0x0(0x1E0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x300 (0x300 - 0x0)
// Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestCompanionBehavior
struct APointOfInterestActor_GetMyPointOfInterestCompanionBehavior_Params
{
public:
	struct FPointOfInterestCompanionBehavior     ReturnValue;                                       // 0x0(0x300)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CompanionEventTrigger.OnEndOverlap
struct ACompanionEventTrigger_OnEndOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CompanionEventTrigger.OnBeginOverlap
struct ACompanionEventTrigger_OnBeginOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu.SetActiveItem
struct UContextMenu_SetActiveItem_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x10 (0x10 - 0x0)
// DelegateFunction ShooterGame.ContextMenu.PopulateContextMenuCustom__DelegateSignature
struct UContextMenu_PopulateContextMenuCustom__DelegateSignature_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
	class FName                                  MenuName;                                          // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// DelegateFunction ShooterGame.ContextMenu.PopulateContextMenu__DelegateSignature
struct UContextMenu_PopulateContextMenu__DelegateSignature_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu.GetActiveItem
struct UContextMenu_GetActiveItem_Params
{
public:
	class UContextMenuItem*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ContextMenu.CloseMenu
struct UContextMenu_CloseMenu_Params
{
public:
	bool                                         CloseParents;                                      // 0x0(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// DelegateFunction ShooterGame.ContextMenu.ActiveMenuItemChanged__DelegateSignature
struct UContextMenu_ActiveMenuItemChanged__DelegateSignature_Params
{
public:
	class UContextMenu*                          Menu;                                              // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class UContextMenuItem*                      NewItem;                                           // 0x8(0x8)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class UContextMenuItem*                      OldItem;                                           // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ContextMenuItem.SetSubmenuEnabled
struct UContextMenuItem_SetSubmenuEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ContextMenuItem.SetShortcutKey
struct UContextMenuItem_SetShortcutKey_Params
{
public:
	int32                                        ComboKeyIdx;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_209B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FKey                                  Key;                                               // 0x8(0x18)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ContextMenuItem.SetJustification
struct UContextMenuItem_SetJustification_Params
{
public:
	enum class ETextJustify                      Value;                                             // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenuItem.SetCaption
struct UContextMenuItem_SetCaption_Params
{
public:
	class FText                                  Caption;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenuItem.OnGetContextMenuContent
struct UContextMenuItem_OnGetContextMenuContent_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// DelegateFunction ShooterGame.ContextMenuItem.OnButtonClickedEventObjectCustom__DelegateSignature
struct UContextMenuItem_OnButtonClickedEventObjectCustom__DelegateSignature_Params
{
public:
	class UContextMenuItem*                      ContextMenuItem;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig)
	class FName                                  SelectedOption;                                    // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// DelegateFunction ShooterGame.ContextMenuItem.OnButtonClickedEventObject__DelegateSignature
struct UContextMenuItem_OnButtonClickedEventObject__DelegateSignature_Params
{
public:
	class UContextMenuItem*                      ContextMenuItem;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenuItem.OnActiveMenuItemChanged
struct UContextMenuItem_OnActiveMenuItemChanged_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
	class UContextMenuItem*                      NewActiveItem;                                     // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class UContextMenuItem*                      OldActiveItem;                                     // 0x10(0x8)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ContextMenuItem.GetSubmenuEnabled
struct UContextMenuItem_GetSubmenuEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// DelegateFunction ShooterGame.ContextMenuItem.GetSubmenuContentCustom__DelegateSignature
struct UContextMenuItem_GetSubmenuContentCustom__DelegateSignature_Params
{
public:
	class UContextMenuItem*                      ContextMenuItem;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig)
	class FName                                  SelectedOption;                                    // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst)
	class UContextMenu*                          ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// DelegateFunction ShooterGame.ContextMenuItem.GetSubmenuContent__DelegateSignature
struct UContextMenuItem_GetSubmenuContent__DelegateSignature_Params
{
public:
	class UContextMenuItem*                      ContextMenuItem;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ContextMenuItem.GetJustification
struct UContextMenuItem_GetJustification_Params
{
public:
	enum class ETextJustify                      ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenuItem.GetCaption
struct UContextMenuItem_GetCaption_Params
{
public:
	class FText                                  ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenuItem_CosmeticEntry.SetImage
struct UContextMenuItem_CosmeticEntry_SetImage_Params
{
public:
	class UTexture2D*                            Image;                                             // 0x0(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenuItem_CosmeticEntry.SetData
struct UContextMenuItem_CosmeticEntry_SetData_Params
{
public:
	int64                                        ModId;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        VariantID;                                         // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_20E9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.SetValue
struct UContextMenuItem_Spinner_SetValue_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.SetMinValue
struct UContextMenuItem_Spinner_SetMinValue_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.SetMaxValue
struct UContextMenuItem_Spinner_SetMaxValue_Params
{
public:
	int32                                        NewValue;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// DelegateFunction ShooterGame.ContextMenuItem_Spinner.OnSpinnerValueCommitedEvent__DelegateSignature
struct UContextMenuItem_Spinner_OnSpinnerValueCommitedEvent__DelegateSignature_Params
{
public:
	class UContextMenuItem_Spinner*              Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        InValue;                                           // 0x8(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETextCommit                       CommitMethod;                                      // 0xC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2102[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextCommited
struct UContextMenuItem_Spinner_HandleOnTextCommited_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2104[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextChanged
struct UContextMenuItem_Spinner_HandleOnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.GetValue
struct UContextMenuItem_Spinner_GetValue_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.GetMinValue
struct UContextMenuItem_Spinner_GetMinValue_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ContextMenuItem_Spinner.GetMaxValue
struct UContextMenuItem_Spinner_GetMaxValue_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_DinoGroupEntry.PopulateRootMenu
struct UContextMenu_DinoGroupEntry_PopulateRootMenu_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionSetGroup
struct UContextMenu_DinoGroupEntry_HandleActionSetGroup_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveDino
struct UContextMenu_DinoGroupEntry_HandleActionRemoveDino_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveClass
struct UContextMenu_DinoGroupEntry_HandleActionRemoveClass_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.PopulateRootMenu
struct UContextMenu_InventorySort_PopulateRootMenu_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.HandleActionWeight
struct UContextMenu_InventorySort_HandleActionWeight_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.HandleActionUnsort
struct UContextMenu_InventorySort_HandleActionUnsort_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.HandleActionType
struct UContextMenu_InventorySort_HandleActionType_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.HandleActionSpoilTimer
struct UContextMenu_InventorySort_HandleActionSpoilTimer_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_InventorySort.HandleActionAlphabetical
struct UContextMenu_InventorySort_HandleActionAlphabetical_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitStack
struct UContextMenu_PrimalItem_PopulateSubmenuSplitStack_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitAmount
struct UContextMenu_PrimalItem_PopulateSubmenuSplitAmount_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuRemove
struct UContextMenu_PrimalItem_PopulateSubmenuRemove_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCustomCosmetics
struct UContextMenu_PrimalItem_PopulateSubmenuCustomCosmetics_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCustom
struct UContextMenu_PrimalItem_PopulateSubmenuCustom_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
	class FName                                  ContextItemName;                                   // 0x8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCraftAmount
struct UContextMenu_PrimalItem_PopulateSubmenuCraftAmount_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateRootMenu
struct UContextMenu_PrimalItem_PopulateRootMenu_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateFolderMenu
struct UContextMenu_PrimalItem_PopulateFolderMenu_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.PopulateCraftMenu
struct UContextMenu_PrimalItem_PopulateCraftMenu_Params
{
public:
	class UContextMenu*                          ContextMenu;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleSplitAmountValueCommit
struct UContextMenu_PrimalItem_HandleSplitAmountValueCommit_Params
{
public:
	class UContextMenuItem_Spinner*              Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        InValue;                                           // 0x8(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETextCommit                       CommitMethod;                                      // 0xC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_219C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitStackContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitStackContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitAmountContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitAmountContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuRemoveContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuRemoveContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCustomCosmetics
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCustomCosmetics_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCustomContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCustomContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ContextItemName;                                   // 0x8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftAmountContent
struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftAmountContent_Params
{
public:
	class UContextMenuItem*                      MenuItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UContextMenu*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleCraftAmountValueCommit
struct UContextMenu_PrimalItem_HandleCraftAmountValueCommit_Params
{
public:
	class UContextMenuItem_Spinner*              Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        InValue;                                           // 0x8(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	enum class ETextCommit                       CommitMethod;                                      // 0xC(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_21BC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionUse
struct UContextMenu_PrimalItem_HandleActionUse_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionUnequip
struct UContextMenu_PrimalItem_HandleActionUnequip_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionTransfer
struct UContextMenu_PrimalItem_HandleActionTransfer_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionTrack
struct UContextMenu_PrimalItem_HandleActionTrack_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitOne
struct UContextMenu_PrimalItem_HandleActionSplitOne_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitHalf
struct UContextMenu_PrimalItem_HandleActionSplitHalf_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAmount
struct UContextMenu_PrimalItem_HandleActionSplitAmount_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAll
struct UContextMenu_PrimalItem_HandleActionSplitAll_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionSetCraftQuantity
struct UContextMenu_PrimalItem_HandleActionSetCraftQuantity_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRepair
struct UContextMenu_PrimalItem_HandleActionRepair_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRenameFolder
struct UContextMenu_PrimalItem_HandleActionRenameFolder_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveSkin
struct UContextMenu_PrimalItem_HandleActionRemoveSkin_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveCosmetic
struct UContextMenu_PrimalItem_HandleActionRemoveCosmetic_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAmmo
struct UContextMenu_PrimalItem_HandleActionRemoveAmmo_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAccessory
struct UContextMenu_PrimalItem_HandleActionRemoveAccessory_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionFavorite
struct UContextMenu_PrimalItem_HandleActionFavorite_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionFastInventoryInFolder
struct UContextMenu_PrimalItem_HandleActionFastInventoryInFolder_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquipAllInFolder
struct UContextMenu_PrimalItem_HandleActionEquipAllInFolder_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquip
struct UContextMenu_PrimalItem_HandleActionEquip_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionDiscard
struct UContextMenu_PrimalItem_HandleActionDiscard_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionDeleteFolder
struct UContextMenu_PrimalItem_HandleActionDeleteFolder_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCustom
struct UContextMenu_PrimalItem_HandleActionCustom_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class FName                                  ContextItemName;                                   // 0x8(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftOne
struct UContextMenu_PrimalItem_HandleActionCraftOne_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAmount
struct UContextMenu_PrimalItem_HandleActionCraftAmount_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAll
struct UContextMenu_PrimalItem_HandleActionCraftAll_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ContextMenu_PrimalItem.HandleActionApplyCosmetic
struct UContextMenu_PrimalItem_HandleActionApplyCosmetic_Params
{
public:
	class UContextMenuItem*                      Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomButtonWidget.SetToggledState
struct UCustomButtonWidget_SetToggledState_Params
{
public:
	bool                                         IsToggled;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomButtonWidget.SetIsToggleButton
struct UCustomButtonWidget_SetIsToggleButton_Params
{
public:
	bool                                         IsToggle;                                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomButtonWidget.GetToggledState
struct UCustomButtonWidget_GetToggledState_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomButtonWidget.GetIsToggleButton
struct UCustomButtonWidget_GetIsToggleButton_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomButtonWidget.BPSetToggledState
struct UCustomButtonWidget_BPSetToggledState_Params
{
public:
	bool                                         IsToggled;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1A8 (0x1A8 - 0x0)
// Function ShooterGame.ShooterGameMode.UpdateTribeData
struct AShooterGameMode_UpdateTribeData_Params
{
public:
	struct FTribeData                            NewTribeData;                                      // 0x0(0x1A8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.TryGetIntOptionIni
struct AShooterGameMode_TryGetIntOptionIni_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Value;                                             // 0x20(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_221B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.TryGetIntOption
struct AShooterGameMode_TryGetIntOption_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Options;                                           // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	class FString                                OptionName;                                        // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Value;                                             // 0x30(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_221D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.TryGetBoolOptionIni
struct AShooterGameMode_TryGetBoolOptionIni_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Value;                                             // 0x20(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2224[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.TryGetBoolOption
struct AShooterGameMode_TryGetBoolOption_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Options;                                           // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	class FString                                OptionName;                                        // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Value;                                             // 0x30(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x31(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_222E[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameMode.TriggerLevelCustomEvents
struct AShooterGameMode_TriggerLevelCustomEvents_Params
{
public:
	class UWorld*                                InWorld;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	class FString                                EventName;                                         // 0x8(0x10)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        IDtoOnlyAllowExecutionOncePerFrame;                // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2231[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.TimeSinceMissionDeactivated
struct AShooterGameMode_TimeSinceMissionDeactivated_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2235[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.StartIntervalUpdatingCachedTeamTameLists
struct AShooterGameMode_StartIntervalUpdatingCachedTeamTameLists_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.SetTimeOfDay
struct AShooterGameMode_SetTimeOfDay_Params
{
public:
	class FString                                TimeString;                                        // 0x0(0x10)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.SetLastMissionDeactivatedUtcTime
struct AShooterGameMode_SetLastMissionDeactivatedUtcTime_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	double                                       UtcTime;                                           // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterGameMode.SendServerNotification
struct AShooterGameMode_SendServerNotification_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayScale;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x24(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x28(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        ReceiverTeamId;                                    // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        ReceiverPlayerID;                                  // 0x3C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bDoBillboard;                                      // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_224B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterGameMode.SendServerDirectMessage
struct AShooterGameMode_SendServerDirectMessage_Params
{
public:
	class FString                                PlayerSteamIDconst;                                // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class FString                                MessageText;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x20(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsBold;                                           // 0x30(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2255[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReceiverTeamId;                                    // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        ReceiverPlayerID;                                  // 0x38(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2256[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlayerName;                                        // 0x40(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                SenderId;                                          // 0x50(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterGameMode.SendServerChatMessage
struct AShooterGameMode_SendServerChatMessage_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsBold;                                           // 0x20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2260[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReceiverTeamId;                                    // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        ReceiverPlayerID;                                  // 0x28(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2263[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SenderId;                                          // 0x30(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.ShooterGameMode.SendChatMessageToTeam
struct AShooterGameMode_SendChatMessageToTeam_Params
{
public:
	int32                                        Team;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_226C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalChatMessage                    Message;                                           // 0x8(0xA0)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.ShooterGameMode.SendChatMessageToPlayer
struct AShooterGameMode_SendChatMessageToPlayer_Params
{
public:
	class AShooterPlayerController*              ToPlayer;                                          // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalChatMessage                    Message;                                           // 0x8(0xA0)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.ShooterGameMode.SendChatMessage
struct AShooterGameMode_SendChatMessage_Params
{
public:
	struct FPrimalChatMessage                    Message;                                           // 0x0(0xA0)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterGameMode.SaveWorld
struct AShooterGameMode_SaveWorld_Params
{
public:
	bool                                         bForceSynchronous;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEvenIfSaveLoadIsDisabled;                    // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterGameMode.SaveSimpleLogFileOfFormerTribeOwnerIDsAndTheirTimestamps
struct AShooterGameMode_SaveSimpleLogFileOfFormerTribeOwnerIDsAndTheirTimestamps_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        OwnerIDToAdd;                                      // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2271[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.RequestUpdateCachedTeamTameList
struct AShooterGameMode_RequestUpdateCachedTeamTameList_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.RequestPlayerRecieveKnownCachedTeamTameList
struct AShooterGameMode_RequestPlayerRecieveKnownCachedTeamTameList_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.RemovePlayerData
struct AShooterGameMode_RemovePlayerData_Params
{
public:
	class AShooterPlayerState*                   PlayerState;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.QueueUpTeamForItsCachedTeamTameListToBeUpdated
struct AShooterGameMode_QueueUpTeamForItsCachedTeamTameListToBeUpdated_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.PrintToServerGameLog
struct AShooterGameMode_PrintToServerGameLog_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bSendChatToAllAdmins;                              // 0x10(0x1)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_227D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.PrintToGameplayLog
struct AShooterGameMode_PrintToGameplayLog_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.PostAlarmNotificationTribe
struct AShooterGameMode_PostAlarmNotificationTribe_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2283[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Title;                                             // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x18(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.PostAlarmNotificationPlayerID
struct AShooterGameMode_PostAlarmNotificationPlayerID_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2287[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Title;                                             // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x18(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterGameMode.PostAlarmNotification
struct AShooterGameMode_PostAlarmNotification_Params
{
public:
	class FString                                SteamID;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Title;                                             // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x20(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.OnLogout
struct AShooterGameMode_OnLogout_Params
{
public:
	class AController*                           Exiting;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterGameMode.LoadWorld
struct AShooterGameMode_LoadWorld_Params
{
public:
	bool                                         bForceEvenIfLoadingIsDisabled;                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.ShooterGameMode.LoadTribeData
struct AShooterGameMode_LoadTribeData_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_228F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            LoadedTribeData;                                   // 0x8(0x1A8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsLoadingBackup;                                  // 0x1B0(0x1)(ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontCheckDirtyTribeWar;                           // 0x1B1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2291[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.LoadAbandonedTribeFile
struct AShooterGameMode_LoadAbandonedTribeFile_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2296[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.ListAllPlayers
struct AShooterGameMode_ListAllPlayers_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.KickPlayerController
struct AShooterGameMode_KickPlayerController_Params
{
public:
	class APlayerController*                     ThePC;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                KickMessage;                                       // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsTimeSinceMissionDeactivated
struct AShooterGameMode_IsTimeSinceMissionDeactivated_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        CheckTimeSince;                                    // 0x8(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bForceTrueAtZeroTime;                              // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22A1[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterGameMode.IsTeamIncludedInNextBatchToProcessTameList
struct AShooterGameMode_IsTeamIncludedInNextBatchToProcessTameList_Params
{
public:
	int32                                        Team;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor)
	int32                                        FoundIndex;                                        // 0x4(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22A3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterGameMode.IsTeamCurrentlyUpdatingItsCachedTeamTameList
struct AShooterGameMode_IsTeamCurrentlyUpdatingItsCachedTeamTameList_Params
{
public:
	int32                                        Team;                                              // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor)
	int32                                        FoundIndex;                                        // 0x4(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22A7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerInNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList
struct AShooterGameMode_IsPlayerInNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        FoundIndex;                                        // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22AA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToJoinNoCheck
struct AShooterGameMode_IsPlayerControllerAllowedToJoinNoCheck_Params
{
public:
	class AShooterPlayerController*              ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22AC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToExclusiveJoin
struct AShooterGameMode_IsPlayerControllerAllowedToExclusiveJoin_Params
{
public:
	class AShooterPlayerController*              ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22B1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerAwaitingToRecieveCachedTeamTameListASAP
struct AShooterGameMode_IsPlayerAwaitingToRecieveCachedTeamTameListASAP_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        FoundIndex;                                        // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22B4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerAwaitingNotificationOnceTheirCachedTeamTameListFinishesUpdating
struct AShooterGameMode_IsPlayerAwaitingNotificationOnceTheirCachedTeamTameListFinishesUpdating_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        FoundIndex;                                        // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22B7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerArrayOfInAllPlayersAwaitingUpdatedCachedTeamTameLists
struct AShooterGameMode_IsPlayerArrayOfInAllPlayersAwaitingUpdatedCachedTeamTameLists_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        FoundIndex;                                        // 0x8(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22BC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsPlayerAllowedToCheat
struct AShooterGameMode_IsPlayerAllowedToCheat_Params
{
public:
	class AShooterPlayerController*              ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22BF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IsCachedTeamTameListOutOfDate
struct AShooterGameMode_IsCachedTeamTameListOutOfDate_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22C0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterGameMode.InitOptionString
struct AShooterGameMode_InitOptionString_Params
{
public:
	class FString                                Commandline;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Section;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Option;                                            // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.InitOptionInteger
struct AShooterGameMode_InitOptionInteger_Params
{
public:
	class FString                                Commandline;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Section;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Option;                                            // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	int32                                        CurrentValue;                                      // 0x30(0x4)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_22CC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.InitOptionFloat
struct AShooterGameMode_InitOptionFloat_Params
{
public:
	class FString                                Commandline;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Section;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Option;                                            // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	float                                        CurrentValue;                                      // 0x30(0x4)(ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_22D8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.InitOptionBool
struct AShooterGameMode_InitOptionBool_Params
{
public:
	class FString                                Commandline;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Section;                                           // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Option;                                            // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	bool                                         bDefaultValue;                                     // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22DC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.IncrementNumDeaths
struct AShooterGameMode_IncrementNumDeaths_Params
{
public:
	class FString                                PlayerDataID;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.HitchDetected
struct AShooterGameMode_HitchDetected_Params
{
public:
	struct FSoftObjectPath                       ForAsset;                                          // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        HitchTime;                                         // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22E3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameMode.HandleNewPlayer
struct AShooterGameMode_HandleNewPlayer_Params
{
public:
	class AShooterPlayerController*              NewPlayer;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class UPrimalPlayerData*                     PlayerData;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x10(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsFromLogin;                                      // 0x18(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22E9[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B0 (0x1B0 - 0x0)
// Function ShooterGame.ShooterGameMode.GetTribeDataBlueprint
struct AShooterGameMode_GetTribeDataBlueprint_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_22EC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            ReturnValue;                                       // 0x8(0x1A8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterGameMode.GetStringOption
struct AShooterGameMode_GetStringOption_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.GetSessionTimeString
struct AShooterGameMode_GetSessionTimeString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetServerSettingsFloat
struct AShooterGameMode_GetServerSettingsFloat_Params
{
public:
	class FString                                KeyValue;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutFloat;                                          // 0x10(0x4)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_22F2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetServerName
struct AShooterGameMode_GetServerName_Params
{
public:
	bool                                         bNumbersAndLettersOnly;                            // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22F5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetPlayerData
struct AShooterGameMode_GetPlayerData_Params
{
public:
	class FString                                PlayerDataID;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	class UPrimalPlayerData*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterGameMode.GetOverlappingDinoCharactersOfTeamAndClass
struct AShooterGameMode_GetOverlappingDinoCharactersOfTeamAndClass_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OverlapRange;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_22FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoClass;                                         // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoTeam;                                          // 0x28(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExactClassMatch;                                  // 0x2C(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreClass;                                      // 0x2D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2300[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.ShooterGameMode.GetOrLoadTribeData_ReturnAbandonedResult
struct AShooterGameMode_GetOrLoadTribeData_ReturnAbandonedResult_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2302[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            LoadedTribeData;                                   // 0x8(0x1A8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsAbandoned;                                       // 0x1B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2304[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.ShooterGameMode.GetOrLoadTribeData
struct AShooterGameMode_GetOrLoadTribeData_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2308[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeData                            LoadedTribeData;                                   // 0x8(0x1A8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_230A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetNumDeaths
struct AShooterGameMode_GetNumDeaths_Params
{
public:
	class FString                                PlayerDataID;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2310[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetNumberOfLivePlayersOnTribe
struct AShooterGameMode_GetNumberOfLivePlayersOnTribe_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2312[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.GetLaunchOptionFloat
struct AShooterGameMode_GetLaunchOptionFloat_Params
{
public:
	class FString                                LaunchOptionKey;                                   // 0x0(0x10)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnVal;                                         // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2319[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.GetLastMissionDeactivatedUtcTime
struct AShooterGameMode_GetLastMissionDeactivatedUtcTime_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.GetIntOptionIni
struct AShooterGameMode_GetIntOptionIni_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_231B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.GetFloatOptionIni
struct AShooterGameMode_GetFloatOptionIni_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_231C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGameMode.GetBoolOptionIni
struct AShooterGameMode_GetBoolOptionIni_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OptionName;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDefaultValue;                                     // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2321[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterGameMode.ForceRepopulateFoliageAtPoint
struct AShooterGameMode_ForceRepopulateFoliageAtPoint_Params
{
public:
	struct FVector                               AtPoint;                                           // 0x0(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxRangeFromPoint;                                 // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxNumFoliages;                                    // 0x1C(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                RepopulatedEmitter;                                // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               StructureDownTraceVector;                          // 0x28(0x18)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               StructureUpTraceVector;                            // 0x40(0x18)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontCheckForOverlaps;                             // 0x58(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2329[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TriggeredByTeamID;                                 // 0x5C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckAreaAroundEachIndividualFoliage;             // 0x60(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_232C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RadiusAroundEachIndivitualFoliageToCheck;          // 0x64(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReallyForceIt;                                    // 0x68(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_232D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameMode.ForceRepopulateAllHarvestElements
struct AShooterGameMode_ForceRepopulateAllHarvestElements_Params
{
public:
	struct FVector                               AtPoint;                                           // 0x0(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxRangeFromPoint;                                 // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2332[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.ForceCreateTribe
struct AShooterGameMode_ForceCreateTribe_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        TeamOverride;                                      // 0x10(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameMode.ForceAddPlayerToTribe
struct AShooterGameMode_ForceAddPlayerToTribe_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TribeName;                                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2336[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.FilterBadWords
struct AShooterGameMode_FilterBadWords_Params
{
public:
	class FString                                String;                                            // 0x0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckWithoutSpecialChars;                         // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_233E[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterGameMode.CountOverlappingDinoCharactersOfTeamAndClass
struct AShooterGameMode_CountOverlappingDinoCharactersOfTeamAndClass_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        OverlapRange;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_234B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoClass;                                         // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoTeam;                                          // 0x28(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExactClassMatch;                                  // 0x2C(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreClass;                                      // 0x2D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_234F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x30(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2351[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.ClearLastMissionDeactivatedTime
struct AShooterGameMode_ClearLastMissionDeactivatedTime_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.CheckJoinInProgress
struct AShooterGameMode_CheckJoinInProgress_Params
{
public:
	bool                                         bIsFromLogin;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_235D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     NewPlayer;                                         // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_235E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.ShooterGameMode.ChatLogAppend
struct AShooterGameMode_ChatLogAppend_Params
{
public:
	class AShooterPlayerController*              SenderController;                                  // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalChatMessage                    Message;                                           // 0x8(0xA0)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.BPPreSpawnedDino
struct AShooterGameMode_BPPreSpawnedDino_Params
{
public:
	class APrimalDinoCharacter*                  TheDino;                                           // 0x0(0x8)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.BPIsSpawnpointPreferred
struct AShooterGameMode_BPIsSpawnpointPreferred_Params
{
public:
	class APlayerStart*                          SpawnPoint;                                        // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           Player;                                            // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2378[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.BPIsSpawnpointAllowed
struct AShooterGameMode_BPIsSpawnpointAllowed_Params
{
public:
	class APlayerStart*                          SpawnPoint;                                        // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           Player;                                            // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2381[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.BPGetActorSaveGameTypes
struct AShooterGameMode_BPGetActorSaveGameTypes_Params
{
public:
	TArray<class UClass*>                        SaveGameTypes;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.ShooterGameMode.BPDoInitSessionParams
struct AShooterGameMode_BPDoInitSessionParams_Params
{
public:
	struct FShooterGameSessionParams             Params;                                            // 0x0(0xB0)(Edit, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, SubobjectReference)
	struct FShooterGameSessionParams             ReturnValue;                                       // 0xB0(0xB0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameMode.BPDoInitGame
struct AShooterGameMode_BPDoInitGame_Params
{
public:
	class FString                                MapName;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Options;                                           // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterGameMode.AreTribesAllied
struct AShooterGameMode_AreTribesAllied_Params
{
public:
	int32                                        TribeID1;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TribeID2;                                          // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_238A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.AllowTaming
struct AShooterGameMode_AllowTaming_Params
{
public:
	int32                                        ForTeam;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_238B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.AllowDamage
struct AShooterGameMode_AllowDamage_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TargetingTeam1;                                    // 0x8(0x4)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TargetingTeam2;                                    // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreDamageIfAllied;                             // 0x10(0x1)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2394[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.AdminExit
struct AShooterGameMode_AdminExit_Params
{
public:
	class FString                                Verify;                                            // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameMode.AddToTribeLog
struct AShooterGameMode_AddToTribeLog_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2397[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewLog;                                            // 0x8(0x10)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameMode.AddPlayerToNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList
struct AShooterGameMode_AddPlayerToNextTeamBatchPlayersAwaitingUpdatedCachedTeamTameList_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_239A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameMode.AddPlayerToBeNotifiedWhenCachedTeamTameListIsUpdated
struct AShooterGameMode_AddPlayerToBeNotifiedWhenCachedTeamTameListIsUpdated_Params
{
public:
	class AShooterPlayerController*              RequestingPlayer;                                  // 0x0(0x8)(Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.SaveIntToConfig
struct ACustomGameMode_SaveIntToConfig_Params
{
public:
	int32                                        IntValue;                                          // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2473[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                KeyValue;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.SaveFloatToConfig
struct ACustomGameMode_SaveFloatToConfig_Params
{
public:
	float                                        IntValue;                                          // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2475[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                KeyValue;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.SaveBoolToConfig
struct ACustomGameMode_SaveBoolToConfig_Params
{
public:
	bool                                         IntValue;                                          // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2478[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                KeyValue;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1B0 (0x1B0 - 0x0)
// Function ShooterGame.CustomGameMode.OnUpdateTribeData
struct ACustomGameMode_OnUpdateTribeData_Params
{
public:
	struct FTribeData                            NewTribeData;                                      // 0x0(0x1A8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1A8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_247C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.CustomGameMode.OnRemoveTribe
struct ACustomGameMode_OnRemoveTribe_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_247E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.OnPlayerCanRestart
struct ACustomGameMode_OnPlayerCanRestart_Params
{
public:
	class APlayerController*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2481[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.OnIsUsedSpawnPointStillSupported
struct ACustomGameMode_OnIsUsedSpawnPointStillSupported_Params
{
public:
	class APlayerStart*                          SpawnPoint;                                        // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           Player;                                            // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2486[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.OnIsSpawnpointAllowed
struct ACustomGameMode_OnIsSpawnpointAllowed_Params
{
public:
	class APlayerStart*                          SpawnPoint;                                        // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           Player;                                            // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_248C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.OnInitOptionEvent
struct ACustomGameMode_OnInitOptionEvent_Params
{
public:
	class FString                                Options;                                           // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_248E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameMode.OnInitGameState
struct ACustomGameMode_OnInitGameState_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.CustomGameMode.OnInitGame
struct ACustomGameMode_OnInitGame_Params
{
public:
	class FString                                MapName;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Options;                                           // 0x10(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	class FString                                ErrorMessage;                                      // 0x20(0x10)(Edit, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2490[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameMode.OnHandleLeavingMap
struct ACustomGameMode_OnHandleLeavingMap_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameMode.OnDoGameCommand
struct ACustomGameMode_OnDoGameCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowRenameTribe
struct ACustomGameMode_OnAllowRenameTribe_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TribeName;                                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2494[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowNotifyRemotePlayerDeath
struct ACustomGameMode_OnAllowNotifyRemotePlayerDeath_Params
{
public:
	class AShooterCharacter*                     ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2496[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowModifyStatusValue
struct ACustomGameMode_OnAllowModifyStatusValue_Params
{
public:
	class UPrimalCharacterStatusComponent*       ForComp;                                           // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2498[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Amount;                                            // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2499[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowClearTribe
struct ACustomGameMode_OnAllowClearTribe_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_249D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowAddXP
struct ACustomGameMode_OnAllowAddXP_Params
{
public:
	class UPrimalCharacterStatusComponent*       ForComp;                                           // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_249F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.CustomGameMode.OnAllowAddToTribe
struct ACustomGameMode_OnAllowAddToTribe_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTribeData                            MyNewTribe;                                        // 0x8(0x1A8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24A4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.CustomGameMode.OnAdjustDamage
struct ACustomGameMode_OnAdjustDamage_Params
{
public:
	class AActor*                                Victim;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        DefaultDamage;                                     // 0x8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_24AC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24AF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x218 (0x218 - 0x0)
// Function ShooterGame.CustomGameMode.MakeTribeData
struct ACustomGameMode_MakeTribeData_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OwnerPlayerDataId;                                 // 0x10(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	int32                                        TribeID;                                           // 0x14(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	TArray<class FString>                        MembersPlayerName;                                 // 0x18(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                MembersPlayerDataID;                               // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                TribeAdmins;                                       // 0x38(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetGovernment;                                    // 0x48(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_24B4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeGovernment                      TribeGovernment;                                   // 0x4C(0x14)(Edit, BlueprintReadOnly, Parm, Config)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                    // 0x60(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FTribeData                            ReturnValue;                                       // 0x70(0x1A8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.KickPlayersWithoutCharacter
struct ACustomGameMode_KickPlayersWithoutCharacter_Params
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.CustomGameMode.KickPlayer
struct ACustomGameMode_KickPlayer_Params
{
public:
	class APlayerController*                     NewPlayer;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameMode.IsInAllowedToCheatList
struct ACustomGameMode_IsInAllowedToCheatList_Params
{
public:
	class APlayerController*                     NewPlayer;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24BC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameMode.InitOptionFloatToINI
struct ACustomGameMode_InitOptionFloatToINI_Params
{
public:
	class FString                                Options;                                           // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	float                                        FloatValue;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_24C0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                KeyValue;                                          // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.GetValueFromINI
struct ACustomGameMode_GetValueFromINI_Params
{
public:
	class FString                                KeyValue;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24C2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.GetIntValueFromINI
struct ACustomGameMode_GetIntValueFromINI_Params
{
public:
	class FString                                KeyValue;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24C5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameMode.GetIniFloatValue
struct ACustomGameMode_GetIniFloatValue_Params
{
public:
	class FString                                Section;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                KeyValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24CD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.GetFloatValueFromINI
struct ACustomGameMode_GetFloatValueFromINI_Params
{
public:
	class FString                                KeyValue;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24D4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.GetBoolValueFromINI
struct ACustomGameMode_GetBoolValueFromINI_Params
{
public:
	class FString                                KeyValue;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24D8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameMode.CheckForCommand
struct ACustomGameMode_CheckForCommand_Params
{
public:
	class FString                                CommandName;                                       // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_24DB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x218 (0x218 - 0x0)
// Function ShooterGame.CustomGameMode.BreakTribeData
struct ACustomGameMode_BreakTribeData_Params
{
public:
	struct FTribeData                            Data;                                              // 0x0(0x1A8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                TribeName;                                         // 0x1A8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OwnerPlayerDataId;                                 // 0x1B8(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	int32                                        TribeID;                                           // 0x1BC(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	TArray<class FString>                        MembersPlayerName;                                 // 0x1C0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                MembersPlayerDataID;                               // 0x1D0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                TribeAdmins;                                       // 0x1E0(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetGovernment;                                    // 0x1F0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_24E8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeGovernment                      TribeGovernment;                                   // 0x1F4(0x14)(Edit, BlueprintReadOnly, Parm, Config)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                    // 0x208(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.CustomGameMode.BlueprintRemoveTribe
struct ACustomGameMode_BlueprintRemoveTribe_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameState.SpawnBuffAndAttachToCharacter
struct ACustomGameState_SpawnBuffAndAttachToCharacter_Params
{
public:
	class UClass*                                Buff;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      PrimalCharacter;                                   // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ExperiencePoints;                                  // 0x10(0x4)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_24FE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff*                           ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.SetTribeTexture
struct ACustomGameState_SetTribeTexture_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2501[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPaintingTexture*                      NewTexture;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.CustomGameState.SetScoreDataForTribe
struct ACustomGameState_SetScoreDataForTribe_Params
{
public:
	int32                                        ForTargetingTeam;                                  // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSOTFScoreTribeData                   NewScoreData;                                      // 0x4(0xC)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToClients;                               // 0x10(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2507[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.CustomGameState.SetScoreDataForPlayer
struct ACustomGameState_SetScoreDataForPlayer_Params
{
public:
	int32                                        LinkedID;                                          // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_250B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSOTFScorePlayerData                  NewScoreData;                                      // 0x8(0x48)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToClients;                               // 0x50(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_250C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.CustomGameState.SetActionReportItem
struct ACustomGameState_SetActionReportItem_Params
{
public:
	struct FActionReportItem                     Data;                                              // 0x0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                PlayerName;                                        // 0x50(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                TribeName;                                         // 0x60(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                TimeOfDeath;                                       // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                LevelOfDeath;                                      // 0x80(0x10)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DeathMessage;                                      // 0x90(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.CustomGameState.RemoveTribeFlag
struct ACustomGameState_RemoveTribeFlag_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.CustomGameState.ProjectWorldToScreenPosition
struct ACustomGameState_ProjectWorldToScreenPosition_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class APlayerController*                     ThePC;                                             // 0x18(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnOverrideDynamicMusic
struct ACustomGameState_OnOverrideDynamicMusic_Params
{
public:
	class APrimalCharacter*                      ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class USoundBase*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameState.OnNotifyPlayerDied
struct ACustomGameState_OnNotifyPlayerDied_Params
{
public:
	class AShooterCharacter*                     TheShooterChar;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PrevController;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 InstigatingPawn;                                   // 0x10(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnHasGameModeMatchStarted
struct ACustomGameState_OnHasGameModeMatchStarted_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameState.OnHandleActorEvent
struct ACustomGameState_OnHandleActorEvent_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  NameParam;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               VecParam;                                          // 0x10(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.OnForceOccludedFloatingHUD
struct ACustomGameState_OnForceOccludedFloatingHUD_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_252B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnExtraShooterCharacterTick
struct ACustomGameState_OnExtraShooterCharacterTick_Params
{
public:
	class AShooterCharacter*                     ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x8(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2530[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnDrawingHUDNotifications
struct ACustomGameState_OnDrawingHUDNotifications_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2536[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnDrawHUD
struct ACustomGameState_OnDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_253B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameState.OnDrawExtraPlayerFloatingHUD
struct ACustomGameState_OnDrawExtraPlayerFloatingHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class AShooterCharacter*                     TheShooterChar;                                    // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x10(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnCheckGameStateIfCanRespawn
struct ACustomGameState_OnCheckGameStateIfCanRespawn_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2540[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowTribeManager
struct ACustomGameState_OnAllowTribeManager_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2544[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowTribeManagement
struct ACustomGameState_OnAllowTribeManagement_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowStartSupplyCrateSpawns
struct ACustomGameState_OnAllowStartSupplyCrateSpawns_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowShowPlayerHudUI
struct ACustomGameState_OnAllowShowPlayerHudUI_Params
{
public:
	class APrimalCharacter*                      ForPawn;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_254A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowRemoveItems
struct ACustomGameState_OnAllowRemoveItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInv;                                            // 0x0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItemToTransfer;                                  // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_254E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowPopUps
struct ACustomGameState_OnAllowPopUps_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowOrbitCamera
struct ACustomGameState_OnAllowOrbitCamera_Params
{
public:
	class APrimalCharacter*                      ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2551[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowFastTravel
struct ACustomGameState_OnAllowFastTravel_Params
{
public:
	class APrimalStructureBed*                   ForBed;                                            // 0x0(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2555[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowDaytimeTransitionSounds
struct ACustomGameState_OnAllowDaytimeTransitionSounds_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.OnAllowCreateSurvivor
struct ACustomGameState_OnAllowCreateSurvivor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.CustomGameState.MakePlayerDeathNotification
struct ACustomGameState_MakePlayerDeathNotification_Params
{
public:
	class FString                                PlayerDeathStringEnemy;                            // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerDeathStringAlly;                             // 0x10(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerDeathStringYou;                              // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DeathReason;                                       // 0x30(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FString>                        DeadPlayerNames;                                   // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsTribeDeath;                                     // 0x50(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_255C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DeathTribeName;                                    // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TargetingTeamID;                                   // 0x68(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_255E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LinkedPlayerID;                                    // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                       // 0x80(0x10)(Edit, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	struct FPlayerDeathNotification              ReturnValue;                                       // 0x90(0x88)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.CustomGameState.MakeBattleTribeData
struct ACustomGameState_MakeBattleTribeData_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        TribeID;                                           // 0x10(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2564[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBattleTribeData                      ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.CustomGameState.MakeBattlePlayerData
struct ACustomGameState_MakeBattlePlayerData_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bConnected;                                        // 0x10(0x1)(DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAlive;                                            // 0x11(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2569[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TribeID;                                           // 0x14(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class FString                                PlayerID;                                          // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FBattlePlayerData                     ReturnValue;                                       // 0x28(0x20)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.KickPlayer
struct ACustomGameState_KickPlayer_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                Reason;                                            // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.CustomGameState.IsTribeID
struct ACustomGameState_IsTribeID_Params
{
public:
	int32                                        TeamID;                                            // 0x0(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2570[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.CustomGameState.IsAuthorityRole
struct ACustomGameState_IsAuthorityRole_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.CustomGameState.HideUIScene
struct ACustomGameState_HideUIScene_Params
{
public:
	class UClass*                                SceneClass;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.GetTribeTexture
struct ACustomGameState_GetTribeTexture_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2576[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.CustomGameState.GetTimeSeconds
struct ACustomGameState_GetTimeSeconds_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameState.GetPlayerDatasForTribe
struct ACustomGameState_GetPlayerDatasForTribe_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_257B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBattlePlayerData>             AllPlayerDatas;                                    // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBattlePlayerData>             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.GetPawnName
struct ACustomGameState_GetPawnName_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.GetPawnKillerName
struct ACustomGameState_GetPawnKillerName_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.GetFilteredAllyRadarTargets
struct ACustomGameState_GetFilteredAllyRadarTargets_Params
{
public:
	TArray<struct FAllyRadarDatas>               ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.CustomGameState.GetDeathNotificationText
struct ACustomGameState_GetDeathNotificationText_Params
{
public:
	class AShooterCharacter*                     TheShooterChar;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 InstigatingPawn;                                   // 0x8(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                Killer;                                            // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class FString                                KillerAndTribe;                                    // 0x20(0x10)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TheNotificationStringYou;                          // 0x30(0x10)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TheNotificationStringAlly;                         // 0x40(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                TheNotificationStringEnemy;                        // 0x50(0x10)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.GetCustomActors
struct ACustomGameState_GetCustomActors_Params
{
public:
	class FName                                  SearchCustomTag;                                   // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class ACustomActorList*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.CustomGameState.GetColorForTargetingTeam
struct ACustomGameState_GetColorForTargetingTeam_Params
{
public:
	int32                                        ForTargetingTeam;                                  // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                NameColor;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                PlatformProfileNameColor;                          // 0x8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.GetAllShooterControllers
struct ACustomGameState_GetAllShooterControllers_Params
{
public:
	TArray<class AShooterPlayerController*>      ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.GetAllShooterCharactersOfTeam
struct ACustomGameState_GetAllShooterCharactersOfTeam_Params
{
public:
	int32                                        KillerTeam;                                        // 0x0(0x4)(Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2590[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AShooterCharacter*>             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.GetAllShooterCharacters
struct ACustomGameState_GetAllShooterCharacters_Params
{
public:
	TArray<class AShooterCharacter*>             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.CustomGameState.GetAllDinoCharactersOfTeam
struct ACustomGameState_GetAllDinoCharactersOfTeam_Params
{
public:
	int32                                        KillerTeam;                                        // 0x0(0x4)(Net, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2594[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.CustomGameState.DrawTileOnCanvas
struct ACustomGameState_DrawTileOnCanvas_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class UTexture*                              Tex;                                               // 0x8(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        X;                                                 // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x14(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        XL;                                                // 0x18(0x4)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        YL;                                                // 0x1C(0x4)(ConstParm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        U;                                                 // 0x20(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        V;                                                 // 0x24(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        UL;                                                // 0x28(0x4)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        VL;                                                // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FColor                                DrawColor;                                         // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Pad_259A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.CreateScoreDataForTribe
struct ACustomGameState_CreateScoreDataForTribe_Params
{
public:
	TArray<int32>                                TargetingTeams;                                    // 0x0(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.CreateScoreDataForPlayers
struct ACustomGameState_CreateScoreDataForPlayers_Params
{
public:
	TArray<int32>                                LinkedIDs;                                         // 0x0(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.CustomGameState.CreateDeathNotification
struct ACustomGameState_CreateDeathNotification_Params
{
public:
	class AShooterCharacter*                     TheShooterChar;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PrevController;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 InstigatingPawn;                                   // 0x10(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxNumberOfRespawns;                               // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_25A4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlayerDeathNotification              ReturnValue;                                       // 0x20(0x88)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.CustomGameState.CreateDamageEvent
struct ACustomGameState_CreateDamageEvent_Params
{
public:
	struct FDamageEvent                          ReturnValue;                                       // 0x0(0x20)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.CustomGameState.CheckTimeSince
struct ACustomGameState_CheckTimeSince_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Duration;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_25A9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.CustomGameState.BroadcastActorCustomEvent
struct ACustomGameState_BroadcastActorCustomEvent_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  EventCustomName;                                   // 0x8(0x8)(Edit, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class FString                                EventCustomString;                                 // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class AActor*                                InstigatorActor;                                   // 0x20(0x8)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x208 (0x208 - 0x0)
// Function ShooterGame.CustomGameState.BreakTribeData
struct ACustomGameState_BreakTribeData_Params
{
public:
	struct FTribeData                            InData;                                            // 0x0(0x1A8)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                TribeName;                                         // 0x1A8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        OwnerPlayerDataId;                                 // 0x1B8(0x4)(ConstParm, ExportObject, Net, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	int32                                        TribeID;                                           // 0x1BC(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	TArray<class FString>                        MembersPlayerName;                                 // 0x1C0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                MembersPlayerDataID;                               // 0x1D0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                TribeAdmins;                                       // 0x1E0(0x10)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetGovernment;                                    // 0x1F0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25BF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                    // 0x1F8(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.CustomGameState.BreakPlayerDeathNotification
struct ACustomGameState_BreakPlayerDeathNotification_Params
{
public:
	struct FPlayerDeathNotification              Data;                                              // 0x0(0x88)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                PlayerDeathStringEnemy;                            // 0x88(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerDeathStringAlly;                             // 0x98(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerDeathStringYou;                              // 0xA8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DeathReason;                                       // 0xB8(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FString>                        DeadPlayerNames;                                   // 0xC8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsTribeDeath;                                     // 0xD8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25C9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DeathTribeName;                                    // 0xE0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TargetingTeamID;                                   // 0xF0(0x4)(Edit, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25CA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LinkedPlayerID;                                    // 0xF8(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                       // 0x108(0x10)(Edit, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.CustomGameState.BreakBattleTribeData
struct ACustomGameState_BreakBattleTribeData_Params
{
public:
	struct FBattleTribeData                      InData;                                            // 0x0(0x18)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                TribeName;                                         // 0x18(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        TribeID;                                           // 0x28(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25D6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.CustomGameState.BreakBattlePlayerData
struct ACustomGameState_BreakBattlePlayerData_Params
{
public:
	struct FBattlePlayerData                     Data;                                              // 0x0(0x20)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                PlayerName;                                        // 0x20(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bConnected;                                        // 0x30(0x1)(DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAlive;                                            // 0x31(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25DC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TribeID;                                           // 0x34(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class FString                                PlayerID;                                          // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.CustomGameState.BreakActionReportItem
struct ACustomGameState_BreakActionReportItem_Params
{
public:
	struct FActionReportItem                     Data;                                              // 0x0(0x50)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                PlayerName;                                        // 0x50(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                TribeName;                                         // 0x60(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                TimeOfDeath;                                       // 0x70(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                LevelOfDeath;                                      // 0x80(0x10)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DeathMessage;                                      // 0x90(0x10)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.BPGetTribeFlagRef
struct ACustomGameState_BPGetTribeFlagRef_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         CreateFlag;                                        // 0x4(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_25EF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructureTribeFlag*             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.CustomGameState.BPGetScoreDataForTribe
struct ACustomGameState_BPGetScoreDataForTribe_Params
{
public:
	int32                                        ForTargetingTeam;                                  // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSOTFScoreTribeData                   ReturnValue;                                       // 0x4(0xC)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.CustomGameState.BPGetScoreDataForPlayer
struct ACustomGameState_BPGetScoreDataForPlayer_Params
{
public:
	int32                                        LinkedID;                                          // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_25F7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FSOTFScorePlayerData                  ReturnValue;                                       // 0x8(0x48)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DamageVolumeBase.OnEndOverlap
struct ADamageVolumeBase_OnEndOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DamageVolumeBase.OnBeginOverlap
struct ADamageVolumeBase_OnBeginOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListEntryButton_HostSession.GetHasServerData
struct UDataListEntryButton_HostSession_GetHasServerData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListEntryButton_HostSession.GetHasSaveGame
struct UDataListEntryButton_HostSession_GetHasSaveGame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListEntryButton_PrimalItem.HandleOnContextMenuIsOpenChanged
struct UDataListEntryButton_PrimalItem_HandleOnContextMenuIsOpenChanged_Params
{
public:
	bool                                         bIsOpen;                                           // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DataListEntryButton_PrimalItem.GetShowExtraCanvasBar
struct UDataListEntryButton_PrimalItem_GetShowExtraCanvasBar_Params
{
public:
	bool                                         IsVisible;                                         // 0x0(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_2655[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Percent;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	struct FLinearColor                          BarColor;                                          // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListEntryWidget.OnDraggedClickedEventObject
struct UDataListEntryWidget_OnDraggedClickedEventObject_Params
{
public:
	class UWidget*                               DraggeddWidget;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DataListEntryWidget.GetShowExtraCanvasBar
struct UDataListEntryWidget_GetShowExtraCanvasBar_Params
{
public:
	bool                                         IsVisible;                                         // 0x0(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
	uint8                                        Pad_2677[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Percent;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	struct FLinearColor                          BarColor;                                          // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListEntryWidget.GetDataListButton
struct UDataListEntryWidget_GetDataListButton_Params
{
public:
	class UDataListEntryButton*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListPanel.PreemptiveRequestLoadAllEntries
struct UDataListPanel_PreemptiveRequestLoadAllEntries_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DataListValueGeneric.UpdateColorPicker
struct UDataListValueGeneric_UpdateColorPicker_Params
{
public:
	struct FVector2D                             ColorPickerSliderValue;                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetParameterValue
struct UDataListValueGeneric_SetParameterValue_Params
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bPreventCallParent;                                // 0x10(0x1)(Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2695[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetOverridedParameterValue
struct UDataListValueGeneric_SetOverridedParameterValue_Params
{
public:
	class FText                                  Value;                                             // 0x0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bPreventRecall;                                    // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_269B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetOverridedFloatValue
struct UDataListValueGeneric_SetOverridedFloatValue_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetIsSelectedBP
struct UDataListValueGeneric_SetIsSelectedBP_Params
{
public:
	bool                                         Selected;                                          // 0x0(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetFloatValue
struct UDataListValueGeneric_SetFloatValue_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListValueGeneric.SetBoolValue
struct UDataListValueGeneric_SetBoolValue_Params
{
public:
	bool                                         Value;                                             // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DataListValueGeneric.OnOverridedParameterValue
struct UDataListValueGeneric_OnOverridedParameterValue_Params
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bPreventCallParent;                                // 0x10(0x1)(Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_26A6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListValueGeneric.IsExpanded
struct UDataListValueGeneric_IsExpanded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListValueGeneric.HasSlider
struct UDataListValueGeneric_HasSlider_Params
{
public:
	class USlider*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DataListValueGeneric.HasExpandedSlider
struct UDataListValueGeneric_HasExpandedSlider_Params
{
public:
	class USlider*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DataListValueGeneric.HandleOnValueChanged
struct UDataListValueGeneric_HandleOnValueChanged_Params
{
public:
	float                                        InValue;                                           // 0x0(0x4)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DataListValueGeneric.HandleOnOverrideValueChanged
struct UDataListValueGeneric_HandleOnOverrideValueChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_26B3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DataListValueGeneric.GetOverridedFloatValue
struct UDataListValueGeneric_GetOverridedFloatValue_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListValueGeneric.GetIsSelectedBP
struct UDataListValueGeneric_GetIsSelectedBP_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DataListValueGeneric.GetFloatValue
struct UDataListValueGeneric_GetFloatValue_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DataListValueGeneric.GetBoolValue
struct UDataListValueGeneric_GetBoolValue_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DataListValueGeneric.GetAllValueWidgets
struct UDataListValueGeneric_GetAllValueWidgets_Params
{
public:
	TArray<class UWidget*>                       ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DataListValueGeneric.CycleDataValues
struct UDataListValueGeneric_CycleDataValues_Params
{
public:
	class UWidget*                               CurrentHighlighted;                                // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Dir;                                               // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_26C5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UWidget*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DayCycleManager.ShooterCharacterSpawned
struct ADayCycleManager_ShooterCharacterSpawned_Params
{
public:
	class AShooterCharacter*                     TheShooterCharacter;                               // 0x0(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DayCycleManager.ShooterCharacterPossessed
struct ADayCycleManager_ShooterCharacterPossessed_Params
{
public:
	class AShooterCharacter*                     TheShooterCharacter;                               // 0x0(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.DayCycleManager.SetTimeOfDay
struct ADayCycleManager_SetTimeOfDay_Params
{
public:
	int32                                        Hours;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	int32                                        Minutes;                                           // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	int32                                        Seconds;                                           // 0x8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DayCycleManager.IsRainingAtLocation
struct ADayCycleManager_IsRainingAtLocation_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2704[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DayCycleManager.IsDaytime
struct ADayCycleManager_IsDaytime_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.DayCycleManager.GetWindAtLocation
struct ADayCycleManager_GetWindAtLocation_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForPrimalCharacter;                                // 0x18(0x8)(ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_270C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.GetWeatherModifiedAmbientSoundMultiplier
struct ADayCycleManager_GetWeatherModifiedAmbientSoundMultiplier_Params
{
public:
	class ADayCycleAmbientSound*                 ForDayCycleAmbientSound;                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2712[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DayCycleManager.GetWaterLineStartZ
struct ADayCycleManager_GetWaterLineStartZ_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2718[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.DayCycleManager.GetTemperatureAtLocation
struct ADayCycleManager_GetTemperatureAtLocation_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForPrimalCharacter;                                // 0x18(0x8)(ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_272F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.GetPreventBuffClassesInDayCycleLevel
struct ADayCycleManager_GetPreventBuffClassesInDayCycleLevel_Params
{
public:
	TArray<class UClass*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DayCycleManager.GetDeepWaterStartZ
struct ADayCycleManager_GetDeepWaterStartZ_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2732[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DayCycleManager.GetDayNumberString
struct ADayCycleManager_GetDayNumberString_Params
{
public:
	bool                                         bIncludeDayString;                                 // 0x0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2736[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DayCycleManager.BPPostDrawSpawnMap
struct ADayCycleManager_BPPostDrawSpawnMap_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UCanvas*                               ItemCanvas;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemCanvasSize;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.BPOverrideItemAutoDecreaseDurability
struct ADayCycleManager_BPOverrideItemAutoDecreaseDurability_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2749[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.BPOverrideGameStateMatineePlayRate
struct ADayCycleManager_BPOverrideGameStateMatineePlayRate_Params
{
public:
	class AActor*                                ForMatinee;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InPlayRate;                                        // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.DayCycleManager.BPOnDCMCheat
struct ADayCycleManager_BPOnDCMCheat_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DayCycleManager.BPGetAdditionalMapMarkers
struct ADayCycleManager_BPGetAdditionalMapMarkers_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalMapMarkerEntryData>     ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.BPAllowSpawningCrate
struct ADayCycleManager_BPAllowSpawningCrate_Params
{
public:
	class UClass*                                CrateType;                                         // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2755[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.DayCycleManager.BPAdjustTemperature
struct ADayCycleManager_BPAdjustTemperature_Params
{
public:
	float                                        TemperatureIn;                                     // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2758[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ABiomeZoneVolume*                      BiomeZoneVolume;                                   // 0x8(0x8)(ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FVector                               AtLocation;                                        // 0x10(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForPrimalCharacter;                                // 0x28(0x8)(ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x30(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2759[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DayCycleManager.AttemptWeaponFiring
struct ADayCycleManager_AttemptWeaponFiring_Params
{
public:
	class AShooterWeapon*                        TheWeapon;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.AllowWeaponFiring
struct ADayCycleManager_AllowWeaponFiring_Params
{
public:
	class AActor*                                TheWeaponOrStructure;                              // 0x0(0x8)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_275E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DayCycleManager.AllowStructureActivation
struct ADayCycleManager_AllowStructureActivation_Params
{
public:
	class APrimalStructure*                      TheStructure;                                      // 0x0(0x8)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2760[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.DayCycleManager.AdjustStructureItemInsulation
struct ADayCycleManager_AdjustStructureItemInsulation_Params
{
public:
	class AShooterCharacter*                     ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           ForPrimalItem;                                     // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalItemStat                   TypeInsulation;                                    // 0x10(0x1)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2763[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InsulationValue;                                   // 0x14(0x4)(ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2764[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DestructibleActor.SetFadingStaticMesh
struct ADestructibleActor_SetFadingStaticMesh_Params
{
public:
	class UStaticMesh*                           TheMesh;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DestructibleActor.SetFadingSkeletalMesh
struct ADestructibleActor_SetFadingSkeletalMesh_Params
{
public:
	class USkeletalMesh*                         TheMesh;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DestructibleActor.GetFadingMeshComponent
struct ADestructibleActor_GetFadingMeshComponent_Params
{
public:
	class UMeshComponent*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DinoListButtonWidget.SetDinoExpiration
struct UDinoListButtonWidget_SetDinoExpiration_Params
{
public:
	class FString                                Expiration;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DinoListButtonWidget.SetButtonString
struct UDinoListButtonWidget_SetButtonString_Params
{
public:
	class FString                                Status;                                            // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DinoListButtonWidget.OnGetContextMenuContent
struct UDinoListButtonWidget_OnGetContextMenuContent_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DinoListButtonWidget.InitializeWithClick
struct UDinoListButtonWidget_InitializeWithClick_Params
{
public:
	bool                                         bCanExpire;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.DinoListButtonWidget.ForceSetSelected
struct UDinoListButtonWidget_ForceSetSelected_Params
{
public:
	bool                                         bSelected;                                         // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ToolTipWidget.BPUpdateToolTip
struct UToolTipWidget_BPUpdateToolTip_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ToolTipWidget.BPInitToolTip
struct UToolTipWidget_BPInitToolTip_Params
{
public:
	class AShooterPlayerController*              HUDOwner;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ToolTipString;                                     // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               DataListEntry;                                     // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.Object_WithWorldContext.SetWorldContext
struct UObject_WithWorldContext_SetWorldContext_Params
{
public:
	class UObject*                               NewWorldContext;                                   // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.Object_WithWorldContext.GetWorldContextObject
struct UObject_WithWorldContext_GetWorldContextObject_Params
{
public:
	class UObject*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DinoTrackFilterOption.GetSearchActorListType
struct UDinoTrackFilterOption_GetSearchActorListType_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DinoTrackFilterOption.GetOverwrittenAdditionalSearchInputDisplayName
struct UDinoTrackFilterOption_GetOverwrittenAdditionalSearchInputDisplayName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DinoTrackFilterOption.GetFilterDisplayName
struct UDinoTrackFilterOption_GetFilterDisplayName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DinoTrackFilterOption.GetActorsToSearchThrough
struct UDinoTrackFilterOption_GetActorsToSearchThrough_Params
{
public:
	TArray<class AActor*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DroppedItem.ResetLifeSpan
struct ADroppedItem_ResetLifeSpan_Params
{
public:
	float                                        NewLifeSpan;                                       // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DroppedItem.KeepPhysicsActiveForDuration
struct ADroppedItem_KeepPhysicsActiveForDuration_Params
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DroppedItem.IsAllowedToPickupItem
struct ADroppedItem_IsAllowedToPickupItem_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_27E7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.DroppedItem.BPOnItemPickedUp
struct ADroppedItem_BPOnItemPickedUp_Params
{
public:
	class APlayerController*                     ByPC;                                              // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           InventoryItem;                                     // 0x8(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.DroppedItem.BPDroppedItemImpacted
struct ADroppedItem_BPDroppedItemImpacted_Params
{
public:
	struct FHitResult                            ImpactHitInfo;                                     // 0x0(0xF0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DroppedItemMission.GetOwnerMission
struct ADroppedItemMission_GetOwnerMission_Params
{
public:
	class AMissionType*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.DroppedItemTorch.GetFlameColorIndex
struct ADroppedItemTorch_GetFlameColorIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DyeItemSelector.InitDyeSelector
struct UDyeItemSelector_InitDyeSelector_Params
{
public:
	class UPrimalUI*                             PrimalUI;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.DyeItemSelector.HandleOnSearchTextChanged
struct UDyeItemSelector_HandleOnSearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.DyeItemSelector.GetDataListPanel
struct UDyeItemSelector_GetDataListPanel_Params
{
public:
	class UDataListPanel*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.FadingDestructibleActor.BPSetupForFalling
struct AFadingDestructibleActor_BPSetupForFalling_Params
{
public:
	class UStaticMesh*                           InMesh;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            OverrideDestructionMaterials;                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               HitDirection;                                      // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	class USkeletalMesh*                         InSKMesh;                                          // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Rotate;                                            // 0x38(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2842[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Damage;                                            // 0x3C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	float                                        TotalHealth;                                       // 0x40(0x4)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2844[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations_ParticleBoids
struct UFlockingBehavior_UpdateFlockComponentLocations_ParticleBoids_Params
{
public:
	TArray<struct FBoid>                         BoidArray;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UParticleSystemComponent*>      ComponentArray;                                    // 0x10(0x10)(BlueprintVisible, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations
struct UFlockingBehavior_UpdateFlockComponentLocations_Params
{
public:
	TArray<struct FBoid>                         BoidArray;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UStaticMeshComponent*>          ComponentArray;                                    // 0x10(0x10)(BlueprintVisible, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.FlockingBehavior.UpdateBoidComponentLocation
struct UFlockingBehavior_UpdateBoidComponentLocation_Params
{
public:
	struct FBoid                                 ThisBoid;                                          // 0x0(0x98)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USceneComponent*                       Comp;                                              // 0x98(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.FlockingBehavior.TickPersistentFlockData
struct UFlockingBehavior_TickPersistentFlockData_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x8(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBoid>                         BoidArray;                                         // 0x40(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x50(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        MaxNumTracesPerSecond;                             // 0x54(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2867[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.FlockingBehavior.SetAvoidanceAreaTransform
struct UFlockingBehavior_SetAvoidanceAreaTransform_Params
{
public:
	struct FAvoidanceArea                        InOutAvoidanceArea;                                // 0x0(0xC0)(Edit, ExportObject, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            NewTransform;                                      // 0xC0(0x60)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.FlockingBehavior.SetAvoidanceAreaArrayTransform
struct UFlockingBehavior_SetAvoidanceAreaArrayTransform_Params
{
public:
	TArray<struct FAvoidanceArea>                InOutAvoidanceAreas;                               // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            NewTransform;                                      // 0x10(0x60)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.FlockingBehavior.MakeIndexArray
struct UFlockingBehavior_MakeIndexArray_Params
{
public:
	int32                                        StartIndex;                                        // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumIndices;                                        // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                OutIndexArray;                                     // 0x8(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.FlockingBehavior.IsPointInsideAvoidanceArea
struct UFlockingBehavior_IsPointInsideAvoidanceArea_Params
{
public:
	struct FAvoidanceArea                        Area;                                              // 0x0(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0xC0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2880[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.FlockingBehavior.IsPointInsideAnyAvoidanceArea
struct UFlockingBehavior_IsPointInsideAnyAvoidanceArea_Params
{
public:
	TArray<struct FAvoidanceArea>                Areas;                                             // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2888[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpVectorArrayToSphere
struct UFlockingBehavior_InterpVectorArrayToSphere_Params
{
public:
	TArray<struct FVector>                       InOutVectorArray;                                  // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x28(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        NumRows;                                           // 0x2C(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      LatitudeDistribution;                              // 0x30(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2891[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeltaTime;                                         // 0x34(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x38(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x3C(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpVectorArrayToRandom
struct UFlockingBehavior_InterpVectorArrayToRandom_Params
{
public:
	TArray<struct FVector>                       InOutVectorArray;                                  // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        MinRadius;                                         // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxRadius;                                         // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        RandomSeed;                                        // 0x30(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        DeltaTime;                                         // 0x34(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x38(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x3C(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpVectorArrayToGrid
struct UFlockingBehavior_InterpVectorArrayToGrid_Params
{
public:
	TArray<struct FVector>                       InOutVectorArray;                                  // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        HorizSize;                                         // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VertSize;                                          // 0x44(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumRows;                                           // 0x48(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumCols;                                           // 0x4C(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x50(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x54(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x58(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28A3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpVectorArrayToCircle
struct UFlockingBehavior_InterpVectorArrayToCircle_Params
{
public:
	TArray<struct FVector>                       InOutVectorArray;                                  // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x40(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DeltaTime;                                         // 0x44(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x48(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x4C(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpVectorArray
struct UFlockingBehavior_InterpVectorArray_Params
{
public:
	TArray<struct FVector>                       InOutVectorArray;                                  // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       RelativeTargetLocations;                           // 0x10(0x10)(EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x38(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        DeltaTime;                                         // 0x50(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x54(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x58(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28B3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpBoidArrayToSphere
struct UFlockingBehavior_InterpBoidArrayToSphere_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x70(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        NumRows;                                           // 0x74(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      LatitudeDistribution;                              // 0x78(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeltaTime;                                         // 0x7C(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x80(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x84(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28BA[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpBoidArrayToRandom
struct UFlockingBehavior_InterpBoidArrayToRandom_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        MinRadius;                                         // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxRadius;                                         // 0x74(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	int32                                        RandomSeed;                                        // 0x78(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        DeltaTime;                                         // 0x7C(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x80(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x84(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28BF[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpBoidArrayToGrid
struct UFlockingBehavior_InterpBoidArrayToGrid_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x70(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        HorizSize;                                         // 0x88(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        VertSize;                                          // 0x8C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumRows;                                           // 0x90(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumCols;                                           // 0x94(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x98(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x9C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0xA0(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28C6[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpBoidArrayToCircle
struct UFlockingBehavior_InterpBoidArrayToCircle_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              CircleRotation;                                    // 0x70(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x88(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DeltaTime;                                         // 0x8C(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x90(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0x94(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D1[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.FlockingBehavior.InterpBoidArray
struct UFlockingBehavior_InterpBoidArray_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBoid>                         RelativeTargetLocations;                           // 0x10(0x10)(EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x20(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x80(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        DeltaTime;                                         // 0x98(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        InterpSpeedMin;                                    // 0x9C(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InterpSpeedMax;                                    // 0xA0(0x4)(BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D5[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.FlockingBehavior.GetFlockRadius
struct UFlockingBehavior_GetFlockRadius_Params
{
public:
	TArray<struct FBoid>                         BoidArray;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               FlockCentroid;                                     // 0x10(0x18)(ExportObject, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreLeaders;                                    // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x2C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.FlockingBehavior.GetFlockMembersOfType
struct UFlockingBehavior_GetFlockMembersOfType_Params
{
public:
	TArray<struct FBoid>                         BoidArray;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EBoidType                         BoidType;                                          // 0x10(0x1)(Edit, ConstParm, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28D8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                OutIndices;                                        // 0x18(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.FlockingBehavior.GetFlockCentroid
struct UFlockingBehavior_GetFlockCentroid_Params
{
public:
	TArray<struct FBoid>                         BoidArray;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreLeaders;                                    // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28DC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.FlockingBehavior.GetClosestSurfacePointOnAvoidanceArea
struct UFlockingBehavior_GetClosestSurfacePointOnAvoidanceArea_Params
{
public:
	struct FAvoidanceArea                        Area;                                              // 0x0(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
	struct FVector                               Loc;                                               // 0xC0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0xD8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.FlockingBehavior.GetAvoidanceDirection
struct UFlockingBehavior_GetAvoidanceDirection_Params
{
public:
	struct FAvoidanceArea                        Area;                                              // 0x0(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
	struct FVector                               CurrentLoc;                                        // 0xC0(0x18)(Edit, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               CurrentDir;                                        // 0xD8(0x18)(Edit, ConstParm, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0xF0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_28E7[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.FlockingBehavior.GetAvoidanceAreaWorldLocation
struct UFlockingBehavior_GetAvoidanceAreaWorldLocation_Params
{
public:
	struct FAvoidanceArea                        Area;                                              // 0x0(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0xC0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_28ED[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockTickSphereFormation
struct UFlockingBehavior_FlockTickSphereFormation_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x10(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x48(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28F9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x60(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_28FA[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            WorldTransform;                                    // 0x70(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FBoidBehavior                         Behavior;                                          // 0xD0(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinInterpDistance;                                 // 0x110(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x114(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        NumRows;                                           // 0x118(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      LatitudeDistribution;                              // 0x11C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28FC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HelixSpeed;                                        // 0x120(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_28FD[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockTickLeaders
struct UFlockingBehavior_FlockTickLeaders_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x10(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x48(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2902[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x60(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2903[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ParentTransform;                                   // 0x70(0x60)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        LeaderInterpSpeed;                                 // 0xD0(0x4)(Edit, ConstParm, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LeaderAreaWidth;                                   // 0xD4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2904[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x140 (0x140 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockTickGridFormation
struct UFlockingBehavior_FlockTickGridFormation_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x10(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x48(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2908[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x60(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2909[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            WorldTransform;                                    // 0x70(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FBoidBehavior                         Behavior;                                          // 0xD0(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinInterpDistance;                                 // 0x110(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_290B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              GridRotation;                                      // 0x118(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GridHorizSize;                                     // 0x130(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GridVertSize;                                      // 0x134(0x4)(BlueprintVisible, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        GridNumRows;                                       // 0x138(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        GridNumCols;                                       // 0x13C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockTickFollowersAndFreeAgents
struct UFlockingBehavior_FlockTickFollowersAndFreeAgents_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x10(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x48(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_290D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x60(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_290F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoidBehavior                         Behavior;                                          // 0x68(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockTickCircleFormation
struct UFlockingBehavior_FlockTickCircleFormation_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x10(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x48(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2913[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x50(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x60(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2914[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            WorldTransform;                                    // 0x70(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FBoidBehavior                         Behavior;                                          // 0xD0(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              CircleRotation;                                    // 0x110(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CircleRadius;                                      // 0x128(0x4)(Edit, ConstParm, BlueprintVisible, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinInterpDistance;                                 // 0x12C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockSetMaxSpeedAndForce
struct UFlockingBehavior_FlockSetMaxSpeedAndForce_Params
{
public:
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseBoidIndexWhitelist;                            // 0x10(0x1)(Edit, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_291A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                BoidIndexWhitelist;                                // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             MaxSpeedRange;                                     // 0x28(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             MaxForceRange;                                     // 0x38(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.FlockingBehavior.FlockCreate
struct UFlockingBehavior_FlockCreate_Params
{
public:
	TArray<struct FBoid>                         NewBoids;                                          // 0x0(0x10)(ConstParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            WorldTransform;                                    // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	int32                                        NumFlockBoids;                                     // 0x70(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumLeaderBoids;                                    // 0x74(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InitialSpawnRadius;                                // 0x78(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_291F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             MaxSpeedRange;                                     // 0x80(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             MaxForceRange;                                     // 0x90(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TurnRateRange;                                     // 0xA0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.FlockingBehavior.DrawDebugAvoidanceArea
struct UFlockingBehavior_DrawDebugAvoidanceArea_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2923[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAvoidanceArea                        Area;                                              // 0x10(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
	float                                        DrawDuration;                                      // 0xD0(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2925[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.FlockingBehavior.BoidTick
struct UFlockingBehavior_BoidTick_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2928[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x18(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x50(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2929[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoidBehavior                         Behavior;                                          // 0x58(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.FlockingBehavior.BoidStopTargeting
struct UFlockingBehavior_BoidStopTargeting_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_292C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.FlockingBehavior.BoidSetTarget
struct UFlockingBehavior_BoidSetTarget_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2930[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TargetWorldLocation;                               // 0x18(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.FlockingBehavior.BoidSetAlive
struct UFlockingBehavior_BoidSetAlive_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2933[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsAlive;                                          // 0x18(0x1)(Edit, ExportObject, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2934[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function ShooterGame.FlockingBehavior.BoidMoveTo
struct UFlockingBehavior_BoidMoveTo_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2937[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FBoid>                         InOutBoidArray;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x18(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FBoidBehavior                         Behavior;                                          // 0x50(0x40)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DeltaTime;                                         // 0x90(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_293A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewWorldLocation;                                  // 0x98(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TargetDistanceThreshold;                           // 0xB0(0x4)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseIterp;                                         // 0xB4(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_293E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InterpSpeed;                                       // 0xB8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_293F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.FlockingBehavior.AddAvoidanceAreaToFlockData
struct UFlockingBehavior_AddAvoidanceAreaToFlockData_Params
{
public:
	struct FFlockPersistentData                  InOutFlockData;                                    // 0x0(0x38)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2941[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FAvoidanceArea                        Area;                                              // 0x40(0xC0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.FogOfWar.Update
struct UFogOfWar_Update_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        X;                                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	int32                                        Y;                                                 // 0x8(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HazardTrigger.OnCharacterExit
struct AHazardTrigger_OnCharacterExit_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HazardTrigger.OnCharacterEnter
struct AHazardTrigger_OnCharacterEnter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.HazardTrigger.FindFloor
struct AHazardTrigger_FindFloor_Params
{
public:
	struct FVector                               TestLocation;                                      // 0x0(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FFloorSlopeData                       FloorSlope;                                        // 0x18(0x30)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DepthOverride;                                     // 0x48(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UseActorNormal;                                    // 0x4C(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4D(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2967[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HazardTrigger.ClientActivation
struct AHazardTrigger_ClientActivation_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HazardTrigger.CanActivate
struct AHazardTrigger_CanActivate_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.HazardTrigger_Slide.SpawnProjectile
struct AHazardTrigger_Slide_SpawnProjectile_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Heading;                                           // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HexagonTradableOption.GetItemCost
struct UHexagonTradableOption_GetItemCost_Params
{
public:
	class AShooterPlayerController*              PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2999[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HexagonTradableOption.BPOverrideTradeAction
struct UHexagonTradableOption_BPOverrideTradeAction_Params
{
public:
	class AShooterPlayerController*              PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_299D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HexagonTradableOption.BPGetItemCost
struct UHexagonTradableOption_BPGetItemCost_Params
{
public:
	class AShooterPlayerController*              PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_29A2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HexagonTradableOption.BPAllowedToBePurchased
struct UHexagonTradableOption_BPAllowedToBePurchased_Params
{
public:
	class AShooterPlayerController*              PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_29A9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HexagonTradableOption.AllowedToBePurchased
struct UHexagonTradableOption_AllowedToBePurchased_Params
{
public:
	class AShooterPlayerController*              PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_29AF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.HexagonVFXActor.SetVolume
struct AHexagonVFXActor_SetVolume_Params
{
public:
	float                                        NewVolume;                                         // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.HordeCrateManager.ForceStartHorde
struct AHordeCrateManager_ForceStartHorde_Params
{
public:
	class AActor*                                SpawnNetwork;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x10(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DifficultyIndex;                                   // 0x18(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29BE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.HordeCrateManager.BPForceStartHorde
struct AHordeCrateManager_BPForceStartHorde_Params
{
public:
	class AActor*                                SpawnNetwork;                                      // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x10(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DifficultyIndex;                                   // 0x18(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29C2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.ShowMissionAlert
struct UHUDActiveMissionWidget_ShowMissionAlert_Params
{
public:
	enum class EMissionAlertType                 AlertType;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AlertTitle;                                        // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionAlertEntry>            NewEntries;                                        // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInstant;                                          // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFlyoutFromTop;                                    // 0x29(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_29D3[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.SetRacePositionText
struct UHUDActiveMissionWidget_SetRacePositionText_Params
{
public:
	class FText                                  PositionText;                                      // 0x0(0x18)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.SetRacePanelVisibility
struct UHUDActiveMissionWidget_SetRacePanelVisibility_Params
{
public:
	enum class ESlateVisibility                  NewVisibility;                                     // 0x0(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.IsMissionAlertVisible
struct UHUDActiveMissionWidget_IsMissionAlertVisible_Params
{
public:
	bool                                         bIsTop;                                            // 0x0(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.HideMissionAlert
struct UHUDActiveMissionWidget_HideMissionAlert_Params
{
public:
	bool                                         bInstant;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHideTop;                                          // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.HaveActiveMission
struct UHUDActiveMissionWidget_HaveActiveMission_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HUDActiveMissionWidget.GetActiveMissionWidget
struct UHUDActiveMissionWidget_GetActiveMissionWidget_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UHUDActiveMissionWidget*               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetUseGamepadIcon
struct UHUDCustomStatusWidget_SetUseGamepadIcon_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Use;                                               // 0x1B0(0x1)(BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_29FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementVisibility
struct UHUDCustomStatusWidget_SetHUDElementVisibility_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsVisible;                                        // 0x1B0(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_29FE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTitle
struct UHUDCustomStatusWidget_SetHUDElementTitle_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                NewTitle;                                          // 0x1B0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextScale
struct UHUDCustomStatusWidget_SetHUDElementTextScale_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewScale;                                          // 0x1B0(0x4)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A00[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextPadding
struct UHUDCustomStatusWidget_SetHUDElementTextPadding_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               NewPadding;                                        // 0x1B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextColor
struct UHUDCustomStatusWidget_SetHUDElementTextColor_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NewColor;                                          // 0x1B0(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Title
struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Title_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ETextJustify                      NewAlignment;                                      // 0x1B0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Label
struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Label_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ETextJustify                      NewAlignment;                                      // 0x1B0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A05[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementSize
struct UHUDCustomStatusWidget_SetHUDElementSize_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NewSize;                                           // 0x1B0(0x10)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementScale
struct UHUDCustomStatusWidget_SetHUDElementScale_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NewScale;                                          // 0x1B0(0x10)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressColor
struct UHUDCustomStatusWidget_SetHUDElementProgressColor_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NewColor;                                          // 0x1B0(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarScale
struct UHUDCustomStatusWidget_SetHUDElementProgressBarScale_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NewScale;                                          // 0x1B0(0x10)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarPadding
struct UHUDCustomStatusWidget_SetHUDElementProgressBarPadding_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               NewPadding;                                        // 0x1B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgress
struct UHUDCustomStatusWidget_SetHUDElementProgress_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewProgress;                                       // 0x1B0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A15[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLocation
struct UHUDCustomStatusWidget_SetHUDElementLocation_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NewLocation;                                       // 0x1B0(0x10)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabelNumeric
struct UHUDCustomStatusWidget_SetHUDElementLabelNumeric_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LabelValue;                                        // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ERoundingMode                     RoundingMode;                                      // 0x1B4(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseGrouping;                                      // 0x1B5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A1E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MinIntDigits;                                      // 0x1B8(0x4)(EditFixedSize, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MaxIntDigits;                                      // 0x1BC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MinFractionalDigits;                               // 0x1C0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, SubobjectReference)
	int32                                        MaxFractionalDigits;                               // 0x1C4(0x4)(BlueprintReadOnly, OutParm, ReturnParm, GlobalConfig, SubobjectReference)
	bool                                         bAddPercentSymbol;                                 // 0x1C8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A1F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabel
struct UHUDCustomStatusWidget_SetHUDElementLabel_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                NewLabel;                                          // 0x1B0(0x10)(ConstParm, ExportObject, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementImage
struct UHUDCustomStatusWidget_SetHUDElementImage_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            NewIcon;                                           // 0x1B0(0x8)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetIcon;                                          // 0x1B8(0x1)(Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetProgressBarFillImage;                          // 0x1B9(0x1)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetBackgroundImage;                               // 0x1BA(0x1)(ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A28[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconScale
struct UHUDCustomStatusWidget_SetHUDElementIconScale_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             NewScale;                                          // 0x1B0(0x10)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconRotation
struct UHUDCustomStatusWidget_SetHUDElementIconRotation_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewAngle;                                          // 0x1B0(0x4)(Edit, ConstParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A29[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconPadding
struct UHUDCustomStatusWidget_SetHUDElementIconPadding_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMargin                               NewPadding;                                        // 0x1B0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconColor
struct UHUDCustomStatusWidget_SetHUDElementIconColor_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NewColor;                                          // 0x1B0(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementBackgroundImageColor
struct UHUDCustomStatusWidget_SetHUDElementBackgroundImageColor_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          NewColor;                                          // 0x1B0(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.SetHUDElementAnchor
struct UHUDCustomStatusWidget_SetHUDElementAnchor_Params
{
public:
	struct FHUDElement                           ElementInfo;                                       // 0x0(0x1B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FAnchors                              NewAnchor;                                         // 0x1B0(0x20)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.IsHUDElementVisible
struct UHUDCustomStatusWidget_IsHUDElementVisible_Params
{
public:
	class AActor*                                WidgetOwner;                                       // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHUDElement                           WidgetInfo;                                        // 0x8(0x1B0)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A31[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.HUDCustomStatusWidget.GetHUDElementRootWidget
struct UHUDCustomStatusWidget_GetHUDElementRootWidget_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UHUDCustomStatusWidget*                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.HUDPingWidget.UpdateWidgetPingData
struct UHUDPingWidget_UpdateWidgetPingData_Params
{
public:
	struct FPingData                             WithPingData;                                      // 0x0(0x60)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A42[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HUDPingWidget.OnPingUnhovered
struct UHUDPingWidget_OnPingUnhovered_Params
{
public:
	class AShooterCharacter*                     UnhoveringPlayer;                                  // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HUDPingWidget.OnPingResponseReceived
struct UHUDPingWidget_OnPingResponseReceived_Params
{
public:
	class AShooterCharacter*                     RespondingPlayer;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HUDPingWidget.OnPingHovered
struct UHUDPingWidget_OnPingHovered_Params
{
public:
	class AShooterCharacter*                     HoveringPlayer;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.HUDPingWidget.IsPingValid
struct UHUDPingWidget_IsPingValid_Params
{
public:
	struct FPingData                             ForPingData;                                       // 0x0(0x60)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A50[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.HUDPingWidget.InitializePingWidget
struct UHUDPingWidget_InitializePingWidget_Params
{
public:
	struct FPingData                             FromPingData;                                      // 0x0(0x60)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HUDPingWidget.HasValidPingData
struct UHUDPingWidget_HasValidPingData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.HUDPingWidget.GetPingWorldLocation
struct UHUDPingWidget_GetPingWorldLocation_Params
{
public:
	struct FPingData                             FromPingData;                                      // 0x0(0x60)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x60(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.HUDPingWidget.GetPingData
struct UHUDPingWidget_GetPingData_Params
{
public:
	struct FPingData                             ReturnValue;                                       // 0x0(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.UpdateWidgetPointOfInterestData
struct UHUDPointOfInterestWidget_UpdateWidgetPointOfInterestData_Params
{
public:
	struct FPointOfInterestData                  WithPointData;                                     // 0x0(0x1E0)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A57[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.SetDismissOverlay
struct UHUDPointOfInterestWidget_SetDismissOverlay_Params
{
public:
	bool                                         Visible;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst)
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestValid
struct UHUDPointOfInterestWidget_IsPointOfInterestValid_Params
{
public:
	struct FPointOfInterestData                  ForPointData;                                      // 0x0(0x1E0)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A59[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestInitialized
struct UHUDPointOfInterestWidget_IsPointOfInterestInitialized_Params
{
public:
	struct FPointOfInterestData                  ForPointData;                                      // 0x0(0x1E0)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A5A[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1E0 (0x1E0 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.InitializePointOfInterestWidget
struct UHUDPointOfInterestWidget_InitializePointOfInterestWidget_Params
{
public:
	struct FPointOfInterestData                  FromPointData;                                     // 0x0(0x1E0)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.HasValidPointOfInterestData
struct UHUDPointOfInterestWidget_HasValidPointOfInterestData_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x200 (0x200 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldRotation
struct UHUDPointOfInterestWidget_GetPointOfInterestWorldRotation_Params
{
public:
	struct FPointOfInterestData                  FromPointData;                                     // 0x0(0x1E0)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x1E0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A5D[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x200 (0x200 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldLocation
struct UHUDPointOfInterestWidget_GetPointOfInterestWorldLocation_Params
{
public:
	struct FPointOfInterestData                  FromPointData;                                     // 0x0(0x1E0)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x1E0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A5F[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x240 (0x240 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestTransform
struct UHUDPointOfInterestWidget_GetPointOfInterestTransform_Params
{
public:
	struct FPointOfInterestData                  FromPointData;                                     // 0x0(0x1E0)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0x1E0(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestReachedSound
struct UHUDPointOfInterestWidget_GetPointOfInterestReachedSound_Params
{
public:
	class USoundBase*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1E0 (0x1E0 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestData
struct UHUDPointOfInterestWidget_GetPointOfInterestData_Params
{
public:
	struct FPointOfInterestData                  ReturnValue;                                       // 0x0(0x1E0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x240 (0x240 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestCosmeticActorTransform
struct UHUDPointOfInterestWidget_GetPointOfInterestCosmeticActorTransform_Params
{
public:
	struct FPointOfInterestData                  FromPointData;                                     // 0x0(0x1E0)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0x1E0(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestAddedSound
struct UHUDPointOfInterestWidget_GetPointOfInterestAddedSound_Params
{
public:
	class USoundBase*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x200 (0x200 - 0x0)
// Function ShooterGame.HUDPointOfInterestWidget.CanActorViewPointOfInterest
struct UHUDPointOfInterestWidget_CanActorViewPointOfInterest_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_2A6C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointOfInterestData                  CanViewPointData;                                  // 0x10(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1F0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2A6D[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.InventoryArkCreaturesPanel.UploadedDinoSlotButtonSelected
struct UInventoryArkCreaturesPanel_UploadedDinoSlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.InventoryArkCreaturesPanel.LocalDinoSlotButtonSelected
struct UInventoryArkCreaturesPanel_LocalDinoSlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.InventoryPanelWidget.SearchTextChanged
struct UInventoryPanelWidget_SearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.InventoryPanelWidget.OnOrderTypeSelected
struct UInventoryPanelWidget_OnOrderTypeSelected_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A8B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.InventoryPanelWidget.OnGetSortContextMenuContent
struct UInventoryPanelWidget_OnGetSortContextMenuContent_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.InventoryPanelWidget.OnFilterTypeSelected
struct UInventoryPanelWidget_OnFilterTypeSelected_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2A91[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.SetVectorField
struct UJsonObject_SetVectorField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               Value;                                             // 0x10(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetVectorArrayField
struct UJsonObject_SetVectorArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<struct FVector>                       Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.SetStructField
struct UJsonObject_SetStructField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FPropertyThunkWrapper                 Value;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetStringField
struct UJsonObject_SetStringField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetStringArrayField
struct UJsonObject_SetStringArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class FString>                        Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AA9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.SetRotatorField
struct UJsonObject_SetRotatorField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              Value;                                             // 0x10(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AAA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetRotatorArrayField
struct UJsonObject_SetRotatorArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<struct FRotator>                      Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AAD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.JsonObject.SetNullField
struct UJsonObject_SetNullField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         bForceSingleKey;                                   // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AAE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.SetJsonObjectField
struct UJsonObject_SetJsonObjectField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class UJsonObject*                           Object;                                            // 0x10(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AAF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetJsonObjectArrayField
struct UJsonObject_SetJsonObjectArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class UJsonObject*>                   Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AB5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.JsonObject.SetIntField
struct UJsonObject_SetIntField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        Value;                                             // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AB7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetIntArrayField
struct UJsonObject_SetIntArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<int32>                                Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AC1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.JsonObject.SetFloatField
struct UJsonObject_SetFloatField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        Value;                                             // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AC6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetFloatArrayField
struct UJsonObject_SetFloatArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<float>                                Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ACC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.SetDoubleField
struct UJsonObject_SetDoubleField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	double                                       Value;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AD3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetDoubleArrayField
struct UJsonObject_SetDoubleArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<double>                               Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AD6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.JsonObject.SetByteField
struct UJsonObject_SetByteField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Value;                                             // 0x10(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x11(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AD7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetByteArrayField
struct UJsonObject_SetByteArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<uint8>                                Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AD8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.JsonObject.SetBoolField
struct UJsonObject_SetBoolField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         Value;                                             // 0x10(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x11(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ADF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.SetBoolArrayField
struct UJsonObject_SetBoolArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<bool>                                 Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AE0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.JsonObject.JsonSerialize
struct UJsonObject_JsonSerialize_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.JsonDeserialize
struct UJsonObject_JsonDeserialize_Params
{
public:
	class FString                                JSONData;                                          // 0x0(0x10)(BlueprintVisible, Net, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                OutErrorMessage;                                   // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               WorldContextObject;                                // 0x20(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UJsonObject*                           ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.IsNullField
struct UJsonObject_IsNullField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         bForceSingleKey;                                   // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AE4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AE5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.JsonObject.GetVectorField
struct UJsonObject_GetVectorField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               OutValue;                                          // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AE8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AE9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetVectorArrayField
struct UJsonObject_GetVectorArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<struct FVector>                       OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AED[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AEE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.GetStructField
struct UJsonObject_GetStructField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FPropertyThunkWrapper                 DestStruct;                                        // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AF0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AF1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetStringField
struct UJsonObject_GetStringField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AF8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AFA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetStringArrayField
struct UJsonObject_GetStringArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class FString>                        OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2AFD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2AFE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.JsonObject.GetRotatorField
struct UJsonObject_GetRotatorField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              OutValue;                                          // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B00[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B01[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetRotatorArrayField
struct UJsonObject_GetRotatorArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<struct FRotator>                      OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B02[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetKeys
struct UJsonObject_GetKeys_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class FString>                        OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B05[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B06[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.GetJsonObjectField
struct UJsonObject_GetJsonObjectField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class UJsonObject*                           OutObject;                                         // 0x10(0x8)(ConstParm, BlueprintVisible, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B08[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B09[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetJsonObjectArrayField
struct UJsonObject_GetJsonObjectArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class UJsonObject*>                   OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B0A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B0B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.GetIntField
struct UJsonObject_GetIntField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        OutValue;                                          // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B0C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B0D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetIntArrayField
struct UJsonObject_GetIntArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<int32>                                OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B10[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B11[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.GetFloatField
struct UJsonObject_GetFloatField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        OutValue;                                          // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B15[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B16[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetFloatArrayField
struct UJsonObject_GetFloatArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<float>                                OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B1B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B1C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.JsonObject.GetDoubleField
struct UJsonObject_GetDoubleField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	double                                       OutValue;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B20[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x20(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B22[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetDoubleArrayField
struct UJsonObject_GetDoubleArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<double>                               OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B29[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B2A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.GetByteField
struct UJsonObject_GetByteField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        OutValue;                                          // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x11(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B2D[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B2E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetByteArrayField
struct UJsonObject_GetByteArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<uint8>                                OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B2F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B30[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.JsonObject.GetBoolField
struct UJsonObject_GetBoolField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         OutValue;                                          // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x11(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B33[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B34[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.JsonObject.GetBoolArrayField
struct UJsonObject_GetBoolArrayField_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<bool>                                 OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bForceSingleKey;                                   // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B35[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Delimiter;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B36[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.JsonObject.CreateJsonObject
struct UJsonObject_CreateJsonObject_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UJsonObject*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.JsonObject.CompareJsonValues
struct UJsonObject_CompareJsonValues_Params
{
public:
	class UJsonObject*                           A;                                                 // 0x0(0x8)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	class UJsonObject*                           B;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B39[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.Leaderboard.GetLeaderboardRows
struct ULeaderboard_GetLeaderboardRows_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                LeaderboardType;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLeaderboardRow>               LeaderboardRows;                                   // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B4B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.Leaderboard.FormatLeaderboardRows
struct ULeaderboard_FormatLeaderboardRows_Params
{
public:
	class UClass*                                LeaderboardType;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLeaderboardRow>               Rows;                                              // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLeaderboardDisplayRow>        DisplayRows;                                       // 0x20(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PlayerNetIDString;                                 // 0x30(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.Leaderboard.FormatLeaderboardRow
struct ULeaderboard_FormatLeaderboardRow_Params
{
public:
	class UClass*                                LeaderboardType;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLeaderboardRow                       Row;                                               // 0x10(0x48)(ExportObject, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLeaderboardDisplayRow                DisplayRow;                                        // 0x58(0x20)(ConstParm, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PlayerNetIDString;                                 // 0x78(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.Leaderboard.CountLeaderboardRows
struct ULeaderboard_CountLeaderboardRows_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                LeaderboardType;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B52[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.Leaderboard.BPGetLeaderboardRows
struct ULeaderboard_BPGetLeaderboardRows_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterGameMode*                      GameMode;                                          // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<struct FLeaderboardRow>               LeaderboardRows;                                   // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.Leaderboard.BPFormatLeaderboardRow
struct ULeaderboard_BPFormatLeaderboardRow_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Index;                                             // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_2B58[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLeaderboardRow                       DatabaseRow;                                       // 0x10(0x48)(ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLeaderboardDisplayRow                ReturnValue;                                       // 0x58(0x20)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.Leaderboard.BPCountLeaderboardRows
struct ULeaderboard_BPCountLeaderboardRows_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterGameMode*                      GameMode;                                          // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B5F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.Leaderboard.BPAddLeaderboardRow
struct ULeaderboard_BPAddLeaderboardRow_Params
{
public:
	class AShooterGameMode*                      GameMode;                                          // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FLeaderboardRow                       NewRow;                                            // 0x8(0x48)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B65[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.Leaderboard.AddLeaderboardRow
struct ULeaderboard_AddLeaderboardRow_Params
{
public:
	class UWorld*                                WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                LeaderboardType;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLeaderboardRow                       NewRow;                                            // 0x10(0x48)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x58(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B68[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.LeaderboardRowWidget.SetRowContents
struct ULeaderboardRowWidget_SetRowContents_Params
{
public:
	struct FLeaderboardDisplayRow                RowData;                                           // 0x0(0x20)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ContainerWidth;                                    // 0x20(0x4)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RowHeight;                                         // 0x24(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsHeaderRow;                                       // 0x28(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ManuallySetPlayersOwnRowStyling;                   // 0x29(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UsePlayersOwnRowStyling;                           // 0x2A(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B71[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayHitEffectRadial
struct APrimalTargetableActor_PlayHitEffectRadial_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B87[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRadialDamageEvent                    DamageEvent;                                       // 0x8(0x60)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x68(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x148 (0x148 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayHitEffectPoint
struct APrimalTargetableActor_PlayHitEffectPoint_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B88[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointDamageEvent                     DamageEvent;                                       // 0x8(0x130)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x138(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x140(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayHitEffectGeneric
struct APrimalTargetableActor_PlayHitEffectGeneric_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B8B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayDyingRadial
struct APrimalTargetableActor_PlayDyingRadial_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B8F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRadialDamageEvent                    DamageEvent;                                       // 0x8(0x60)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x68(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x148 (0x148 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayDyingPoint
struct APrimalTargetableActor_PlayDyingPoint_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B91[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointDamageEvent                     DamageEvent;                                       // 0x8(0x130)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x138(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x140(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalTargetableActor.PlayDyingGeneric
struct APrimalTargetableActor_PlayDyingGeneric_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B93[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x28(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalTargetableActor.OverrideDestroyedMeshTextures
struct APrimalTargetableActor_OverrideDestroyedMeshTextures_Params
{
public:
	class UMeshComponent*                        MeshComp;                                          // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalTargetableActor.NetUpdatedHealth
struct APrimalTargetableActor_NetUpdatedHealth_Params
{
public:
	int32                                        NewHealth;                                         // 0x0(0x4)(BlueprintReadOnly, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalTargetableActor.IsInvincible
struct APrimalTargetableActor_IsInvincible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalTargetableActor.HarvestingDepleted
struct APrimalTargetableActor_HarvestingDepleted_Params
{
public:
	class UPrimalHarvestingComponent*            FromComponent;                                     // 0x0(0x8)(ExportObject, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalTargetableActor.GetMaxHealth
struct APrimalTargetableActor_GetMaxHealth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalTargetableActor.GetDescriptiveName
struct APrimalTargetableActor_GetDescriptiveName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalTargetableActor.BPSupressImpactEffects
struct APrimalTargetableActor_BPSupressImpactEffects_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B9D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsLocalPath;                                      // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2B9E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   HitComponent;                                      // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2B9F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalTargetableActor.BPHitEffect
struct APrimalTargetableActor_BPHitEffect_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsLocalPath;                                      // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimitiveComponent*                   HitComponent;                                      // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               DamageLoc;                                         // 0x48(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              HitNormal;                                         // 0x60(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalTargetableActor.BPDied
struct APrimalTargetableActor_BPDied_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x138 (0x138 - 0x0)
// Function ShooterGame.PrimalTargetableActor.BPAdjustDamage
struct APrimalTargetableActor_BPAdjustDamage_Params
{
public:
	float                                        IncomingDamage;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x8(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x28(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsPointDamage;                                    // 0x38(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BA8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointHitInfo;                                      // 0x40(0xF0)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x130(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2BA9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.UpdateTribeGroupStructureRank
struct APrimalStructure_UpdateTribeGroupStructureRank_Params
{
public:
	uint8                                        NewRank;                                           // 0x0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.UpdateStencilValuesWithStenilDepth
struct APrimalStructure_UpdateStencilValuesWithStenilDepth_Params
{
public:
	enum class EStencilAlliance                  InAlliance;                                        // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.UpdatedHealth
struct APrimalStructure_UpdatedHealth_Params
{
public:
	bool                                         bDoReplication;                                    // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.TickPlacingStructure
struct APrimalStructure_TickPlacingStructure_Params
{
public:
	class APrimalStructurePlacer*                PlacerActor;                                       // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x8(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2BC1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalStructure.StructureSkinHandleCommand
struct APrimalStructure_StructureSkinHandleCommand_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class APrimalStructure*                      ForStructure;                                      // 0x8(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.SpawnZiplineActors
struct APrimalStructure_SpawnZiplineActors_Params
{
public:
	class APrimalStructure*                      ZiplineAnchor0;                                    // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      ZiplineAnchor1;                                    // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SnapsAreOptional
struct APrimalStructure_SnapsAreOptional_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.SetZiplineStructurePointers
struct APrimalStructure_SetZiplineStructurePointers_Params
{
public:
	class APrimalStructure*                      Structure0;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      Structure1;                                        // 0x8(0x8)(ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalStructure.SetVariant
struct APrimalStructure_SetVariant_Params
{
public:
	class FName                                  VariantTag;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceSet;                                         // 0x8(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2BDA[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.SetupDynamicMeshMaterials
struct APrimalStructure_SetupDynamicMeshMaterials_Params
{
public:
	class UMeshComponent*                        MeshComp;                                          // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.SetStructureSkinTimer
struct APrimalStructure_SetStructureSkinTimer_Params
{
public:
	float                                        TimerInterval;                                     // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLooping;                                          // 0x4(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_2BDE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.SetStructureSkin
struct APrimalStructure_SetStructureSkin_Params
{
public:
	class UClass*                                SkinClass;                                         // 0x0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        CustomCosmeticStructureSkinID;                     // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CustomCosmeticStructureSkinVariantID;              // 0x10(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2BE5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.SetStructureColorValue
struct APrimalStructure_SetStructureColorValue_Params
{
public:
	int32                                        ColorRegionIndex;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SetVal;                                            // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SetPreventSaving
struct APrimalStructure_SetPreventSaving_Params
{
public:
	bool                                         bPrevent;                                          // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.SetNetworkParentDino
struct APrimalStructure_SetNetworkParentDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.SetHarvestingActive
struct APrimalStructure_SetHarvestingActive_Params
{
public:
	bool                                         bActive;                                           // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	bool                                         bOverrideBaseHealth;                               // 0x1(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BaseHarvestHealthMult;                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAssignToTribe;                                    // 0x8(0x1)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2BF1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedToTribeID;                                 // 0xC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SetEnabledPrimarySnappedStructureParent
struct APrimalStructure_SetEnabledPrimarySnappedStructureParent_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SetEnabled
struct APrimalStructure_SetEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.SetDefaultDestinationStructure
struct APrimalStructure_SetDefaultDestinationStructure_Params
{
public:
	class APrimalStructure*                      DestinationStructure;                              // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SetContainerActive
struct APrimalStructure_SetContainerActive_Params
{
public:
	bool                                         bNewActive;                                        // 0x0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructure.SetBoundsScale
struct APrimalStructure_SetBoundsScale_Params
{
public:
	float                                        NewScale;                                          // 0x0(0x4)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.SetBedEnabled
struct APrimalStructure_SetBedEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.SetAllowedStructureColorRegions
struct APrimalStructure_SetAllowedStructureColorRegions_Params
{
public:
	TArray<int32>                                AllowedRegions;                                    // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalStructure.RefreshStructurePlacement
struct APrimalStructure_RefreshStructurePlacement_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              PlayerViewRotation;                                // 0x38(0x18)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 AttachToPawn;                                      // 0x50(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x58(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bFlipped;                                          // 0x60(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x61(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C05[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.RefreshStructureColors
struct APrimalStructure_RefreshStructureColors_Params
{
public:
	class UMeshComponent*                        ForceRefreshComponent;                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.PreviewCulledStructures
struct APrimalStructure_PreviewCulledStructures_Params
{
public:
	TArray<class APrimalStructure*>              InOutStructuresOnFloor;                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.PickupStructureAndDependingLinkedStructures
struct APrimalStructure_PickupStructureAndDependingLinkedStructures_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         IsFirstPickup;                                     // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C13[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.PickupStructure
struct APrimalStructure_PickupStructure_Params
{
public:
	bool                                         bIsQuickPickup;                                    // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C17[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.OverrideOwner
struct APrimalStructure_OverrideOwner_Params
{
public:
	class AActor*                                NewOwner;                                          // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ForceOnlyRelevantToOwner;                          // 0x8(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C19[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.OnRep_StructureSkinClass
struct APrimalStructure_OnRep_StructureSkinClass_Params
{
public:
	class UClass*                                PrevSkinClass;                                     // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.NonPlayerFinalStructurePlacement
struct APrimalStructure_NonPlayerFinalStructurePlacement_Params
{
public:
	int32                                        PlacementTargetingTeam;                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PlacementOwningPlayerID;                           // 0x4(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                PlacementOwningPlayerName;                         // 0x8(0x10)(Edit, ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      ForcePrimaryParent;                                // 0x18(0x8)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.NetUpdateTeamAndOwnerName
struct APrimalStructure_NetUpdateTeamAndOwnerName_Params
{
public:
	int32                                        NewTeam;                                           // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C20[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewOwnerName;                                      // 0x8(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.NetUpdateOriginalOwnerNameAndID
struct APrimalStructure_NetUpdateOriginalOwnerNameAndID_Params
{
public:
	int32                                        NewOriginalOwnerID;                                // 0x0(0x4)(ExportObject, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C25[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewOriginalOwnerName;                              // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.NetSetIgnoreDestructionEffects
struct APrimalStructure_NetSetIgnoreDestructionEffects_Params
{
public:
	bool                                         bNewIgnoreDestructionEffects;                      // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.MultiSetPickupAllowedBeforeNetworkTime
struct APrimalStructure_MultiSetPickupAllowedBeforeNetworkTime_Params
{
public:
	double                                       NewTime;                                           // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.MultiRefreshVariantSettings
struct APrimalStructure_MultiRefreshVariantSettings_Params
{
public:
	class FName                                  NewVariantTag;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.MultiRefreshStructureSkin
struct APrimalStructure_MultiRefreshStructureSkin_Params
{
public:
	class UClass*                                SkinClass;                                         // 0x0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        CustomCosmeticStructureSkinID;                     // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CustomCosmeticStructureSkinVariantID;              // 0x10(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         RemovePrevious;                                    // 0x14(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ApplyNew;                                          // 0x15(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C2D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalStructure.MultiHandleSkinNetMessage
struct APrimalStructure_MultiHandleSkinNetMessage_Params
{
public:
	class FName                                  MessageName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FSkinNetMessageParams                 SkinNetMessageParams;                              // 0x8(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.MultiAddStructuresPlacedOnFloor
struct APrimalStructure_MultiAddStructuresPlacedOnFloor_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.LinkStructure
struct APrimalStructure_LinkStructure_Params
{
public:
	class APrimalStructure*                      NewLinkedStructure;                                // 0x0(0x8)(Edit, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.IsValidStructureSkinTarget
struct APrimalStructure_IsValidStructureSkinTarget_Params
{
public:
	class APrimalStructure*                      TargetStructure;                                   // 0x0(0x8)(Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C30[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalStructure.IsValidStructureForCryopodDeployment
struct APrimalStructure_IsValidStructureForCryopodDeployment_Params
{
public:
	class AActor*                                OwnerActor;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.IsValidSnapPointTo
struct APrimalStructure_IsValidSnapPointTo_Params
{
public:
	class APrimalStructure*                      ChildStructure;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MySnapPointToIndex;                                // 0x8(0x4)(BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ChildSnapPointFromIndex;                           // 0xC(0x4)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C37[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.IsValidSnapPointFrom
struct APrimalStructure_IsValidSnapPointFrom_Params
{
public:
	class APrimalStructure*                      ParentStructure;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        MySnapPointFromIndex;                              // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ParentSnapPointToIndex;                            // 0xC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C38[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.IsValidForSnappingFrom
struct APrimalStructure_IsValidForSnappingFrom_Params
{
public:
	class APrimalStructure*                      OtherStructure;                                    // 0x0(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C3D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.IsRepairAllowed
struct APrimalStructure_IsRepairAllowed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructure.IsPointObstructedByWorldGeometry
struct APrimalStructure_IsPointObstructedByWorldGeometry_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ThePoint;                                          // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreTerrain;                                    // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyCheckTerrain;                                 // 0x21(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreFoliage;                                    // 0x22(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C45[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OBSTRUCTION_CHECK_DIST;                            // 0x24(0x4)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C46[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalStructure.IsPointNearSupplyCrateSpawn
struct APrimalStructure_IsPointNearSupplyCrateSpawn_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C48[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.IsPinLocked
struct APrimalStructure_IsPinLocked_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.IsOnlyLinkedToFastDecayStructures
struct APrimalStructure_IsOnlyLinkedToFastDecayStructures_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.IsLinkedToWaterOrPowerSource
struct APrimalStructure_IsLinkedToWaterOrPowerSource_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.IsAllowedToDemolish
struct APrimalStructure_IsAllowedToDemolish_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C4B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalStructure.IsAllowedToBuild
struct APrimalStructure_IsAllowedToBuild_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPlacementData                        OutPlacementData;                                  // 0x38(0x88)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontAdjustForMaxRange;                            // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C55[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              PlayerViewRotation;                                // 0xC8(0x18)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFinalPlacement;                                   // 0xE0(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseOriginalOutPlacementData;                      // 0xE1(0x1)(ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C57[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xE4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.GetTooltipStructureInfoBP
struct APrimalStructure_GetTooltipStructureInfoBP_Params
{
public:
	class AShooterPlayerController*              PlayerOwner;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FTooltipTextInfo>              ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.GetTooltipStructureInfo
struct APrimalStructure_GetTooltipStructureInfo_Params
{
public:
	class AShooterPlayerController*              PlayerOwner;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FTooltipTextInfo>              ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.GetStructureSkinDestroyedMeshes
struct APrimalStructure_GetStructureSkinDestroyedMeshes_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDestructionGeoCollectionInfo> ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalStructure.GetStructuresInRange
struct APrimalStructure_GetStructuresInRange_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        WithinRange;                                       // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C61[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                StructureClass;                                    // 0x28(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructure*>              StructuresOut;                                     // 0x30(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseInternalOctree;                                // 0x40(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C63[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      IgnoreStructure;                                   // 0x48(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalStructure.GetStructureMeshAndTransform
struct APrimalStructure_GetStructureMeshAndTransform_Params
{
public:
	class FName                                  VariantTag;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C67[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            MeshTransform;                                     // 0x10(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, GlobalConfig, SubobjectReference)
	class UStaticMesh*                           ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C68[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetStructureColorValue
struct APrimalStructure_GetStructureColorValue_Params
{
public:
	int32                                        ColorRegionIndex;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalStructure.GetStructureColor
struct APrimalStructure_GetStructureColor_Params
{
public:
	int32                                        ColorRegionIndex;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalStructure.GetSnapPointName
struct APrimalStructure_GetSnapPointName_Params
{
public:
	int32                                        SnapPointIndex;                                    // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructure.GetPinCode
struct APrimalStructure_GetPinCode_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetPhysMaterialOverride
struct APrimalStructure_GetPhysMaterialOverride_Params
{
public:
	class UPhysicalMaterial*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetPaintingTexture
struct APrimalStructure_GetPaintingTexture_Params
{
public:
	class UPaintingTexture*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetPaintingStaticMesh
struct APrimalStructure_GetPaintingStaticMesh_Params
{
public:
	class UStaticMeshComponent*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalStructure.GetNumStructuresInRangeStructureTypeFlag
struct APrimalStructure_GetNumStructuresInRangeStructureTypeFlag_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TypeFlag;                                          // 0x20(0x4)(ExportObject, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C80[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          StructureTags;                                     // 0x28(0x10)(OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        WithinRange;                                       // 0x38(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckBPCountStructureInRange;                     // 0x3C(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseInternalOctree;                                // 0x3D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C81[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      IgnoreStructure;                                   // 0x40(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckWithAltCollisionChannel;                     // 0x48(0x1)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C82[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  OnSaddleDino;                                      // 0x50(0x8)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ForTeam;                                           // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x5C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalStructure.GetNearbyStructuresOfClass
struct APrimalStructure_GetNearbyStructuresOfClass_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class UClass*                                StructureClass;                                    // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Range;                                             // 0x28(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2C83[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructure*>              Structures;                                        // 0x30(0x10)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.GetFoundationTop
struct APrimalStructure_GetFoundationTop_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.PrimalStructure.GetDefaultVariant
struct APrimalStructure_GetDefaultVariant_Params
{
public:
	struct FStructureVariant                     ReturnValue;                                       // 0x0(0x130)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructure.GetDefaultDestinationID
struct APrimalStructure_GetDefaultDestinationID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetDayCycleManager
struct APrimalStructure_GetDayCycleManager_Params
{
public:
	class ADayCycleManager*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructure.GetClosestStructureToPoint
struct APrimalStructure_GetClosestStructureToPoint_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverlapRadius;                                     // 0x20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C87[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructure.GetBedID
struct APrimalStructure_GetBedID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetBedFilterClass
struct APrimalStructure_GetBedFilterClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.GetAttachedToShip
struct APrimalStructure_GetAttachedToShip_Params
{
public:
	class APrimalStructure*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.GetAllowedStructureColorRegions
struct APrimalStructure_GetAllowedStructureColorRegions_Params
{
public:
	TArray<int32>                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.GetAdditionalComponentsForDyePreview
struct APrimalStructure_GetAdditionalComponentsForDyePreview_Params
{
public:
	TArray<class UStaticMeshComponent*>          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalStructure.FinalStructurePlacement
struct APrimalStructure_FinalStructurePlacement_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              PlayerViewRotation;                                // 0x38(0x18)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 AttachToPawn;                                      // 0x50(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BoneName;                                          // 0x58(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bFlipped;                                          // 0x60(0x1)(BlueprintVisible, ExportObject, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2C90[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlacementData                        PlacementData;                                     // 0x68(0x88)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2C91[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalStructure.ExecSkinNetMessage
struct APrimalStructure_ExecSkinNetMessage_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MessageName;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FSkinNetMessageParams                 SkinNetMessageParams;                              // 0x10(0x40)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalStructure.DemolishStructureAndDependingLinkedStructures
struct APrimalStructure_DemolishStructureAndDependingLinkedStructures_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TMap<class UClass*, int32>                   CollectedResources;                                // 0x8(0x50)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsFirst;                                           // 0x58(0x1)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseResourceMap;                                   // 0x59(0x1)(ExportObject, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CA0[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.Demolish
struct APrimalStructure_Demolish_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.CreateDynamicMaterials
struct APrimalStructure_CreateDynamicMaterials_Params
{
public:
	class UMeshComponent*                        ForceCreateForComponent;                           // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.ClientUpdateLinkedStructures
struct APrimalStructure_ClientUpdateLinkedStructures_Params
{
public:
	TArray<uint32>                               NewLinkedStructures;                               // 0x0(0x10)(BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalStructure.ClearStructureSkinTimer
struct APrimalStructure_ClearStructureSkinTimer_Params
{
public:
	bool                                         bClearAll;                                         // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearLooping;                                     // 0x1(0x1)(ConstParm, Net, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.ClearStructureLinks
struct APrimalStructure_ClearStructureLinks_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.ChangeStructureStaticMesh
struct APrimalStructure_ChangeStructureStaticMesh_Params
{
public:
	class UStaticMeshComponent*                  MeshComp;                                          // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UStaticMesh*                           NewMesh;                                           // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.CanPickupStructureFromRecentPlacement
struct APrimalStructure_CanPickupStructureFromRecentPlacement_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.CanBeStoredByExosuit
struct APrimalStructure_CanBeStoredByExosuit_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CB7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.CanAttachToExosuit
struct APrimalStructure_CanAttachToExosuit_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CBC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.CallDrawHUD
struct APrimalStructure_CallDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.CallDrawFloatingHUD
struct APrimalStructure_CallDrawFloatingHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.BPUseCountStructureInRange
struct APrimalStructure_BPUseCountStructureInRange_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.BPUpdatedHealth
struct APrimalStructure_BPUpdatedHealth_Params
{
public:
	bool                                         bDoReplication;                                    // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.PrimalStructure.BPTreatAsFoundationForSnappedStructure
struct APrimalStructure_BPTreatAsFoundationForSnappedStructure_Params
{
public:
	class APrimalStructure*                      OtherStructure;                                    // 0x0(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPlacementData                        WithPlacementData;                                 // 0x8(0x88)(BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CC3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructureSkinTryMultiUse
struct APrimalStructure_BPStructureSkinTryMultiUse_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        UseIndex;                                          // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CC5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructureSkinTimerTriggered
struct APrimalStructure_BPStructureSkinTimerTriggered_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLooping;                                          // 0x8(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_2CC6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructureSkinGetMultiUseEntries
struct APrimalStructure_BPStructureSkinGetMultiUseEntries_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FMultiUseEntry>                MultiUseEntries;                                   // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FMultiUseEntry>                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructureSkinClientDoMultiUse
struct APrimalStructure_BPStructureSkinClientDoMultiUse_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ClientUseIndex;                                    // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2CC9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructureSkinBlueprintDrawHUD
struct APrimalStructure_BPStructureSkinBlueprintDrawHUD_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterHUD*                           HUD;                                               // 0x8(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        CenterX;                                           // 0x10(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0x14(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPStructurePreGetMultiUseEntries
struct APrimalStructure_BPStructurePreGetMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventUsingAsFloorForStructure
struct APrimalStructure_BPPreventUsingAsFloorForStructure_Params
{
public:
	struct FPlacementData                        TheOutPlacementData;                               // 0x0(0x88)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      StructureToPlaceOnMe;                              // 0x88(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CCD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventStasis
struct APrimalStructure_BPPreventStasis_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventSpawnForPlayer
struct APrimalStructure_BPPreventSpawnForPlayer_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckCooldownTime;                                // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CCF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      FromStructure;                                     // 0x10(0x8)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CD0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x108 (0x108 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventPlacingStructureOntoMe
struct APrimalStructure_BPPreventPlacingStructureOntoMe_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalStructure*                      ForNewStructure;                                   // 0x8(0x8)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHitResult                            ForHitResult;                                      // 0x10(0xF0)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x100(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CD3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventPlacingOnFloorStructure
struct APrimalStructure_BPPreventPlacingOnFloorStructure_Params
{
public:
	struct FPlacementData                        TheOutPlacementData;                               // 0x0(0x88)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      FloorStructure;                                    // 0x88(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CD4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventPlacementOnPawn
struct APrimalStructure_BPPreventPlacementOnPawn_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForCharacter;                                      // 0x8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  ForBone;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CD7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPPreventCharacterBasing
struct APrimalStructure_BPPreventCharacterBasing_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   BasedOnComponent;                                  // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CD8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalStructure.BPPlayDying
struct APrimalStructure_BPPlayDying_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CDA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x28(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPPlacedStructure
struct APrimalStructure_BPPlacedStructure_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideTargetLocation
struct APrimalStructure_BPOverrideTargetLocation_Params
{
public:
	struct FVector                               AttackPos;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideSnapTargetAllowSnapPoint
struct APrimalStructure_BPOverrideSnapTargetAllowSnapPoint_Params
{
public:
	bool                                         IsAllowed;                                         // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CDD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      OtherStructure;                                    // 0x8(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OtherSnapIndex;                                    // 0x10(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CDE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideSnappedToTransform
struct APrimalStructure_BPOverrideSnappedToTransform_Params
{
public:
	class APrimalStructure*                      ChildStructure;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ChildSnapFromIndex;                                // 0x8(0x4)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ChildSnapFromName;                                 // 0xC(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               UnsnappedPlacementPos;                             // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              UnsnappedPlacementRot;                             // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SnappedPlacementPos;                               // 0x48(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SnappedPlacementRot;                               // 0x60(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SnapToIndex;                                       // 0x78(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SnapToName;                                        // 0x7C(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CE2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutLocation;                                       // 0x88(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0xA0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        bForceInvalidateSnap;                              // 0xB8(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xBC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CE3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC0 (0xC0 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideSnappedFromTransform
struct APrimalStructure_BPOverrideSnappedFromTransform_Params
{
public:
	class APrimalStructure*                      ParentStructure;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ParentSnapFromIndex;                               // 0x8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ParentSnapFromName;                                // 0xC(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CEA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               UnsnappedPlacementPos;                             // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              UnsnappedPlacementRot;                             // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SnappedPlacementPos;                               // 0x48(0x18)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SnappedPlacementRot;                               // 0x60(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SnapToIndex;                                       // 0x78(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SnapToName;                                        // 0x7C(0x8)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CEB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OutLocation;                                       // 0x88(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              OutRotation;                                       // 0xA0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        bForceInvalidateSnap;                              // 0xB8(0x4)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xBC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CEC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverridePlacementRotation
struct APrimalStructure_BPOverridePlacementRotation_Params
{
public:
	struct FVector                               ViewPos;                                           // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ViewRot;                                           // 0x18(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideDescriptiveNameForPreview
struct APrimalStructure_BPOverrideDescriptiveNameForPreview_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideDescriptiveName
struct APrimalStructure_BPOverrideDescriptiveName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideDemolish
struct APrimalStructure_BPOverrideDemolish_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CF5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideCantBuildReasonString
struct APrimalStructure_BPOverrideCantBuildReasonString_Params
{
public:
	int32                                        CantBuildReason;                                   // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CF6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideAllowStructureAccess
struct APrimalStructure_BPOverrideAllowStructureAccess_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsAccessAllowed;                                  // 0x8(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForInventoryOnly;                                 // 0x9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CF9[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BPOverrideAllowSnapPoint
struct APrimalStructure_BPOverrideAllowSnapPoint_Params
{
public:
	bool                                         IsAllowed;                                         // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2CFB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      OtherStructure;                                    // 0x8(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OtherSnapIndex;                                    // 0x10(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MySnapIndex;                                       // 0x14(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2CFD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPOnVariantSwitch
struct APrimalStructure_BPOnVariantSwitch_Params
{
public:
	class FName                                  NewVariantTag;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BPOnStructurePickup
struct APrimalStructure_BPOnStructurePickup_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UClass*                                ItemType;                                          // 0x8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           NewlyPickedUpItem;                                 // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsQuickPickup;                                    // 0x18(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D02[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPOnLinkedStructureDestroyed
struct APrimalStructure_BPOnLinkedStructureDestroyed_Params
{
public:
	class APrimalStructure*                      DestroyedStructure;                                // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPOnDemolish
struct APrimalStructure_BPOnDemolish_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPNotifyAmmoBoxReloadedStructure
struct APrimalStructure_BPNotifyAmmoBoxReloadedStructure_Params
{
public:
	class APrimalStructure*                      ReloadedStructure;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.BPNetRefreshStructureColors
struct APrimalStructure_BPNetRefreshStructureColors_Params
{
public:
	bool                                         bUseColors;                                        // 0x0(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.PrimalStructure.BPIsAllowedToBuildEx
struct APrimalStructure_BPIsAllowedToBuildEx_Params
{
public:
	struct FPlacementData                        OutPlacementData;                                  // 0x0(0x88)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CurrentAllowedReason;                              // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D08[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     PC;                                                // 0x90(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bFinalPlacement;                                   // 0x98(0x1)(ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bChoosingRotation;                                 // 0x99(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D09[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x9C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.PrimalStructure.BPIsAllowedToBuild
struct APrimalStructure_BPIsAllowedToBuild_Params
{
public:
	struct FPlacementData                        OutPlacementData;                                  // 0x0(0x88)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        CurrentAllowedReason;                              // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructure.BPImpactEffect
struct APrimalStructure_BPImpactEffect_Params
{
public:
	struct FHitResult                            HitRes;                                            // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ShootDirection;                                    // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x108(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D0C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.BPHandleStructureEnabled
struct APrimalStructure_BPHandleStructureEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPHandleBedFastTravel
struct APrimalStructure_BPHandleBedFastTravel_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalStructure*                      ToBed;                                             // 0x8(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D0D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetStructureID
struct APrimalStructure_BPGetStructureID_Params
{
public:
	class APrimalStructure*                      PrimalStructure;                                   // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D0E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetSnapToPlacementMeshOverride
struct APrimalStructure_BPGetSnapToPlacementMeshOverride_Params
{
public:
	class APrimalStructure*                      ChildStructure;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPlacementData                        OutPlacementData;                                  // 0x8(0x88)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMesh*                           OutMeshOverride;                                   // 0x90(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                OutClassOverride;                                  // 0x98(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviewLocOffset;                                  // 0xA0(0x18)(ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              PreviewRotOffset;                                  // 0xB8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               PreviewScaleOffset;                                // 0xD0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetSnapPoints
struct APrimalStructure_BPGetSnapPoints_Params
{
public:
	TArray<struct FPrimalStructureSnapPoint>     ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetSnapFromPlacementMeshOverride
struct APrimalStructure_BPGetSnapFromPlacementMeshOverride_Params
{
public:
	class APrimalStructure*                      ParentStructure;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPlacementData                        OutPlacementData;                                  // 0x8(0x88)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UStaticMesh*                           OutMeshOverride;                                   // 0x90(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                OutClassOverride;                                  // 0x98(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PreviewLocOffset;                                  // 0xA0(0x18)(ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              PreviewRotOffset;                                  // 0xB8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               PreviewScaleOffset;                                // 0xD0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetInfoFromConsumedItemForPlacedStructure
struct APrimalStructure_BPGetInfoFromConsumedItemForPlacedStructure_Params
{
public:
	class UPrimalItem*                           ItemToConsumed;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetFromID
struct APrimalStructure_BPGetFromID_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	int32                                        TheStructureID;                                    // 0x8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D1B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetAmmoBoxReloadPercent
struct APrimalStructure_BPGetAmmoBoxReloadPercent_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetAllLinkedStructures
struct APrimalStructure_BPGetAllLinkedStructures_Params
{
public:
	TArray<class APrimalStructure*>              OutLinkedStructures;                               // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                StructureClass;                                    // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPGetAggroDinoOnDamageSettings
struct APrimalStructure_BPGetAggroDinoOnDamageSettings_Params
{
public:
	TArray<class FName>                          AggroDinoClassesCustomTags;                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AggroDinoClassesRange;                             // 0x10(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D29[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructure.BPForceConsideredEnemyFoundation
struct APrimalStructure_BPForceConsideredEnemyFoundation_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalStructure*                      ForNewStructure;                                   // 0x8(0x8)(ConstParm, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TestAtLocation;                                    // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D2D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BPDefaultProcessEditText
struct APrimalStructure_BPDefaultProcessEditText_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                TextToUse;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         CheckedBox;                                        // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D33[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPCheckItemRequiementsToBuild
struct APrimalStructure_BPCheckItemRequiementsToBuild_Params
{
public:
	class UPrimalItem*                           ItemToConsumed;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D38[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BPApplyCustomDurabilityOnPickup
struct APrimalStructure_BPApplyCustomDurabilityOnPickup_Params
{
public:
	class UPrimalItem*                           PickedUp;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalStructure.BPAllowSwitchToVariant
struct APrimalStructure_BPAllowSwitchToVariant_Params
{
public:
	class FName                                  VariantTag;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D3B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalStructure.BPAllowSnapRotationForStructure
struct APrimalStructure_BPAllowSnapRotationForStructure_Params
{
public:
	int32                                        ThisSnapPointIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ThisSnapPointName;                                 // 0x4(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2D3C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      OtherStructure;                                    // 0x10(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OtherStructureSnapPointIndex;                      // 0x18(0x4)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OtherStructureSnapPointName;                       // 0x1C(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D3D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.BPAllowSnappingWith
struct APrimalStructure_BPAllowSnappingWith_Params
{
public:
	class APrimalStructure*                      OtherStructure;                                    // 0x0(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D3E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BPAllowPickupGiveItem
struct APrimalStructure_BPAllowPickupGiveItem_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D40[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructure.BP_OnPaintingComponentInitialized
struct APrimalStructure_BP_OnPaintingComponentInitialized_Params
{
public:
	class UStructurePaintingComponent*           PaintingComp;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BlueprintDrawPreviewHUD
struct APrimalStructure_BlueprintDrawPreviewHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        CenterX;                                           // 0x8(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0xC(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.BlueprintDrawHUD
struct APrimalStructure_BlueprintDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        CenterX;                                           // 0x8(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0xC(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructure.BlueprintAnimNotifyCustomEvent
struct APrimalStructure_BlueprintAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotify*                           AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.ApplyPrimalItemSettingsToStructure
struct APrimalStructure_ApplyPrimalItemSettingsToStructure_Params
{
public:
	class UMeshComponent*                        MeshToColorize;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           AssociatedPrimalItem;                              // 0x8(0x8)(BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructure.AllowStructureAccess
struct APrimalStructure_AllowStructureAccess_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D47[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructure.AllowSnappingWith
struct APrimalStructure_AllowSnappingWith_Params
{
public:
	class APrimalStructure*                      OtherStructure;                                    // 0x0(0x8)(ExportObject, Net, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2D4C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructure.AllowShowUserGeneratedText
struct APrimalStructure_AllowShowUserGeneratedText_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.VerifyPinCode
struct APrimalStructureItemContainer_VerifyPinCode_Params
{
public:
	int32                                        PinCode;                                           // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DBD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.UpdateTribeGroupInventoryRank
struct APrimalStructureItemContainer_UpdateTribeGroupInventoryRank_Params
{
public:
	uint8                                        NewRank;                                           // 0x0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.SetPoweredOverrideCounter
struct APrimalStructureItemContainer_SetPoweredOverrideCounter_Params
{
public:
	int32                                        NewPoweredOverrideCounter;                         // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.RefreshPowered
struct APrimalStructureItemContainer_RefreshPowered_Params
{
public:
	class APrimalStructureItemContainer*         InDirectPower;                                     // 0x0(0x8)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.NetUpdateLocation
struct APrimalStructureItemContainer_NetUpdateLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.NetUpdateBoxName
struct APrimalStructureItemContainer_NetUpdateBoxName_Params
{
public:
	class FString                                NewName;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.NetSetContainerActive
struct APrimalStructureItemContainer_NetSetContainerActive_Params
{
public:
	bool                                         bSetActive;                                        // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DCA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                NetReplicatedFuelItemClass;                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int16                                        NetReplicatedFuelItemColorIndex;                   // 0x10(0x2)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DCB[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.IsValidForDinoFeedingContainer
struct APrimalStructureItemContainer_IsValidForDinoFeedingContainer_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DCC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.IsValidatedPinCodePlayerController
struct APrimalStructureItemContainer_IsValidatedPinCodePlayerController_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DD1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.IsPlayerControllerInPinCodeValidationList
struct APrimalStructureItemContainer_IsPlayerControllerInPinCodeValidationList_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DD4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.HasSamePinCode
struct APrimalStructureItemContainer_HasSamePinCode_Params
{
public:
	class APrimalStructureItemContainer*         OtherContainer;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DD6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.GetTimeFuelRemaining
struct APrimalStructureItemContainer_GetTimeFuelRemaining_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.GetSkinMaterialsForActivation
struct APrimalStructureItemContainer_GetSkinMaterialsForActivation_Params
{
public:
	class APrimalStructureItemContainer*         ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            ActiveMats;                                        // 0x8(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UMaterialInterface*>            InactiveMats;                                      // 0x18(0x10)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DDB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.GetOverrideParticleLightColor
struct APrimalStructureItemContainer_GetOverrideParticleLightColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.GetNearbyWirelessStructures
struct APrimalStructureItemContainer_GetNearbyWirelessStructures_Params
{
public:
	class UPrimalWirelessExchangeData*           MyExchange;                                        // 0x0(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TMap<class APrimalStructureItemContainer*, class UPrimalWirelessExchangeData*> ReturnValue;                                       // 0x8(0x50)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.GetDeathCacheCharacterID
struct APrimalStructureItemContainer_GetDeathCacheCharacterID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.CanBeActivated
struct APrimalStructureItemContainer_CanBeActivated_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPSetPlayerConstructor
struct APrimalStructureItemContainer_BPSetPlayerConstructor_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPRename
struct APrimalStructureItemContainer_BPRename_Params
{
public:
	class FString                                NewName;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPPreGetMultiUseEntries
struct APrimalStructureItemContainer_BPPreGetMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPNotifyRemoteViewerChange
struct APrimalStructureItemContainer_BPNotifyRemoteViewerChange_Params
{
public:
	bool                                         bOpened;                                           // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPNotifyInventoryItemChange
struct APrimalStructureItemContainer_BPNotifyInventoryItemChange_Params
{
public:
	bool                                         bIsItemAdd;                                        // 0x0(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           TheItem;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DEC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPIsValidWaterSourceForPipe
struct APrimalStructureItemContainer_BPIsValidWaterSourceForPipe_Params
{
public:
	class APrimalStructureWaterPipe*             ForWaterPipe;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DEE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPIncrementItemCountQty
struct APrimalStructureItemContainer_BPIncrementItemCountQty_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Qty;                                               // 0x8(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0xC(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DF2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPGetQuantityOfItemWithoutCheckingInventory
struct APrimalStructureItemContainer_BPGetQuantityOfItemWithoutCheckingInventory_Params
{
public:
	class UClass*                                ItemToCheckFor;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0x8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPGetItemCountQty
struct APrimalStructureItemContainer_BPGetItemCountQty_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0x8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPGetFuelConsumptionMultiplier
struct APrimalStructureItemContainer_BPGetFuelConsumptionMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPGetCollisionCompInstanceInfo
struct APrimalStructureItemContainer_BPGetCollisionCompInstanceInfo_Params
{
public:
	struct FHitResult                            HitInfo;                                           // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bSuccess;                                          // 0xF0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bUseArmor;                                         // 0xF1(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ArmorType;                                         // 0xF2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2DF7[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  BoneName;                                          // 0xF4(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_2DF8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPDisplayWirelessSupplyLinks
struct APrimalStructureItemContainer_BPDisplayWirelessSupplyLinks_Params
{
public:
	class FName                                  WirelessTag;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class APrimalStructureItemContainer*> SupplyLinks;                                       // 0x8(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivatedByPlayer
struct APrimalStructureItemContainer_BPCanBeActivatedByPlayer_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2DFB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivated
struct APrimalStructureItemContainer_BPCanBeActivated_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.BPApplyPinCode
struct APrimalStructureItemContainer_BPApplyPinCode_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        AppledPinCode;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSetting;                                        // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2E00[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheCustomIndex;                                    // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E01[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.ApplyActivationMaterialsToComponent
struct APrimalStructureItemContainer_ApplyActivationMaterialsToComponent_Params
{
public:
	class UMeshComponent*                        MeshComp;                                          // 0x0(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         IsFromSkinRemoval;                                 // 0x8(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E04[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.AllowToggleActivation
struct APrimalStructureItemContainer_AllowToggleActivation_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E08[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.AdjustNetDestructionTime
struct APrimalStructureItemContainer_AdjustNetDestructionTime_Params
{
public:
	float                                        Delta;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E09[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.AddToValidatedByPinCodePlayerControllers
struct APrimalStructureItemContainer_AddToValidatedByPinCodePlayerControllers_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E0C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer.AddPowerJunctionLinkParticle
struct APrimalStructureItemContainer_AddPowerJunctionLinkParticle_Params
{
public:
	class APrimalStructure*                      MyOutlet;                                          // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionDispatcher.StartMission
struct AMissionDispatcher_StartMission_Params
{
public:
	class UClass*                                MissionTypeClass;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OutClientFailureReason;                            // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AMissionType*                          ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionDispatcher.OnRunningMissionDeactivated
struct AMissionDispatcher_OnRunningMissionDeactivated_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionDispatcher.MultiSetParticleSystemActive
struct AMissionDispatcher_MultiSetParticleSystemActive_Params
{
public:
	bool                                         bIsActive;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionDispatcher.IsValidDispatcherForMissionType
struct AMissionDispatcher_IsValidDispatcherForMissionType_Params
{
public:
	class UClass*                                MissionTypeClass;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E4D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionDispatcher.GetFallbackSeed
struct AMissionDispatcher_GetFallbackSeed_Params
{
public:
	class UClass*                                ForMission;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRemoveSeed;                                       // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E4E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionDispatcher.ClearFallbackSeeds
struct AMissionDispatcher_ClearFallbackSeeds_Params
{
public:
	class UClass*                                OptionalForMission;                                // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionDispatcher.BPOverrideMultiUseMissionList
struct AMissionDispatcher_BPOverrideMultiUseMissionList_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionDispatcher.BPOnRunningMissionDeactivated
struct AMissionDispatcher_BPOnRunningMissionDeactivated_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionDispatcher.BPOnMissionStarted
struct AMissionDispatcher_BPOnMissionStarted_Params
{
public:
	class AMissionType*                          NewMission;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionDispatcher.BPOnMissionFailToStart
struct AMissionDispatcher_BPOnMissionFailToStart_Params
{
public:
	class UClass*                                MissionTypeClass;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionDispatcher.BPGetMissionStartLocation
struct AMissionDispatcher_BPGetMissionStartLocation_Params
{
public:
	class UClass*                                MissionTypeClass;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionDispatcher.BPCanSpawnMission
struct AMissionDispatcher_BPCanSpawnMission_Params
{
public:
	class UClass*                                MissionTypeClass;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     StartingCharacter;                                 // 0x8(0x8)(BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E54[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionDispatcher.AddFallbackSeed
struct AMissionDispatcher_AddFallbackSeed_Params
{
public:
	class UClass*                                ForMission;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Seed;                                              // 0x8(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	int32                                        MaxNumberOfFallbackSeeds;                          // 0xC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionModuleBase.BPGetTargetingDesire
struct UMissionModuleBase_BPGetTargetingDesire_Params
{
public:
	class APrimalDinoCharacter*                  MissionDino;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ForTarget;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForTargetingDesireValue;                           // 0x10(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionModuleInterface.RunMissionModule
struct IMissionModuleInterface_RunMissionModule_Params
{
public:
	class UClass*                                ModuleClass;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UNewMissionModuleBase*                 ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionPrerequisite.IsSatisfied
struct UMissionPrerequisite_IsSatisfied_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff_MissionData*               PlayerMissionData;                                 // 0x10(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OutReason;                                         // 0x18(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E65[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionRequirementEntryWidget.SetDisplayText
struct UMissionRequirementEntryWidget_SetDisplayText_Params
{
public:
	class FString                                Text;                                              // 0x0(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionRequirementEntryWidget.SetCustomTag
struct UMissionRequirementEntryWidget_SetCustomTag_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionRequirementEntryWidget.Initialize
struct UMissionRequirementEntryWidget_Initialize_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionServerSidePoint.SetTriggerKey
struct AMissionServerSidePoint_SetTriggerKey_Params
{
public:
	class FName                                  NewTriggerKey;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionSpline.SpawnerUpdate
struct AMissionSpline_SpawnerUpdate_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.MissionSpline.FindLocationAndDirectionClosestToWorldLocation
struct AMissionSpline_FindLocationAndDirectionClosestToWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               OutLocation;                                       // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               OutDirection;                                      // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutSplineKey;                                      // 0x48(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E70[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionTrigger.IsPointOfInterestValid
struct AMissionTrigger_IsPointOfInterestValid_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1E0 (0x1E0 - 0x0)
// Function ShooterGame.MissionTrigger.GetMyPointOfInterestData
struct AMissionTrigger_GetMyPointOfInterestData_Params
{
public:
	struct FPointOfInterestData                  ReturnValue;                                       // 0x0(0x1E0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x300 (0x300 - 0x0)
// Function ShooterGame.MissionTrigger.GetMyPointOfInterestCompanionBehavior
struct AMissionTrigger_GetMyPointOfInterestCompanionBehavior_Params
{
public:
	struct FPointOfInterestCompanionBehavior     ReturnValue;                                       // 0x0(0x300)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.UpdateWorldIndicators
struct AMissionType_UpdateWorldIndicators_Params
{
public:
	bool                                         bForceNetUpdate;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.UpdateRequirements
struct AMissionType_UpdateRequirements_Params
{
public:
	bool                                         bForceNetUpdate;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.UpdateMissionPrepArea
struct AMissionType_UpdateMissionPrepArea_Params
{
public:
	struct FVector                               PrepAreaWorldLocation;                             // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinUpdateFrequencyInSeconds;                       // 0x18(0x4)(ConstParm, ExportObject, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E7F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.MissionType.TryCompletePhase
struct AMissionType_TryCompletePhase_Params
{
public:
	bool                                         bForceChange;                                      // 0x0(0x1)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.TryChangeMissionPhase
struct AMissionType_TryChangeMissionPhase_Params
{
public:
	class FName                                  NewPhase;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceChange;                                      // 0x8(0x1)(Edit, ConstParm, Net, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E83[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalMaxHealth_Players
struct AMissionType_TotalMaxHealth_Players_Params
{
public:
	TArray<class AShooterCharacter*>             PlayerArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E85[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalMaxHealth_Dinos
struct AMissionType_TotalMaxHealth_Dinos_Params
{
public:
	TArray<class APrimalDinoCharacter*>          DinoArray;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E87[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalMaxHealth_Characters
struct AMissionType_TotalMaxHealth_Characters_Params
{
public:
	TArray<class APrimalCharacter*>              CharacterArray;                                    // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E88[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalCurrentHealth_Players
struct AMissionType_TotalCurrentHealth_Players_Params
{
public:
	TArray<class AShooterCharacter*>             PlayerArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E89[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalCurrentHealth_Dinos
struct AMissionType_TotalCurrentHealth_Dinos_Params
{
public:
	TArray<class APrimalDinoCharacter*>          DinoArray;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E8B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.TotalCurrentHealth_Characters
struct AMissionType_TotalCurrentHealth_Characters_Params
{
public:
	TArray<class APrimalCharacter*>              CharacterArray;                                    // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E8E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.TeleportCharacterForMission
struct AMissionType_TeleportCharacterForMission_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	struct FVector                               NewLocation;                                       // 0x8(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bOverrideRotation;                                 // 0x20(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2E92[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RotationOverride;                                  // 0x28(0x18)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSetReturnLocation;                           // 0x40(0x1)(Edit, ConstParm, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWasMountedDino;                                   // 0x41(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipDinoFailChecks;                               // 0x42(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x43(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E94[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.StaticOnReplicatedMissionDataUpdated
struct AMissionType_StaticOnReplicatedMissionDataUpdated_Params
{
public:
	class APrimalBuff_MissionData*               MissionData;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.StaticOnMissionDataInitialized
struct AMissionType_StaticOnMissionDataInitialized_Params
{
public:
	class APrimalBuff_MissionData*               MissionData;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.StaticGetTaggedString
struct AMissionType_StaticGetTaggedString_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class FName                                  Tag;                                               // 0x8(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                OutString;                                         // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2E9E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionWeapon
struct AMissionType_SpawnMissionWeapon_Params
{
public:
	class AShooterCharacter*                     ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                WeaponItem;                                        // 0x8(0x8)(Edit, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ItemQuality;                                       // 0x10(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AutoEquip;                                         // 0x14(0x1)(Edit, ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EA0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterWeapon*                        ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionStructure
struct AMissionType_SpawnMissionStructure_Params
{
public:
	class UClass*                                StructureType;                                     // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x38(0x8)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        TargetingTeamOverride;                             // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EA6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructure*                      ReturnValue;                                       // 0x48(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionItem
struct AMissionType_SpawnMissionItem_Params
{
public:
	class UClass*                                AnItemClass;                                       // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ItemQuality;                                       // 0x8(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceNoBlueprint;                                 // 0xC(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EAB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        QuantityOverride;                                  // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2EAC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TheDroppedTemplateOverride;                        // 0x18(0x8)(ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              WorldRotation;                                     // 0x38(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UStaticMesh*                           DroppedMeshOverride;                               // 0x50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DroppedScaleOverride;                              // 0x58(0x18)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DroppedMaterialOverride;                           // 0x70(0x8)(Edit, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DroppedLifeSpanOverride;                           // 0x78(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EAE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ADroppedItemMission*                   ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionDinoGroupExtended
struct AMissionType_SpawnMissionDinoGroupExtended_Params
{
public:
	int32                                        NumDinos;                                          // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpawnRadius;                                       // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDinoSetup>                    DinoSetups;                                        // 0x38(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ESpawnPattern                     Pattern;                                           // 0x48(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2EB1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x50(0x8)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x58(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyRotationToSpawnOffset;                       // 0x5C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EB3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UBehaviorTree*                         OverrideMissionBehaviorTree;                       // 0x60(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRandomizeDinos;                                   // 0x68(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontWander;                                       // 0x69(0x1)(BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoredByWildDinos;                      // 0x6A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoreWildDinos;                         // 0x6B(0x1)(Edit, ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AIRangeMultiplier;                                 // 0x6C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UClass*                                ColorSet;                                          // 0x70(0x8)(ConstParm, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoLosCheck;                                       // 0x78(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoOverlapCheck;                                   // 0x79(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EB6[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x80(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionDinoGroup
struct AMissionType_SpawnMissionDinoGroup_Params
{
public:
	int32                                        NumDinos;                                          // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpawnRadius;                                       // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x38(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	enum class ESpawnPattern                     Pattern;                                           // 0x158(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2EB9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x160(0x8)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x168(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyRotationToSpawnOffset;                       // 0x16C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EBA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UBehaviorTree*                         OverrideMissionBehaviorTree;                       // 0x170(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontWander;                                       // 0x178(0x1)(BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoredByWildDinos;                      // 0x179(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoreWildDinos;                         // 0x17A(0x1)(Edit, ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EBC[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIRangeMultiplier;                                 // 0x17C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x180(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x188 (0x188 - 0x0)
// Function ShooterGame.MissionType.SpawnMissionDino
struct AMissionType_SpawnMissionDino_Params
{
public:
	struct FVector                               SpawnLocation;                                     // 0x0(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x30(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x150(0x8)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x158(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyRotationToSpawnOffset;                       // 0x15C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UBehaviorTree*                         OverrideMissionBehaviorTree;                       // 0x160(0x8)(Edit, ConstParm, ExportObject, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontWander;                                       // 0x168(0x1)(BlueprintVisible, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoredByWildDinos;                      // 0x169(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTargetingIgnoreWildDinos;                         // 0x16A(0x1)(Edit, ConstParm, BlueprintVisible, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC3[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AIRangeMultiplier;                                 // 0x16C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UClass*                                ColorSet;                                          // 0x170(0x8)(ConstParm, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoLosCheck;                                       // 0x178(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoOverlapCheck;                                   // 0x179(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EC5[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x180(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.MissionType.SpawnMission
struct AMissionType_SpawnMission_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                MissionType;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     ForCharacter;                                      // 0x10(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FString                                FailureReason;                                     // 0x30(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                MissionDispatcherActor;                            // 0x40(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceSpawn;                                       // 0x48(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ECA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          ReturnValue;                                       // 0x50(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.MissionType.SpawnEmitterForPlayers
struct AMissionType_SpawnEmitterForPlayers_Params
{
public:
	TArray<class AShooterCharacter*>             Players;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                EmitterType;                                       // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ECC[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            EmitterTransform;                                  // 0x20(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EmitterLifespan;                                   // 0x80(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ECE[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.SortMissionWorldIndicatorArrayByDistance
struct AMissionType_SortMissionWorldIndicatorArrayByDistance_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class APrimalCharacter*                      ForCharacter;                                      // 0x18(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x20(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2ED1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FMissionWorldIndicator>        InOutWorldIndicators;                              // 0x28(0x10)(ConstParm, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.SetupMissionPrepArea
struct AMissionType_SetupMissionPrepArea_Params
{
public:
	struct FVector                               PrepAreaWorldLocation;                             // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              PrepAreaEmitterRotation;                           // 0x18(0x18)(Edit, ExportObject, Net, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PrepAreaEmitterScale;                              // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.SetSpecificSplineKeyTarget
struct AMissionType_SetSpecificSplineKeyTarget_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        Index;                                             // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_2ED7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.SetReverseTeleportReturnLocation
struct AMissionType_SetReverseTeleportReturnLocation_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	struct FVector                               NewLocation;                                       // 0x8(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.SetPlayerPrepAreaState
struct AMissionType_SetPlayerPrepAreaState_Params
{
public:
	class AShooterCharacter*                     PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInsidePrepArea;                                   // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EDB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetPlayerParticleSystemIndicator
struct AMissionType_SetPlayerParticleSystemIndicator_Params
{
public:
	class AShooterCharacter*                     PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       IndicatorParticles;                                // 0x8(0x8)(Edit, ConstParm, ExportObject, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RemoveAfterDuration;                               // 0x10(0x4)(Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceNetUpdate;                                   // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EDF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetPhaseStartedDelegate
struct AMissionType_SetPhaseStartedDelegate_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FDelegateProperty_                           Delegate;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetPhaseEndedDelegate
struct AMissionType_SetPhaseEndedDelegate_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	FDelegateProperty_                           Delegate;                                          // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.SetPhaseCompleted
struct AMissionType_SetPhaseCompleted_Params
{
public:
	int32                                        PhaseIndex;                                        // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCompleted;                                        // 0x4(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2EE0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.SetMissionTimeRemaining
struct AMissionType_SetMissionTimeRemaining_Params
{
public:
	float                                        SecondsRemaining;                                  // 0x0(0x4)(ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.SetMissionMusic
struct AMissionType_SetMissionMusic_Params
{
public:
	class USoundBase*                            LoopingMusicTrack;                                 // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.SetMissionDeactivationTimer
struct AMissionType_SetMissionDeactivationTimer_Params
{
public:
	float                                        NumSeconds;                                        // 0x0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.SetMissionCompletedStatus
struct AMissionType_SetMissionCompletedStatus_Params
{
public:
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCompleted;                                        // 0x8(0x1)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUseOverrideVersion;                               // 0x9(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EE2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideVersion;                                   // 0xC(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseOverrideCompleteUtcTime;                       // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EE3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CompleteUtcTime;                                   // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EE4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetDinoAITargetActor
struct AMissionType_SetDinoAITargetActor_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AActor*                                NewTarget;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AcceptableRadius;                                  // 0x10(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EE6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetDinoAINavigationTargetActor
struct AMissionType_SetDinoAINavigationTargetActor_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AActor*                                NewTarget;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EE7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.SetDinoAIForcedTargetActor
struct AMissionType_SetDinoAIForcedTargetActor_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AActor*                                NewTarget;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EE8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.ServerRequestToggleWeapon
struct AMissionType_ServerRequestToggleWeapon_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.SendNotificationToPlayer
struct AMissionType_SendNotificationToPlayer_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class FName                                  StringTagName;                                     // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x20(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DisplayScale;                                      // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSingleton;                                      // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EE9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.SendNotificationToAllPlayers
struct AMissionType_SendNotificationToAllPlayers_Params
{
public:
	class FName                                  StringTagName;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x18(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DisplayScale;                                      // 0x24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSingleton;                                      // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EEA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.SendMissionAlertToPlayer
struct AMissionType_SendMissionAlertToPlayer_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	enum class EMissionAlertType                 AlertType;                                         // 0x8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EEB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AlertTitle;                                        // 0x10(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionAlertEntry>            AlertEntries;                                      // 0x20(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DisplayTime;                                       // 0x30(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2EEC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         FlyoutFromTop;                                     // 0x40(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTreatStringsAsFnameTags;                          // 0x41(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EED[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.SendMissionAlertToAllPlayers
struct AMissionType_SendMissionAlertToAllPlayers_Params
{
public:
	enum class EMissionAlertType                 AlertType;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EEE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AlertTitle;                                        // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionAlertEntry>            AlertEntries;                                      // 0x18(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2EEF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         FlyoutFromTop;                                     // 0x38(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bTreatStringsAsFnameTags;                          // 0x39(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF0[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.ReverseTeleportCharacter
struct AMissionType_ReverseTeleportCharacter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EF2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.ResetSplinePoints
struct AMissionType_ResetSplinePoints_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.RemovePlayerUsableItem
struct AMissionType_RemovePlayerUsableItem_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.RemovePlayerFromMission
struct AMissionType_RemovePlayerFromMission_Params
{
public:
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCompletedSuccessfully;                            // 0x8(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRemoveSilently;                                   // 0x9(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF5[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.RemoveItemsFromInventory_Balanced
struct AMissionType_RemoveItemsFromInventory_Balanced_Params
{
public:
	bool                                         bIsBalanced;                                       // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EF7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalCharacter*>              FromCharacters;                                    // 0x8(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ItemClass;                                         // 0x18(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TotalAmountToRemove;                               // 0x20(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bMoveToMissionInventory;                           // 0x24(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyRemoveIfEnough;                               // 0x25(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExactClassMatch;                                  // 0x26(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreHotbar;                                     // 0x27(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x28(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EF8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.RemoveItemsFromInventory
struct AMissionType_RemoveItemsFromInventory_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UClass*                                ItemClass;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        AmountToRemove;                                    // 0x10(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bMoveToMissionInventory;                           // 0x14(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExactClassMatch;                                  // 0x15(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreHotbar;                                     // 0x16(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EFB[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EFC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.ReAddPlayerFromReconnect
struct AMissionType_ReAddPlayerFromReconnect_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_SetTargetCheckpoint
struct AMissionType_RacePlayerData_SetTargetCheckpoint_Params
{
public:
	TArray<struct FRacePlayerData>               InOutPlayerData;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        NewTargetCheckpoint;                               // 0x14(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_SetCheckpointData
struct AMissionType_RacePlayerData_SetCheckpointData_Params
{
public:
	TArray<struct FRacePlayerData>               InOutPlayerData;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        CheckpointIndex;                                   // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckpointReached;                                // 0x18(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EFD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CheckpointTime;                                    // 0x1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_NumCheckpoints
struct AMissionType_RacePlayerData_NumCheckpoints_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2EFE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_Initialize
struct AMissionType_RacePlayerData_Initialize_Params
{
public:
	TArray<struct FRacePlayerData>               InOutPlayerData;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AShooterPlayerController*>      Controllers;                                       // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumCheckpoints;                                    // 0x20(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2EFF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_IndexOfController
struct AMissionType_RacePlayerData_IndexOfController_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterPlayerController*              Controller;                                        // 0x10(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F00[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_GetTargetCheckpoint
struct AMissionType_RacePlayerData_GetTargetCheckpoint_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_GetPlayerRanking
struct AMissionType_RacePlayerData_GetPlayerRanking_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MissionStartLocation;                              // 0x10(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AMissionTrigger*>               Checkpoints;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x3C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_GetCheckpointData
struct AMissionType_RacePlayerData_GetCheckpointData_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	int32                                        CheckpointIndex;                                   // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckpointReached;                                // 0x18(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F02[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CheckpointTime;                                    // 0x1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_GetAllPlayerRankings
struct AMissionType_RacePlayerData_GetAllPlayerRankings_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<int32>                                OutRankings;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               MissionStartLocation;                              // 0x20(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AMissionTrigger*>               Checkpoints;                                       // 0x38(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.RacePlayerData_FixupControllers
struct AMissionType_RacePlayerData_FixupControllers_Params
{
public:
	TArray<struct FRacePlayerData>               InOutPlayerData;                                   // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.RaceClosestPlayerToCheckpoint
struct AMissionType_RaceClosestPlayerToCheckpoint_Params
{
public:
	TArray<struct FRacePlayerData>               PlayerData;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               MissionStartLocation;                              // 0x10(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AMissionTrigger*>               Checkpoints;                                       // 0x28(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        A;                                                 // 0x38(0x4)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	int32                                        B;                                                 // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F06[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.PlayMissionMusic
struct AMissionType_PlayMissionMusic_Params
{
public:
	class USoundBase*                            LoopingMusicToPlay;                                // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.OpenLeaderboardsForPlayer
struct AMissionType_OpenLeaderboardsForPlayer_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	TArray<struct FLeaderboardRow>               Rows;                                              // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.OpenLeaderboardsForAllPlayers
struct AMissionType_OpenLeaderboardsForAllPlayers_Params
{
public:
	TArray<struct FLeaderboardRow>               Rows;                                              // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.OnUpdateRequirements
struct AMissionType_OnUpdateRequirements_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseRequirement>      NewRequirements;                                   // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.OnThrottledTick
struct AMissionType_OnThrottledTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.OnThrottledServerTick
struct AMissionType_OnThrottledServerTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.OnThrottledClientTick
struct AMissionType_OnThrottledClientTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.OnPlayerSpawned
struct AMissionType_OnPlayerSpawned_Params
{
public:
	class AShooterCharacter*                     PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.OnMissionTriggerEndOverlap
struct AMissionType_OnMissionTriggerEndOverlap_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class FName                                  TriggerKey;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2F0D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.OnMissionTriggerBeginOverlap
struct AMissionType_OnMissionTriggerBeginOverlap_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class FName                                  TriggerKey;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2F0E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.OnMissionPhaseStarted
struct AMissionType_OnMissionPhaseStarted_Params
{
public:
	class FName                                  OldPhase;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewPhase;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.OnMissionPhaseEnded
struct AMissionType_OnMissionPhaseEnded_Params
{
public:
	class FName                                  OldPhase;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewPhase;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.OnInventoryItemRemoved
struct AMissionType_OnInventoryItemRemoved_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountRemoved;                                     // 0x10(0x4)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2F0F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.OnInventoryItemAdded
struct AMissionType_OnInventoryItemAdded_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountAdded;                                       // 0x10(0x4)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bEquippedItem;                                     // 0x14(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_2F10[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.NumLivingPlayers
struct AMissionType_NumLivingPlayers_Params
{
public:
	TArray<class AShooterCharacter*>             PlayerArray;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F11[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.NumLivingDinos
struct AMissionType_NumLivingDinos_Params
{
public:
	TArray<class APrimalDinoCharacter*>          DinoArray;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F12[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.NumLivingCharacters
struct AMissionType_NumLivingCharacters_Params
{
public:
	TArray<class APrimalCharacter*>              CharacterArray;                                    // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F13[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.MissionType.NonStaticGetPhaseRequirementDescription
struct AMissionType_NonStaticGetPhaseRequirementDescription_Params
{
public:
	struct FMissionPhaseRequirement              Req;                                               // 0x0(0x90)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x90(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.MultiResetMissionTimer
struct AMissionType_MultiResetMissionTimer_Params
{
public:
	double                                       NewMissionStartNetworkTime;                        // 0x0(0x8)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.MultiMissionStateChange
struct AMissionType_MultiMissionStateChange_Params
{
public:
	enum class EMissionState                     NewState;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.MultiMissionPhaseStarted
struct AMissionType_MultiMissionPhaseStarted_Params
{
public:
	class FName                                  OldPhaseName;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  NewPhaseName;                                      // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.MultiMissionPhaseEnded
struct AMissionType_MultiMissionPhaseEnded_Params
{
public:
	class FName                                  OldPhaseName;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  NewPhaseName;                                      // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.MissionType.MissionFindPathAsync
struct AMissionType_MissionFindPathAsync_Params
{
public:
	class UObject*                               WorldContext;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	struct FVector                               PathStart;                                         // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PathEnd;                                           // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                PathfindingContext;                                // 0x38(0x8)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                FilterClass;                                       // 0x40(0x8)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F16[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.MissionAI_SetReversPathForDino
struct AMissionType_MissionAI_SetReversPathForDino_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ShouldReverseAtEnd;                                // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F17[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.MissionAI_SetForcePathSplineForDino
struct AMissionType_MissionAI_SetForcePathSplineForDino_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class USplineComponent*                      Path;                                              // 0x8(0x8)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.MissionAI_IsAtPathDestination
struct AMissionType_MissionAI_IsAtPathDestination_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        MaxDistance;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_2F18[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetOffset;                                      // 0x10(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x28(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2F19[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x2C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F1A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.MissionAI_GetTarget
struct AMissionType_MissionAI_GetTarget_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.MissionAI_GetMissionFromController
struct AMissionType_MissionAI_GetMissionFromController_Params
{
public:
	class AActor*                                ControllerActor;                                   // 0x0(0x8)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EBoolExecResult                   OutResult;                                         // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F1B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionType*                          Mission;                                           // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class APrimalDinoCharacter*                  DinoPawn;                                          // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalDinoAIController*               DinoController;                                    // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.MissionAI_FindPathToTarget
struct AMissionType_MissionAI_FindPathToTarget_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               NextTargetLocation;                                // 0x8(0x18)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F1D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.ItemToAlertEntry
struct AMissionType_ItemToAlertEntry_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	struct FMissionAlertEntry                    ReturnValue;                                       // 0x8(0x30)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.IsPlayerOnMission
struct AMissionType_IsPlayerOnMission_Params
{
public:
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F1F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.IsPlayerEligibleForMission
struct AMissionType_IsPlayerEligibleForMission_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class APlayerController*                     Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                Reason;                                            // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F20[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.IsPhaseNameValid
struct AMissionType_IsPhaseNameValid_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F21[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.IsPhaseComplete
struct AMissionType_IsPhaseComplete_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F23[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.IsMissionComplete
struct AMissionType_IsMissionComplete_Params
{
public:
	class AShooterCharacter*                     ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AShooterPlayerController*              ForController;                                     // 0x8(0x8)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F24[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.IsMetaDataMissionType
struct AMissionType_IsMetaDataMissionType_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                MissionType;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F26[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.IsFriendlyWithAnyTargetingTeam
struct AMissionType_IsFriendlyWithAnyTargetingTeam_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	TArray<int32>                                TargetingTeams;                                    // 0x8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F27[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.IsFriendlyWithAllTargetingTeams
struct AMissionType_IsFriendlyWithAllTargetingTeams_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	TArray<int32>                                TargetingTeams;                                    // 0x8(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F2A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.IsActive
struct AMissionType_IsActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.HasPlayerCompletedMissionByTag
struct AMissionType_HasPlayerCompletedMissionByTag_Params
{
public:
	class FName                                  MissionTagName;                                    // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     Character;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	int32                                        VersionCompleted;                                  // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F31[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       UtcTimeCompleted;                                  // 0x18(0x8)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.HasPlayerCompletedMission
struct AMissionType_HasPlayerCompletedMission_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     Character;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	int32                                        VersionCompleted;                                  // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F34[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       UtcTimeCompleted;                                  // 0x18(0x8)(Edit, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F35[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GivePlayerXP
struct AMissionType_GivePlayerXP_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	float                                        XPAmount;                                          // 0x8(0x4)(BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F38[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GivePlayerLoot
struct AMissionType_GivePlayerLoot_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	TArray<struct FLootTableEntry>               LootTable;                                         // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetTargetingTeamsOfAllPlayersOnMission
struct AMissionType_GetTargetingTeamsOfAllPlayersOnMission_Params
{
public:
	TArray<int32>                                OutTargetingTeams;                                 // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.GetTaggedString
struct AMissionType_GetTaggedString_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                OutString;                                         // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F3B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.GetReverseTeleportReturnLocation
struct AMissionType_GetReverseTeleportReturnLocation_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	struct FVector                               ReverseTeleportLocation;                           // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReverseTeleportRotation;                           // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F3D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.GetRemainingTime
struct AMissionType_GetRemainingTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetRealMissionTagFromMetaData
struct AMissionType_GetRealMissionTagFromMetaData_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                MissionType;                                       // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class FName                                  ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetPlayerUsableItems
struct AMissionType_GetPlayerUsableItems_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	TArray<struct FItemNetID>                    OutItemIDs;                                        // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.GetPhaseRequirements
struct AMissionType_GetPhaseRequirements_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseRequirement>      Requirements;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     ForPlayer;                                         // 0x18(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.MissionType.GetPhaseRequirementProgress
struct AMissionType_GetPhaseRequirementProgress_Params
{
public:
	struct FMissionPhaseRequirement              Req;                                               // 0x0(0x90)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x90(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F45[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.MissionType.GetPhaseRequirementDescription
struct AMissionType_GetPhaseRequirementDescription_Params
{
public:
	class UClass*                                ForMission;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMissionPhaseRequirement              Req;                                               // 0x8(0x90)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x98(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetPhaseDisplayText
struct AMissionType_GetPhaseDisplayText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.GetPerPlayerWorldIndicators
struct AMissionType_GetPerPlayerWorldIndicators_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     Character;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	TArray<struct FMissionWorldIndicator>        WorldIndicators;                                   // 0x10(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.GetNearbyStructures
struct AMissionType_GetNearbyStructures_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APrimalStructure*>              OutStructures;                                     // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                StructureType;                                     // 0x18(0x8)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExactTypeMatch;                                   // 0x20(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F51[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x28(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x40(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2F52[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.GetNearbyPlayersEligibleForMission
struct AMissionType_GetNearbyPlayersEligibleForMission_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AShooterCharacter*>             OutCharacters;                                     // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                MissionType;                                       // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FVector                               Location;                                          // 0x20(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bSortByDistanceToLocation;                         // 0x3C(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRespectMissionMaxPlayerCount;                     // 0x3D(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F58[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        InTargetingTeam;                                   // 0x40(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ETargetingTeamBehavior            TargetingTeamBehavior;                             // 0x44(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F59[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.GetNearbyPlayersAndTamedDinos
struct AMissionType_GetNearbyPlayersAndTamedDinos_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APrimalCharacter*>              OutCharacters;                                     // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        OnlyFriendlyWithTargetingTeam;                     // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.GetNearbyPlayers
struct AMissionType_GetNearbyPlayers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AShooterCharacter*>             OutCharacters;                                     // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        OnlyFriendlyWithTargetingTeam;                     // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.GetNearbyMissionDispatchers
struct AMissionType_GetNearbyMissionDispatchers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                ForMissionType;                                    // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     ForPlayer;                                         // 0x10(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SearchOrigin;                                      // 0x18(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AMissionDispatcher*>            OutDispatchers;                                    // 0x30(0x10)(Edit, ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x40(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bSortByDistance;                                   // 0x44(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequireMissionInDisaptcher;                       // 0x45(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F5D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.GetNearbyDinos
struct AMissionType_GetNearbyDinos_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          OutCharacters;                                     // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bIncludeTamed;                                     // 0x34(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeWild;                                      // 0x35(0x1)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F5F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OnlyFriendlyWithTargetingTeam;                     // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F60[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.GetNearbyCharacters
struct AMissionType_GetNearbyCharacters_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APrimalCharacter*>              OutCharacters;                                     // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_2F62[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function ShooterGame.MissionType.GetMissionWorldIndicatorWorldLocation
struct AMissionType_GetMissionWorldIndicatorWorldLocation_Params
{
public:
	struct FMissionWorldIndicator                WorldIndicator;                                    // 0x0(0xB0)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForCharacter;                                      // 0xB0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0xB8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.MissionType.GetMissionWorldIndicatorIcon
struct AMissionType_GetMissionWorldIndicatorIcon_Params
{
public:
	struct FMissionWorldIndicator                WorldIndicator;                                    // 0x0(0xB0)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0xB0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC8 (0xC8 - 0x0)
// Function ShooterGame.MissionType.GetMissionWorldIndicatorDescription
struct AMissionType_GetMissionWorldIndicatorDescription_Params
{
public:
	class UClass*                                FromMissionType;                                   // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FMissionWorldIndicator                WorldIndicator;                                    // 0x8(0xB0)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0xB8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetMissionTagForMission
struct AMissionType_GetMissionTagForMission_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.GetMissionTag
struct AMissionType_GetMissionTag_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetMissionLeaderboardRows
struct AMissionType_GetMissionLeaderboardRows_Params
{
public:
	TArray<struct FLeaderboardRow>               OutRows;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F64[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetMissionDurationInSeconds
struct AMissionType_GetMissionDurationInSeconds_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F65[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.GetMissionDurationFromTag
struct AMissionType_GetMissionDurationFromTag_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     Character;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetMissionDisplayName
struct AMissionType_GetMissionDisplayName_Params
{
public:
	class APlayerController*                     ShootCont;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetMissionDataForCharacter
struct AMissionType_GetMissionDataForCharacter_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         bCreateIfMissing;                                  // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F69[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff_MissionData*               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.GetMissionClassName
struct AMissionType_GetMissionClassName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetMissionBuff
struct AMissionType_GetMissionBuff_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class APrimalBuff*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GetIntFromMissionType
struct AMissionType_GetIntFromMissionType_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F72[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GetDispatcherPointLocation
struct AMissionType_GetDispatcherPointLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                ForMissionType;                                    // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.GetDifficultyString
struct AMissionType_GetDifficultyString_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class FString                                DiffString;                                        // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DiffColor;                                         // 0x18(0x10)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F7B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetCurrentWorldIndicators
struct AMissionType_GetCurrentWorldIndicators_Params
{
public:
	TArray<struct FMissionWorldIndicator>        WorldIndicators;                                   // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetCurrentSplineKeyTarget
struct AMissionType_GetCurrentSplineKeyTarget_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2F7F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.GetCurrentMissionPhaseName
struct AMissionType_GetCurrentMissionPhaseName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.GetCurrentMissionPhaseIndex
struct AMissionType_GetCurrentMissionPhaseIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetAllPlayersOnMission
struct AMissionType_GetAllPlayersOnMission_Params
{
public:
	TArray<class AShooterCharacter*>             OutCharacters;                                     // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetAllPlayerControllersOnMission
struct AMissionType_GetAllPlayerControllersOnMission_Params
{
public:
	TArray<class AShooterPlayerController*>      OutControllers;                                    // 0x0(0x10)(BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetAllPlayerControllersInvolvedInMission
struct AMissionType_GetAllPlayerControllersInvolvedInMission_Params
{
public:
	TArray<class AShooterPlayerController*>      OutPlayerControllers;                              // 0x0(0x10)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetAllPlayerCharactersInvolvedInMission
struct AMissionType_GetAllPlayerCharactersInvolvedInMission_Params
{
public:
	TArray<class AShooterCharacter*>             OutPlayerCharacters;                               // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GetAllMissionTriggersWithKey
struct AMissionType_GetAllMissionTriggersWithKey_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<class AMissionTrigger*>               OutTriggerActors;                                  // 0x10(0x10)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSortByTriggerOrder;                               // 0x20(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x21(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F86[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.GetAllMissionTriggerKeys
struct AMissionType_GetAllMissionTriggerKeys_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GetAllMissionSplinesWithKey
struct AMissionType_GetAllMissionSplinesWithKey_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<class AMissionSpline*>                OutSplineActors;                                   // 0x10(0x10)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSortByTriggerOrder;                               // 0x20(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x21(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F89[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GetAllMissionServerSidePointsWithKey
struct AMissionType_GetAllMissionServerSidePointsWithKey_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<class AMissionServerSidePoint*>       OutServerSidePointActors;                          // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSortByTriggerOrder;                               // 0x20(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x21(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bExcludeMissionBounds;                             // 0x22(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F8A[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.GeneratePhaseRequirements
struct AMissionType_GeneratePhaseRequirements_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseRequirement>      Requirements;                                      // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.GeneratePerPlayerPhaseRequirements
struct AMissionType_GeneratePerPlayerPhaseRequirements_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     Character;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class FName                                  PhaseName;                                         // 0x10(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionPhaseRequirement>      Requirements;                                      // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.FindMissionsMatchingTag
struct AMissionType_FindMissionsMatchingTag_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class UClass*>                        Missions;                                          // 0x10(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.FindClosestSplineActorWithTriggerKey
struct AMissionType_FindClosestSplineActorWithTriggerKey_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class FName                                  TriggerKey;                                        // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AMissionSpline*                        ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.FindClosestSplineActor
struct AMissionType_FindClosestSplineActor_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	TArray<class AMissionSpline*>                Splines;                                           // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AMissionSpline*                        ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.FindClosestPathingSpline
struct AMissionType_FindClosestPathingSpline_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class USplineComponent*                      ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType.FinalizeMissionPrep
struct AMissionType_FinalizeMissionPrep_Params
{
public:
	bool                                         bForceAdd;                                         // 0x0(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2F8C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.MissionType.CountMissionLeaderboardRows
struct AMissionType_CountMissionLeaderboardRows_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.CountInventoryItemsFromAllPlayersInMission
struct AMissionType_CountInventoryItemsFromAllPlayersInMission_Params
{
public:
	class UClass*                                ItemType;                                          // 0x0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0x8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FA1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.CountInventoryItems
struct AMissionType_CountInventoryItems_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class UClass*                                ItemType;                                          // 0x8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0x10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FA7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.ClearReverseTeleportReturnLocation
struct AMissionType_ClearReverseTeleportReturnLocation_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FAA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.ClearDinoAINavigationTargetActor
struct AMissionType_ClearDinoAINavigationTargetActor_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FAC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.ClearDinoAIForcedTargetActor
struct AMissionType_ClearDinoAIForcedTargetActor_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FAD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.CleanupInvalidPlayers
struct AMissionType_CleanupInvalidPlayers_Params
{
public:
	bool                                         RemoveIfInvalid;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.CanStartPhase
struct AMissionType_CanStartPhase_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FAE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.CanStartMission
struct AMissionType_CanStartMission_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class APlayerController*                     Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                ClientFailureReason;                               // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OutMissionDispatcher;                              // 0x20(0x8)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FB1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.CalcXPRatio
struct AMissionType_CalcXPRatio_Params
{
public:
	enum class ELevelExperienceRampType          RampType;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FB4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Level;                                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	float                                        Ratio;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.CalculateMissionExperienceForPlayer
struct AMissionType_CalculateMissionExperienceForPlayer_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FB7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.BPTryCompletePhase
struct AMissionType_BPTryCompletePhase_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FBB[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.BPStaticIsPlayerEligibleForMission
struct AMissionType_BPStaticIsPlayerEligibleForMission_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff_MissionData*               PlayerMissionData;                                 // 0x10(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OutReason;                                         // 0x18(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FC1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.BPStaticCanStartMission
struct AMissionType_BPStaticCanStartMission_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff_MissionData*               PlayerMissionData;                                 // 0x10(0x8)(Edit, ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ClientFailureReason;                               // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OutSelectedMissionDispatcher;                      // 0x28(0x8)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FC5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPPhaseNameToIndex
struct AMissionType_BPPhaseNameToIndex_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	bool                                         bIndexIsValid;                                     // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FC6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOverrideRandomWanderLocation
struct AMissionType_BPOverrideRandomWanderLocation_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FVector                               InVec;                                             // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               OutVec;                                            // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FC7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOverrideMissionTimerColor
struct AMissionType_BPOverrideMissionTimerColor_Params
{
public:
	class AShooterPlayerController*              ShooterContr;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          DefaultColor;                                      // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Config, InstancedReference, SubobjectReference)
	struct FLinearColor                          CurrentColor;                                      // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          TimerOverrideColor;                                // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FC8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD8 (0xD8 - 0x0)
// Function ShooterGame.MissionType.BPOverrideMissionIndicatorString
struct AMissionType_BPOverrideMissionIndicatorString_Params
{
public:
	class AShooterCharacter*                     ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FMissionWorldIndicator                Indicator;                                         // 0x8(0xB0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                String;                                            // 0xB8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0xC8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPOnReceivedMissionPathFindingResult
struct AMissionType_BPOnReceivedMissionPathFindingResult_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_2FD0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNavigationPath*                       Path;                                              // 0x8(0x8)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, SubobjectReference)
	uint8                                        Result;                                            // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_2FD1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPOnPlayerRemovedFromMission
struct AMissionType_BPOnPlayerRemovedFromMission_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class AShooterPlayerController*              Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bFromMissionCompleteEvent;                         // 0x10(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLastPhaseSuccess;                                 // 0x11(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FD4[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPOnPlayerAddedToMission
struct AMissionType_BPOnPlayerAddedToMission_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class AShooterPlayerController*              Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionTriggerEndOverlap
struct AMissionType_BPOnMissionTriggerEndOverlap_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2FD6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionTriggerBeginOverlap
struct AMissionType_BPOnMissionTriggerBeginOverlap_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_2FDC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionStructureDestroyed
struct AMissionType_BPOnMissionStructureDestroyed_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FE1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionStructureDamage
struct AMissionType_BPOnMissionStructureDamage_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        Damage;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_2FE8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionPlayerRespawned
struct AMissionType_BPOnMissionPlayerRespawned_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class AShooterPlayerController*              Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionPlayerRemovedInventoryItem
struct AMissionType_BPOnMissionPlayerRemovedInventoryItem_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountRemoved;                                     // 0x18(0x4)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_2FEF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionPlayerDied
struct AMissionType_BPOnMissionPlayerDied_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class AShooterPlayerController*              Controller;                                        // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        KillingDamage;                                     // 0x10(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_2FF9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x18(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionPlayerAddedInventoryItem
struct AMissionType_BPOnMissionPlayerAddedInventoryItem_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountAdded;                                       // 0x18(0x4)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bEquippedItem;                                     // 0x1C(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_2FFE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionDroppedItemPickedUp
struct AMissionType_BPOnMissionDroppedItemPickedUp_Params
{
public:
	class ADroppedItemMission*                   DroppedItem;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	class APlayerController*                     ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           InventoryItem;                                     // 0x10(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionDinoDied
struct AMissionType_BPOnMissionDinoDied_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3008[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionDinoDamage
struct AMissionType_BPOnMissionDinoDamage_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Damage;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3011[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionComplete
struct AMissionType_BPOnMissionComplete_Params
{
public:
	class AShooterCharacter*                     ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForController;                                     // 0x8(0x8)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bLastPhaseSuccess;                                 // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_301C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        XPRewarded;                                        // 0x14(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   ItemsRewarded;                                     // 0x18(0x10)(Edit, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPOnMissionCheat
struct AMissionType_BPOnMissionCheat_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetValue;                                         // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_301F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Value;                                             // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.MissionType.BPIsPhaseComplete
struct AMissionType_BPIsPhaseComplete_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3022[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPGetPhaseDisplayText
struct AMissionType_BPGetPhaseDisplayText_Params
{
public:
	class FName                                  PhaseName;                                         // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPGetMissionTimerText
struct AMissionType_BPGetMissionTimerText_Params
{
public:
	class AShooterPlayerController*              ShootCont;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPGetMissionTargetingDesire
struct AMissionType_BPGetMissionTargetingDesire_Params
{
public:
	class APrimalDinoCharacter*                  MissionDino;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ForTarget;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForTargetingDesireValue;                           // 0x10(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPGetMissionDurationText
struct AMissionType_BPGetMissionDurationText_Params
{
public:
	class AShooterPlayerController*              ShootCont;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPGetMetaTagsAsInts
struct AMissionType_BPGetMetaTagsAsInts_Params
{
public:
	TArray<int32>                                OutTagIds;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.BPGetExtraLocalMissionIndicators
struct AMissionType_BPGetExtraLocalMissionIndicators_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldIndicator>        IndicatorsIn;                                      // 0x10(0x10)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionWorldIndicator>        IndicatorsOut;                                     // 0x20(0x10)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.MissionType.BPGenerateMissionRewards
struct AMissionType_BPGenerateMissionRewards_Params
{
public:
	struct FCharacterAndControllerPair           Player;                                            // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	bool                                         bCompletedSuccessfully;                            // 0x10(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_302E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        XPReward;                                          // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   GeneratedItems;                                    // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.MissionType.BPCanRideMissionDino
struct AMissionType_BPCanRideMissionDino_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class APrimalDinoCharacter*                  Dino;                                              // 0x8(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3030[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.MissionType.BPAllowTimeout
struct AMissionType_BPAllowTimeout_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.BPAllowPlayerToLeaveMission
struct AMissionType_BPAllowPlayerToLeaveMission_Params
{
public:
	class AShooterCharacter*                     PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3032[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.MissionType.AllowMissionCreation
struct AMissionType_AllowMissionCreation_Params
{
public:
	class AShooterCharacter*                     ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class AActor*                                MissionDispatcherActor;                            // 0x20(0x8)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                FailureReason;                                     // 0x28(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3034[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.AddPlayerUsableItem
struct AMissionType_AddPlayerUsableItem_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class UPrimalItem*                           Item;                                              // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.MissionType.AddPlayerToMission
struct AMissionType_AddPlayerToMission_Params
{
public:
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAdd;                                         // 0x8(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3038[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.MissionType.AddPlayersInRadiusToMission
struct AMissionType_AddPlayersInRadiusToMission_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        MaxPlayersToAdd;                                   // 0x1C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPrioritizeByDistanceToWorldLocation;              // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3039[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        InTargetingTeam;                                   // 0x24(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ETargetingTeamBehavior            TargetingTeamBehavior;                             // 0x28(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceAdd;                                         // 0x29(0x1)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_303A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x2C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.MissionType.AddMissionLeaderboardRow
struct AMissionType_AddMissionLeaderboardRow_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	double                                       NetworkTime;                                       // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        FloatValue;                                        // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        IntValue;                                          // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  NameValue;                                         // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                StringValue;                                       // 0x20(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_303F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.SpawnActorForMissionModule
struct AMissionType_ModularMissionBase_SpawnActorForMissionModule_Params
{
public:
	class UClass*                                ActorClass;                                        // 0x0(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_30AE[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ActorTransform;                                    // 0x10(0x60)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bSpawnEvenIfColliding;                             // 0x70(0x1)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30AF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x78(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.RemoveSpecialWorldIndicator
struct AMissionType_ModularMissionBase_RemoveSpecialWorldIndicator_Params
{
public:
	struct FMissionWorldIndicator                IndicatorToRemove;                                 // 0x0(0xB0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.RegisterProjectile
struct AMissionType_ModularMissionBase_RegisterProjectile_Params
{
public:
	class AShooterProjectile*                    TheProjectile;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.MultiMissionSpawnCosmetic
struct AMissionType_ModularMissionBase_MultiMissionSpawnCosmetic_Params
{
public:
	class USoundBase*                            SoundTemplate;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ParticleTemplate;                                  // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            TheTransform;                                      // 0x10(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideTimeDilation;                              // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30B8[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.MultiFireProjectiles
struct AMissionType_ModularMissionBase_MultiFireProjectiles_Params
{
public:
	class UClass*                                ProjectileClass;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Velocity;                                          // 0x20(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<class AActor*>                        SubprojectileTargets;                              // 0x38(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                FiringActor;                                       // 0x48(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x3A0 (0x3A0 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.MultiActivateWarmerColderHUD
struct AMissionType_ModularMissionBase_MultiActivateWarmerColderHUD_Params
{
public:
	struct FHUDElement                           Background;                                        // 0x0(0x1B0)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHUDElement                           Icon;                                              // 0x1B0(0x1B0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst)
	float                                        MinAlpha;                                          // 0x360(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxAlpha;                                          // 0x364(0x4)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AlphaPower;                                        // 0x368(0x4)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          RightColor;                                        // 0x36C(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          WrongColor;                                        // 0x37C(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearLocationsFirst;                              // 0x38C(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30C0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       Locations;                                         // 0x390(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.MissionSpawnCosmetic
struct AMissionType_ModularMissionBase_MissionSpawnCosmetic_Params
{
public:
	class USoundBase*                            SoundTemplate;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ParticleTemplate;                                  // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            TheTransform;                                      // 0x10(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideTimeDilation;                              // 0x70(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30C5[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.FireProjectiles
struct AMissionType_ModularMissionBase_FireProjectiles_Params
{
public:
	class UClass*                                ProjectileClass;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Velocity;                                          // 0x20(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	TArray<class AActor*>                        SubprojectileTargets;                              // 0x38(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                FiringActor;                                       // 0x48(0x8)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterProjectile*                    ReturnValue;                                       // 0x50(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.CreateLeaderboardEntry
struct AMissionType_ModularMissionBase_CreateLeaderboardEntry_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.BPOnMissionProjectileExpoloded
struct AMissionType_ModularMissionBase_BPOnMissionProjectileExpoloded_Params
{
public:
	class AShooterProjectile*                    TheProjectile;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.AddSpecialWorldIndicator
struct AMissionType_ModularMissionBase_AddSpecialWorldIndicator_Params
{
public:
	struct FMissionWorldIndicator                IndicatorToAdd;                                    // 0x0(0xB0)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x3A0 (0x3A0 - 0x0)
// Function ShooterGame.MissionType_ModularMissionBase.ActivateWarmerColderHUD
struct AMissionType_ModularMissionBase_ActivateWarmerColderHUD_Params
{
public:
	struct FHUDElement                           Background;                                        // 0x0(0x1B0)(Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHUDElement                           Icon;                                              // 0x1B0(0x1B0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst)
	float                                        MinAlpha;                                          // 0x360(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxAlpha;                                          // 0x364(0x4)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AlphaPower;                                        // 0x368(0x4)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          RightColor;                                        // 0x36C(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          WrongColor;                                        // 0x37C(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearLocationsFirst;                              // 0x38C(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_30D3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       Locations;                                         // 0x390(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.MultiUseActionWidget.Init
struct UMultiUseActionWidget_Init_Params
{
public:
	class UObject*                               ActorTargetRefInfo;                                // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NewMissionModuleBase.SetOuter
struct UNewMissionModuleBase_SetOuter_Params
{
public:
	class AMissionType_ModularMissionBase*       NewOuter;                                          // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3100[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.NewMissionModuleBase.OnOuterDestroyed
struct UNewMissionModuleBase_OnOuterDestroyed_Params
{
public:
	class AActor*                                DestroyedActor;                                    // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapEnd
struct UNewMissionModuleBase_HandleMissionTriggerOverlapEnd_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapBegin
struct UNewMissionModuleBase_HandleMissionTriggerOverlapBegin_Params
{
public:
	class AMissionTrigger*                       Trigger;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDestroyed
struct UNewMissionModuleBase_HandleMissionStructureDestroyed_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3109[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_310D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDamaged
struct UNewMissionModuleBase_HandleMissionStructureDamaged_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3110[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3111[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionProjectileExploded
struct UNewMissionModuleBase_HandleMissionProjectileExploded_Params
{
public:
	class AShooterProjectile*                    Projectile;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3114[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerRemovedInventoryItem
struct UNewMissionModuleBase_HandleMissionPlayerRemovedInventoryItem_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountRemoved;                                     // 0x18(0x4)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerAddedInventoryItem
struct UNewMissionModuleBase_HandleMissionPlayerAddedInventoryItem_Params
{
public:
	class AShooterCharacter*                     Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        AmountAdded;                                       // 0x18(0x4)(EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bEquippedItem;                                     // 0x1C(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_311C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_311D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionModuleEnd
struct UNewMissionModuleBase_HandleMissionModuleEnd_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionModuleBegin
struct UNewMissionModuleBase_HandleMissionModuleBegin_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionGetPerPlayerIndicators
struct UNewMissionModuleBase_HandleMissionGetPerPlayerIndicators_Params
{
public:
	class AShooterCharacter*                     Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	TArray<struct FMissionWorldIndicator>        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionDroppedItemPickedUp
struct UNewMissionModuleBase_HandleMissionDroppedItemPickedUp_Params
{
public:
	class ADroppedItemMission*                   DroppedItem;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	class APlayerController*                     PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           Item;                                              // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3126[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDied
struct UNewMissionModuleBase_HandleMissionDinoDied_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_312F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3131[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDamaged
struct UNewMissionModuleBase_HandleMissionDinoDamaged_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Damage;                                            // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3138[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_313A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleLastMissionStructureDestroyed
struct UNewMissionModuleBase_HandleLastMissionStructureDestroyed_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_313F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3140[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleLastMissionProjectileExploded
struct UNewMissionModuleBase_HandleLastMissionProjectileExploded_Params
{
public:
	class AShooterProjectile*                    Projectile;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3144[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.NewMissionModuleBase.HandleLastMissionDinoDied
struct UNewMissionModuleBase_HandleLastMissionDinoDied_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        KillingDamage;                                     // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3146[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3147[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.NewMissionModuleBase.GetWorld
struct UNewMissionModuleBase_GetWorld_Params
{
public:
	class UWorld*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsTitle
struct UNewMissionModuleBase_GetModuleRequirementsTitle_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsMessage
struct UNewMissionModuleBase_GetModuleRequirementsMessage_Params
{
public:
	TArray<struct FMissionPhaseRequirement>      ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.NewMissionModuleBase.BPGetTargetingDesire
struct UNewMissionModuleBase_BPGetTargetingDesire_Params
{
public:
	class APrimalDinoCharacter*                  MissionDino;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ForTarget;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForTargetingDesireValue;                           // 0x10(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.NinjaLiveBaseComponent.ScaleResolutionForSettings
struct UNinjaLiveBaseComponent_ScaleResolutionForSettings_Params
{
public:
	int32                                        ToScale;                                           // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.NinjaLiveBaseComponent.IsFluidSimEnabled
struct UNinjaLiveBaseComponent_IsFluidSimEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.NPCZoneManager.StaticSpawnNPCs
struct ANPCZoneManager_StaticSpawnNPCs_Params
{
public:
	class UObject*                               WorldContext;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	class ANPCZoneManager*                       AtZoneManager;                                     // 0x8(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TheNPCSpawnEntries;                                // 0x10(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AtSpawnPoint;                                      // 0x18(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x30(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        UseSpawnVolumeIndex;                               // 0x48(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_316C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x50(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.NPCZoneManager.CheckIncreaseNPC
struct ANPCZoneManager_CheckIncreaseNPC_Params
{
public:
	bool                                         bForceDirectlyLinkDinos;                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NPCZoneVolume.OnEndOverlap
struct ANPCZoneVolume_OnEndOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.NPCZoneVolume.OnBeginOverlap
struct ANPCZoneVolume_OnBeginOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PaintingCache.ForceCacheLocalPaintingTemplatesToDisk
struct UPaintingCache_ForceCacheLocalPaintingTemplatesToDisk_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                PaintingClass;                                     // 0x10(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPaintingTexture*                      PaintingTexture;                                   // 0x20(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         OverrideExisting;                                  // 0x28(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x29(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_31CF[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ServerSendNextChunk
struct UPaintingStreamingComponent_ServerSendNextChunk_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ServerRequestPaintingStream
struct UPaintingStreamingComponent_ServerRequestPaintingStream_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ServerCancelPaintingStream
struct UPaintingStreamingComponent_ServerCancelPaintingStream_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ForceRefreshStructurePainting
struct UPaintingStreamingComponent_ForceRefreshStructurePainting_Params
{
public:
	class UStructurePaintingComponent*           Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ClientRecieveChunk
struct UPaintingStreamingComponent_ClientRecieveChunk_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<uint8>                                Bytes;                                             // 0x8(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ClientEndStreamingJob
struct UPaintingStreamingComponent_ClientEndStreamingJob_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ClientCancelSteamingJob
struct UPaintingStreamingComponent_ClientCancelSteamingJob_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PaintingStreamingComponent.ClientBeginStreamingJob
struct UPaintingStreamingComponent_ClientBeginStreamingJob_Params
{
public:
	class UStructurePaintingComponent*           PaintingComponent;                                 // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        Revision;                                          // 0x8(0x4)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_31EC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PlayerHUDUI.OnFastInventoryChangedBP
struct UPlayerHUDUI_OnFastInventoryChangedBP_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x300 (0x300 - 0x0)
// Function ShooterGame.PointOfInterestCompanionInterface.GetPointCompanionBehaviorData
struct IPointOfInterestCompanionInterface_GetPointCompanionBehaviorData_Params
{
public:
	struct FPointOfInterestCompanionBehavior     ReturnValue;                                       // 0x0(0x300)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PointOfInterestInterface.ViewPoint
struct IPointOfInterestInterface_ViewPoint_Params
{
public:
	class AActor*                                ViewedByActor;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PointOfInterestInterface.UnviewPoint
struct IPointOfInterestInterface_UnviewPoint_Params
{
public:
	class AActor*                                UnviewedByActor;                                   // 0x0(0x8)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PointOfInterestInterface.SetPointTagUniqueState
struct IPointOfInterestInterface_SetPointTagUniqueState_Params
{
public:
	bool                                         bNewUniqueState;                                   // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1E0 (0x1E0 - 0x0)
// Function ShooterGame.PointOfInterestInterface.GetPointOfInterestData
struct IPointOfInterestInterface_GetPointOfInterestData_Params
{
public:
	struct FPointOfInterestData                  ReturnValue;                                       // 0x0(0x1E0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PointOfInterestInterface.GetPointCustomData
struct IPointOfInterestInterface_GetPointCustomData_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PointOfInterestInterface.CanBeViewed
struct IPointOfInterestInterface_CanBeViewed_Params
{
public:
	class AActor*                                ByActor;                                           // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3220[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PointOfInterestManagerList.ManualAddPointOfInterestActor
struct APointOfInterestManagerList_ManualAddPointOfInterestActor_Params
{
public:
	class AActor*                                AddActor;                                          // 0x0(0x8)(Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_322C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PointOfInterestManagerList.CheckListForTagCollisions
struct APointOfInterestManagerList_CheckListForTagCollisions_Params
{
public:
	class AActor*                                ForSpecificActor;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3230[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAIState.TickAnimationStateEvent
struct UPrimalAIState_TickAnimationStateEvent_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  CustomEventName;                                   // 0x4(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0xC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_324E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAIState.TickAnimationState
struct UPrimalAIState_TickAnimationState_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  CustomEventName;                                   // 0x4(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0xC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3257[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalAIState.StartAnimationStateEvent
struct UPrimalAIState_StartAnimationStateEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_325B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalAIState.StartAnimationState
struct UPrimalAIState_StartAnimationState_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3263[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.ShouldSkipRangeCheckEvent
struct UPrimalAIState_ShouldSkipRangeCheckEvent_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.ShouldSkipIntervalCheckEvent
struct UPrimalAIState_ShouldSkipIntervalCheckEvent_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.SetInAnimationStateActive
struct UPrimalAIState_SetInAnimationStateActive_Params
{
public:
	bool                                         Value;                                             // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIState.OnTickEvent
struct UPrimalAIState_OnTickEvent_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIState.OnTick
struct UPrimalAIState_OnTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalAIState.OnChildStateEndedEvent
struct UPrimalAIState_OnChildStateEndedEvent_Params
{
public:
	class UPrimalAIState*                        PrimalAIState;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, GlobalConfig, InstancedReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.OnCanUseStateEvent
struct UPrimalAIState_OnCanUseStateEvent_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalAIState.OnBeginEvent
struct UPrimalAIState_OnBeginEvent_Params
{
public:
	class UPrimalAIState*                        InParentState;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalAIState.OnBegin
struct UPrimalAIState_OnBegin_Params
{
public:
	class UPrimalAIState*                        InParentState;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAIState.GetDebugInfoString
struct UPrimalAIState_GetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalAIState.EndAnimationStateEvent
struct UPrimalAIState_EndAnimationStateEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_326B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalAIState.EndAnimationState
struct UPrimalAIState_EndAnimationState_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class ENetRole                          WithRole;                                          // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_326D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.CanUseState
struct UPrimalAIState_CanUseState_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalAIState.BPOverrideAttackWeight
struct UPrimalAIState_BPOverrideAttackWeight_Params
{
public:
	float                                        InputWeight;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Distance;                                          // 0x4(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x8(0x4)(Edit, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3270[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                OtherTarget;                                       // 0x10(0x8)(ConstParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3271[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIState.BPIsChildState
struct UPrimalAIState_BPIsChildState_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAIState.BPGetDebugInfoString
struct UPrimalAIState_BPGetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalAIState.BPCanAttack
struct UPrimalAIState_BPCanAttack_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x4(0x4)(Edit, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OtherTarget;                                       // 0x8(0x8)(ConstParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3274[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.PreventAttackForTime
struct UPrimalAIStateDinoRangedState_PreventAttackForTime_Params
{
public:
	float                                        Time;                                              // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.OffsetVectorRandomlyReturnsAltered
struct UPrimalAIStateDinoRangedState_OffsetVectorRandomlyReturnsAltered_Params
{
public:
	struct FVector                               InVector;                                          // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinPercent;                                        // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxPercent;                                        // 0x1C(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.GetZGravityOffset
struct UPrimalAIStateDinoRangedState_GetZGravityOffset_Params
{
public:
	struct FVector                               ProjectileVelocity;                                // 0x0(0x18)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileStartLocation;                           // 0x18(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ProjectileFinalLocation;                           // 0x30(0x18)(BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_327E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.FindDirectionToLeadTarget
struct UPrimalAIStateDinoRangedState_FindDirectionToLeadTarget_Params
{
public:
	struct FVector                               VectorToHitTargetStandingStill;                    // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExtraTimeAllowed;                                  // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3281[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CurrentVelocityOfTarget;                           // 0x20(0x18)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.ClampProjectileVectorInForwardDirection
struct UPrimalAIStateDinoRangedState_ClampProjectileVectorInForwardDirection_Params
{
public:
	struct FVector                               OriginalShootingDirection;                         // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  RangedSocket;                                      // 0x18(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttackOnBegin
struct UPrimalAIStateDinoRangedState_BPRangedAttackOnBegin_Params
{
public:
	struct FVector                               TargetLocation;                                    // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TargetVelocity;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttack
struct UPrimalAIStateDinoRangedState_BPRangedAttack_Params
{
public:
	struct FVector                               TargetLocation;                                    // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TargetVelocity;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalAIStateBotRangedState.BPGetSocketLocation
struct UPrimalAIStateBotRangedState_BPGetSocketLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.SpawnAndFireProjectile
struct UPrimalAIStateBPBase_SpawnAndFireProjectile_Params
{
public:
	class UClass*                                ProjectileClass;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ProjectileSocket;                                  // 0x8(0x8)(ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ProjectileInterval;                                // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideProjectileSpawn;                          // 0x14(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_32A8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OverrideSpawnLoc;                                  // 0x18(0x18)(ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              OverrideSpawnRot;                                  // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_32AA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.SetLastAttackTimeToNow
struct UPrimalAIStateBPBase_SetLastAttackTimeToNow_Params
{
public:
	float                                        Offset;                                            // 0x0(0x4)(Edit, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.IsTimeSinceStateBegin
struct UPrimalAIStateBPBase_IsTimeSinceStateBegin_Params
{
public:
	float                                        CheckTimeSince;                                    // 0x0(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bForceTrueAtZeroTime;                              // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x5(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_32AE[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.GetTimeSinceStateBegin
struct UPrimalAIStateBPBase_GetTimeSinceStateBegin_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.GetStateBeginTime
struct UPrimalAIStateBPBase_GetStateBeginTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.GetLastAttackTimeAndInterval
struct UPrimalAIStateBPBase_GetLastAttackTimeAndInterval_Params
{
public:
	double                                       LastAttackTime;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AttackInterval;                                    // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_32B2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamageDirect
struct UPrimalAIStateBPBase_DealMeleeDamageDirect_Params
{
public:
	class AActor*                                TargetActor;                                       // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               DamageSourceWorldLocation;                         // 0x8(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageAmount;                                      // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        DamageImpulse;                                     // 0x24(0x4)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                DamageTypeClass;                                   // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bUseBlueprintAdjustOutputDamage;                   // 0x30(0x1)(ExportObject, Net, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bInstantlyHarvestCorpse;                           // 0x31(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_32BB[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamage
struct UPrimalAIStateBPBase_DealMeleeDamage_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FHitResult                            FromHitResult;                                     // 0x8(0xF0)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.BPShouldEndAttack
struct UPrimalAIStateBPBase_BPShouldEndAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackTick
struct UPrimalAIStateBPBase_BPOnAttackTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackStart
struct UPrimalAIStateBPBase_BPOnAttackStart_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.BPOnAttackEnd
struct UPrimalAIStateBPBase_BPOnAttackEnd_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalAIStateBPBase.BPOnAnimNotifyCustomEvent
struct UPrimalAIStateBPBase_BPOnAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x8(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	enum class ENetRole                          Role;                                              // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_32C3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.PrimalAIStateDinoMeleeState.BPOnHitActor
struct UPrimalAIStateDinoMeleeState_BPOnHitActor_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalAIStateDinoMeleeState.BPGetSocketLocation
struct UPrimalAIStateDinoMeleeState_BPGetSocketLocation_Params
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               SocketLocation;                                    // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xD8 (0xD8 - 0x0)
// Function ShooterGame.PrimalAnimInstance.PlayHitEffect
struct UPrimalAnimInstance_PlayHitEffect_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_32F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HitLocation;                                       // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FRotator                              HitNormal;                                         // 0x20(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, GlobalConfig, SubobjectReference)
	struct FVector                               HitVelocity;                                       // 0x38(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ImpactedBoneName;                                  // 0x50(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDamageEvent                          DamageEvent;                                       // 0x58(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x78(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x80(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bHitKilledDino;                                    // 0x88(0x1)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UsesImpulse;                                       // 0x89(0x1)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_32F7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CalculatedHitImpulse;                              // 0x90(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftObjectPtr<class AShooterProjectile>     ProjectileRef;                                     // 0xA8(0x30)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalAnimInstance.OnSuddenStop
struct UPrimalAnimInstance_OnSuddenStop_Params
{
public:
	struct FVector                               PrevVelocity;                                      // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 PawnInstigator;                                    // 0x18(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAnimInstance.GenerateDebugText
struct UPrimalAnimInstance_GenerateDebugText_Params
{
public:
	class FString                                Result;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAssets.ClassAssetResolve
struct UPrimalAssets_ClassAssetResolve_Params
{
public:
	TSoftClassPtr<class UObject>                 Ptr;                                               // 0x0(0x30)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAssets.ClassAssetRequest
struct UPrimalAssets_ClassAssetRequest_Params
{
public:
	TSoftClassPtr<class UObject>                 Ptr;                                               // 0x0(0x30)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAssets.AssetResolve
struct UPrimalAssets_AssetResolve_Params
{
public:
	TSoftObjectPtr<class UObject>                Ptr;                                               // 0x0(0x30)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalAssets.AssetRequest
struct UPrimalAssets_AssetRequest_Params
{
public:
	TSoftObjectPtr<class UObject>                Ptr;                                               // 0x0(0x30)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.ToCompOwner
struct UPrimalAutocastFunctions_ToCompOwner_Params
{
public:
	class UActorComponent*                       InComponent;                                       // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PrimalPawnToPrimalCharacter
struct UPrimalAutocastFunctions_PrimalPawnToPrimalCharacter_Params
{
public:
	class APrimalPawn*                           InPawn;                                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PrimalGameModeToShooterGameMode
struct UPrimalAutocastFunctions_PrimalGameModeToShooterGameMode_Params
{
public:
	class APrimalGameMode*                       InGameMode;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterGameMode*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PrimalGameInstanceToShooterGameInstance
struct UPrimalAutocastFunctions_PrimalGameInstanceToShooterGameInstance_Params
{
public:
	class UPrimalGameInstance*                   InInstance;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterGameInstance*                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PrimalDamageToShooterDamage
struct UPrimalAutocastFunctions_PrimalDamageToShooterDamage_Params
{
public:
	class UPrimalDamageType*                     InDamage;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterDamageType*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PPCToSPC
struct UPrimalAutocastFunctions_PPCToSPC_Params
{
public:
	class APrimalPlayerController*               InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AShooterPlayerController*              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PFCFromDinoAIController
struct UPrimalAutocastFunctions_PFCFromDinoAIController_Params
{
public:
	class APrimalDinoAIController*               InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UPrimalPathFollowingComponent*         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PFCFromAIController
struct UPrimalAutocastFunctions_PFCFromAIController_Params
{
public:
	class AAIController*                         InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UPrimalPathFollowingComponent*         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PCToSPC
struct UPrimalAutocastFunctions_PCToSPC_Params
{
public:
	class APlayerController*                     InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class AShooterPlayerController*              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PCToPPC
struct UPrimalAutocastFunctions_PCToPPC_Params
{
public:
	class APlayerController*                     InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class APrimalPlayerController*               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PawnToPrimalPawn
struct UPrimalAutocastFunctions_PawnToPrimalPawn_Params
{
public:
	class APawn*                                 InPawn;                                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalPawn*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.PawnToPrimalCharacter
struct UPrimalAutocastFunctions_PawnToPrimalCharacter_Params
{
public:
	class APawn*                                 InPawn;                                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.LocalPlayerToShooterLocalPlayer
struct UPrimalAutocastFunctions_LocalPlayerToShooterLocalPlayer_Params
{
public:
	class ULocalPlayer*                          InPlayer;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterLocalPlayer*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.HUDToShooterHUD
struct UPrimalAutocastFunctions_HUDToShooterHUD_Params
{
public:
	class AHUD*                                  InHUD;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterHUD*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameStateToShooterGameState
struct UPrimalAutocastFunctions_GameStateToShooterGameState_Params
{
public:
	class AGameState*                            InGameState;                                       // 0x0(0x8)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterGameState*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameStateBaseToShooterGameState
struct UPrimalAutocastFunctions_GameStateBaseToShooterGameState_Params
{
public:
	class AGameStateBase*                        InGameState;                                       // 0x0(0x8)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterGameState*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameStateBaseToGameState
struct UPrimalAutocastFunctions_GameStateBaseToGameState_Params
{
public:
	class AGameStateBase*                        InGameState;                                       // 0x0(0x8)(Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AGameState*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameModeToShooterGameMode
struct UPrimalAutocastFunctions_GameModeToShooterGameMode_Params
{
public:
	class AGameMode*                             InGameMode;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterGameMode*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameModeToPrimalGameMode
struct UPrimalAutocastFunctions_GameModeToPrimalGameMode_Params
{
public:
	class AGameMode*                             InGameMode;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalGameMode*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameModeBaseToShooterGameMode
struct UPrimalAutocastFunctions_GameModeBaseToShooterGameMode_Params
{
public:
	class AGameModeBase*                         InGameMode;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterGameMode*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameModeBaseToPrimalGameMode
struct UPrimalAutocastFunctions_GameModeBaseToPrimalGameMode_Params
{
public:
	class AGameModeBase*                         InGameMode;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalGameMode*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameInstanceToShooterGameInstance
struct UPrimalAutocastFunctions_GameInstanceToShooterGameInstance_Params
{
public:
	class UGameInstance*                         InInstance;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterGameInstance*                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.GameInstanceToPrimalGameInstance
struct UPrimalAutocastFunctions_GameInstanceToPrimalGameInstance_Params
{
public:
	class UGameInstance*                         InInstance;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalGameInstance*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.FloatToDouble
struct UPrimalAutocastFunctions_FloatToDouble_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.DoubleToFloat
struct UPrimalAutocastFunctions_DoubleToFloat_Params
{
public:
	double                                       Value;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.DamageToShooterDamage
struct UPrimalAutocastFunctions_DamageToShooterDamage_Params
{
public:
	class UDamageType*                           InDamage;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UShooterDamageType*                    ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.DamageToPrimalDamage
struct UPrimalAutocastFunctions_DamageToPrimalDamage_Params
{
public:
	class UDamageType*                           InDamage;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalDamageType*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.ControllertoPrimalController
struct UPrimalAutocastFunctions_ControllertoPrimalController_Params
{
public:
	class AController*                           InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class APrimalController*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.CharacterToPrimalCharacter
struct UPrimalAutocastFunctions_CharacterToPrimalCharacter_Params
{
public:
	class ACharacter*                            InCharacter;                                       // 0x0(0x8)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.CharacterMovementToPCM
struct UPrimalAutocastFunctions_CharacterMovementToPCM_Params
{
public:
	class UCharacterMovementComponent*           InMovement;                                        // 0x0(0x8)(ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalCharacterMovement*              ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalAutocastFunctions.AIControllerToDinoAIController
struct UPrimalAutocastFunctions_AIControllerToDinoAIController_Params
{
public:
	class AAIController*                         InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class APrimalDinoAIController*               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.SetCastFarShadow
struct UPrimalBlueprintFunctions_SetCastFarShadow_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	bool                                         bCastFarShadow;                                    // 0x8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3339[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.K2_SetTimerForNextTickDelegate
struct UPrimalBlueprintFunctions_K2_SetTimerForNextTickDelegate_Params
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x10(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_333A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimerHandle                          ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.K2_SetTimerForNextTick
struct UPrimalBlueprintFunctions_K2_SetTimerForNextTick_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                FunctionName;                                      // 0x8(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bLooping;                                          // 0x18(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_3341[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTimerHandle                          ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.GetInjectedLightDirection
struct UPrimalBlueprintFunctions_GetInjectedLightDirection_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class ADirectionalLight*                     ForLight;                                          // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.GetBehaviorTree
struct UPrimalBlueprintFunctions_GetBehaviorTree_Params
{
public:
	class UBTNode*                               NodeOwner;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UBehaviorTreeComponent*                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.ForceNotifyBlackboardValue
struct UPrimalBlueprintFunctions_ForceNotifyBlackboardValue_Params
{
public:
	class UBTNode*                               NodeOwner;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FBlackboardKeySelector                Key;                                               // 0x8(0x28)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.ConvertTransformToRelative
struct UPrimalBlueprintFunctions_ConvertTransformToRelative_Params
{
public:
	struct FTransform                            WorldTransform;                                    // 0x0(0x60)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FTransform                            LocalTransform;                                    // 0x60(0x60)(Edit, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0xC0(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.ControllerEvent_GetUserIndex
struct UPrimalBlueprintFunctions_ControllerEvent_GetUserIndex_Params
{
public:
	struct FControllerEvent                      Input;                                             // 0x0(0x40)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_334E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.ControllerEvent_GetEffectingButton
struct UPrimalBlueprintFunctions_ControllerEvent_GetEffectingButton_Params
{
public:
	struct FControllerEvent                      Input;                                             // 0x0(0x40)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	struct FKey                                  ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalBlueprintFunctions.ControllerEvent_GetAnalogValue
struct UPrimalBlueprintFunctions_ControllerEvent_GetAnalogValue_Params
{
public:
	struct FControllerEvent                      Input;                                             // 0x0(0x40)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	float                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3352[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.WantsAttackPriority
struct APrimalDinoAIController_WantsAttackPriority_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.StopBrainComponent
struct APrimalDinoAIController_StopBrainComponent_Params
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalDinoAIController.StaticGetRandomWanderDestination
struct APrimalDinoAIController_StaticGetRandomWanderDestination_Params
{
public:
	class APrimalDinoCharacter*                  TargetCharacter;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalDinoAIController*               TargetAIController;                                // 0x8(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               LocOverride;                                       // 0x10(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomOffsetMultiplier;                            // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRandomNegativeXDir;                            // 0x2C(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOrientRandOffsetByRotation;                       // 0x2D(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_335E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrientRandOffsetByRotation;                        // 0x30(0x18)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GroundCheckSpreadOverride;                         // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_335F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.ShouldForceRunWhenAttacking
struct APrimalDinoAIController_ShouldForceRunWhenAttacking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.SetTarget
struct APrimalDinoAIController_SetTarget_Params
{
public:
	class AActor*                                InTarget;                                          // 0x0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontAddAggro;                                     // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverlapFoundTarget;                               // 0x9(0x1)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3361[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.SetHasAttackPriority
struct APrimalDinoAIController_SetHasAttackPriority_Params
{
public:
	bool                                         Value;                                             // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.ResumeBrainComponent
struct APrimalDinoAIController_ResumeBrainComponent_Params
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.PauseBrainComponent
struct APrimalDinoAIController_PauseBrainComponent_Params
{
public:
	class FString                                Reason;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.OrderedToLand
struct APrimalDinoAIController_OrderedToLand_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.IsWithinAttackRangeAndCalculateBestAttack
struct APrimalDinoAIController_IsWithinAttackRangeAndCalculateBestAttack_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         bAttackChanged;                                    // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3371[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.IsWithinAttackRange
struct APrimalDinoAIController_IsWithinAttackRange_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         bForceUseLastAttackIndex;                          // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3376[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.IsLogicPaused
struct APrimalDinoAIController_IsLogicPaused_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.IsForceTargetDinoRider
struct APrimalDinoAIController_IsForceTargetDinoRider_Params
{
public:
	class AShooterCharacter*                     PlayerTarget;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_337A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetWanderAroundActorDestination
struct APrimalDinoAIController_GetWanderAroundActorDestination_Params
{
public:
	class APrimalDinoCharacter*                  DinoCharacter;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               OriginalDestination;                               // 0x8(0x18)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetTarget
struct APrimalDinoAIController_GetTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetRandomWanderDestination
struct APrimalDinoAIController_GetRandomWanderDestination_Params
{
public:
	struct FVector                               LocOverride;                                       // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomOffsetMultiplier;                            // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRandomNegativeXDir;                            // 0x1C(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOrientRandOffsetByRotation;                       // 0x1D(0x1)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_338B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              OrientRandOffsetByRotation;                        // 0x20(0x18)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetMinAttackRange
struct APrimalDinoAIController_GetMinAttackRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetLandingLocation
struct APrimalDinoAIController_GetLandingLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetHasAttackPriority
struct APrimalDinoAIController_GetHasAttackPriority_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetCurrentAttackIndex
struct APrimalDinoAIController_GetCurrentAttackIndex_Params
{
public:
	uint8                                        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetControllerPawn
struct APrimalDinoAIController_GetControllerPawn_Params
{
public:
	class APawn*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetControlledDino
struct APrimalDinoAIController_GetControlledDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetClosestTree
struct APrimalDinoAIController_GetClosestTree_Params
{
public:
	struct FOverlapResult                        OutHit;                                            // 0x0(0x28)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	class UStaticMeshComponent*                  ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAttackRotationRate
struct APrimalDinoAIController_GetAttackRotationRate_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAttackRotationRangeDegrees
struct APrimalDinoAIController_GetAttackRotationRangeDegrees_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAttackRotationGroundSpeedMultiplier
struct APrimalDinoAIController_GetAttackRotationGroundSpeedMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAttackRange
struct APrimalDinoAIController_GetAttackRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAttackInterval
struct APrimalDinoAIController_GetAttackInterval_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAggroNotifyNeighborsRange
struct APrimalDinoAIController_GetAggroNotifyNeighborsRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAggroEntry
struct APrimalDinoAIController_GetAggroEntry_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_33A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                OutAttacker;                                       // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutAggroFactor;                                    // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_33A9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       OutLastAggroHitTime;                               // 0x18(0x8)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33AA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAggroEntriesCount
struct APrimalDinoAIController_GetAggroEntriesCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAggroEntriesAttackerAtIndex
struct APrimalDinoAIController_GetAggroEntriesAttackerAtIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_33AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.GetAggroDesirability
struct APrimalDinoAIController_GetAggroDesirability_Params
{
public:
	class AActor*                                InTarget;                                          // 0x0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33AE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.FindTarget
struct APrimalDinoAIController_FindTarget_Params
{
public:
	bool                                         bDontSet;                                          // 0x0(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_33B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.FindNewTarget
struct APrimalDinoAIController_FindNewTarget_Params
{
public:
	bool                                         bDontSet;                                          // 0x0(0x1)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_33B7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoAIController.CanLand
struct APrimalDinoAIController_CanLand_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIStateEvent
struct APrimalDinoAIController_CalculateAndSetWonderingAIStateEvent_Params
{
public:
	bool                                         StateChanged;                                      // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIState
struct APrimalDinoAIController_CalculateAndSetWonderingAIState_Params
{
public:
	bool                                         StateChanged;                                      // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPUpdateBestTarget
struct APrimalDinoAIController_BPUpdateBestTarget_Params
{
public:
	class AActor*                                bestTarget;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         DontSetIn;                                         // 0x8(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         DontSetOut;                                        // 0x9(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_33BE[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPShouldNotifyNeighbor
struct APrimalDinoAIController_BPShouldNotifyNeighbor_Params
{
public:
	class APrimalDinoCharacter*                  Neighbor;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33C2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPShouldNotifyAnyNeighbor
struct APrimalDinoAIController_BPShouldNotifyAnyNeighbor_Params
{
public:
	class APrimalDinoCharacter*                  Neighbor;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33C7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPOverrideLandingLocation
struct APrimalDinoAIController_BPOverrideLandingLocation_Params
{
public:
	float                                        OutRadius;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_33CB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPOverrideIgnoredByWildDino
struct APrimalDinoAIController_BPOverrideIgnoredByWildDino_Params
{
public:
	class AActor*                                WildDinoToIgnore;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33CE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPGetTargetingDesire
struct APrimalDinoAIController_BPGetTargetingDesire_Params
{
public:
	class AActor*                                ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForTargetingDesireValue;                           // 0x8(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BPForceTargetDinoRider
struct APrimalDinoAIController_BPForceTargetDinoRider_Params
{
public:
	class AShooterCharacter*                     PlayerTarget;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_33DA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.BP_TamedOverrideHorizontalLandingRange
struct APrimalDinoAIController_BP_TamedOverrideHorizontalLandingRange_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoAIController.AvoidGenericToPoint
struct APrimalDinoAIController_AvoidGenericToPoint_Params
{
public:
	struct FVector                               TargetDestination;                                 // 0x0(0x18)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoAIController.AddToAggro
struct APrimalDinoAIController_AddToAggro_Params
{
public:
	class AActor*                                Attacker;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DamagePercent;                                     // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNotifyNeighbors;                                  // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SetValue;                                          // 0xD(0x1)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate)
	bool                                         bIsFromDamage;                                     // 0xE(0x1)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SkipTeamCheck;                                     // 0xF(0x1)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBotAIController.TimeSinceGivenAttackPriority
struct APrimalBotAIController_TimeSinceGivenAttackPriority_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotAIController.SetAttackCoordinator
struct APrimalBotAIController_SetAttackCoordinator_Params
{
public:
	class AAIAttackCoordinator*                  Coordinator;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBotAIController.IsTooFarToAttack
struct APrimalBotAIController_IsTooFarToAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBotAIController.IsTooCloseToAttack
struct APrimalBotAIController_IsTooCloseToAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotAIController.InitializeBlackboardValues
struct APrimalBotAIController_InitializeBlackboardValues_Params
{
public:
	class APrimalBotCharacter*                   Bot;                                               // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBotAIController.ClaimDino
struct APrimalBotAIController_ClaimDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3444[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.UseCenteredTPVCamera
struct APrimalCharacter_UseCenteredTPVCamera_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.UpdateHasBuffPreSerialize
struct APrimalCharacter_UpdateHasBuffPreSerialize_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.UpdateEquippedItemDurabilityVariable
struct APrimalCharacter_UpdateEquippedItemDurabilityVariable_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ItemDurabilityPercentage;                          // 0x8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.UpdateEquippedItemDurabilityMaterials
struct APrimalCharacter_UpdateEquippedItemDurabilityMaterials_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ItemDurabilityPercentage;                          // 0x8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.UnProne
struct APrimalCharacter_UnProne_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.TurnInput
struct APrimalCharacter_TurnInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.TurnAtRate
struct APrimalCharacter_TurnAtRate_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.TickMovementComponent
struct APrimalCharacter_TickMovementComponent_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.TakeDamage
struct APrimalCharacter_TakeDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3460[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x28(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3462[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.StopAnimEx
struct APrimalCharacter_StopAnimEx_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         bReplicate;                                        // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToOwner;                                 // 0x9(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3468[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendOutTime;                                      // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.StaticRemoveCharacterSnapshot
struct APrimalCharacter_StaticRemoveCharacterSnapshot_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class AActor*                                From;                                              // 0x8(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.StaticGetSnapshotPoseCount
struct APrimalCharacter_StaticGetSnapshotPoseCount_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_346F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalCharacter.StaticGetSnapshotPose
struct APrimalCharacter_StaticGetSnapshotPose_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        PoseIndex;                                         // 0x8(0x4)(Edit, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3472[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalSnapshotPose                   ReturnValue;                                       // 0x10(0x48)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshotEquipment
struct APrimalCharacter_StaticApplyCharacterSnapshotEquipment_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                To;                                                // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshot
struct APrimalCharacter_StaticApplyCharacterSnapshot_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class AActor*                                To;                                                // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	struct FVector                               Offset;                                            // 0x10(0x18)(Edit, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst)
	float                                        MaxExtent;                                         // 0x28(0x4)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Pose;                                              // 0x2C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bCollisionOn;                                      // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3475[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.StartForceSkelUpdate
struct APrimalCharacter_StartForceSkelUpdate_Params
{
public:
	float                                        ForTime;                                           // 0x0(0x4)(Edit, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUpdateMesh;                                  // 0x4(0x1)(Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bServerOnly;                                       // 0x5(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3477[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseSlowInterpToOldCamera
struct APrimalCharacter_ShouldUseSlowInterpToOldCamera_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseLongFallCameraPivotZValues
struct APrimalCharacter_ShouldUseLongFallCameraPivotZValues_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseDurabilityVarForItemType
struct APrimalCharacter_ShouldUseDurabilityVarForItemType_Params
{
public:
	enum class EPrimalEquipmentType              TheItemType;                                       // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseDurabilityVar
struct APrimalCharacter_ShouldUseDurabilityVar_Params
{
public:
	int32                                        VarIndex;                                          // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3480[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseAutonomousCorrectionOffset
struct APrimalCharacter_ShouldUseAutonomousCorrectionOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseASACamera
struct APrimalCharacter_ShouldUseASACamera_Params
{
public:
	bool                                         bCheckShouldSwitchToOld;                           // 0x0(0x1)(Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldUseArmorDurabilityVFX
struct APrimalCharacter_ShouldUseArmorDurabilityVFX_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldDisableCameraInterpolation
struct APrimalCharacter_ShouldDisableCameraInterpolation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldDealDamageTo
struct APrimalCharacter_ShouldDealDamageTo_Params
{
public:
	class APrimalCharacter*                      OtherCharacter;                                    // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDamageToSelf;                                // 0x8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDamageToTribe;                               // 0x9(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowDamageToAlliedTribes;                        // 0xA(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xB(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3487[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.ShouldASACameraSwitchToOld
struct APrimalCharacter_ShouldASACameraSwitchToOld_Params
{
public:
	bool                                         bDontCheckForTargeting;                            // 0x0(0x1)(Edit, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalCharacter.SetSleeping
struct APrimalCharacter_SetSleeping_Params
{
public:
	bool                                         bSleeping;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseRagdollLocationOffset;                         // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreserveSavedAnim;                                // 0x2(0x1)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.SetMyInventoryComponent
struct APrimalCharacter_SetMyInventoryComponent_Params
{
public:
	class UPrimalInventoryComponent*             TheInventoryComponent;                             // 0x0(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.SetMovementTether
struct APrimalCharacter_SetMovementTether_Params
{
public:
	class AActor*                                InTetherActor;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Height;                                            // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.SetLastCausedDamageTime
struct APrimalCharacter_SetLastCausedDamageTime_Params
{
public:
	double                                       LastCausedDamageTimeValue;                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.SetEquippedItemDurabilityPercent
struct APrimalCharacter_SetEquippedItemDurabilityPercent_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ItemDurabilityPercentage;                          // 0x8(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.SetEnableIK
struct APrimalCharacter_SetEnableIK_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.SetDefaultCameraStyleForController
struct APrimalCharacter_SetDefaultCameraStyleForController_Params
{
public:
	class APlayerController*                     APC;                                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.SetCharacterMeshesMaterialScalarParamValue
struct APrimalCharacter_SetCharacterMeshesMaterialScalarParamValue_Params
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.SetCameraProfile
struct APrimalCharacter_SetCameraProfile_Params
{
public:
	class FName                                  NewProfileId;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.SetBoundsScale
struct APrimalCharacter_SetBoundsScale_Params
{
public:
	float                                        NewScale;                                          // 0x0(0x4)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerSetRunning
struct APrimalCharacter_ServerSetRunning_Params
{
public:
	bool                                         bNewRunning;                                       // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerRequestDragTarget
struct APrimalCharacter_ServerRequestDragTarget_Params
{
public:
	class APrimalCharacter*                      Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerDinoOrder
struct APrimalCharacter_ServerDinoOrder_Params
{
public:
	class APrimalDinoCharacter*                  ADino;                                             // 0x0(0x8)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDinoTamedOrder                   OrderType;                                         // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3493[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                Target;                                            // 0x10(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCaptureDermis
struct APrimalCharacter_ServerCaptureDermis_Params
{
public:
	class APrimalCharacter*                      Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallStayOne
struct APrimalCharacter_ServerCallStayOne_Params
{
public:
	class APrimalDinoCharacter*                  ForDinoChar;                                       // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallMoveTo
struct APrimalCharacter_ServerCallMoveTo_Params
{
public:
	struct FVector                               MoveToLoc;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallLandFlyerOne
struct APrimalCharacter_ServerCallLandFlyerOne_Params
{
public:
	class APrimalDinoCharacter*                  ForDinoChar;                                       // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallFollowOne
struct APrimalCharacter_ServerCallFollowOne_Params
{
public:
	class APrimalDinoCharacter*                  ForDinoChar;                                       // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallFollowDistanceCycleOne
struct APrimalCharacter_ServerCallFollowDistanceCycleOne_Params
{
public:
	class APrimalDinoCharacter*                  ForDinoChar;                                       // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ServerCallAttackTarget
struct APrimalCharacter_ServerCallAttackTarget_Params
{
public:
	class AActor*                                TheTarget;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.RemoveAllJumpDeactivatedBuffs
struct APrimalCharacter_RemoveAllJumpDeactivatedBuffs_Params
{
public:
	class APrimalBuff*                           IgnoredBuff;                                       // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.Prone
struct APrimalCharacter_Prone_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.PreventsTargeting
struct APrimalCharacter_PreventsTargeting_Params
{
public:
	class AActor*                                ByActor;                                           // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_349B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.PreventInputType
struct APrimalCharacter_PreventInputType_Params
{
public:
	enum class EPrimalCharacterInputType         InputType;                                         // 0x0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.PreventInputDoesOffset
struct APrimalCharacter_PreventInputDoesOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.Poop
struct APrimalCharacter_Poop_Params
{
public:
	bool                                         bForcePoop;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayHurtAnim
struct APrimalCharacter_PlayHurtAnim_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_349F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsLocalPath;                                      // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayHitEffectRadial
struct APrimalCharacter_PlayHitEffectRadial_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRadialDamageEvent                    DamageEvent;                                       // 0x8(0x60)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x68(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x148 (0x148 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayHitEffectPoint
struct APrimalCharacter_PlayHitEffectPoint_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointDamageEvent                     DamageEvent;                                       // 0x8(0x130)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x138(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x140(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayHitEffectGeneric
struct APrimalCharacter_PlayHitEffectGeneric_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34A8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayerCommand
struct APrimalCharacter_PlayerCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayDyingRadial
struct APrimalCharacter_PlayDyingRadial_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRadialDamageEvent                    DamageEvent;                                       // 0x8(0x60)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x68(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x70(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x148 (0x148 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayDyingPoint
struct APrimalCharacter_PlayDyingPoint_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34B1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPointDamageEvent                     DamageEvent;                                       // 0x8(0x130)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x138(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x140(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayDyingGeneric
struct APrimalCharacter_PlayDyingGeneric_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34B4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x28(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.PlayAnimEx
struct APrimalCharacter_PlayAnimEx_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        InPlayRate;                                        // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0xC(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicate;                                        // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToOwner;                                 // 0x15(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x16(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x17(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceKeepSynced;                                  // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34B9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendInTime;                                       // 0x1C(0x4)(Edit, ConstParm, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x20(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.OverrideCameraTargetOriginLocation
struct APrimalCharacter_OverrideCameraTargetOriginLocation_Params
{
public:
	struct FVector                               OutOverrideOrigin;                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  WithCameraStyle;                                   // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.OverrideCameraInterpSpeed
struct APrimalCharacter_OverrideCameraInterpSpeed_Params
{
public:
	float                                        DefaultTPVCameraSpeedInterpMultiplier;             // 0x0(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVOffsetInterpSpeed;                       // 0x4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpMultiplier;                    // 0x8(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVOffsetInterpSpeed;                              // 0xC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.OnMassTeleportEvent
struct APrimalCharacter_OnMassTeleportEvent_Params
{
public:
	enum class EMassTeleportState                EventState;                                        // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34C2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      TeleportInitiatedByChar;                           // 0x8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.OnDetachedFromCharacter
struct APrimalCharacter_OnDetachedFromCharacter_Params
{
public:
	class APrimalCharacter*                      ACharacter;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OverrideDirection;                                 // 0x8(0x4)(ConstParm, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34C3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCharacter.OnCharacterStepped
struct APrimalCharacter_OnCharacterStepped_Params
{
public:
	struct FVector                               PrevLocation;                                      // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               NewLocation;                                       // 0x18(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.OnBeginDrag
struct APrimalCharacter_OnBeginDrag_Params
{
public:
	class APrimalCharacter*                      Dragged;                                           // 0x0(0x8)(Net, Parm, OutParm, DisableEditOnTemplate, EditConst)
	int32                                        BoneIndex;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	bool                                         bWithGrapHook;                                     // 0xC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34C6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.NetUpdateTribeName
struct APrimalCharacter_NetUpdateTribeName_Params
{
public:
	class FString                                NewTribeName;                                      // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.NetSetReplicatedDeathAnim
struct APrimalCharacter_NetSetReplicatedDeathAnim_Params
{
public:
	class UAnimationAsset*                       Anim;                                              // 0x0(0x8)(Edit, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.NetSetMovementModeSimulatedInternal
struct APrimalCharacter_NetSetMovementModeSimulatedInternal_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.NetSetCharacterMovementVelocity
struct APrimalCharacter_NetSetCharacterMovementVelocity_Params
{
public:
	bool                                         bSetNewVelocity;                                   // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34CB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewVelocity;                                       // 0x8(0x18)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bSetNewMovementMode;                               // 0x20(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x21(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_34CD[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.NetPlaySoundOnCharacter
struct APrimalCharacter_NetPlaySoundOnCharacter_Params
{
public:
	class USoundBase*                            SoundToPlay;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlayOnOwner;                                      // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.NetPlayDeathAnimIfNeeded
struct APrimalCharacter_NetPlayDeathAnimIfNeeded_Params
{
public:
	bool                                         bOnlyPlayOnClient;                                 // 0x0(0x1)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.NetForceUpdateAimedCharacters
struct APrimalCharacter_NetForceUpdateAimedCharacters_Params
{
public:
	struct FVector                               StartLoc;                                          // 0x0(0x18)(Parm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               EndLoc;                                            // 0x18(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                IgnoreActor;                                       // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUpdateIgnoreActor;                           // 0x38(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TraceRadius;                                       // 0x3C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.NetAddCharacterMovementImpulse
struct APrimalCharacter_NetAddCharacterMovementImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bVelChange;                                        // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_34D8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseExponent;                                   // 0x1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetNewMovementMode;                               // 0x20(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x21(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideMaxImpulseZ;                              // 0x22(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34D9[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.PrimalCharacter.NativeSimulateHair
struct APrimalCharacter_NativeSimulateHair_Params
{
public:
	TArray<struct FVector>                       CurrentPos;                                        // 0x0(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       LastPos;                                           // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       RestPos;                                           // 0x20(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       PivotPos;                                          // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                RestDistance;                                      // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               HairSocketLoc;                                     // 0x50(0x18)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              HairSocketRot;                                     // 0x68(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ChestSocketLoc;                                    // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ChestSocketRot;                                    // 0x98(0x18)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0xB0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        Damping;                                           // 0xB4(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        DampingFrontModifier;                              // 0xB8(0x4)(ConstParm, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DampingBack;                                       // 0xBC(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InWater;                                           // 0xC0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HairWetness;                                       // 0xC4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DragForce;                                         // 0xC8(0x4)(Edit, ExportObject, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HairScale;                                         // 0xCC(0x4)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpringForce;                                       // 0xD0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpringForceFrontModifier;                          // 0xD4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        SpringForceBack;                                   // 0xD8(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GravityForce;                                      // 0xDC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ShoulderLCollisionOffset;                          // 0xE0(0x18)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ShoulderLCollisionRadius;                          // 0xF8(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34EB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ShoulderRCollisionOffset;                          // 0x100(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ShoulderRCollisionRadius;                          // 0x118(0x4)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34ED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               HeadHairCollisionOffset;                           // 0x120(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HeadHairCollisionRadius;                           // 0x138(0x4)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34EF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NeckHairCollisionOffset;                           // 0x140(0x18)(BlueprintVisible, Parm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NeckHairCollisionRadius;                           // 0x158(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxDistanceToRestPos;                              // 0x15C(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FTransform                            LastHeadTransform;                                 // 0x160(0x60)(ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPosAsPivot;                                       // 0x1C0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCollideMiddle;                                    // 0x1C1(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCollideWithNeck;                                  // 0x1C2(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F0[0xD];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.PrimalCharacter.NativeOnLanded
struct APrimalCharacter_NativeOnLanded_Params
{
public:
	struct FHitResult                            Hit;                                               // 0x0(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.MoveUp
struct APrimalCharacter_MoveUp_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.MoveRight
struct APrimalCharacter_MoveRight_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.MoveForward
struct APrimalCharacter_MoveForward_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.ModifyStasisComponentRadius
struct APrimalCharacter_ModifyStasisComponentRadius_Params
{
public:
	float                                        Delta;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.LookUpAtRate
struct APrimalCharacter_LookUpAtRate_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.LoadPrimalCameraConfig
struct APrimalCharacter_LoadPrimalCameraConfig_Params
{
public:
	class UClass*                                PrimalCameraConfigClass;                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.LivesInWater
struct APrimalCharacter_LivesInWater_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.LevelUpPlayerAddedStat
struct APrimalCharacter_LevelUpPlayerAddedStat_Params
{
public:
	enum class EPrimalCharacterStatusValue       StatToLevel;                                       // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_34F7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumLevels;                                         // 0x4(0x4)(BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPlayer;                                         // 0x8(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_34F8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsWithinTether
struct APrimalCharacter_IsWithinTether_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsWildSlow
struct APrimalCharacter_IsWildSlow_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsWatered
struct APrimalCharacter_IsWatered_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsValidForCombatMusic
struct APrimalCharacter_IsValidForCombatMusic_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.IsTargetWithinTether
struct APrimalCharacter_IsTargetWithinTether_Params
{
public:
	struct FVector                               Destination;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdditionalRadius;                                  // 0x18(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_34FC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsSwimmingOnWaterSurface
struct APrimalCharacter_IsSwimmingOnWaterSurface_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x5 (0x5 - 0x0)
// Function ShooterGame.PrimalCharacter.IsSubmerged
struct APrimalCharacter_IsSubmerged_Params
{
public:
	bool                                         bDontCheckSwimming;                                // 0x0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseFullThreshold;                                 // 0x1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceCheck;                                       // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromVolumeChange;                                 // 0x3(0x1)(Edit, ConstParm, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.IsSitting
struct APrimalCharacter_IsSitting_Params
{
public:
	bool                                         bIgnoreLockedToSeat;                               // 0x0(0x1)(ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsRunning
struct APrimalCharacter_IsRunning_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsRider
struct APrimalCharacter_IsRider_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsRagdolled
struct APrimalCharacter_IsRagdolled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.IsProneOrSitting
struct APrimalCharacter_IsProneOrSitting_Params
{
public:
	bool                                         bIgnoreLockedToSeat;                               // 0x0(0x1)(ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsPrimalCharWalking
struct APrimalCharacter_IsPrimalCharWalking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsPrimalCharSwimming
struct APrimalCharacter_IsPrimalCharSwimming_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.IsPrimalCharFriendly
struct APrimalCharacter_IsPrimalCharFriendly_Params
{
public:
	class APrimalCharacter*                      PrimalChar;                                        // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3501[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsPrimalCharFlying
struct APrimalCharacter_IsPrimalCharFlying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsPrimalCharFalling
struct APrimalCharacter_IsPrimalCharFalling_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsOwningClient
struct APrimalCharacter_IsOwningClient_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsOnSeatingStructure
struct APrimalCharacter_IsOnSeatingStructure_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsMoving
struct APrimalCharacter_IsMoving_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsMovementTethered
struct APrimalCharacter_IsMovementTethered_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.IsMontagePlaying
struct APrimalCharacter_IsMontagePlaying_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        TimeFromEndToConsiderFinished;                     // 0x8(0x4)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3505[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsMeshGameplayRelevant
struct APrimalCharacter_IsMeshGameplayRelevant_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsInvincible
struct APrimalCharacter_IsInvincible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsInVacuumSealedSpace
struct APrimalCharacter_IsInVacuumSealedSpace_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.IsInStatusState
struct APrimalCharacter_IsInStatusState_Params
{
public:
	enum class EPrimalCharacterStatusState       StatusStateType;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.IsHostileTo
struct APrimalCharacter_IsHostileTo_Params
{
public:
	class APrimalCharacter*                      OtherCharacter;                                    // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IgnoreDead;                                        // 0x8(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3509[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.IsHostileOrAggressiveTo
struct APrimalCharacter_IsHostileOrAggressiveTo_Params
{
public:
	class APrimalCharacter*                      OtherCharacter;                                    // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_350B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsGameInputAllowed
struct APrimalCharacter_IsGameInputAllowed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsFirstPerson
struct APrimalCharacter_IsFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsDeadOrDying
struct APrimalCharacter_IsDeadOrDying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.IsDamageOccludedByStructures
struct APrimalCharacter_IsDamageOccludedByStructures_Params
{
public:
	class AActor*                                DamageCauser;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3510[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalCharacter.IsCharacterHardAttached
struct APrimalCharacter_IsCharacterHardAttached_Params
{
public:
	bool                                         bIgnoreRiding;                                     // 0x0(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreCarried;                                    // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsBossDino
struct APrimalCharacter_IsBossDino_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalCharacter.IsBlockedByShield
struct APrimalCharacter_IsBlockedByShield_Params
{
public:
	struct FHitResult                            HitInfo;                                           // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               ShotDirection;                                     // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bBlockAllPointDamage;                              // 0x108(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x109(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3513[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsBeingDestroyed
struct APrimalCharacter_IsBeingDestroyed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.IsBaseUnresolved
struct APrimalCharacter_IsBaseUnresolved_Params
{
public:
	bool                                         bUseReplicatedData;                                // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsBaby
struct APrimalCharacter_IsBaby_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsAttachedToSomething
struct APrimalCharacter_IsAttachedToSomething_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsASACameraEnabled
struct APrimalCharacter_IsASACameraEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.IsAlliedWithOtherTeam
struct APrimalCharacter_IsAlliedWithOtherTeam_Params
{
public:
	int32                                        OtherTeamID;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3515[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.IsAlive
struct APrimalCharacter_IsAlive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.Immobilize
struct APrimalCharacter_Immobilize_Params
{
public:
	bool                                         bImmobilize;                                       // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3518[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                UsingActor;                                        // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bImmobilizeFalling;                                // 0x10(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDismount;                                  // 0x11(0x1)(ConstParm, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3519[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.HurtMe
struct APrimalCharacter_HurtMe_Params
{
public:
	int32                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.HasValidASACameraConfig
struct APrimalCharacter_HasValidASACameraConfig_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.HasDynamicBase
struct APrimalCharacter_HasDynamicBase_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.HasCryoSickness
struct APrimalCharacter_HasCryoSickness_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.HasBuffWithCustomTags
struct APrimalCharacter_HasBuffWithCustomTags_Params
{
public:
	TArray<class FName>                          CustomTags;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_351B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.HasBuffWithCustomTagConst
struct APrimalCharacter_HasBuffWithCustomTagConst_Params
{
public:
	class FName                                  BuffCustomTag;                                     // 0x0(0x8)(Edit, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_351D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.HasBuffWithCustomTag
struct APrimalCharacter_HasBuffWithCustomTag_Params
{
public:
	class FName                                  BuffCustomTag;                                     // 0x0(0x8)(Edit, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_351E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.HasBuff
struct APrimalCharacter_HasBuff_Params
{
public:
	class UClass*                                BuffClass;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UseExactMatch;                                     // 0x8(0x1)(Edit, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3520[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.HasAnyBuffWithDisabledWeaponTag
struct APrimalCharacter_HasAnyBuffWithDisabledWeaponTag_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class APrimalBuff*                           FoundBuff;                                         // 0x8(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3522[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.GiveKillExperience
struct APrimalCharacter_GiveKillExperience_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetVisualVelocity
struct APrimalCharacter_GetVisualVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalCharacter.GetVelocityBasedSoundIndex
struct APrimalCharacter_GetVelocityBasedSoundIndex_Params
{
public:
	struct FVelocityBasedCharacterSoundInfo      InStruct;                                          // 0x0(0x38)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	struct FVector                               InVelocity;                                        // 0x38(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x50(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3524[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTransitionToTargetingCameraInterpSpeed
struct APrimalCharacter_GetTransitionToTargetingCameraInterpSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTransitionToCameraStateInterpTime
struct APrimalCharacter_GetTransitionToCameraStateInterpTime_Params
{
public:
	enum class EPrimalCameraState                ToFinalCameraState;                                // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3526[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTPVWeaponCameraOffset
struct APrimalCharacter_GetTPVWeaponCameraOffset_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTPVHorizontalCameraOffsetFromSlider
struct APrimalCharacter_GetTPVHorizontalCameraOffsetFromSlider_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTPVHorizontalCameraOffset
struct APrimalCharacter_GetTPVHorizontalCameraOffset_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTPVCameraOffsetMultiplier
struct APrimalCharacter_GetTPVCameraOffsetMultiplier_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTPVCameraOffset
struct APrimalCharacter_GetTPVCameraOffset_Params
{
public:
	bool                                         bForASACamera;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_352C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTooltipCharacterInfoBP
struct APrimalCharacter_GetTooltipCharacterInfoBP_Params
{
public:
	class AShooterPlayerController*              PlayerOwner;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FTooltipTextInfo>              ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTooltipCharacterInfo
struct APrimalCharacter_GetTooltipCharacterInfo_Params
{
public:
	class AShooterPlayerController*              PlayerOwner;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FTooltipTextInfo>              ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTetherObject
struct APrimalCharacter_GetTetherObject_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTetheredVelocity
struct APrimalCharacter_GetTetheredVelocity_Params
{
public:
	struct FVector                               RequestedVelocity;                                 // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaSeconds;                                      // 0x18(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3531[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.GetTetheredDestination
struct APrimalCharacter_GetTetheredDestination_Params
{
public:
	struct FVector                               Destination;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        AdditionalRadius;                                  // 0x18(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3535[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetSocketLocation
struct APrimalCharacter_GetSocketLocation_Params
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetSnapshotComponent
struct APrimalCharacter_GetSnapshotComponent_Params
{
public:
	class AActor*                                From;                                              // 0x0(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FName                                  Tag;                                               // 0x8(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UActorComponent*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetShortName
struct APrimalCharacter_GetShortName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetRunningSpeedModifier
struct APrimalCharacter_GetRunningSpeedModifier_Params
{
public:
	bool                                         bIsForDefaultSpeed;                                // 0x0(0x1)(ConstParm, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3537[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.GetRole
struct APrimalCharacter_GetRole_Params
{
public:
	enum class ENetRole                          ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalMovement
struct APrimalCharacter_GetPrimalMovement_Params
{
public:
	class UPrimalCharacterMovement*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCharMovementMode
struct APrimalCharacter_GetPrimalCharMovementMode_Params
{
public:
	enum class EMovementMode                     ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2B8 (0x2B8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraSettings
struct APrimalCharacter_GetPrimalCameraSettings_Params
{
public:
	struct FPrimalCameraProfile                  ForCameraProfile;                                  // 0x0(0x1C0)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraSettings                 OutCameraSettings;                                 // 0x1C0(0xE8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      CharForConditionChecks;                            // 0x2A8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2B0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_353E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraParamsFromSettings
struct APrimalCharacter_GetPrimalCameraParamsFromSettings_Params
{
public:
	struct FPrimalCameraParams                   OutCameraParams;                                   // 0x0(0xD8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraSettings                 FromCameraSettings;                                // 0xD8(0xE8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      CharForConditionChecks;                            // 0x1C0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_353F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraParams
struct APrimalCharacter_GetPrimalCameraParams_Params
{
public:
	struct FPrimalCameraParams                   OutCameraParams;                                   // 0x0(0xD8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      CharForConditionChecks;                            // 0xD8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeWeaponOverride;                            // 0xE0(0x1)(BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3541[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ForProfileId;                                      // 0xE4(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3542[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraDesiredPivotRotation
struct APrimalCharacter_GetPrimalCameraDesiredPivotRotation_Params
{
public:
	struct FRotator                              CurrentPivotRotation;                              // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeWeaponOverride;                            // 0x18(0x1)(BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3544[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ForProfileId;                                      // 0x1C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3545[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraDesiredPivotOffset
struct APrimalCharacter_GetPrimalCameraDesiredPivotOffset_Params
{
public:
	bool                                         bIncludeWeaponOverride;                            // 0x0(0x1)(BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3546[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ForProfileId;                                      // 0x4(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3547[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraDesiredPivotLocation
struct APrimalCharacter_GetPrimalCameraDesiredPivotLocation_Params
{
public:
	struct FVector                               CurrentPivotLocation;                              // 0x0(0x18)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeWeaponOverride;                            // 0x18(0x1)(BlueprintVisible, EditFixedSize, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3549[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ForProfileId;                                      // 0x1C(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_354A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.GetPrimalCameraDesiredArmLength
struct APrimalCharacter_GetPrimalCameraDesiredArmLength_Params
{
public:
	float                                        CurrentCameraArmLength;                            // 0x0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultCameraArmLength;                            // 0x4(0x4)(Edit, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHits
struct APrimalCharacter_GetPhysMatTypeFromHits_Params
{
public:
	TArray<struct FHitResult>                    FromHits;                                          // 0x0(0x10)(BlueprintVisible, ExportObject, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPhysicalSurface                  ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_354C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHit
struct APrimalCharacter_GetPhysMatTypeFromHit_Params
{
public:
	struct FHitResult                            FromHit;                                           // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, Net, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPhysicalSurface                  ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_354D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPaintingTexture
struct APrimalCharacter_GetPaintingTexture_Params
{
public:
	class UPaintingTexture*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetPaintingMesh
struct APrimalCharacter_GetPaintingMesh_Params
{
public:
	class UMeshComponent*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetOverrideSocket
struct APrimalCharacter_GetOverrideSocket_Params
{
public:
	class FName                                  From;                                              // 0x0(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetOverridenMontage
struct APrimalCharacter_GetOverridenMontage_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	class UAnimMontage*                          ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetOverridenAnimSequence
struct APrimalCharacter_GetOverridenAnimSequence_Params
{
public:
	class UAnimSequence*                         AnimSeq;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetMyBiomeZoneVolume
struct APrimalCharacter_GetMyBiomeZoneVolume_Params
{
public:
	class ABiomeZoneVolume*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetMoveAnimRate
struct APrimalCharacter_GetMoveAnimRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetMaxHealth
struct APrimalCharacter_GetMaxHealth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetLocalPlayerIndex
struct APrimalCharacter_GetLocalPlayerIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetLastRenderTimeWithShadow
struct APrimalCharacter_GetLastRenderTimeWithShadow_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetLastRenderTimeNoShadow
struct APrimalCharacter_GetLastRenderTimeNoShadow_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetLastCausedDamageTime
struct APrimalCharacter_GetLastCausedDamageTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetKillXP
struct APrimalCharacter_GetKillXP_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetInterpolatedRotation_NonFlattened
struct APrimalCharacter_GetInterpolatedRotation_NonFlattened_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetInputDirectionVector
struct APrimalCharacter_GetInputDirectionVector_Params
{
public:
	bool                                         bRelativeToViewDirection;                          // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3554[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetImmersionDepth
struct APrimalCharacter_GetImmersionDepth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetHealthPercentage
struct APrimalCharacter_GetHealthPercentage_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetHealth
struct APrimalCharacter_GetHealth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetGrappledBuffClassOverride
struct APrimalCharacter_GetGrappledBuffClassOverride_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetFXBloodColor
struct APrimalCharacter_GetFXBloodColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetFPVShadowMeshOffset
struct APrimalCharacter_GetFPVShadowMeshOffset_Params
{
public:
	bool                                         bReturnMeshLocation;                               // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3556[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalCharacter.GetFootPhysicalSurfaceType
struct APrimalCharacter_GetFootPhysicalSurfaceType_Params
{
public:
	bool                                         bForce;                                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIsForFootstepParticles;                           // 0x1(0x1)(ConstParm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPhysicalSurface                  ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetFloatingHUDLocation
struct APrimalCharacter_GetFloatingHUDLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetFallAcceleration
struct APrimalCharacter_GetFallAcceleration_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.GetEquippedItemDurabilityPercent
struct APrimalCharacter_GetEquippedItemDurabilityPercent_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDragWeight
struct APrimalCharacter_GetDragWeight_Params
{
public:
	class APrimalCharacter*                      ForDragger;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_355A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDraggedRotation
struct APrimalCharacter_GetDraggedRotation_Params
{
public:
	class APrimalCharacter*                      Dragger;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDraggedRelativeRotation
struct APrimalCharacter_GetDraggedRelativeRotation_Params
{
public:
	bool                                         bFlip180;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_355C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDraggedRelativeLocation
struct APrimalCharacter_GetDraggedRelativeLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDraggedLocation
struct APrimalCharacter_GetDraggedLocation_Params
{
public:
	class APrimalCharacter*                      Dragger;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDetailedDescription
struct APrimalCharacter_GetDetailedDescription_Params
{
public:
	class FString                                IndentPrefix;                                      // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class FString>                        ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDescriptiveName
struct APrimalCharacter_GetDescriptiveName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDefaultMovementSpeed
struct APrimalCharacter_GetDefaultMovementSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDebugInfoString
struct APrimalCharacter_GetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.GetDeathAnim
struct APrimalCharacter_GetDeathAnim_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_355E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ImpactVelocity;                                    // 0x8(0x18)(Net, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	class APawn*                                 InstigatingPawn;                                   // 0x20(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class UAnimationAsset*                       ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCustomTooltip
struct APrimalCharacter_GetCustomTooltip_Params
{
public:
	struct FVector2D                             TooltipPadding;                                    // 0x0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TooltipScale;                                      // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TooltipLocationOffset;                             // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCurrentPrimalCameraSettings
struct APrimalCharacter_GetCurrentPrimalCameraSettings_Params
{
public:
	struct FPrimalCameraSettings                 OutCameraSettings;                                 // 0x0(0xE8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      CharForConditionChecks;                            // 0xE8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3561[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCurrentCameraProfileId
struct APrimalCharacter_GetCurrentCameraProfileId_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCurrentCameraProfile
struct APrimalCharacter_GetCurrentCameraProfile_Params
{
public:
	struct FPrimalCameraProfile                  OutCameraProfile;                                  // 0x0(0x1C0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3564[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCurrentCameraModeIndex
struct APrimalCharacter_GetCurrentCameraModeIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCharacterViewLocationAndDirection
struct APrimalCharacter_GetCharacterViewLocationAndDirection_Params
{
public:
	struct FVector                               ViewLocation;                                      // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ViewDirection;                                     // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromCrosshairOrCamera;                            // 0x30(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3565[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FallbackAngleOffsetDegrees;                        // 0x34(0x4)(BlueprintVisible, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCharacterStatusComponent
struct APrimalCharacter_GetCharacterStatusComponent_Params
{
public:
	class UPrimalCharacterStatusComponent*       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCharactersGrappledToMe
struct APrimalCharacter_GetCharactersGrappledToMe_Params
{
public:
	TArray<class APrimalCharacter*>              GrappledCharsArray;                                // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCapsuleTopLocation
struct APrimalCharacter_GetCapsuleTopLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCapsuleBottomLocation
struct APrimalCharacter_GetCapsuleBottomLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.PrimalCharacter.GetCameraProfileForId
struct APrimalCharacter_GetCameraProfileForId_Params
{
public:
	class FName                                  CameraProfileId;                                   // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraProfile                  OutCameraProfile;                                  // 0x8(0x1C0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3571[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBuffWithCustomTag
struct APrimalCharacter_GetBuffWithCustomTag_Params
{
public:
	class FName                                  BuffCustomTag;                                     // 0x0(0x8)(Edit, ExportObject, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBuffStackCount
struct APrimalCharacter_GetBuffStackCount_Params
{
public:
	class UClass*                                BuffClass;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UseExactMatch;                                     // 0x8(0x1)(Edit, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3577[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBuffs
struct APrimalCharacter_GetBuffs_Params
{
public:
	TArray<class APrimalBuff*>                   TheBuffs;                                          // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBuff
struct APrimalCharacter_GetBuff_Params
{
public:
	class UClass*                                BuffClass;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalBuff*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBaseStatusValue
struct APrimalCharacter_GetBaseStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       StatusValueType;                                   // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_357F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBaseDragWeight
struct APrimalCharacter_GetBaseDragWeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBasedOrSeatingOnDino
struct APrimalCharacter_GetBasedOrSeatingOnDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBasedOnDinoAsActor
struct APrimalCharacter_GetBasedOnDinoAsActor_Params
{
public:
	bool                                         bUseReplicatedData;                                // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyConsciousDino;                                // 0x1(0x1)(ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3585[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBasedOnDino
struct APrimalCharacter_GetBasedOnDino_Params
{
public:
	bool                                         bUseReplicatedData;                                // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyConsciousDino;                                // 0x1(0x1)(ExportObject, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3589[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetBasedMovementComponent
struct APrimalCharacter_GetBasedMovementComponent_Params
{
public:
	class UPrimitiveComponent*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.GetAttachedExplosive
struct APrimalCharacter_GetAttachedExplosive_Params
{
public:
	class APrimalStructureExplosive*             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.GetAllBuffs
struct APrimalCharacter_GetAllBuffs_Params
{
public:
	TArray<class APrimalBuff*>                   AllBuffs;                                          // 0x0(0x10)(Edit, ConstParm, Net, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.GetAllAttachedChars
struct APrimalCharacter_GetAllAttachedChars_Params
{
public:
	TArray<class APrimalCharacter*>              AttachedCharsArray;                                // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeSelf;                                      // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         bIncludeBased;                                     // 0x11(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludePassengers;                                // 0x12(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeCarried;                                   // 0x13(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_358C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalCharacter.GetAimOffsets
struct APrimalCharacter_GetAimOffsets_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3592[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RootRotOffset;                                     // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TheRootYawSpeed;                                   // 0x20(0x4)(Edit, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxYawAimClamp;                                    // 0x24(0x4)(Edit, BlueprintVisible, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               RootLocOffset;                                     // 0x28(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInterpolationStep;                                // 0x40(0x1)(Edit, ConstParm, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3593[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x48(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.PrimalCharacter.GetAimedActor
struct APrimalCharacter_GetAimedActor_Params
{
public:
	struct FHitResult                            OutHitResult;                                      // 0x0(0xF0)(BlueprintVisible, ExportObject, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0xF0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3598[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistanceOverride;                               // 0xF4(0x4)(Edit, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CheckRadius;                                       // 0xF8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUseCameraLocation;                           // 0xFC(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUpdateAimedActors;                           // 0xFD(0x1)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_359A[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCharacter.GenerateDeathAnim
struct APrimalCharacter_GenerateDeathAnim_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_359C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ImpactVelocity;                                    // 0x8(0x18)(Net, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	class APawn*                                 InstigatingPawn;                                   // 0x20(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.ForceUpdateCharacter
struct APrimalCharacter_ForceUpdateCharacter_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class APrimalCharacter*                      PrimalChar;                                        // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalCharacter.ForceUpdateAimedCharacters
struct APrimalCharacter_ForceUpdateAimedCharacters_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	struct FVector                               StartLoc;                                          // 0x8(0x18)(Parm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               EndLoc;                                            // 0x20(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                IgnoreActor;                                       // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceUpdateIgnoreActor;                           // 0x40(0x1)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35A3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TraceRadius;                                       // 0x44(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyRefreshRelevancyValues;                       // 0x48(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35A5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.ForceMeshRelevant
struct APrimalCharacter_ForceMeshRelevant_Params
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ForceAddUnderwaterCharacterStatusValues
struct APrimalCharacter_ForceAddUnderwaterCharacterStatusValues_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ExecSetSleeping
struct APrimalCharacter_ExecSetSleeping_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ExecSetPawnSleeping
struct APrimalCharacter_ExecSetPawnSleeping_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.EnableTurnToFaceRotation
struct APrimalCharacter_EnableTurnToFaceRotation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.EnableIK
struct APrimalCharacter_EnableIK_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceOnDedicated;                                 // 0x1(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.EnableBPTimerServer
struct APrimalCharacter_EnableBPTimerServer_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.EnableBPTimerNonDedicated
struct APrimalCharacter_EnableBPTimerNonDedicated_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.DoFindGoodSpot
struct APrimalCharacter_DoFindGoodSpot_Params
{
public:
	struct FVector                               RagdollLoc;                                        // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearCollisionSweep;                              // 0x18(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35B7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.DoCharacterDetachment
struct APrimalCharacter_DoCharacterDetachment_Params
{
public:
	bool                                         bIncludeRiding;                                    // 0x0(0x1)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeCarrying;                                  // 0x1(0x1)(Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35BA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff*                           BuffToIgnore;                                      // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.DinoMountOnMe
struct APrimalCharacter_DinoMountOnMe_Params
{
public:
	class APrimalDinoCharacter*                  DinoCharacter;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35BC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalCharacter.DidTeleport
struct APrimalCharacter_DidTeleport_Params
{
public:
	struct FVector                               NewLoc;                                            // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FRotator                              NewRot;                                            // 0x18(0x18)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bDoCameraFade;                                     // 0x30(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35C2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          CameraFadeColor;                                   // 0x34(0x10)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35C3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.DetachFromOtherCharacter
struct APrimalCharacter_DetachFromOtherCharacter_Params
{
public:
	bool                                         EnableMovementAndCollision;                        // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.DeactivateBuffs
struct APrimalCharacter_DeactivateBuffs_Params
{
public:
	class UClass*                                ForBuffClass;                                      // 0x0(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           ForInstigatorItem;                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         PerfectClassMatch;                                 // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35C6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.CreateSnapshotComponent
struct APrimalCharacter_CreateSnapshotComponent_Params
{
public:
	class AActor*                                For;                                               // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               Template;                                          // 0x8(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	class FName                                  Tag;                                               // 0x10(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  Name;                                              // 0x18(0x8)(ConstParm, Net, OutParm)
	class UActorComponent*                       ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.PrimalCharacter.ConsumeProjectileImpact
struct APrimalCharacter_ConsumeProjectileImpact_Params
{
public:
	class AShooterProjectile*                    TheProjectile;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35CF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientSyncAnimation
struct APrimalCharacter_ClientSyncAnimation_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        PlayRate;                                          // 0x8(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        ServerCurrentMontageTime;                          // 0xC(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x10(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D0[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendInTime;                                       // 0x14(0x4)(Edit, ConstParm, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_35D1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientStopAnimation
struct APrimalCharacter_ClientStopAnimation_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         bStopOnOwner;                                      // 0x8(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        BlendOutTime;                                      // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientRagdollUpdate
struct APrimalCharacter_ClientRagdollUpdate_Params
{
public:
	TArray<struct FVector_NetQuantize>           BoneLocations;                                     // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator_NetQuantize                  TargetRootRotation;                                // 0x10(0x18)(BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientPlayAnimation
struct APrimalCharacter_ClientPlayAnimation_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        PlayRate;                                          // 0x8(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0xC(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPlayOnOwner;                                      // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x15(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35D8[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientOrderedMoveTo
struct APrimalCharacter_ClientOrderedMoveTo_Params
{
public:
	struct FVector                               MoveToLoc;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.ClientOrderedAttackTarget
struct APrimalCharacter_ClientOrderedAttackTarget_Params
{
public:
	class AActor*                                AttackTarget;                                      // 0x0(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ClearRidingDinoAsPassenger
struct APrimalCharacter_ClearRidingDinoAsPassenger_Params
{
public:
	bool                                         bFromDino;                                         // 0x0(0x1)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.ClearMountedDino
struct APrimalCharacter_ClearMountedDino_Params
{
public:
	bool                                         FromMountedDino;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.ClearCarryingDino
struct APrimalCharacter_ClearCarryingDino_Params
{
public:
	bool                                         bFromDino;                                         // 0x0(0x1)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelAnyCarryBuffs;                              // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.CharacterIsCarriedAsPassenger
struct APrimalCharacter_CharacterIsCarriedAsPassenger_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.CharacterBuffsPreventFirstPerson
struct APrimalCharacter_CharacterBuffsPreventFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.CaptureCharacterSnapshot
struct APrimalCharacter_CaptureCharacterSnapshot_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.CanUseCameraSettings
struct APrimalCharacter_CanUseCameraSettings_Params
{
public:
	struct FPrimalCameraSettingsConditions       TheCameraSettingsConditions;                       // 0x0(0x2)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35DE[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      CharForConditionChecks;                            // 0x8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35DF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.CanMountOnMe
struct APrimalCharacter_CanMountOnMe_Params
{
public:
	class APrimalDinoCharacter*                  DinoCharacter;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35E3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.CanDragCharacter
struct APrimalCharacter_CanDragCharacter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         bIgnoreWeight;                                     // 0x8(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35E6[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.CameraCheckIsRunning
struct APrimalCharacter_CameraCheckIsRunning_Params
{
public:
	class APrimalCharacter*                      CharForConditionChecks;                            // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35E7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.CameraCheckIsMoving
struct APrimalCharacter_CameraCheckIsMoving_Params
{
public:
	class APrimalCharacter*                      CharForConditionChecks;                            // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35E8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.CallDrawHUD
struct APrimalCharacter_CallDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.CallDrawFloatingHUD
struct APrimalCharacter_CallDrawFloatingHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BuffsPreventInventoryAccess
struct APrimalCharacter_BuffsPreventInventoryAccess_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPSpawnAttackerDamageImpactFX
struct APrimalCharacter_BPSpawnAttackerDamageImpactFX_Params
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      VictimChar;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPSkipMovementOptimization
struct APrimalCharacter_BPSkipMovementOptimization_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPShouldLimitRightDirection
struct APrimalCharacter_BPShouldLimitRightDirection_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPShouldLimitForwardDirection
struct APrimalCharacter_BPShouldLimitForwardDirection_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.BPSetCharacterMeshesMaterialScalarParamValue
struct APrimalCharacter_BPSetCharacterMeshesMaterialScalarParamValue_Params
{
public:
	class FName                                  ParamName;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPRemovedAttachmentsForItem
struct APrimalCharacter_BPRemovedAttachmentsForItem_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPRemovedAsPassenger
struct APrimalCharacter_BPRemovedAsPassenger_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPRemoveCharacterSnapshot
struct APrimalCharacter_BPRemoveCharacterSnapshot_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class AActor*                                From;                                              // 0x8(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPreventStasis
struct APrimalCharacter_BPPreventStasis_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPreventNotifySound
struct APrimalCharacter_BPPreventNotifySound_Params
{
public:
	class USoundBase*                            SoundIn;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35F0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPreventInputType
struct APrimalCharacter_BPPreventInputType_Params
{
public:
	enum class EPrimalCharacterInputType         InputType;                                         // 0x0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPreventFirstPerson
struct APrimalCharacter_BPPreventFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPreventFallDamage
struct APrimalCharacter_BPPreventFallDamage_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	float                                        FallDamageAmount;                                  // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35F2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPPlayDying
struct APrimalCharacter_BPPlayDying_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x28(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideUseItemSlot
struct APrimalCharacter_BPOverrideUseItemSlot_Params
{
public:
	int32                                        ItemSlot;                                          // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideReleaseItemSlot
struct APrimalCharacter_BPOverrideReleaseItemSlot_Params
{
public:
	int32                                        ItemSlot;                                          // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverridePrimalCameraParams
struct APrimalCharacter_BPOverridePrimalCameraParams_Params
{
public:
	struct FPrimalCameraParams                   OutParams;                                         // 0x0(0xD8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35F6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverridePhysicsImpulses
struct APrimalCharacter_BPOverridePhysicsImpulses_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalCharacterMovement*              PrimalCharacterMovement;                           // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideJumpZModifier
struct APrimalCharacter_BPOverrideJumpZModifier_Params
{
public:
	float                                        InJumpZModifier;                                   // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideInventoryAccessInput
struct APrimalCharacter_BPOverrideInventoryAccessInput_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideHurtAnim
struct APrimalCharacter_BPOverrideHurtAnim_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35F9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsLocalPath;                                      // 0x38(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsPointDamage;                                    // 0x39(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_35FA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               PointDamageLocation;                               // 0x40(0x18)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               PointDamageHitNormal;                              // 0x58(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideHeldItemSlot
struct APrimalCharacter_BPOverrideHeldItemSlot_Params
{
public:
	int32                                        ItemSlot;                                          // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideFPVViewLocation
struct APrimalCharacter_BPOverrideFPVViewLocation_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_35FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideFlyingVelocity
struct APrimalCharacter_BPOverrideFlyingVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_35FC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideDamageCauserHitMarker
struct APrimalCharacter_BPOverrideDamageCauserHitMarker_Params
{
public:
	class AShooterPlayerController*              DamageCauserController;                            // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bHitFriendlyTarget;                                // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3601[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PreDamageHealth;                                   // 0xC(0x4)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageAmount;                                      // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3602[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x18(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bIsPointDamage;                                    // 0x38(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3603[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointDamageHitResult;                              // 0x40(0xF0)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHitMarkerSettings                    ReturnValue;                                       // 0x130(0x30)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCurrentCameraProfileId
struct APrimalCharacter_BPOverrideCurrentCameraProfileId_Params
{
public:
	class FName                                  OutProfileId;                                      // 0x0(0x8)(Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3604[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCurrentCameraProfile
struct APrimalCharacter_BPOverrideCurrentCameraProfile_Params
{
public:
	struct FPrimalCameraProfile                  OutCameraProfile;                                  // 0x0(0x1C0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3605[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCharacterSound
struct APrimalCharacter_BPOverrideCharacterSound_Params
{
public:
	class USoundBase*                            SoundIn;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCharacterParticle
struct APrimalCharacter_BPOverrideCharacterParticle_Params
{
public:
	class UParticleSystem*                       ParticleIn;                                        // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCharacterNewFallVelocity
struct APrimalCharacter_BPOverrideCharacterNewFallVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_360F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x158 (0x158 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraPivotLocationInterpParams
struct APrimalCharacter_BPOverrideCameraPivotLocationInterpParams_Params
{
public:
	struct FPrimalCameraParams                   CameraParams;                                      // 0x0(0xD8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPrimalCameraPivotZInterpOverrides    PivotZInterpOverrides;                             // 0xD8(0x34)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             LastInterpParamsX;                                 // 0x10C(0xC)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             LastInterpParamsY;                                 // 0x118(0xC)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             LastInterpParamsZ;                                 // 0x124(0xC)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             OutInterpParamsX;                                  // 0x130(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             OutInterpParamsY;                                  // 0x13C(0xC)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPrimalCameraInterpParams             OutInterpParamsZ;                                  // 0x148(0xC)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x154(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3610[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraDesiredPivotRotation
struct APrimalCharacter_BPOverrideCameraDesiredPivotRotation_Params
{
public:
	struct FRotator                              CurrentCameraPivotRotation;                        // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DesiredCameraPivotRotation;                        // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3611[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraDesiredPivotOffset
struct APrimalCharacter_BPOverrideCameraDesiredPivotOffset_Params
{
public:
	struct FPrimalCameraParams                   CameraParams;                                      // 0x0(0xD8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               DesiredCameraOffset;                               // 0xD8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3613[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraDesiredPivotLocation
struct APrimalCharacter_BPOverrideCameraDesiredPivotLocation_Params
{
public:
	struct FVector                               CurrentCameraPivotLocation;                        // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DesiredCameraPivotLocation;                        // 0x18(0x18)(Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3615[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraArmLengthInterpParams
struct APrimalCharacter_BPOverrideCameraArmLengthInterpParams_Params
{
public:
	struct FPrimalCameraParams                   CameraParams;                                      // 0x0(0xD8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPrimalCameraInterpParams             OutInterpParams;                                   // 0xD8(0xC)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xE4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3619[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOverrideCameraArmLength
struct APrimalCharacter_BPOverrideCameraArmLength_Params
{
public:
	struct FPrimalCameraParams                   CameraParams;                                      // 0x0(0xD8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CurrentCameraArmLength;                            // 0xD8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DesiredCameraArmLength;                            // 0xDC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xE0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_361A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOnMovementModeChangedNotify
struct APrimalCharacter_BPOnMovementModeChangedNotify_Params
{
public:
	enum class EMovementMode                     PrevMovementMode;                                  // 0x0(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	uint8                                        PreviousCustomMode;                                // 0x1(0x1)(ExportObject, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOnMassTeleportEvent
struct APrimalCharacter_BPOnMassTeleportEvent_Params
{
public:
	enum class EMassTeleportState                EventState;                                        // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_361E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      TeleportInitiatedByChar;                           // 0x8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOnLethalDamage
struct APrimalCharacter_BPOnLethalDamage_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3623[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bPreventDeath;                                     // 0x38(0x1)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3625[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOnAttachmentReplication
struct APrimalCharacter_BPOnAttachmentReplication_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPOnAnimPlayedNotify
struct APrimalCharacter_BPOnAnimPlayedNotify_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	float                                        InPlayRate;                                        // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0xC(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicate;                                        // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToOwner;                                 // 0x15(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x16(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x17(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyToggleHUD
struct APrimalCharacter_BPNotifyToggleHUD_Params
{
public:
	bool                                         bHUDHidden;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyLevelUp
struct APrimalCharacter_BPNotifyLevelUp_Params
{
public:
	int32                                        ExtraCharacterLevel;                               // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyInventoryItemChange
struct APrimalCharacter_BPNotifyInventoryItemChange_Params
{
public:
	bool                                         bIsItemAdd;                                        // 0x0(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_362E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           TheItem;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_362F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyDroppedItemPickedUp
struct APrimalCharacter_BPNotifyDroppedItemPickedUp_Params
{
public:
	class ADroppedItem*                          ItemPickedUp;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      PickedUpBy;                                        // 0x8(0x8)(Edit, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyBumpedPawn
struct APrimalCharacter_BPNotifyBumpedPawn_Params
{
public:
	class APrimalCharacter*                      BumpedPawn;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyBumpedByPawn
struct APrimalCharacter_BPNotifyBumpedByPawn_Params
{
public:
	class APrimalCharacter*                      ByPawn;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNotifyBPNotifyIsDamageCauserOfAddedBuff
struct APrimalCharacter_BPNotifyBPNotifyIsDamageCauserOfAddedBuff_Params
{
public:
	class APrimalBuff*                           Buff;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNewDoorInteractionDrawHUD
struct APrimalCharacter_BPNewDoorInteractionDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	struct FVector2D                             DoorDescriptionLoc;                                // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNetSetMovementMode
struct APrimalCharacter_BPNetSetMovementMode_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNetSetCharacterMovementVelocity
struct APrimalCharacter_BPNetSetCharacterMovementVelocity_Params
{
public:
	bool                                         bSetNewVelocity;                                   // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_363A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NewVelocity;                                       // 0x8(0x18)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bSetNewMovementMode;                               // 0x20(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x21(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_363B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.BPNetAddCharacterMovementImpulse
struct APrimalCharacter_BPNetAddCharacterMovementImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bVelChange;                                        // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3641[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ImpulseExponent;                                   // 0x1C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetNewMovementMode;                               // 0x20(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x21(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideMaxImpulseZ;                              // 0x22(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyToBigPawns;                                  // 0x23(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3644[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPModifyViewHitDir
struct APrimalCharacter_BPModifyViewHitDir_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InViewHitDir;                                      // 0x8(0x4)(EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCharacter.BPModifyRightDirectionInput
struct APrimalCharacter_BPModifyRightDirectionInput_Params
{
public:
	struct FVector                               DirectionInput;                                    // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPModifyFOVInterpSpeed
struct APrimalCharacter_BPModifyFOVInterpSpeed_Params
{
public:
	float                                        FOVInterpSpeedIn;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPModifyFOV
struct APrimalCharacter_BPModifyFOV_Params
{
public:
	float                                        FOVIn;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCharacter.BPModifyForwardDirectionInput
struct APrimalCharacter_BPModifyForwardDirectionInput_Params
{
public:
	struct FVector                               DirectionInput;                                    // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPLocalPossessedBy
struct APrimalCharacter_BPLocalPossessedBy_Params
{
public:
	class APlayerController*                     ByController;                                      // 0x0(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPLimitPlayerRotation
struct APrimalCharacter_BPLimitPlayerRotation_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              InViewRotation;                                    // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPIsConscious
struct APrimalCharacter_BPIsConscious_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalCharacter.BPIsBlockedByShield
struct APrimalCharacter_BPIsBlockedByShield_Params
{
public:
	struct FHitResult                            HitInfo;                                           // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               ShotDirection;                                     // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bBlockAllPointDamage;                              // 0x108(0x1)(Edit, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x109(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_365C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPIsBasedOnDynamicActor
struct APrimalCharacter_BPIsBasedOnDynamicActor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPHasPlayerController
struct APrimalCharacter_BPHasPlayerController_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPHandleRightShoulderButton
struct APrimalCharacter_BPHandleRightShoulderButton_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPHandlePoop
struct APrimalCharacter_BPHandlePoop_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPHandleLeftShoulderButton
struct APrimalCharacter_BPHandleLeftShoulderButton_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGrabDebugSnapshot
struct APrimalCharacter_BPGrabDebugSnapshot_Params
{
public:
	TArray<struct FBlueprintVisualLogEntry>      ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetStatusNameString
struct APrimalCharacter_BPGetStatusNameString_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3661[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetOverrideCameraInterpSpeed
struct APrimalCharacter_BPGetOverrideCameraInterpSpeed_Params
{
public:
	float                                        DefaultTPVCameraSpeedInterpolationMultiplier;      // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVOffsetInterpSpeed;                       // 0x4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpolationMultiplier;             // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVOffsetInterpSpeed;                              // 0xC(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetIsBuried
struct APrimalCharacter_BPGetIsBuried_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetHUDOverrideBuffProgressBarPercent
struct APrimalCharacter_BPGetHUDOverrideBuffProgressBarPercent_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetHUDElements
struct APrimalCharacter_BPGetHUDElements_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FHUDElement>                   OutElements;                                       // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetGravityZScale
struct APrimalCharacter_BPGetGravityZScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetFPVViewLocation
struct APrimalCharacter_BPGetFPVViewLocation_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetExtraMeleeDamageModifier
struct APrimalCharacter_BPGetExtraMeleeDamageModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetDebugInfoString
struct APrimalCharacter_BPGetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetArmorDurabilityDecreaseMultiplier
struct APrimalCharacter_BPGetArmorDurabilityDecreaseMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetApproachRadius
struct APrimalCharacter_BPGetApproachRadius_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BPGetAddForwardVelocityOnJump
struct APrimalCharacter_BPGetAddForwardVelocityOnJump_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BPForceUseOldASECamera
struct APrimalCharacter_BPForceUseOldASECamera_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPForceCameraStyle
struct APrimalCharacter_BPForceCameraStyle_Params
{
public:
	class APrimalCharacter*                      ForViewTarget;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ECameraStyle                      ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3669[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCheckJumpInput
struct APrimalCharacter_BPCheckJumpInput_Params
{
public:
	bool                                         bUseCustomErrorMessage;                            // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_366B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ErrorMessageToDisplay;                             // 0x8(0x10)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCanNotifyTeamAggroAI
struct APrimalCharacter_BPCanNotifyTeamAggroAI_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3670[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCanBeBaseForCharacter
struct APrimalCharacter_BPCanBeBaseForCharacter_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3676[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCanBaseOnCharacter
struct APrimalCharacter_BPCanBaseOnCharacter_Params
{
public:
	class APrimalCharacter*                      BaseCharacter;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_367D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCameraRotationFinal
struct APrimalCharacter_BPCameraRotationFinal_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              InCurrentFinalRot;                                 // 0x8(0x18)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BPCameraBaseOrientation
struct APrimalCharacter_BPCameraBaseOrientation_Params
{
public:
	class APrimalCharacter*                      ViewingCharacter;                                  // 0x0(0x8)(ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.BPApplyCharacterSnapshot
struct APrimalCharacter_BPApplyCharacterSnapshot_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class AActor*                                To;                                                // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
	struct FVector                               Offset;                                            // 0x10(0x18)(Edit, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst)
	float                                        MaxExtent;                                         // 0x28(0x4)(BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Pose;                                              // 0x2C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bCollisionOn;                                      // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3692[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_End
struct APrimalCharacter_BPAnimNotifyCustomState_End_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_Begin
struct APrimalCharacter_BPAnimNotifyCustomState_Begin_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        TotalDuration;                                     // 0x18(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_36A2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x20(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAdjustTorpidityDamage
struct APrimalCharacter_BPAdjustTorpidityDamage_Params
{
public:
	float                                        DesiredTorpidityDamage;                            // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HealthDamageAmount;                                // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DamageType;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36A7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAdjustImpulseFromDamage
struct APrimalCharacter_BPAdjustImpulseFromDamage_Params
{
public:
	struct FVector                               DesiredImpulse;                                    // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageTaken;                                       // 0x18(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x20(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 PawnInstigator;                                    // 0x40(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x48(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsPointDamage;                                    // 0x50(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B3[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointHitInfo;                                      // 0x58(0xF0)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x148(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x138 (0x138 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAdjustDamage
struct APrimalCharacter_BPAdjustDamage_Params
{
public:
	float                                        IncomingDamage;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36B8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x8(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x28(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsPointDamage;                                    // 0x38(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36BA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointHitInfo;                                      // 0x40(0xF0)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x130(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36BB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAdjustCharacterMovementImpulse
struct APrimalCharacter_BPAdjustCharacterMovementImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bVelocityChange;                                   // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_36BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MassScaleImpulseExponent;                          // 0x1C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideMaxImpulseZ;                              // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36C0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BPAddedAttachmentsForItem
struct APrimalCharacter_BPAddedAttachmentsForItem_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_ShouldDisableCameraInterpolation
struct APrimalCharacter_BP_ShouldDisableCameraInterpolation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OverrideTerminalVelocity
struct APrimalCharacter_BP_OverrideTerminalVelocity_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OverrideCameraTargetOriginLocation
struct APrimalCharacter_BP_OverrideCameraTargetOriginLocation_Params
{
public:
	struct FVector                               OutOverrideOrigin;                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  WithCameraStyle;                                   // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OnStartCarried
struct APrimalCharacter_BP_OnStartCarried_Params
{
public:
	class APrimalDinoCharacter*                  ADino;                                             // 0x0(0x8)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OnSetRunning
struct APrimalCharacter_BP_OnSetRunning_Params
{
public:
	bool                                         bNewIsRunning;                                     // 0x0(0x1)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OnPaintingComponentInitialized
struct APrimalCharacter_BP_OnPaintingComponentInitialized_Params
{
public:
	class UStructurePaintingComponent*           PaintingComp;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OnEndCarried
struct APrimalCharacter_BP_OnEndCarried_Params
{
public:
	bool                                         bFromDino;                                         // 0x0(0x1)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelAnyCarryBuffs;                              // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_OnCameraStyleChangedNotify
struct APrimalCharacter_BP_OnCameraStyleChangedNotify_Params
{
public:
	class FName                                  NewCameraStyle;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  OldCameraStyle;                                    // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PreRep
struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PreRep_Params
{
public:
	struct FVector                               ModifyClientAccel;                                 // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36D3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PostRep
struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PostRep_Params
{
public:
	struct FVector                               ModifyServerAccel;                                 // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36D7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_ModifyInputAcceleration
struct APrimalCharacter_BP_ModifyInputAcceleration_Params
{
public:
	struct FVector                               ModifyInputAccel;                                  // 0x0(0x18)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_IsCharacterHardAttached
struct APrimalCharacter_BP_IsCharacterHardAttached_Params
{
public:
	bool                                         bIgnoreRiding;                                     // 0x0(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIgnoreCarried;                                    // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_GetMaxSpeedModifier
struct APrimalCharacter_BP_GetMaxSpeedModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_ForceAllowAddBuff
struct APrimalCharacter_BP_ForceAllowAddBuff_Params
{
public:
	class UClass*                                BuffClass;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36E6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacter.BP_AnimationPreventsInput
struct APrimalCharacter_BP_AnimationPreventsInput_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacter.BlueprintAnimNotifyCustomEvent
struct APrimalCharacter_BlueprintAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotify*                           AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.AttachToOtherCharacter
struct APrimalCharacter_AttachToOtherCharacter_Params
{
public:
	class APrimalCharacter*                      CharacterToAttachTo;                               // 0x0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  InSocketName;                                      // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         EnableMovementAndCollision;                        // 0x10(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EAttachLocation                   AttachLocation;                                    // 0x11(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36EC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacter.AttachedToOtherCharacterUpdateWorldLocation
struct APrimalCharacter_AttachedToOtherCharacterUpdateWorldLocation_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacter.ApplyCustomFallDamage
struct APrimalCharacter_ApplyCustomFallDamage_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Velocity;                                          // 0x18(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FallDamageThreshold;                               // 0x30(0x4)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_36EF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacter.AllowPlayMontage
struct APrimalCharacter_AllowPlayMontage_Params
{
public:
	class UAnimMontage*                          AnimMontage;                                       // 0x0(0x8)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, GlobalConfig)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_36F0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateTribeGroupRanks
struct APrimalDinoCharacter_UpdateTribeGroupRanks_Params
{
public:
	uint8                                        NewTribeGroupPetOrderingRank;                      // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        NewTribeGroupPetRidingRank;                        // 0x1(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateNextAllowedMatingTime
struct APrimalDinoCharacter_UpdateNextAllowedMatingTime_Params
{
public:
	double                                       FromTime;                                          // 0x0(0x8)(Net, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateMateBoost
struct APrimalDinoCharacter_UpdateMateBoost_Params
{
public:
	bool                                         bForce;                                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingQuality
struct APrimalDinoCharacter_UpdateImprintingQuality_Params
{
public:
	float                                        NewImprintingQuality;                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetailsForController
struct APrimalDinoCharacter_UpdateImprintingDetailsForController_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetails
struct APrimalDinoCharacter_UpdateImprintingDetails_Params
{
public:
	class FString                                NewImprinterName;                                  // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                NewImprinterPlayerUniqueNetId;                     // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateHasBuffPreventingUploading
struct APrimalDinoCharacter_UpdateHasBuffPreventingUploading_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UpdateBabyCuddling
struct APrimalDinoCharacter_UpdateBabyCuddling_Params
{
public:
	double                                       NewBabyNextCuddleTime;                             // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        NewBabyCuddleType;                                 // 0x8(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                NewBabyCuddleFood;                                 // 0x10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UntameDino
struct APrimalDinoCharacter_UntameDino_Params
{
public:
	float                                        TamingAffinityLimit;                               // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.UnclaimDino
struct APrimalDinoCharacter_UnclaimDino_Params
{
public:
	bool                                         bDestroyAI;                                        // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.TamedProcessOrder
struct APrimalDinoCharacter_TamedProcessOrder_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDinoTamedOrder                   OrderType;                                         // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_37A1[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                EnemyTarget;                                       // 0x10(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37A2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.TameDino
struct APrimalDinoCharacter_TameDino_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreMaxTameLimit;                               // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_37A3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideTamingTeamID;                              // 0xC(0x4)(EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventNameDialog;                                // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipAddingTamedLevels;                            // 0x11(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSuppressNotifications;                            // 0x12(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A4[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.StopActiveState
struct APrimalDinoCharacter_StopActiveState_Params
{
public:
	bool                                         bShouldResetAttackIndex;                           // 0x0(0x1)(Edit, BlueprintReadOnly, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassengers
struct APrimalDinoCharacter_StartSurfaceCameraForPassengers_Params
{
public:
	float                                        Yaw;                                               // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x4(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Roll;                                              // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassenger
struct APrimalDinoCharacter_StartSurfaceCameraForPassenger_Params
{
public:
	class AShooterCharacter*                     Passenger;                                         // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        Yaw;                                               // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0xC(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Roll;                                              // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	bool                                         bInvertTurnInput;                                  // 0x14(0x1)(ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.StartLanding
struct APrimalDinoCharacter_StartLanding_Params
{
public:
	struct FVector                               OverrideLandingLocation;                           // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SpawnNewAIController
struct APrimalDinoCharacter_SpawnNewAIController_Params
{
public:
	class UClass*                                NewAIController;                                   // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UBehaviorTree*                         MissionBehaviorTreeOverride;                       // 0x8(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoDataEx
struct APrimalDinoCharacter_SpawnFromDinoDataEx_Params
{
public:
	struct FARKDinoData                          InDinoData;                                        // 0x0(0x40)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UWorld*                                InWorld;                                           // 0x40(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x48(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x60(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DupedDino;                                         // 0x78(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ForTeam;                                           // 0x7C(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bGenerateNewDinoID;                                // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              TamerController;                                   // 0x88(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x90(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoData
struct APrimalDinoCharacter_SpawnFromDinoData_Params
{
public:
	struct FARKDinoData                          InDinoData;                                        // 0x0(0x40)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UWorld*                                InWorld;                                           // 0x40(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x48(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x60(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ForTeam;                                           // 0x78(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bGenerateNewDinoID;                                // 0x7C(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37A9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              TamerController;                                   // 0x80(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x88(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SpawnedPlayerFor
struct APrimalDinoCharacter_SpawnedPlayerFor_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APawn*                                 ForPawn;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SpawnDino
struct APrimalDinoCharacter_SpawnDino_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class UClass*                                DinoClass;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               SpawnLoc;                                          // 0x10(0x18)(ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRot;                                          // 0x28(0x18)(Edit, ConstParm, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        LevelMultiplier;                                   // 0x40(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ExtraLevelOffset;                                  // 0x44(0x4)(Edit, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         AddLevelOffsetBeforeMultiplier;                    // 0x48(0x1)(Edit, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideBaseNPCLevel;                             // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37AE[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        BaseLevelOverrideValue;                            // 0x4C(0x4)(Edit, ExportObject, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bNPCDontWander;                                    // 0x50(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37AF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NPCAIRangeMultiplier;                              // 0x54(0x4)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NPCAbsoluteBaseLevel;                              // 0x58(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSpawnWithoutCapsuleOffset;                        // 0x5C(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ShouldGender;                                      // 0x5D(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         MakeFemale;                                        // 0x5E(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37B0[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x60(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ShouldForceFlee
struct APrimalDinoCharacter_ShouldForceFlee_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ShouldEnableIKBasedOn
struct APrimalDinoCharacter_ShouldEnableIKBasedOn_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ShouldDisableBasedCharactersCameraInterpolation
struct APrimalDinoCharacter_ShouldDisableBasedCharactersCameraInterpolation_Params
{
public:
	class APrimalCharacter*                      ForBasedChar;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37B3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ShouldDealDamage
struct APrimalDinoCharacter_ShouldDealDamage_Params
{
public:
	class AActor*                                TestActor;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37B5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ShouldAttackOfPlayedAnimationStopMovement
struct APrimalDinoCharacter_ShouldAttackOfPlayedAnimationStopMovement_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetupAsWildFollowerOfOtherDino
struct APrimalDinoCharacter_SetupAsWildFollowerOfOtherDino_Params
{
public:
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37B8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetupAsWildBabyOfSingleParent
struct APrimalDinoCharacter_SetupAsWildBabyOfSingleParent_Params
{
public:
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DesiredAgeMin;                                     // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DesiredAgeMax;                                     // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37BA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetTurretModeMovementRestrictions
struct APrimalDinoCharacter_SetTurretModeMovementRestrictions_Params
{
public:
	bool                                         Enabled;                                           // 0x0(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         bAlsoSetTurretMode;                                // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetTurretMode
struct APrimalDinoCharacter_SetTurretMode_Params
{
public:
	bool                                         Enabled;                                           // 0x0(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetState
struct APrimalDinoCharacter_SetState_Params
{
public:
	class UPrimalAIState*                        State;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetStasisComponentRadius
struct APrimalDinoCharacter_SetStasisComponentRadius_Params
{
public:
	float                                        StasisOverrideRadius;                              // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetRider
struct APrimalDinoCharacter_SetRider_Params
{
public:
	class AShooterCharacter*                     ARider;                                            // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetPreventSaving
struct APrimalDinoCharacter_SetPreventSaving_Params
{
public:
	bool                                         FPreventSaving;                                    // 0x0(0x1)(ConstParm, ExportObject, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetNextAllowedMatingTime
struct APrimalDinoCharacter_SetNextAllowedMatingTime_Params
{
public:
	double                                       NextAllowedMatingTime;                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetMovementAccelerationVector
struct APrimalDinoCharacter_SetMovementAccelerationVector_Params
{
public:
	struct FVector                               FVector;                                           // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetLeftDynamicActorBaseTime
struct APrimalDinoCharacter_SetLeftDynamicActorBaseTime_Params
{
public:
	double                                       NewLeftDynamicActorBaseTime;                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetLastMovementDesiredRotation
struct APrimalDinoCharacter_SetLastMovementDesiredRotation_Params
{
public:
	struct FRotator                              InRotation;                                        // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetLastAttackTimeForAttack
struct APrimalDinoCharacter_SetLastAttackTimeForAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37BB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       NewTime;                                           // 0x8(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetImprintPlayer
struct APrimalDinoCharacter_SetImprintPlayer_Params
{
public:
	class AShooterCharacter*                     ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetGestationData
struct APrimalDinoCharacter_SetGestationData_Params
{
public:
	struct FUnreplicatedEggData                  GestationData;                                     // 0x0(0x68)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetForceDisableClientGravitySim
struct APrimalDinoCharacter_SetForceDisableClientGravitySim_Params
{
public:
	bool                                         bForceDisable;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetFlight
struct APrimalDinoCharacter_SetFlight_Params
{
public:
	bool                                         bFly;                                              // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelForceLand;                                  // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SkipAnimsPreventInputCheck;                        // 0x2(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetFCustomTrackedDinoInfoMembersByDinoRef
struct APrimalDinoCharacter_SetFCustomTrackedDinoInfoMembersByDinoRef_Params
{
public:
	bool                                         Isfavorited;                                       // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTrackedWaypoint;                                // 0x1(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsValidForCurrentFilter;                          // 0x2(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_37C5[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ByPlayerTargetingTeam;                             // 0x4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FCustomTrackedActorInfo               ReturnValue;                                       // 0x8(0xE0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetCurrentAttackIndex
struct APrimalDinoCharacter_SetCurrentAttackIndex_Params
{
public:
	uint8                                        Index;                                             // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetColorizationData
struct APrimalDinoCharacter_SetColorizationData_Params
{
public:
	TArray<uint8>                                ColorData;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetCharacterStatusTameable
struct APrimalDinoCharacter_SetCharacterStatusTameable_Params
{
public:
	bool                                         bSetTameable;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCreateInventory;                                  // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInventoryForWakingTame;                           // 0x2(0x1)(Edit, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetBabyAge
struct APrimalDinoCharacter_SetBabyAge_Params
{
public:
	float                                        TheAge;                                            // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetAnimWeightsForAttackAtIndex
struct APrimalDinoCharacter_SetAnimWeightsForAttackAtIndex_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37C6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<float>                                NewWeights;                                        // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.SetAllowedPaintingColorRegion
struct APrimalDinoCharacter_SetAllowedPaintingColorRegion_Params
{
public:
	int32                                        RegionIndex;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsAllowed;                                        // 0x4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37C7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerUpdateAttackTargets
struct APrimalDinoCharacter_ServerUpdateAttackTargets_Params
{
public:
	class AActor*                                AttackTarget;                                      // 0x0(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               AttackLocation;                                    // 0x8(0x18)(Edit, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerToClientsPlayAttackAnimation
struct APrimalDinoCharacter_ServerToClientsPlayAttackAnimation_Params
{
public:
	int8                                         AttackinfoIndex;                                   // 0x0(0x1)(ExportObject, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int8                                         AnimationIndex;                                    // 0x1(0x1)(Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37CC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InPlayRate;                                        // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0x8(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x10(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x11(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37CE[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                MyTarget;                                          // 0x18(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerSetRiderMountedWeaponRotationYawPitch
struct APrimalDinoCharacter_ServerSetRiderMountedWeaponRotationYawPitch_Params
{
public:
	float                                        InValYaw;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InValPitch;                                        // 0x4(0x4)(BlueprintReadOnly, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerRequestBraking
struct APrimalDinoCharacter_ServerRequestBraking_Params
{
public:
	bool                                         bWantsToBrake;                                     // 0x0(0x1)(ExportObject, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerRequestAttack
struct APrimalDinoCharacter_ServerRequestAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ServerClearRider
struct APrimalDinoCharacter_ServerClearRider_Params
{
public:
	int32                                        OverrideUnboardDirection;                          // 0x0(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RidingTick
struct APrimalDinoCharacter_RidingTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RequestTerminateEmbryo
struct APrimalDinoCharacter_RequestTerminateEmbryo_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RequestDisplayEmbryoData
struct APrimalDinoCharacter_RequestDisplayEmbryoData_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bEnable;                                           // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_37D6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RemovePassenger
struct APrimalDinoCharacter_RemovePassenger_Params
{
public:
	class APrimalCharacter*                      ACharacter;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromCharacter;                                    // 0x8(0x1)(Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromPlayerController;                             // 0x9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RemoveFromMeleeSwingHurtList
struct APrimalDinoCharacter_RemoveFromMeleeSwingHurtList_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.RefreshColorization
struct APrimalDinoCharacter_RefreshColorization_Params
{
public:
	bool                                         bForceRefresh;                                     // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ProcessOrderMoveTo
struct APrimalDinoCharacter_ProcessOrderMoveTo_Params
{
public:
	struct FVector                               MoveToLoc;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearFollowTargets;                               // 0x18(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37D9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ProcessOrderFollowTarget
struct APrimalDinoCharacter_ProcessOrderFollowTarget_Params
{
public:
	class AActor*                                TheTarget;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearFollowTargets;                               // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37DA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ProcessOrderAttackTarget
struct APrimalDinoCharacter_ProcessOrderAttackTarget_Params
{
public:
	class AActor*                                TheTarget;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bClearFollowTargets;                               // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37DC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.PreventShowingDinoTooltip
struct APrimalDinoCharacter_PreventShowingDinoTooltip_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.PlayedAnimationHasAttack
struct APrimalDinoCharacter_PlayedAnimationHasAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OverrideRandomWanderLocation
struct APrimalDinoCharacter_OverrideRandomWanderLocation_Params
{
public:
	struct FVector                               OriginalDestination;                               // 0x0(0x18)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               InVec;                                             // 0x18(0x18)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OverrideFinalWanderLocation
struct APrimalDinoCharacter_OverrideFinalWanderLocation_Params
{
public:
	struct FVector                               OutVec;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37DE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OverrideBasedCharactersCameraInterpSpeed
struct APrimalDinoCharacter_OverrideBasedCharactersCameraInterpSpeed_Params
{
public:
	class APrimalCharacter*                      ForBasedChar;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVCameraSpeedInterpMultiplier;             // 0x8(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVOffsetInterpSpeed;                       // 0xC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpMultiplier;                    // 0x10(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVOffsetInterpSpeed;                              // 0x14(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OnVoiceTalkingStateChanged
struct APrimalDinoCharacter_OnVoiceTalkingStateChanged_Params
{
public:
	bool                                         IsTalking;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsMuted;                                           // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OnUpdateMountedDinoMeshHiding
struct APrimalDinoCharacter_OnUpdateMountedDinoMeshHiding_Params
{
public:
	bool                                         bShouldBeVisible;                                  // 0x0(0x1)(Edit, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OnUncryo
struct APrimalDinoCharacter_OnUncryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OnSpawnedForItem
struct APrimalDinoCharacter_OnSpawnedForItem_Params
{
public:
	class UPrimalItem*                           ForItem;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.OnCryo
struct APrimalDinoCharacter_OnCryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoOwnerData
struct APrimalDinoCharacter_NetUpdateDinoOwnerData_Params
{
public:
	class FString                                NewOwningPlayerName;                               // 0x0(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewOwningPlayerID;                                 // 0x10(0x4)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37EC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoNameStrings
struct APrimalDinoCharacter_NetUpdateDinoNameStrings_Params
{
public:
	class FString                                NewTamerString;                                    // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                NewTamedName;                                      // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MultiSetAttachedStructurePickupAllowedBeforeNetworkTime
struct APrimalDinoCharacter_MultiSetAttachedStructurePickupAllowedBeforeNetworkTime_Params
{
public:
	double                                       NewTime;                                           // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalStructure*                      Structure;                                         // 0x8(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MulticastUpdateAllColorSets
struct APrimalDinoCharacter_MulticastUpdateAllColorSets_Params
{
public:
	int32                                        Color0;                                            // 0x0(0x4)(Edit, ConstParm, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        Color1;                                            // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        Color2;                                            // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        Color3;                                            // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        Color4;                                            // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        Color5;                                            // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.Multi_OnCryo
struct APrimalDinoCharacter_Multi_OnCryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_UpdateCreatureStatusRegardingSoftTameLimitDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_UpdateCreatureStatusRegardingSoftTameLimitDestruction_Params
{
public:
	bool                                         DecrementTimeInStasis;                             // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37EE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DeltaSeconds;                                      // 0x4(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         IsTheInitialGamemodeSearch;                        // 0x8(0x1)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_37EF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyUnMarkedFromDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyUnMarkedFromDestruction_Params
{
public:
	bool                                         AlreadyMarked;                                     // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyMarkedForDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_ShouldCreatureBeNewlyMarkedForDestruction_Params
{
public:
	bool                                         AlreadyMarked;                                     // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_ShouldCreatureBeCountedTowardsSoftTameLimit
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_ShouldCreatureBeCountedTowardsSoftTameLimit_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_SetMaxTamedDinos_SoftTameLimit_MarkedForDeletionTime_To_CachedValue
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_SetMaxTamedDinos_SoftTameLimit_MarkedForDeletionTime_To_CachedValue_Params
{
public:
	bool                                         ForceUpdate;                                       // 0x0(0x1)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_IsCreatureMarkedForDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_IsCreatureMarkedForDestruction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_IsCreatureDestructionCountdownActive
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_IsCreatureDestructionCountdownActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_IsCreatureAbleToBeMarkedForDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_IsCreatureAbleToBeMarkedForDestruction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_FreshlyUnsetCreatureMarkedForSoftTameLimitDestruction_IfApplicable
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_FreshlyUnsetCreatureMarkedForSoftTameLimitDestruction_IfApplicable_Params
{
public:
	bool                                         AlreadyMarked;                                     // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.MaxTamedDinos_SoftTameLimit_FreshlySetCreatureMarkedForSoftTameLimitDestruction
struct APrimalDinoCharacter_MaxTamedDinos_SoftTameLimit_FreshlySetCreatureMarkedForSoftTameLimitDestruction_Params
{
public:
	bool                                         AlreadyMarked;                                     // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.LowerDinoBP
struct APrimalDinoCharacter_LowerDinoBP_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsWildFollowingParentValid
struct APrimalDinoCharacter_IsWildFollowingParentValid_Params
{
public:
	class APrimalDinoCharacter*                  FollowingParent;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37F4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsWildFollowerOtherwiseValidAndLiving
struct APrimalDinoCharacter_IsWildFollowerOtherwiseValidAndLiving_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsWakingTame
struct APrimalDinoCharacter_IsWakingTame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsVoiceTalking
struct APrimalDinoCharacter_IsVoiceTalking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsPassengerSeatAvailable
struct APrimalDinoCharacter_IsPassengerSeatAvailable_Params
{
public:
	int32                                        PassengerSeatIndex;                                // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37F6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsMissionDino
struct APrimalDinoCharacter_IsMissionDino_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsInTekShield
struct APrimalDinoCharacter_IsInTekShield_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsInFlyerPreventionVolume
struct APrimalDinoCharacter_IsInFlyerPreventionVolume_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsImprintPlayer
struct APrimalDinoCharacter_IsImprintPlayer_Params
{
public:
	class AShooterCharacter*                     ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37F9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsFleeing
struct APrimalDinoCharacter_IsFleeing_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsCurrentlyPlayingAttackAnimation
struct APrimalDinoCharacter_IsCurrentlyPlayingAttackAnimation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsCurrentAttackStopsMovement
struct APrimalDinoCharacter_IsCurrentAttackStopsMovement_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsAWildFollowerKnownServerside
struct APrimalDinoCharacter_IsAWildFollowerKnownServerside_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsAttacking
struct APrimalDinoCharacter_IsAttacking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsAllowedToTransfer
struct APrimalDinoCharacter_IsAllowedToTransfer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.IsAllowedToMate
struct APrimalDinoCharacter_IsAllowedToMate_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.InterceptRiderEmoteAnim
struct APrimalDinoCharacter_InterceptRiderEmoteAnim_Params
{
public:
	class UAnimMontage*                          EmoteAnim;                                         // 0x0(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_37FF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.InterceptMountedOnPlayerEmoteAnim
struct APrimalDinoCharacter_InterceptMountedOnPlayerEmoteAnim_Params
{
public:
	class UAnimMontage*                          EmoteAnim;                                         // 0x0(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3800[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ImprintOnPlayerTarget
struct APrimalDinoCharacter_ImprintOnPlayerTarget_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreMaxTameLimit;                               // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3801[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HasTarget
struct APrimalDinoCharacter_HasTarget_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HasSelfBuried
struct APrimalDinoCharacter_HasSelfBuried_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HasOfflineRider
struct APrimalDinoCharacter_HasOfflineRider_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingFlight
struct APrimalDinoCharacter_HasBuffPreventingFlight_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingClearRiderOnDinoImmobilized
struct APrimalDinoCharacter_HasBuffPreventingClearRiderOnDinoImmobilized_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.HandleMountedDinoAction
struct APrimalDinoCharacter_HandleMountedDinoAction_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GiveSaddleFromString
struct APrimalDinoCharacter_GiveSaddleFromString_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        Quality;                                           // 0x10(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinRandomQuality;                                  // 0x14(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAutoEquip;                                        // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3804[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GiveSaddle
struct APrimalDinoCharacter_GiveSaddle_Params
{
public:
	class UClass*                                SaddleType;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Quality;                                           // 0x8(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MinRandomQuality;                                  // 0xC(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAutoEquip;                                        // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3805[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetZoomMinValue
struct APrimalDinoCharacter_GetZoomMinValue_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetZoomMaxValue
struct APrimalDinoCharacter_GetZoomMaxValue_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetWiegthedAttack
struct APrimalDinoCharacter_GetWiegthedAttack_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x4(0x4)(Edit, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OtherTarget;                                       // 0x8(0x8)(ConstParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3806[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetUsesColorizationRegion
struct APrimalDinoCharacter_GetUsesColorizationRegion_Params
{
public:
	int32                                        RegionIndex;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3807[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetUntamedTargetingTeam
struct APrimalDinoCharacter_GetUntamedTargetingTeam_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetTamedLandTarget
struct APrimalDinoCharacter_GetTamedLandTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetTamedFollowTarget
struct APrimalDinoCharacter_GetTamedFollowTarget_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetStateOfPlayedAnimationAttack
struct APrimalDinoCharacter_GetStateOfPlayedAnimationAttack_Params
{
public:
	class UPrimalAIState*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSocketLocationTemp
struct APrimalDinoCharacter_GetSocketLocationTemp_Params
{
public:
	class FName                                  SocketName;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSocketForMeleeTraceForHitBlockers
struct APrimalDinoCharacter_GetSocketForMeleeTraceForHitBlockers_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x4(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSeatIndexForPassenger
struct APrimalDinoCharacter_GetSeatIndexForPassenger_Params
{
public:
	class APrimalCharacter*                      PassengerChar;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3809[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponents
struct APrimalDinoCharacter_GetSaddleMeshComponents_Params
{
public:
	TArray<class UMeshComponent*>                OutMeshes;                                         // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponent
struct APrimalDinoCharacter_GetSaddleMeshComponent_Params
{
public:
	class USkeletalMeshComponent*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetSaddleActorComponents
struct APrimalDinoCharacter_GetSaddleActorComponents_Params
{
public:
	TArray<class UActorComponent*>               OutMeshes;                                         // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetRootYawSpeed
struct APrimalDinoCharacter_GetRootYawSpeed_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnRotation
struct APrimalDinoCharacter_GetPlayerSpawnRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnLocation
struct APrimalDinoCharacter_GetPlayerSpawnLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPassengersSeatIndex
struct APrimalDinoCharacter_GetPassengersSeatIndex_Params
{
public:
	class APrimalCharacter*                      Passenger;                                         // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_380D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPassengersAndSeatIndexes
struct APrimalDinoCharacter_GetPassengersAndSeatIndexes_Params
{
public:
	TArray<class APrimalCharacter*>              Passengers;                                        // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<int32>                                Indexes;                                           // 0x10(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPassengers
struct APrimalDinoCharacter_GetPassengers_Params
{
public:
	TArray<class APrimalCharacter*>              ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetPassengerPerSeat
struct APrimalDinoCharacter_GetPassengerPerSeat_Params
{
public:
	int32                                        SeatIndex;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3812[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetNumPassengerSeats
struct APrimalDinoCharacter_GetNumPassengerSeats_Params
{
public:
	bool                                         bOnlyManualPassengerSeats;                         // 0x0(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3816[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetNumAvailablePassengerSeats
struct APrimalDinoCharacter_GetNumAvailablePassengerSeats_Params
{
public:
	bool                                         bOnlyManualPassengerSeats;                         // 0x0(0x1)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3817[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetLastStartedTalkingTime
struct APrimalDinoCharacter_GetLastStartedTalkingTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetLandingLocation
struct APrimalDinoCharacter_GetLandingLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetGestationTimeRemaining
struct APrimalDinoCharacter_GetGestationTimeRemaining_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetGestationData
struct APrimalDinoCharacter_GetGestationData_Params
{
public:
	struct FUnreplicatedEggData                  GestationData;                                     // 0x0(0x68)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetForceTickPose
struct APrimalDinoCharacter_GetForceTickPose_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetFoodItemEffectivenessMultipliersIndex
struct APrimalDinoCharacter_GetFoodItemEffectivenessMultipliersIndex_Params
{
public:
	class UPrimalItem*                           FoodItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_381A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetFirstValidWildFollowingParentRef
struct APrimalDinoCharacter_GetFirstValidWildFollowingParentRef_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetFirstAffinityFoodItemClass
struct APrimalDinoCharacter_GetFirstAffinityFoodItemClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoVelocity
struct APrimalDinoCharacter_GetDinoVelocity_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoTameSound
struct APrimalDinoCharacter_GetDinoTameSound_Params
{
public:
	class USoundBase*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoPlatformCollisionIgnoreActors
struct APrimalDinoCharacter_GetDinoPlatformCollisionIgnoreActors_Params
{
public:
	TArray<class AActor*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoLevelUpAnimation
struct APrimalDinoCharacter_GetDinoLevelUpAnimation_Params
{
public:
	class UAnimMontage*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoIDsAsStrings
struct APrimalDinoCharacter_GetDinoIDsAsStrings_Params
{
public:
	class FString                                OutDinoID1;                                        // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                OutDinoID2;                                        // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoIDs
struct APrimalDinoCharacter_GetDinoIDs_Params
{
public:
	int32                                        OutDinoID1;                                        // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OutDinoID2;                                        // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoEntryIcon
struct APrimalDinoCharacter_GetDinoEntryIcon_Params
{
public:
	class UTexture*                              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoDescriptiveName
struct APrimalDinoCharacter_GetDinoDescriptiveName_Params
{
public:
	bool                                         IgnoreArticle;                                     // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IncludeDetails;                                    // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3829[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoDeathTime
struct APrimalDinoCharacter_GetDinoDeathTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoData
struct APrimalDinoCharacter_GetDinoData_Params
{
public:
	struct FARKDinoData                          OutDinoData;                                       // 0x0(0x40)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDinoColor
struct APrimalDinoCharacter_GetDinoColor_Params
{
public:
	int32                                        ColorRegionIndex;                                  // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetDesiredNavmeshGenerationRadiusName
struct APrimalDinoCharacter_GetDesiredNavmeshGenerationRadiusName_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetCurrentDinoName
struct APrimalDinoCharacter_GetCurrentDinoName_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetCurrentAttackInfo
struct APrimalDinoCharacter_GetCurrentAttackInfo_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_382A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDinoAttackInfo                       AttackInfo;                                        // 0x8(0x150)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x158(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_382B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetCurrentAttackIndexForInput
struct APrimalDinoCharacter_GetCurrentAttackIndexForInput_Params
{
public:
	enum class EDinoInputAction                  Input;                                             // 0x0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor)
	uint8                                        Pad_382C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetCurrentAimOffsetsRotation
struct APrimalDinoCharacter_GetCurrentAimOffsetsRotation_Params
{
public:
	struct FRotator                              ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetColorSetNamesAsArray
struct APrimalDinoCharacter_GetColorSetNamesAsArray_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetColorSetInidcesAsString
struct APrimalDinoCharacter_GetColorSetInidcesAsString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetColorizationData
struct APrimalDinoCharacter_GetColorizationData_Params
{
public:
	TArray<uint8>                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetColorForColorizationRegion
struct APrimalDinoCharacter_GetColorForColorizationRegion_Params
{
public:
	int32                                        Region;                                            // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ColorIndexOverride;                                // 0x4(0x4)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetCanMutateStat
struct APrimalDinoCharacter_GetCanMutateStat_Params
{
public:
	int32                                        StatTypeIndex;                                     // 0x0(0x4)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_382E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetBedFilterClass
struct APrimalDinoCharacter_GetBedFilterClass_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetBabyScale
struct APrimalDinoCharacter_GetBabyScale_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetBabyCuddleInterval
struct APrimalDinoCharacter_GetBabyCuddleInterval_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetBabyCuddleFood
struct APrimalDinoCharacter_GetBabyCuddleFood_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAllowedPaintingColorRegion
struct APrimalDinoCharacter_GetAllowedPaintingColorRegion_Params
{
public:
	int32                                        RegionIndex;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_382F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAllAttachedExplosives
struct APrimalDinoCharacter_GetAllAttachedExplosives_Params
{
public:
	bool                                         bInlcudeAttachedChars;                             // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3830[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalStructureExplosive*>     ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAimOffsetsTransform
struct APrimalDinoCharacter_GetAimOffsetsTransform_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3832[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RootRotOffsetTransform;                            // 0x10(0x60)(ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TheRootYawSpeed;                                   // 0x70(0x4)(Edit, BlueprintVisible, ExportObject, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxYawAimClamp;                                    // 0x74(0x4)(Edit, BlueprintVisible, Net, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               RootLocOffset;                                     // 0x78(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInterpolationStep;                                // 0x90(0x1)(Edit, ConstParm, BlueprintReadOnly, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3833[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x98(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceOffset
struct APrimalDinoCharacter_GetAIFollowStoppingDistanceOffset_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceMultiplier
struct APrimalDinoCharacter_GetAIFollowStoppingDistanceMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetAffinityIncreaseForFoodItem
struct APrimalDinoCharacter_GetAffinityIncreaseForFoodItem_Params
{
public:
	class UPrimalItem*                           FoodItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3836[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetActorCenterTraceLocation
struct APrimalDinoCharacter_GetActorCenterTraceLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.GetActiveState
struct APrimalDinoCharacter_GetActiveState_Params
{
public:
	class UPrimalAIState*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ForceUpdateColorSets
struct APrimalDinoCharacter_ForceUpdateColorSets_Params
{
public:
	int32                                        ColorRegion;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ColorSet;                                          // 0x4(0x4)(ConstParm, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ForceSetTamedAggressionLevel
struct APrimalDinoCharacter_ForceSetTamedAggressionLevel_Params
{
public:
	int32                                        AggressionLevel;                                   // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.FireProjectile
struct APrimalDinoCharacter_FireProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bScaleProjDamageByDinoDamage;                      // 0x30(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_383A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectilesEx
struct APrimalDinoCharacter_FireMultipleProjectilesEx_Params
{
public:
	class UClass*                                ProjectileClass;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVector>                       Locations;                                         // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVector>                       Directions;                                        // 0x18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAddPawnVelocityToProjectile;                      // 0x28(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bScaleProjDamageByDinoDamage;                      // 0x29(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_383B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       HomingTarget;                                      // 0x30(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               HomingTargetOffset;                                // 0x38(0x18)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideInitialSpeed;                              // 0x50(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_383C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectiles
struct APrimalDinoCharacter_FireMultipleProjectiles_Params
{
public:
	TArray<struct FVector>                       Locations;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVector>                       Directions;                                        // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bScaleProjectileDamageByDinoDamage;                // 0x20(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_383E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.EndCharging
struct APrimalDinoCharacter_EndCharging_Params
{
public:
	bool                                         bForce;                                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ElevateDinoBP
struct APrimalDinoCharacter_ElevateDinoBP_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DoOverrideMountedAirControl
struct APrimalDinoCharacter_DoOverrideMountedAirControl_Params
{
public:
	float                                        AirControlIn;                                      // 0x0(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DoMate
struct APrimalDinoCharacter_DoMate_Params
{
public:
	class APrimalDinoCharacter*                  WithMate;                                          // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DoesUseHibernation
struct APrimalDinoCharacter_DoesUseHibernation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DoAttack
struct APrimalDinoCharacter_DoAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetCurrentAttack;                                 // 0x4(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bInterruptCurrentAttack;                           // 0x5(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x6(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3845[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DinoShoulderMountedLaunch
struct APrimalDinoCharacter_DinoShoulderMountedLaunch_Params
{
public:
	struct FVector                               LaunchDir;                                         // 0x0(0x18)(Edit, Net, ZeroConstructor, SubobjectReference)
	class AShooterCharacter*                     ThrowingCharacter;                                 // 0x18(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.DinoFireProjectileEx
struct APrimalDinoCharacter_DinoFireProjectileEx_Params
{
public:
	class UClass*                                ProjectileClass;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bScaleProjDamageByDinoDamage;                      // 0x38(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAddDinoVelocityToProjectile;                      // 0x39(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3846[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideInitialSpeed;                              // 0x3C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideMaxSpeed;                                  // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExtraDirectDamageMultiplier;                       // 0x44(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExtraExplosionDamageMultiplier;                    // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SpawnOnOwningClient;                               // 0x4C(0x1)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3847[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.Die
struct APrimalDinoCharacter_Die_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_384C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           Killer;                                            // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_384D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CycleAttackWeightsForAttackAtIndex
struct APrimalDinoCharacter_CycleAttackWeightsForAttackAtIndex_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CreateCloneFertilizedEgg
struct APrimalDinoCharacter_CreateCloneFertilizedEgg_Params
{
public:
	struct FVector                               AtLoc;                                             // 0x0(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRot;                                             // 0x18(0x18)(Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                DroppedItemTemplateOverride;                       // 0x30(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NumMutationsToAdd;                                 // 0x38(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3851[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ADroppedItem*                          ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CreateBabyDino
struct APrimalDinoCharacter_CreateBabyDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CopySettingsToOtherDino
struct APrimalDinoCharacter_CopySettingsToOtherDino_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalDinoCharacter*                  FromDino;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  OtherDino;                                         // 0x10(0x8)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SettingTypeUseIndex;                               // 0x18(0x4)(Edit, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3858[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CopyPaintingComponentFrom
struct APrimalDinoCharacter_CopyPaintingComponentFrom_Params
{
public:
	class APrimalDinoCharacter*                  Other;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ClientStartLanding
struct APrimalDinoCharacter_ClientStartLanding_Params
{
public:
	struct FVector                               LandingLoc;                                        // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ClearRider
struct APrimalDinoCharacter_ClearRider_Params
{
public:
	bool                                         bFromRider;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelForceLand;                                  // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SpawnDinoDefaultController;                        // 0x2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_385D[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideUnboardDirection;                          // 0x4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEvenIfBuffPreventsClear;                     // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromUse;                                          // 0x9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_385E[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ClearMountCharacter
struct APrimalDinoCharacter_ClearMountCharacter_Params
{
public:
	bool                                         bFromMountCharacter;                               // 0x0(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.ClearCarriedCharacter
struct APrimalDinoCharacter_ClearCarriedCharacter_Params
{
public:
	bool                                         FromCarriedCharacter;                              // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelAnyCarryBuffs;                              // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CheckForTamedFoodConsumption
struct APrimalDinoCharacter_CheckForTamedFoodConsumption_Params
{
public:
	int32                                        Steps;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CheckDinoDuped
struct APrimalDinoCharacter_CheckDinoDuped_Params
{
public:
	bool                                         UpedDino;                                          // 0x0(0x1)(Edit, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CheatAction
struct APrimalDinoCharacter_CheatAction_Params
{
public:
	class FString                                Action;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CarryCharacter
struct APrimalDinoCharacter_CarryCharacter_Params
{
public:
	class APrimalCharacter*                      ARider;                                            // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         byPassCanCarryCheck;                               // 0x8(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3866[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanTakePassenger
struct APrimalDinoCharacter_CanTakePassenger_Params
{
public:
	class APrimalCharacter*                      ACharacter;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PassengerSeatIndex;                                // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForcePassenger;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyersAndWaterDinos;                         // 0xD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipLineTrace;                                    // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanSkipAnimGraph
struct APrimalDinoCharacter_CanSkipAnimGraph_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanOrder
struct APrimalDinoCharacter_CanOrder_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bBuildingStructures;                               // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_386C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanNurseDino
struct APrimalDinoCharacter_CanNurseDino_Params
{
public:
	class APrimalDinoCharacter*                  OtherDino;                                         // 0x0(0x8)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_386E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanMount
struct APrimalDinoCharacter_CanMount_Params
{
public:
	class APrimalCharacter*                      ACharacter;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3870[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanFly
struct APrimalDinoCharacter_CanFly_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanDinoAttackTargetsWithoutRider
struct APrimalDinoCharacter_CanDinoAttackTargetsWithoutRider_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanCryo
struct APrimalDinoCharacter_CanCryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3874[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanClearRider
struct APrimalDinoCharacter_CanClearRider_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CancelCurrentAttack
struct APrimalDinoCharacter_CancelCurrentAttack_Params
{
public:
	bool                                         bStopCurrentAttackAnim;                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3875[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AttackAnimBlendOutTime;                            // 0x4(0x4)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3876[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanCarryCharacter
struct APrimalDinoCharacter_CanCarryCharacter_Params
{
public:
	class APrimalCharacter*                      CanCarryPawn;                                      // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3878[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.CanAttack
struct APrimalDinoCharacter_CanAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_387A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BrakeDinoBP
struct APrimalDinoCharacter_BrakeDinoBP_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPUntamedConsumeFoodItem
struct APrimalDinoCharacter_BPUntamedConsumeFoodItem_Params
{
public:
	class UPrimalItem*                           FoodItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPUnstasisConsumeFood
struct APrimalDinoCharacter_BPUnstasisConsumeFood_Params
{
public:
	float                                        FoodNeeded;                                        // 0x0(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPTamedConsumeFoodItem
struct APrimalDinoCharacter_BPTamedConsumeFoodItem_Params
{
public:
	class UPrimalItem*                           FoodItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDinoNoAncestors
struct APrimalDinoCharacter_BPStaticCreateBabyDinoNoAncestors_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	class UClass*                                EggDinoClassToSpawn;                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TheGroundLoc;                                      // 0x10(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ActorRotationYaw;                                  // 0x28(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_387D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                EggColorSetIndices;                                // 0x30(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<uint8>                                EggNumberOfLevelUpPointsApplied;                   // 0x40(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<uint8>                                EggMutationsApplied;                               // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggTamedIneffectivenessModifier;                   // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        NotifyTeamOverride;                                // 0x64(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EggRandomMutationsFemale;                          // 0x68(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsMale;                            // 0x6C(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, SubobjectReference)
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x70(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDino
struct APrimalDinoCharacter_BPStaticCreateBabyDino_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	class UClass*                                EggDinoClassToSpawn;                               // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TheGroundLoc;                                      // 0x10(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ActorRotationYaw;                                  // 0x28(0x4)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_387F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                EggColorSetIndices;                                // 0x30(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<uint8>                                EggNumberOfLevelUpPointsApplied;                   // 0x40(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<uint8>                                EggMutationsApplied;                               // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EggTamedIneffectivenessModifier;                   // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3882[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestors;                                  // 0x68(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           EggDinoAncestorsMale;                              // 0x78(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        NotifyTeamOverride;                                // 0x88(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        EggRandomMutationsFemale;                          // 0x8C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        EggRandomMutationsMale;                            // 0x90(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        EggGenderOverride;                                 // 0x94(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, GlobalConfig, SubobjectReference)
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x98(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPShowTamingPanel
struct APrimalDinoCharacter_BPShowTamingPanel_Params
{
public:
	bool                                         CurrentVisibility;                                 // 0x0(0x1)(Edit, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPShouldForceFlee
struct APrimalDinoCharacter_BPShouldForceFlee_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPShouldDinoBeTracked
struct APrimalDinoCharacter_BPShouldDinoBeTracked_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Handled;                                           // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_388E[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPShouldCancelDoAttack
struct APrimalDinoCharacter_BPShouldCancelDoAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3892[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPSetupTamed
struct APrimalDinoCharacter_BPSetupTamed_Params
{
public:
	bool                                         bWasJustTamed;                                     // 0x0(0x1)(Edit, ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPSetSimulatedInterpRollOverride
struct APrimalDinoCharacter_BPSetSimulatedInterpRollOverride_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPSetInitialAimOffsetTargets
struct APrimalDinoCharacter_BPSetInitialAimOffsetTargets_Params
{
public:
	struct FVector                               TargetRootLoc;                                     // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              TargetAimRot;                                      // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               OutTargetRootLoc;                                  // 0x30(0x18)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              OutTargetAimRot;                                   // 0x48(0x18)(ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPSetForcedAggro
struct APrimalDinoCharacter_BPSetForcedAggro_Params
{
public:
	class AActor*                                TargetableActor;                                   // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        AggroAmount;                                       // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForcedAggroTime;                                   // 0xC(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPSentKilledNotification
struct APrimalDinoCharacter_BPSentKilledNotification_Params
{
public:
	class AShooterPlayerController*              ToPC;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPPreventSpawnForPlayer
struct APrimalDinoCharacter_BPPreventSpawnForPlayer_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckCooldownTime;                                // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38A1[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPPreventRiding
struct APrimalDinoCharacter_BPPreventRiding_Params
{
public:
	class AShooterCharacter*                     ByPawn;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontCheckDistance;                                // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38A4[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPPreventOrderAllowed
struct APrimalDinoCharacter_BPPreventOrderAllowed_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDinoTamedOrder                   OrderType;                                         // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38A7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                EnemyTarget;                                       // 0x10(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OrderNotExecuted;                                  // 0x18(0x1)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x19(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38A8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPPrepareForLaunchFromShoulder
struct APrimalDinoCharacter_BPPrepareForLaunchFromShoulder_Params
{
public:
	struct FVector                               ViewLoc;                                           // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ViewDir;                                           // 0x18(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideTamingDescriptionLabel
struct APrimalDinoCharacter_BPOverrideTamingDescriptionLabel_Params
{
public:
	struct FSlateColor                           TextColor;                                         // 0x0(0x14)(BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_38AB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideStencilAllianceForTarget
struct APrimalDinoCharacter_BPOverrideStencilAllianceForTarget_Params
{
public:
	class APrimalCharacter*                      TargetDino;                                        // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   Component;                                         // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	enum class EStencilAlliance                  ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38AF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverridePassengerAdditiveAnim
struct APrimalDinoCharacter_BPOverridePassengerAdditiveAnim_Params
{
public:
	class APrimalCharacter*                      ForPassenger;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideMutationLabels
struct APrimalDinoCharacter_BPOverrideMutationLabels_Params
{
public:
	bool                                         Male;                                              // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38B0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideMoveToOrder
struct APrimalDinoCharacter_BPOverrideMoveToOrder_Params
{
public:
	struct FVector                               MoveToLocation;                                    // 0x0(0x18)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     OrderingPlayer;                                    // 0x18(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38B1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideIsSubmergedForWaterTargeting
struct APrimalDinoCharacter_BPOverrideIsSubmergedForWaterTargeting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideHealthBarOffset
struct APrimalDinoCharacter_BPOverrideHealthBarOffset_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38B3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideGetAttackAnimationIndex
struct APrimalDinoCharacter_BPOverrideGetAttackAnimationIndex_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38B4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UAnimMontage*>                  AnimationArray;                                    // 0x8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38B6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideFloatingHUDLocation
struct APrimalDinoCharacter_BPOverrideFloatingHUDLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOverrideCameraViewTarget
struct APrimalDinoCharacter_BPOverrideCameraViewTarget_Params
{
public:
	class FName                                  CurrentCameraMode;                                 // 0x0(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DesiredCameraLocation;                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DesiredCameraRotation;                             // 0x20(0x18)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DesiredFOV;                                        // 0x38(0x4)(ConstParm, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOverrideCameraLocation;                           // 0x3C(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CameraLocation;                                    // 0x40(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideCameraRotation;                           // 0x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CameraRotation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideCameraFOV;                                // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CameraFOV;                                         // 0x7C(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOrderedMoveToLoc
struct APrimalDinoCharacter_BPOrderedMoveToLoc_Params
{
public:
	struct FVector                               DestLoc;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnTamedProcessOrder
struct APrimalDinoCharacter_BPOnTamedProcessOrder_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDinoTamedOrder                   OrderType;                                         // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_38C3[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                EnemyTarget;                                       // 0x10(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OrderNotExecuted;                                  // 0x18(0x1)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnStopJump
struct APrimalDinoCharacter_BPOnStopJump_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnStartJump
struct APrimalDinoCharacter_BPOnStartJump_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnSetFlight
struct APrimalDinoCharacter_BPOnSetFlight_Params
{
public:
	bool                                         bFly;                                              // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnRefreshColorization
struct APrimalDinoCharacter_BPOnRefreshColorization_Params
{
public:
	TArray<struct FLinearColor>                  Colors;                                            // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnDinoStartled
struct APrimalDinoCharacter_BPOnDinoStartled_Params
{
public:
	class UAnimMontage*                          StartledAnimPlayed;                                // 0x0(0x8)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromAIController;                                 // 0x8(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38C8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnDinoFiredProjectile
struct APrimalDinoCharacter_BPOnDinoFiredProjectile_Params
{
public:
	class AShooterProjectile*                    Projectile;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPOnDinoCheat
struct APrimalDinoCharacter_BPOnDinoCheat_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetValue;                                         // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38C9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Value;                                             // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyWildHarvestAttack
struct APrimalDinoCharacter_BPNotifyWildHarvestAttack_Params
{
public:
	int32                                        HarvestIndex;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyStructurePlacedNearby
struct APrimalDinoCharacter_BPNotifyStructurePlacedNearby_Params
{
public:
	class APrimalStructure*                      NewStructure;                                      // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifySetRider
struct APrimalDinoCharacter_BPNotifySetRider_Params
{
public:
	class AShooterCharacter*                     RiderSetting;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyNameEditText
struct APrimalDinoCharacter_BPNotifyNameEditText_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyIfPassengerLaunchShoulderMount
struct APrimalDinoCharacter_BPNotifyIfPassengerLaunchShoulderMount_Params
{
public:
	class APrimalCharacter*                      LaunchedCharacter;                                 // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyClearRider
struct APrimalDinoCharacter_BPNotifyClearRider_Params
{
public:
	class AShooterCharacter*                     RiderClearing;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyClearPassenger
struct APrimalDinoCharacter_BPNotifyClearPassenger_Params
{
public:
	class APrimalCharacter*                      PassengerChar;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SeatIndex;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38CC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyCarriedDinoBabyAgeIncrement
struct APrimalDinoCharacter_BPNotifyCarriedDinoBabyAgeIncrement_Params
{
public:
	class APrimalDinoCharacter*                  AgingCarriedDino;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        PreviousAge;                                       // 0x8(0x4)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewAge;                                            // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyBabyAgeIncrement
struct APrimalDinoCharacter_BPNotifyBabyAgeIncrement_Params
{
public:
	float                                        PreviousAge;                                       // 0x0(0x4)(EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewAge;                                            // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPNotifyAddPassenger
struct APrimalDinoCharacter_BPNotifyAddPassenger_Params
{
public:
	class APrimalCharacter*                      PassengerChar;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SeatIndex;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_38D1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingWeightsArray
struct APrimalDinoCharacter_BPModifyHarvestingWeightsArray_Params
{
public:
	TArray<float>                                ResourceWeightsIn;                                 // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   ResourceItems;                                     // 0x10(0x10)(ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                ResourceWeightsOut;                                // 0x20(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingQuantity
struct APrimalDinoCharacter_BPModifyHarvestingQuantity_Params
{
public:
	float                                        OriginalQuantity;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38D3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ResourceSelected;                                  // 0x8(0x8)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38D4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestDamage
struct APrimalDinoCharacter_BPModifyHarvestDamage_Params
{
public:
	class UPrimalHarvestingComponent*            HarvestComponent;                                  // 0x0(0x8)(Edit, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InDamage;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyDesiredRotation
struct APrimalDinoCharacter_BPModifyDesiredRotation_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_38D5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              InDesiredRotation;                                 // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              OutDesiredRotation;                                // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38D6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyControlRotation
struct APrimalDinoCharacter_BPModifyControlRotation_Params
{
public:
	struct FRotator                              ControlRotation;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              OutControlRotation;                                // 0x18(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38DA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetTargetLocation
struct APrimalDinoCharacter_BPModifyAimOffsetTargetLocation_Params
{
public:
	struct FVector                               AimTargetLocation;                                 // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetNoTarget
struct APrimalDinoCharacter_BPModifyAimOffsetNoTarget_Params
{
public:
	struct FRotator                              Aim;                                               // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPKilledSomethingEvent
struct APrimalDinoCharacter_BPKilledSomethingEvent_Params
{
public:
	class APrimalCharacter*                      KilledTarget;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPIsValidUnStasisCaster
struct APrimalDinoCharacter_BPIsValidUnStasisCaster_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPIsTamed
struct APrimalDinoCharacter_BPIsTamed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPIsHidden
struct APrimalDinoCharacter_BPIsHidden_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPIsBasedOnActor
struct APrimalDinoCharacter_BPIsBasedOnActor_Params
{
public:
	class AActor*                                Other;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38E3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPHasCurrentAttack
struct APrimalDinoCharacter_BPHasCurrentAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPHandleUseButtonPress
struct APrimalDinoCharacter_BPHandleUseButtonPress_Params
{
public:
	class AShooterPlayerController*              RiderController;                                   // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38E4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopTargeting
struct APrimalDinoCharacter_BPHandleOnStopTargeting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopFire
struct APrimalDinoCharacter_BPHandleOnStopFire_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPHandleControllerInitiatedAttack
struct APrimalDinoCharacter_BPHandleControllerInitiatedAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38E6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetTargetingDesirability
struct APrimalDinoCharacter_BPGetTargetingDesirability_Params
{
public:
	class AActor*                                Attacker;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38E8[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetRidingMultiUseEntries
struct APrimalDinoCharacter_BPGetRidingMultiUseEntries_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FMultiUseEntry>                MultiUseEntries;                                   // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FMultiUseEntry>                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardLocation
struct APrimalDinoCharacter_BPGetRiderUnboardLocation_Params
{
public:
	class APrimalCharacter*                      RidingCharacter;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardDirection
struct APrimalDinoCharacter_BPGetRiderUnboardDirection_Params
{
public:
	class APrimalCharacter*                      RidingCharacter;                                   // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetRiderSocket
struct APrimalDinoCharacter_BPGetRiderSocket_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetPassengerDinoAdditionalOffset
struct APrimalDinoCharacter_BPGetPassengerDinoAdditionalOffset_Params
{
public:
	class APrimalDinoCharacter*                  Passenger;                                         // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetOtherActorToIgnore
struct APrimalDinoCharacter_BPGetOtherActorToIgnore_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetLookOffsetSocketName
struct APrimalDinoCharacter_BPGetLookOffsetSocketName_Params
{
public:
	class APrimalCharacter*                      ForPrimalChar;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetHealthBarColor
struct APrimalDinoCharacter_BPGetHealthBarColor_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketName
struct APrimalDinoCharacter_BPGetDragSocketName_Params
{
public:
	class APrimalCharacter*                      DraggingChar;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketDinoName
struct APrimalDinoCharacter_BPGetDragSocketDinoName_Params
{
public:
	class APrimalDinoCharacter*                  AGrabbedDino;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCustomDinoSetup
struct APrimalDinoCharacter_BPGetCustomDinoSetup_Params
{
public:
	struct FDinoSetup                            ReturnValue;                                       // 0x0(0x120)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCurrentAttackIndex
struct APrimalDinoCharacter_BPGetCurrentAttackIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairSpread
struct APrimalDinoCharacter_BPGetCrosshairSpread_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairLocation
struct APrimalDinoCharacter_BPGetCrosshairLocation_Params
{
public:
	float                                        CanvasClipX;                                       // 0x0(0x4)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CanvasClipY;                                       // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutX;                                              // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutY;                                              // 0xC(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairColor
struct APrimalDinoCharacter_BPGetCrosshairColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairAlpha
struct APrimalDinoCharacter_BPGetCrosshairAlpha_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x158 (0x158 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPGetAttackOfPlayedAnimation
struct APrimalDinoCharacter_BPGetAttackOfPlayedAnimation_Params
{
public:
	struct FDinoAttackInfo                       AttackInfo;                                        // 0x0(0x150)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x150(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38EC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPForceTurretFastTargeting
struct APrimalDinoCharacter_BPForceTurretFastTargeting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPFedWakingTameEvent
struct APrimalDinoCharacter_BPFedWakingTameEvent_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPExShouldRestrictNonAlliedCarriedPlayerYaw
struct APrimalDinoCharacter_BPExShouldRestrictNonAlliedCarriedPlayerYaw_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDrawToRiderHUD
struct APrimalDinoCharacter_BPDrawToRiderHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDoHarvestAttack
struct APrimalDinoCharacter_BPDoHarvestAttack_Params
{
public:
	int32                                        HarvestIndex;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDoAttack
struct APrimalDinoCharacter_BPDoAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDisplayTamedMessage
struct APrimalDinoCharacter_BPDisplayTamedMessage_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTorpidityProgressBar
struct APrimalDinoCharacter_BPDinoTooltipCustomTorpidityProgressBar_Params
{
public:
	bool                                         OverrideTorpidityProgressBarIfActive;              // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38EF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProgressPercent;                                   // 0x4(0x4)(ConstParm, Net, Parm, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	class FString                                Label;                                             // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38F0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTamingProgressBar
struct APrimalDinoCharacter_BPDinoTooltipCustomTamingProgressBar_Params
{
public:
	bool                                         OverrideTamingProgressBarIfActive;                 // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ProgressPercent;                                   // 0x4(0x4)(ConstParm, Net, Parm, ZeroConstructor, Transient, GlobalConfig, SubobjectReference)
	class FString                                Label;                                             // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_38F3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDidSetCarriedCharacter
struct APrimalDinoCharacter_BPDidSetCarriedCharacter_Params
{
public:
	class APrimalCharacter*                      WithPreviousCarriedCharacter;                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDidClearCarriedCharacter
struct APrimalDinoCharacter_BPDidClearCarriedCharacter_Params
{
public:
	class APrimalCharacter*                      WithPreviousCarriedCharacter;                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPDesiredRotationIsLocalSpace
struct APrimalDinoCharacter_BPDesiredRotationIsLocalSpace_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPConsumeInventoryFoodItem
struct APrimalDinoCharacter_BPConsumeInventoryFoodItem_Params
{
public:
	class UPrimalItem*                           FoodItem;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bConsumeEntireStack;                               // 0x8(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38F8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPClampMaxHarvestHealth
struct APrimalDinoCharacter_BPClampMaxHarvestHealth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCheckSeven
struct APrimalDinoCharacter_BPCheckSeven_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCheckCanSpawnFromLocation
struct APrimalDinoCharacter_BPCheckCanSpawnFromLocation_Params
{
public:
	struct FVector                               CheckLocation;                                     // 0x0(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPChargingModifyInputAcceleration
struct APrimalDinoCharacter_BPChargingModifyInputAcceleration_Params
{
public:
	struct FVector                               InputAcceleration;                                 // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCarriedDinoBabyRescaled
struct APrimalDinoCharacter_BPCarriedDinoBabyRescaled_Params
{
public:
	class APrimalDinoCharacter*                  AgingCarriedDino;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NewAge;                                            // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_38FD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanTargetCorpse
struct APrimalDinoCharacter_BPCanTargetCorpse_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanTame
struct APrimalDinoCharacter_BPCanTame_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreMaxTamedDinos;                              // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3901[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanTakePassenger
struct APrimalDinoCharacter_BPCanTakePassenger_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	int32                                        PassengerSeatIndex;                                // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForcePassenger;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyersAndWaterDinos;                         // 0xD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xE(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3902[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanMountOnCharacter
struct APrimalDinoCharacter_BPCanMountOnCharacter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3903[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanLand
struct APrimalDinoCharacter_BPCanLand_Params
{
public:
	bool                                         CanLand;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanIgnoreImmobilizationTrap
struct APrimalDinoCharacter_BPCanIgnoreImmobilizationTrap_Params
{
public:
	class UClass*                                TrapClass;                                         // 0x0(0x8)(Edit, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTrigger;                                     // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3904[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanDragCharacter
struct APrimalDinoCharacter_BPCanDragCharacter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3905[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanCryo
struct APrimalDinoCharacter_BPCanCryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3906[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPCanAutodrag
struct APrimalDinoCharacter_BPCanAutodrag_Params
{
public:
	class APrimalCharacter*                      CharacterToDrag;                                   // 0x0(0x8)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3908[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPBecameNewBaby
struct APrimalDinoCharacter_BPBecameNewBaby_Params
{
public:
	class APrimalDinoCharacter*                  Parent;                                            // 0x0(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPAllowEquippingItemType
struct APrimalDinoCharacter_BPAllowEquippingItemType_Params
{
public:
	enum class EPrimalEquipmentType              EquipmentType;                                     // 0x0(0x1)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPAllowClaiming
struct APrimalDinoCharacter_BPAllowClaiming_Params
{
public:
	class AShooterPlayerController*              ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_390B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPAllowCarryCharacter
struct APrimalDinoCharacter_BPAllowCarryCharacter_Params
{
public:
	class APrimalCharacter*                      CheckCharacter;                                    // 0x0(0x8)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_390C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BPAdjustAttackIndex
struct APrimalDinoCharacter_BPAdjustAttackIndex_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_ShouldDisableBasedCharactersCameraInterpolation
struct APrimalDinoCharacter_BP_ShouldDisableBasedCharactersCameraInterpolation_Params
{
public:
	class APrimalCharacter*                      ForBasedChar;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_390D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_PreventUnmounting
struct APrimalDinoCharacter_BP_PreventUnmounting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_PreventCarryingByCharacter
struct APrimalDinoCharacter_BP_PreventCarryingByCharacter_Params
{
public:
	class APrimalCharacter*                      ByCarrier;                                         // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_390F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_PreventCarrying
struct APrimalDinoCharacter_BP_PreventCarrying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OverrideRiderCameraCollisionSweep
struct APrimalDinoCharacter_BP_OverrideRiderCameraCollisionSweep_Params
{
public:
	struct FVector                               SweepStart;                                        // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SweepEnd;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHitResult                            ReturnValue;                                       // 0x30(0xF0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OverrideDinoName
struct APrimalDinoCharacter_BP_OverrideDinoName_Params
{
public:
	class FString                                CurrentDinoName;                                   // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APlayerController*                     ForPC;                                             // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OverrideCarriedCharacterTransform
struct APrimalDinoCharacter_BP_OverrideCarriedCharacterTransform_Params
{
public:
	class APrimalCharacter*                      ForCarriedChar;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3914[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OverrideBasedCharactersCameraInterpSpeed
struct APrimalDinoCharacter_BP_OverrideBasedCharactersCameraInterpSpeed_Params
{
public:
	class APrimalCharacter*                      ForBasedChar;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVCameraSpeedInterpMultiplier;             // 0x8(0x4)(ConstParm, Net, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DefaultTPVOffsetInterpSpeed;                       // 0xC(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVCameraSpeedInterpMultiplier;                    // 0x10(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        TPVOffsetInterpSpeed;                              // 0x14(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnUncryo
struct APrimalDinoCharacter_BP_OnUncryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnTargetedByTamedOrder
struct APrimalDinoCharacter_BP_OnTargetedByTamedOrder_Params
{
public:
	class APrimalCharacter*                      OrderingCharacter;                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  AttackingDino;                                     // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForced;                                           // 0x10(0x1)(EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3919[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnTamedOrderReceived
struct APrimalDinoCharacter_BP_OnTamedOrderReceived_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EDinoTamedOrder                   OrderType;                                         // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_391B[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                EnemyTarget;                                       // 0x10(0x8)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OrderNotExecuted;                                  // 0x18(0x1)(ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_391C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnStartLandFailed
struct APrimalDinoCharacter_BP_OnStartLandFailed_Params
{
public:
	int32                                        ReasonIndex;                                       // 0x0(0x4)(Edit, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnRiderChangeWeapons
struct APrimalDinoCharacter_BP_OnRiderChangeWeapons_Params
{
public:
	class AShooterCharacter*                     TheRider;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           NewWeapon;                                         // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnPostNetReplication
struct APrimalDinoCharacter_BP_OnPostNetReplication_Params
{
public:
	struct FVector                               ReplicatedLoc;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              ReplicatedRot;                                     // 0x18(0x18)(ConstParm, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnCryo
struct APrimalDinoCharacter_BP_OnCryo_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnRemovedNotify
struct APrimalDinoCharacter_BP_OnBasedPawnRemovedNotify_Params
{
public:
	class AActor*                                RemovedActor;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnAddedNotify
struct APrimalDinoCharacter_BP_OnBasedPawnAddedNotify_Params
{
public:
	class AActor*                                AddedActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_InterceptTurnInput
struct APrimalDinoCharacter_BP_InterceptTurnInput_Params
{
public:
	float                                        AxisValue;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3923[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveRight
struct APrimalDinoCharacter_BP_InterceptMoveRight_Params
{
public:
	float                                        AxisValue;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3925[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveForward
struct APrimalDinoCharacter_BP_InterceptMoveForward_Params
{
public:
	float                                        AxisValue;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3929[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_RotationRate
struct APrimalDinoCharacter_BP_GetCustomModifier_RotationRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_MaxSpeed
struct APrimalDinoCharacter_BP_GetCustomModifier_MaxSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_ForceAllowMountedWeapon
struct APrimalDinoCharacter_BP_ForceAllowMountedWeapon_Params
{
public:
	class UClass*                                WeaponTemplate;                                    // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_392B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_CanFly
struct APrimalDinoCharacter_BP_CanFly_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BP_AllowWalkableSlopeOverride
struct APrimalDinoCharacter_BP_AllowWalkableSlopeOverride_Params
{
public:
	class UPrimitiveComponent*                   ForComponent;                                      // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_392C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintPlayDying
struct APrimalDinoCharacter_BlueprintPlayDying_Params
{
public:
	float                                        KillingDamage;                                     // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3931[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x28(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideWantsToRun
struct APrimalDinoCharacter_BlueprintOverrideWantsToRun_Params
{
public:
	bool                                         bInputWantsToRun;                                  // 0x0(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideHarvestDamageType
struct APrimalDinoCharacter_BlueprintOverrideHarvestDamageType_Params
{
public:
	float                                        OutHarvestDamageMultiplier;                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3932[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintGetAttackWeight
struct APrimalDinoCharacter_BlueprintGetAttackWeight_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        InputWeight;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Distance;                                          // 0x8(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0xC(0x4)(Edit, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                OtherTarget;                                       // 0x10(0x8)(ConstParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3933[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintExtraBabyScaling
struct APrimalDinoCharacter_BlueprintExtraBabyScaling_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintDrawFloatingHUD
struct APrimalDinoCharacter_BlueprintDrawFloatingHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        CenterX;                                           // 0x8(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0xC(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DrawScale;                                         // 0x10(0x4)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3934[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintCanRiderAttack
struct APrimalDinoCharacter_BlueprintCanRiderAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3937[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintCanAttack
struct APrimalDinoCharacter_BlueprintCanAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Distance;                                          // 0x4(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	float                                        AttackRangeOffset;                                 // 0x8(0x4)(Edit, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_393A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                OtherTarget;                                       // 0x10(0x8)(ConstParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_393B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlueprintAdjustOutputDamage
struct APrimalDinoCharacter_BlueprintAdjustOutputDamage_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OriginalDamageAmount;                              // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                HitActor;                                          // 0x8(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                OutDamageType;                                     // 0x10(0x8)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OutDamageImpulse;                                  // 0x18(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.BlendSpaceGenerated
struct APrimalDinoCharacter_BlendSpaceGenerated_Params
{
public:
	class UBlendSpace*                           BlendSpace;                                        // 0x0(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AreSpawnerSublevelsLoaded
struct APrimalDinoCharacter_AreSpawnerSublevelsLoaded_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AllowWakingTame
struct APrimalDinoCharacter_AllowWakingTame_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_394A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AllowMountedWeaponry
struct APrimalDinoCharacter_AllowMountedWeaponry_Params
{
public:
	bool                                         bIgnoreCurrentWeapon;                              // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWeaponForcesMountedWeaponry;                      // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AllowCarryCharacter
struct APrimalDinoCharacter_AllowCarryCharacter_Params
{
public:
	class APrimalCharacter*                      CanCarryPawn;                                      // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_394C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AddToMeleeSwingHurtList
struct APrimalDinoCharacter_AddToMeleeSwingHurtList_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3950[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AddSaddleCheat
struct APrimalDinoCharacter_AddSaddleCheat_Params
{
public:
	class UClass*                                AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AddPassenger
struct APrimalDinoCharacter_AddPassenger_Params
{
public:
	class APrimalCharacter*                      ACharacter;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PassengerSeatIndex;                                // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForcePassenger;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAllowFlyersAndWaterDinos;                         // 0xD(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipLineTrace;                                    // 0xE(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AddedImprintingQuality
struct APrimalDinoCharacter_AddedImprintingQuality_Params
{
public:
	float                                        Amount;                                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalDinoCharacter.AddDinoReferenceInLatchingStructure
struct APrimalDinoCharacter_AddDinoReferenceInLatchingStructure_Params
{
public:
	class APrimalStructure*                      Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBotCharacter.IsUsingAlternateSkelMesh
struct APrimalBotCharacter_IsUsingAlternateSkelMesh_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBotCharacter.GetMinAttackRange
struct APrimalBotCharacter_GetMinAttackRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBotCharacter.GetMaxAttackRange
struct APrimalBotCharacter_GetMaxAttackRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotCharacter.GetDinoRidingMoveAnimation
struct APrimalBotCharacter_GetDinoRidingMoveAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotCharacter.GetDinoRidingAnimation
struct APrimalBotCharacter_GetDinoRidingAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBotCharacter.GetBotAnimSequenceOverride
struct APrimalBotCharacter_GetBotAnimSequenceOverride_Params
{
public:
	class UAnimSequence*                         AnimSeq;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotCharacter.CurrentlyRiddenDino
struct APrimalBotCharacter_CurrentlyRiddenDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBotCharacter.CanRideDino
struct APrimalBotCharacter_CanRideDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3AF6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBotCharacter.AttachToDino
struct APrimalBotCharacter_AttachToDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalEmitterSpawnable.UpdateEmitter
struct APrimalEmitterSpawnable_UpdateEmitter_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        Alpha;                                             // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                FromActor;                                         // 0x8(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalEmitterSpawnable.ToggleActivation
struct APrimalEmitterSpawnable_ToggleActivation_Params
{
public:
	bool                                         DoActivate;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalEmitterSpawnable.SetupEmitter
struct APrimalEmitterSpawnable_SetupEmitter_Params
{
public:
	class AActor*                                FromActor;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalEmitterSpawnable.SetImpulseData
struct APrimalEmitterSpawnable_SetImpulseData_Params
{
public:
	struct FDamageEvent                          DamageEvent;                                       // 0x0(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 InstigatingPawn;                                   // 0x20(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBuff.UpdateStaticPathingDestination
struct APrimalBuff_UpdateStaticPathingDestination_Params
{
public:
	struct FVector                               LocOverride;                                       // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        RandomOffsetMultiplier;                            // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         UseRandomNegativeXDir;                             // 0x1C(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OrientRandOffsetByRotation;                        // 0x1D(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B19[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              RandOffsetByRotation;                              // 0x20(0x18)(ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        GroundCheckSpreadOverride;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.UpdateBuffLifetime
struct APrimalBuff_UpdateBuffLifetime_Params
{
public:
	float                                        NewLifetime;                                       // 0x0(0x4)(Edit, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRestartBuffLifetime;                              // 0x4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B1D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff.StaticAddBuff
struct APrimalBuff_StaticAddBuff_Params
{
public:
	class UClass*                                BuffClass;                                         // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForCharacter;                                      // 0x8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AssociatedItem;                                    // 0x10(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bForceOnClient;                                    // 0x20(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B22[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff*                           ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.ShouldUseAutonomousCorrectionOffset
struct APrimalBuff_ShouldUseAutonomousCorrectionOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.ShouldForceOwnerDedicatedMovementTickPerFrame
struct APrimalBuff_ShouldForceOwnerDedicatedMovementTickPerFrame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.SetValueToAddPerSecond
struct APrimalBuff_SetValueToAddPerSecond_Params
{
public:
	enum class EPrimalCharacterStatusValue       StatusValueType;                                   // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B24[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Value;                                             // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.SetGestationMonitoringTarget
struct APrimalBuff_SetGestationMonitoringTarget_Params
{
public:
	class APrimalDinoCharacter*                  ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEnable;                                           // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B25[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.SetBuffCauser
struct APrimalBuff_SetBuffCauser_Params
{
public:
	class AActor*                                CausedBy;                                          // 0x0(0x8)(Edit, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.ResetServerBuffTick
struct APrimalBuff_ResetServerBuffTick_Params
{
public:
	float                                        MinTime;                                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxTime;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.ResetClientBuffTick
struct APrimalBuff_ResetClientBuffTick_Params
{
public:
	float                                        MinTime;                                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MaxTime;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.ResetBuffStart
struct APrimalBuff_ResetBuffStart_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.ReduceBuffTime
struct APrimalBuff_ReduceBuffTime_Params
{
public:
	float                                        AmountOfTimeToReduce;                              // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B26[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.PreventJump
struct APrimalBuff_PreventJump_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalBuff.PreventInstigatorMovementMode
struct APrimalBuff_PreventInstigatorMovementMode_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.PreventInstigatorAttack
struct APrimalBuff_PreventInstigatorAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B27[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.PreventBlockingWithShield
struct APrimalBuff_PreventBlockingWithShield_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.PreventActorTargeting
struct APrimalBuff_PreventActorTargeting_Params
{
public:
	class AActor*                                ByActor;                                           // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B28[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.OnInputEvent
struct APrimalBuff_OnInputEvent_Params
{
public:
	class APrimalCharacter*                      ForPrimalCharacter;                                // 0x0(0x8)(ConstParm, EditFixedSize, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	enum class EPrimalCharacterInputType         InputType;                                         // 0x8(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B29[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.PrimalBuff.OnCapsuleHitCallback
struct APrimalBuff_OnCapsuleHitCallback_Params
{
public:
	class UPrimitiveComponent*                   HitComponent;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               NormalImpulse;                                     // 0x18(0x18)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x30(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.NotifyDamage
struct APrimalBuff_NotifyDamage_Params
{
public:
	float                                        DamageAmount;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B2C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageClass;                                       // 0x8(0x8)(ConstParm, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x10(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.NotifyBumpedPawn
struct APrimalBuff_NotifyBumpedPawn_Params
{
public:
	class APrimalCharacter*                      BumpedPawn;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.NotifyBumpedByPawn
struct APrimalBuff_NotifyBumpedByPawn_Params
{
public:
	class APrimalCharacter*                      BumpedBy;                                          // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.Multi_SyncBuffLifetime
struct APrimalBuff_Multi_SyncBuffLifetime_Params
{
public:
	float                                        NewDeactivateAfterTime;                            // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.IsOwningClient
struct APrimalBuff_IsOwningClient_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.InterceptInstigatorPlayerEmoteAnim
struct APrimalBuff_InterceptInstigatorPlayerEmoteAnim_Params
{
public:
	class UAnimMontage*                          EmoteAnim;                                         // 0x0(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B3A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.HideBuffFromHUD
struct APrimalBuff_HideBuffFromHUD_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff.HandleBuffAnimNotify
struct APrimalBuff_HandleBuffAnimNotify_Params
{
public:
	class FName                                  AnimNotifyName;                                    // 0x0(0x8)(Edit, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                AnimNotifyStringData;                              // 0x8(0x10)(ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.GetValueToAddPerSecond
struct APrimalBuff_GetValueToAddPerSecond_Params
{
public:
	enum class EPrimalCharacterStatusValue       StatusValueType;                                   // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B3C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.GetUniqueName
struct APrimalBuff_GetUniqueName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetTimeLeft
struct APrimalBuff_GetTimeLeft_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetRemainingTime
struct APrimalBuff_GetRemainingTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.GetOverrideWaterJumpVelocity
struct APrimalBuff_GetOverrideWaterJumpVelocity_Params
{
public:
	float                                        OutOfWaterZ;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.GetInstigatorPlayerController
struct APrimalBuff_GetInstigatorPlayerController_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetHUDProgressBarPercent
struct APrimalBuff_GetHUDProgressBarPercent_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.GetForcedBuffAimOverride
struct APrimalBuff_GetForcedBuffAimOverride_Params
{
public:
	bool                                         bIsWeaponAim;                                      // 0x0(0x1)(ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B40[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.GetEnabledGestationMonitoringTargets
struct APrimalBuff_GetEnabledGestationMonitoringTargets_Params
{
public:
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.GetDebugInfoString
struct APrimalBuff_GetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.GetDeactivationTime
struct APrimalBuff_GetDeactivationTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalBuff.GetCustomTooltip
struct APrimalBuff_GetCustomTooltip_Params
{
public:
	struct FVector2D                             TooltipPadding;                                    // 0x0(0x10)(Edit, ConstParm, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             TooltipScale;                                      // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               TooltipLocationOffset;                             // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffType
struct APrimalBuff_GetBuffType_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffTickServerDeltaTime
struct APrimalBuff_GetBuffTickServerDeltaTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffTickClientDeltaTime
struct APrimalBuff_GetBuffTickClientDeltaTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffPostprocessMaterial
struct APrimalBuff_GetBuffPostprocessMaterial_Params
{
public:
	class UMaterialInstanceDynamic*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffPostprocessIntensity
struct APrimalBuff_GetBuffPostprocessIntensity_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff.GetBuffDescription
struct APrimalBuff_GetBuffDescription_Params
{
public:
	struct FStatusValueModifierDescription       ReturnValue;                                       // 0x0(0x50)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.ExtendBuffTime
struct APrimalBuff_ExtendBuffTime_Params
{
public:
	float                                        AmountOfAdditionalTime;                            // 0x0(0x4)(BlueprintVisible, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B4B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.DrawBuffFloatingHUD
struct APrimalBuff_DrawBuffFloatingHUD_Params
{
public:
	int32                                        BuffIndex;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B4C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterHUD*                           HUD;                                               // 0x8(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        CenterX;                                           // 0x10(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CenterY;                                           // 0x14(0x4)(Edit, ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DrawScale;                                         // 0x18(0x4)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B4D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff.DoTeleporterHaptics
struct APrimalBuff_DoTeleporterHaptics_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        ElapsedTime;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_3B4E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.DinoInstigatorReceivedRider
struct APrimalBuff_DinoInstigatorReceivedRider_Params
{
public:
	class AShooterCharacter*                     Rider;                                             // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.ClientReceiveRelatedMissionData
struct APrimalBuff_ClientReceiveRelatedMissionData_Params
{
public:
	class AMissionType*                          InMission;                                         // 0x0(0x8)(DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         InHasRelatedMission;                               // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B50[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BuffTickServer
struct APrimalBuff_BuffTickServer_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BuffTickClient
struct APrimalBuff_BuffTickClient_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalBuff.BuffPostAdjustDamage
struct APrimalBuff_BuffPostAdjustDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B53[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitInfo;                                           // 0x8(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0xF8(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x100(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class UClass*                                TheDamgeType;                                      // 0x108(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BuffOverrideInventoryAccessInput
struct APrimalBuff_BuffOverrideInventoryAccessInput_Params
{
public:
	class AController*                           InController;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bInputPressed;                                     // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B54[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BuffOverrideFinalWanderLocation
struct APrimalBuff_BuffOverrideFinalWanderLocation_Params
{
public:
	struct FVector                               OutVec;                                            // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B56[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.PrimalBuff.BuffAdjustDamage
struct APrimalBuff_BuffAdjustDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B58[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitInfo;                                           // 0x8(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0xF8(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                TheDamageCauser;                                   // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class UClass*                                TheDamgeType;                                      // 0x108(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x110(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B5A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPShouldForceOwnerDedicatedMovementTickPerFrame
struct APrimalBuff_BPShouldForceOwnerDedicatedMovementTickPerFrame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPSetupForInstigator
struct APrimalBuff_BPSetupForInstigator_Params
{
public:
	class AActor*                                ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPReactivateWithDamageCauser
struct APrimalBuff_BPReactivateWithDamageCauser_Params
{
public:
	class AActor*                                ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                ForDamageCauser;                                   // 0x8(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventThrowingItem
struct APrimalBuff_BPPreventThrowingItem_Params
{
public:
	class UPrimalItem*                           ForItem;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B5D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventTekArmorBuffs
struct APrimalBuff_BPPreventTekArmorBuffs_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventRunning
struct APrimalBuff_BPPreventRunning_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventRidingInstigator
struct APrimalBuff_BPPreventRidingInstigator_Params
{
public:
	class APrimalCharacter*                      ForPawn;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B5F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventOnStartJump
struct APrimalBuff_BPPreventOnStartJump_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventNotifySound
struct APrimalBuff_BPPreventNotifySound_Params
{
public:
	class USoundBase*                            SoundIn;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B61[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventInstigatorMovementMode
struct APrimalBuff_BPPreventInstigatorMovementMode_Params
{
public:
	enum class EMovementMode                     NewMovementMode;                                   // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventInstigatorAttack
struct APrimalBuff_BPPreventInstigatorAttack_Params
{
public:
	int32                                        AttackIndex;                                       // 0x0(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B63[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventflight
struct APrimalBuff_BPPreventflight_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventFirstPerson
struct APrimalBuff_BPPreventFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventCharacterStatusValueModifiers
struct APrimalBuff_BPPreventCharacterStatusValueModifiers_Params
{
public:
	class APrimalCharacter*                      ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B65[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventCharacterLanding
struct APrimalBuff_BPPreventCharacterLanding_Params
{
public:
	struct FVector                               ImpactPoint;                                       // 0x0(0x18)(Edit, ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	struct FVector                               ImpactAccel;                                       // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ImpactVelocity;                                    // 0x30(0x18)(Net, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               NewVelocity;                                       // 0x48(0x18)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x60(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B67[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreventAddingOtherBuff
struct APrimalBuff_BPPreventAddingOtherBuff_Params
{
public:
	class UClass*                                AnotherBuffClass;                                  // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B68[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreSetupForInstigator
struct APrimalBuff_BPPreSetupForInstigator_Params
{
public:
	class AActor*                                ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreSerializeForInstigator
struct APrimalBuff_BPPreSerializeForInstigator_Params
{
public:
	bool                                         bBeginningSerialize;                               // 0x0(0x1)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPPreClaimWildFollower
struct APrimalBuff_BPPreClaimWildFollower_Params
{
public:
	class AShooterPlayerController*              ByPC;                                              // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideWeaponBob
struct APrimalBuff_BPOverrideWeaponBob_Params
{
public:
	struct FVector                               InWeaponBob;                                       // 0x0(0x18)(ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideTargetingDesire
struct APrimalBuff_BPOverrideTargetingDesire_Params
{
public:
	class AActor*                                ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ForTargetingDesireValue;                           // 0x8(0x4)(ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideTalkerCharacter
struct APrimalBuff_BPOverrideTalkerCharacter_Params
{
public:
	class APrimalCharacter*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideRightShoulderOnPlayer
struct APrimalBuff_BPOverrideRightShoulderOnPlayer_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B6A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideIsNetRelevantFor
struct APrimalBuff_BPOverrideIsNetRelevantFor_Params
{
public:
	class APlayerController*                     RealViewer;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                Viewer;                                            // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               SrcLocation;                                       // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B6C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideCharacterNewFallVelocity
struct APrimalBuff_BPOverrideCharacterNewFallVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3B6F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideCameraViewTarget
struct APrimalBuff_BPOverrideCameraViewTarget_Params
{
public:
	class FName                                  CurrentCameraMode;                                 // 0x0(0x8)(BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DesiredCameraLocation;                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DesiredCameraRotation;                             // 0x20(0x18)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DesiredFOV;                                        // 0x38(0x4)(ConstParm, BlueprintVisible, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOverrideCameraLocation;                           // 0x3C(0x1)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B71[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CameraLocation;                                    // 0x40(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideCameraRotation;                           // 0x58(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B72[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              CameraRotation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bOverrideCameraFOV;                                // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B73[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CameraFOV;                                         // 0x7C(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPOverrideBuffToGiveOnDeactivation
struct APrimalBuff_BPOverrideBuffToGiveOnDeactivation_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnTamedWildDino
struct APrimalBuff_BPOnTamedWildDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnPreventedFiringDisabledWeapon
struct APrimalBuff_BPOnPreventedFiringDisabledWeapon_Params
{
public:
	class AShooterWeapon*                        Weapon;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FName                                  PreventingTag;                                     // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnOwnerMassTeleportEvent
struct APrimalBuff_BPOnOwnerMassTeleportEvent_Params
{
public:
	enum class EMassTeleportState                EventState;                                        // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B75[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      TeleportInitiatedByChar;                           // 0x8(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnInstigatorMovementModeChangedNotify
struct APrimalBuff_BPOnInstigatorMovementModeChangedNotify_Params
{
public:
	enum class EMovementMode                     PrevMovementMode;                                  // 0x0(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	uint8                                        PreviousCustomMode;                                // 0x1(0x1)(ExportObject, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	enum class EMovementMode                     NewMovementMode;                                   // 0x2(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        NewCustomMode;                                     // 0x3(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnInstigatorCapsuleComponentHit
struct APrimalBuff_BPOnInstigatorCapsuleComponentHit_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               NormalImpulse;                                     // 0x10(0x18)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x28(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPOnInputEvent
struct APrimalBuff_BPOnInputEvent_Params
{
public:
	enum class EPrimalCharacterInputType         InputType;                                         // 0x0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyPreventDismounting
struct APrimalBuff_BPNotifyPreventDismounting_Params
{
public:
	class APrimalDinoCharacter*                  FromDino;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyOtherBuffDeactivated
struct APrimalBuff_BPNotifyOtherBuffDeactivated_Params
{
public:
	class APrimalBuff*                           OtherBuff;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyOtherBuffActivatedToThisBuffClass
struct APrimalBuff_BPNotifyOtherBuffActivatedToThisBuffClass_Params
{
public:
	class APrimalBuff*                           ActivatedBuff;                                     // 0x0(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyOtherBuffActivated
struct APrimalBuff_BPNotifyOtherBuffActivated_Params
{
public:
	class APrimalBuff*                           OtherBuff;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyItemRemoved
struct APrimalBuff_BPNotifyItemRemoved_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyItemQuantityUpdated
struct APrimalBuff_BPNotifyItemQuantityUpdated_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Amount;                                            // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3B78[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyItemAdded
struct APrimalBuff_BPNotifyItemAdded_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B79[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalBuff.BPNotifyExperienceGained
struct APrimalBuff_BPNotifyExperienceGained_Params
{
public:
	float                                        ActualExpGained;                                   // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ExpectedExpGain;                                   // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EXPType                           ExpTypeGained;                                     // 0x8(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B7A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPNofityMontagePlay
struct APrimalBuff_BPNofityMontagePlay_Params
{
public:
	class UAnimMontage*                          Montage;                                           // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BPModifyPlayerBoneModifiers
struct APrimalBuff_BPModifyPlayerBoneModifiers_Params
{
public:
	TArray<struct FBoneModifier>                 InBoneModifiers;                                   // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FBoneModifier>                 ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPModifyArmorValue
struct APrimalBuff_BPModifyArmorValue_Params
{
public:
	class UPrimalItem*                           ForItem;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BaseArmorValue;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPIsValidUnStasisCaster
struct APrimalBuff_BPIsValidUnStasisCaster_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPIsCharacterHardAttached
struct APrimalBuff_BPIsCharacterHardAttached_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPInterceptWeaponToggle
struct APrimalBuff_BPInterceptWeaponToggle_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPInterceptUseAction
struct APrimalBuff_BPInterceptUseAction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPInstigatorSleeped
struct APrimalBuff_BPInstigatorSleeped_Params
{
public:
	bool                                         bIsSleeped;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPInstigatorPossessed
struct APrimalBuff_BPInstigatorPossessed_Params
{
public:
	class AController*                           ByController;                                      // 0x0(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPInstigatorLocalPossessed
struct APrimalBuff_BPInstigatorLocalPossessed_Params
{
public:
	class AShooterPlayerController*              ByController;                                      // 0x0(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff.BPInformDamageCauserOfBuffAdded
struct APrimalBuff_BPInformDamageCauserOfBuffAdded_Params
{
public:
	class APrimalCharacter*                      ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B7C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPHandleOnStopFire
struct APrimalBuff_BPHandleOnStopFire_Params
{
public:
	bool                                         bFromGamepad;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPHandleOnStopAltFire
struct APrimalBuff_BPHandleOnStopAltFire_Params
{
public:
	bool                                         bFromGamepad;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPHandleOnStartFire
struct APrimalBuff_BPHandleOnStartFire_Params
{
public:
	bool                                         bFromGamepad;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPHandleOnStartAltFire
struct APrimalBuff_BPHandleOnStartAltFire_Params
{
public:
	bool                                         bFromGamepad;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetWaypointsBuff
struct APrimalBuff_BPGetWaypointsBuff_Params
{
public:
	TArray<struct FPointOfInterestData_ForCompanion> IndicatorsOut;                                     // 0x0(0x10)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetPlayerFootStepSound
struct APrimalBuff_BPGetPlayerFootStepSound_Params
{
public:
	class USoundCue*                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetMoveAnimRate
struct APrimalBuff_BPGetMoveAnimRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetHUDElements
struct APrimalBuff_BPGetHUDElements_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FHUDElement>                   OutElements;                                       // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetGravityZScale
struct APrimalBuff_BPGetGravityZScale_Params
{
public:
	float                                        CurrentScale;                                      // 0x0(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetDinoNameColorOverride
struct APrimalBuff_BPGetDinoNameColorOverride_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	struct FColor                                ColorToOverride;                                   // 0x8(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FColor                                ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetDebugInfoString
struct APrimalBuff_BPGetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetCrosshairColor
struct APrimalBuff_BPGetCrosshairColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BPGetBabyImprintingSpeedMultiplier
struct APrimalBuff_BPGetBabyImprintingSpeedMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPForceDinoNameTargetingTeamOverride
struct APrimalBuff_BPForceDinoNameTargetingTeamOverride_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	int32                                        TargetingTeamToCheck;                              // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPForceCameraStyle
struct APrimalBuff_BPForceCameraStyle_Params
{
public:
	class APrimalCharacter*                      ForViewTarget;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class ECameraStyle                      ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B7F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.PrimalBuff.BPFinalAdjustDamage
struct APrimalBuff_BPFinalAdjustDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B80[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitInfo;                                           // 0x8(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0xF8(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                InDamageCauser;                                    // 0x100(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TheDamgeType;                                      // 0x108(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x110(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B82[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPExcludeAoEActor
struct APrimalBuff_BPExcludeAoEActor_Params
{
public:
	class AActor*                                ActorToConsider;                                   // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B83[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff.BPDrawBuffStatusHUD
struct APrimalBuff_BPDrawBuffStatusHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	float                                        XPos;                                              // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        YPos;                                              // 0xC(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ScaleMult;                                         // 0x10(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B84[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BPDinoRefreshColorization
struct APrimalBuff_BPDinoRefreshColorization_Params
{
public:
	TArray<struct FLinearColor>                  DinoColors;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FLinearColor>                  OverrideColors;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPDeactivated
struct APrimalBuff_BPDeactivated_Params
{
public:
	class AActor*                                ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff.BPCustomAllowAddBuff
struct APrimalBuff_BPCustomAllowAddBuff_Params
{
public:
	class APrimalCharacter*                      ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B87[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalBuff.BPCheckPreventInput
struct APrimalBuff_BPCheckPreventInput_Params
{
public:
	enum class EPrimalCharacterInputType         InputType;                                         // 0x0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPCanBeCarried
struct APrimalBuff_BPCanBeCarried_Params
{
public:
	class APrimalCharacter*                      ByCarrier;                                         // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B89[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalBuff.BPBypassPreventDinoDismount
struct APrimalBuff_BPBypassPreventDinoDismount_Params
{
public:
	bool                                         FromRider;                                         // 0x0(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCancelForceLand;                                  // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SpawnDinoDefaultController;                        // 0x2(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3B91[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideUnboardDirection;                          // 0x4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEvenIfBuffPreventsClear;                     // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFromUse;                                          // 0x9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3B93[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.BPBuffPreventUploading
struct APrimalBuff_BPBuffPreventUploading_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPBuffKilledSomethingEvent
struct APrimalBuff_BPBuffKilledSomethingEvent_Params
{
public:
	class APrimalCharacter*                      KilledTarget;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff.BPBPGetCameraShakeScalar
struct APrimalBuff_BPBPGetCameraShakeScalar_Params
{
public:
	class UClass*                                CurrentShake;                                      // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CurrentScale;                                      // 0x8(0x4)(Edit, ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_End
struct APrimalBuff_BPAnimNotifyCustomState_End_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_Begin
struct APrimalBuff_BPAnimNotifyCustomState_Begin_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        TotalDuration;                                     // 0x18(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BAA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x20(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BPAnimNotifyCustomEvent
struct APrimalBuff_BPAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotify*                           AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff.BPAdjustStatusValueModification
struct APrimalBuff_BPAdjustStatusValueModification_Params
{
public:
	class UPrimalCharacterStatusComponent*       ForComponent;                                      // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BB7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        InAmount;                                          // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                DamageTypeClass;                                   // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bManualModification;                               // 0x18(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BB9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalBuff.BPAdjustRadialDamage
struct APrimalBuff_BPAdjustRadialDamage_Params
{
public:
	float                                        CurrentDamage;                                     // 0x0(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BBF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Origin;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRadialDamageEvent                    DamageEvent;                                       // 0x20(0x60)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	float                                        ReturnValue;                                       // 0x80(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3BC2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.PrimalBuff.BPAdjustImpulseFromDamage
struct APrimalBuff_BPAdjustImpulseFromDamage_Params
{
public:
	struct FVector                               DesiredImpulse;                                    // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DamageTaken;                                       // 0x18(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BCC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x20(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 PawnInstigator;                                    // 0x40(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x48(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsPointDamage;                                    // 0x50(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BCF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointHitInfo;                                      // 0x58(0xF0)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x148(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.PrimalBuff.BPAdjustDamage_Ex
struct APrimalBuff_BPAdjustDamage_Ex_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3BD9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitInfo;                                           // 0x8(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               ImpulseDir;                                        // 0xF8(0x18)(Edit, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x110(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                InDamageCauser;                                    // 0x118(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                TheDamgeType;                                      // 0x120(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x128(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3BDB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalBuff.BPAdjustCharacterMovementImpulse
struct APrimalBuff_BPAdjustCharacterMovementImpulse_Params
{
public:
	struct FVector                               Impulse;                                           // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bVelocityChange;                                   // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3BDD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MassScaleImpulseExponent;                          // 0x1C(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideMaxImpulseZ;                              // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3BDE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x28(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BPActivated
struct APrimalBuff_BPActivated_Params
{
public:
	class AActor*                                ForInstigator;                                     // 0x0(0x8)(EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideTerminalVelocity
struct APrimalBuff_BP_OverrideTerminalVelocity_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideMoveRightInput
struct APrimalBuff_BP_OverrideMoveRightInput_Params
{
public:
	float                                        CurrentInput;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideMoveForwardInput
struct APrimalBuff_BP_OverrideMoveForwardInput_Params
{
public:
	float                                        CurrentInput;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideCharacterWalkingVelocity
struct APrimalBuff_BP_OverrideCharacterWalkingVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Friction;                                          // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        DeltaTime;                                         // 0x1C(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideCharacterSwimmingVelocity
struct APrimalBuff_BP_OverrideCharacterSwimmingVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        FluidFriction;                                     // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NetBuoyancy;                                       // 0x34(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x38(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3BE1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OverrideCharacterFlyingVelocity
struct APrimalBuff_BP_OverrideCharacterFlyingVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        DeltaTime;                                         // 0x30(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3BE3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff.BP_OnOwnerDealtDamage
struct APrimalBuff_BP_OnOwnerDealtDamage_Params
{
public:
	class AActor*                                DamagedActor;                                      // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        DamageAmount;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BE5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff.BP_ModifyCharacterFOV
struct APrimalBuff_BP_ModifyCharacterFOV_Params
{
public:
	float                                        InFOV;                                             // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.ApplyPhysicsImpulses
struct APrimalBuff_ApplyPhysicsImpulses_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff.AllowPostProcessEffect
struct APrimalBuff_AllowPostProcessEffect_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalBuff.AddDamageStatusValueModifier
struct APrimalBuff_AddDamageStatusValueModifier_Params
{
public:
	class APrimalCharacter*                      AddToCharacter;                                    // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSpeedToAddInSeconds;                              // 0x9(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bContinueOnUnchangedValue;                         // 0xA(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bResetExistingModifierDescriptionIndex;            // 0xB(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetValue;                                         // 0xC(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetAdditionalValue;                               // 0xD(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BEB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitExistingModifierDescriptionToMaxAmount;       // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DamageMultiplierAmountToAdd;                       // 0x14(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SpeedToAdd;                                        // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        StatusValueModifierDescriptionIndex;               // 0x1C(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUsePercentualDamage;                              // 0x20(0x1)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bMakeUntameable;                                   // 0x21(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BEC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PercentualDamage;                                  // 0x24(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ScaleValueByCharacterDamageType;                   // 0x28(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceImmediateTick;                               // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3BED[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff.AddBuffLifetime
struct APrimalBuff_AddBuffLifetime_Params
{
public:
	float                                        AdditionalLifetime;                                // 0x0(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.TraceForCompanionBlockersFromPlayer
struct APrimalBuff_Companion_TraceForCompanionBlockersFromPlayer_Params
{
public:
	struct FVector                               AdjustedLocation;                                  // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TraceStart;                                        // 0x18(0x18)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x30(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	bool                                         bDebug;                                            // 0x48(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C20[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TraceRadius;                                       // 0x4C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C21[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionTransform
struct APrimalBuff_Companion_Tick_UpdateCompanionTransform_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionState
struct APrimalBuff_Companion_Tick_UpdateCompanionState_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionSearchForPOIs
struct APrimalBuff_Companion_Tick_CompanionSearchForPOIs_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionReactions
struct APrimalBuff_Companion_Tick_CompanionReactions_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Tick_CompanionEvents
struct APrimalBuff_Companion_Tick_CompanionEvents_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.StopCompanionMontage
struct APrimalBuff_Companion_StopCompanionMontage_Params
{
public:
	class UAnimMontage*                          AnimToStop;                                        // 0x0(0x8)(Edit, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        BlendOutTime;                                      // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C23[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.StartCompanionEventExternal
struct APrimalBuff_Companion_StartCompanionEventExternal_Params
{
public:
	class AActor*                                EventActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   WithEventData;                                     // 0x8(0x50)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.StartCompanionEvent
struct APrimalBuff_Companion_StartCompanionEvent_Params
{
public:
	class AActor*                                EventActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   WithEventData;                                     // 0x8(0x50)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x4F0 (0x4F0 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.ShouldOrbitPointOfInterest
struct APrimalBuff_Companion_ShouldOrbitPointOfInterest_Params
{
public:
	struct FPointOfInterestData_ForCompanion     WithPointData;                                     // 0x0(0x4E0)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C24[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.SetCompaionHiddenSetting
struct APrimalBuff_Companion_SetCompaionHiddenSetting_Params
{
public:
	bool                                         IsHidden;                                          // 0x0(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Server_SetCompanionState
struct APrimalBuff_Companion_Server_SetCompanionState_Params
{
public:
	enum class ECompanionState                   NewState;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.PlayLinkedCompanionReactionsByExplorerNoteIndex
struct APrimalBuff_Companion_PlayLinkedCompanionReactionsByExplorerNoteIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.PlayCompanionMontage
struct APrimalBuff_Companion_PlayCompanionMontage_Params
{
public:
	class UAnimMontage*                          AnimToPlay;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendInTime;                                       // 0x8(0x4)(Edit, ConstParm, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        BlendOutTime;                                      // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        PlayRate;                                          // 0x10(0x4)(Edit, ExportObject, Net, OutParm, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnSpawnHexagons
struct APrimalBuff_Companion_OnSpawnHexagons_Params
{
public:
	float                                        OverrideCollectSFXVolume;                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         VFXImmediatelyAttracts;                            // 0x4(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C25[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnPlayerPlayAnimation
struct APrimalBuff_Companion_OnPlayerPlayAnimation_Params
{
public:
	class UAnimMontage*                          PlayedAnim;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	float                                        AnimDuration;                                      // 0x8(0x4)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FName                                  StartSectionName;                                  // 0xC(0x8)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C26[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnPlayerDeath
struct APrimalBuff_Companion_OnPlayerDeath_Params
{
public:
	class APrimalCharacter*                      DiedCharacter;                                     // 0x0(0x8)(Net, OutParm, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionStarted
struct APrimalBuff_Companion_OnMyPlayerMissionStarted_Params
{
public:
	class APrimalBuff_MissionData*               MissionDataBuff;                                   // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AMissionType*                          Mission;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionComplete
struct APrimalBuff_Companion_OnMyPlayerMissionComplete_Params
{
public:
	class APrimalBuff_MissionData*               MissionDataBuff;                                   // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AMissionType*                          Mission;                                           // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bSuccess;                                          // 0x10(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C27[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4F0 (0x4F0 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnFoundPoI
struct APrimalBuff_Companion_OnFoundPoI_Params
{
public:
	struct FPointOfInterestData_ForCompanion     FoundPointData;                                    // 0x0(0x4E0)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                FoundPointActor;                                   // 0x4E0(0x8)(Edit, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C28[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnEndOverlapCompanionEventTrigger
struct APrimalBuff_Companion_OnEndOverlapCompanionEventTrigger_Params
{
public:
	class AActor*                                ForTrigger;                                        // 0x0(0x8)(ConstParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionStopped
struct APrimalBuff_Companion_OnCompanionReactionStopped_Params
{
public:
	struct FCompanionReactionData                StoppedReactionData;                               // 0x0(0xB0)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        UniqueID;                                          // 0xB0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C29[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionPlayed
struct APrimalBuff_Companion_OnCompanionReactionPlayed_Params
{
public:
	struct FCompanionReactionData                PlayedReactionData;                                // 0x0(0xB0)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        UniqueID;                                          // 0xB0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C2A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnCompanionEventStarted
struct APrimalBuff_Companion_OnCompanionEventStarted_Params
{
public:
	struct FCompanionEventData                   StartingEventData;                                 // 0x0(0x50)(ConstParm, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnCompanionEventEnded
struct APrimalBuff_Companion_OnCompanionEventEnded_Params
{
public:
	struct FCompanionEventData                   StoppingEventData;                                 // 0x0(0x50)(ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.OnBeginOverlapCompanionEventTrigger
struct APrimalBuff_Companion_OnBeginOverlapCompanionEventTrigger_Params
{
public:
	class AActor*                                ForTrigger;                                        // 0x0(0x8)(ConstParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.NotifyItemCrafted
struct APrimalBuff_Companion_NotifyItemCrafted_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.NotifyItemAddedToCropPlot
struct APrimalBuff_Companion_NotifyItemAddedToCropPlot_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.NotifyHasTamedDino
struct APrimalBuff_Companion_NotifyHasTamedDino_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Net_SetCompanionState
struct APrimalBuff_Companion_Net_SetCompanionState_Params
{
public:
	enum class ECompanionState                   NewState;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.IsPlayingCompanionReaction
struct APrimalBuff_Companion_IsPlayingCompanionReaction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.IsPlayerLookingAtCompanion
struct APrimalBuff_Companion_IsPlayerLookingAtCompanion_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.IsPlayerADS
struct APrimalBuff_Companion_IsPlayerADS_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.IsCompanionReadyToMonologue
struct APrimalBuff_Companion_IsCompanionReadyToMonologue_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.IsCompanionAbleToMonologue
struct APrimalBuff_Companion_IsCompanionAbleToMonologue_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4F0 (0x4F0 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.HasCompanionReachedPointOrbit
struct APrimalBuff_Companion_HasCompanionReachedPointOrbit_Params
{
public:
	struct FPointOfInterestData_ForCompanion     OfPointData;                                       // 0x0(0x4E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C2B[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x500 (0x500 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetPointCompanionWorldOrbitOrigin
struct APrimalBuff_Companion_GetPointCompanionWorldOrbitOrigin_Params
{
public:
	struct FPointOfInterestData_ForCompanion     ForPointData;                                      // 0x0(0x4E0)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x4E0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C2C[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetMyPlayerHUD
struct APrimalBuff_Companion_GetMyPlayerHUD_Params
{
public:
	class AShooterHUD*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionReactionData
struct APrimalBuff_Companion_GetCurrentCompanionReactionData_Params
{
public:
	struct FCompanionReactionData                ReturnValue;                                       // 0x0(0xB0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionEventData
struct APrimalBuff_Companion_GetCurrentCompanionEventData_Params
{
public:
	struct FCompanionEventData                   ReturnValue;                                       // 0x0(0x50)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetCompanionWorldLocation
struct APrimalBuff_Companion_GetCompanionWorldLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x500 (0x500 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetClosestNearbyPointOfInterest
struct APrimalBuff_Companion_GetClosestNearbyPointOfInterest_Params
{
public:
	struct FPointOfInterestData_ForCompanion     ClosestPointData;                                  // 0x0(0x4E0)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ClosestPointLoc;                                   // 0x4E0(0x18)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4F8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C2D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.GetAllExplorerNotesInWorld
struct APrimalBuff_Companion_GetAllExplorerNotesInWorld_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.ForceUnhibernateAtLocation
struct APrimalBuff_Companion_ForceUnhibernateAtLocation_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C2E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.ForceHibernateAtLocation
struct APrimalBuff_Companion_ForceHibernateAtLocation_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        ActorsToHibernate;                                 // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C2F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.DrawFocusedActorToolTip
struct APrimalBuff_Companion_DrawFocusedActorToolTip_Params
{
public:
	class AActor*                                TargetedActor;                                     // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.ClientToggleForceMonologue
struct APrimalBuff_Companion_ClientToggleForceMonologue_Params
{
public:
	bool                                         Newval;                                            // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0xC8 (0xC8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.Client_AddCompanionReaction
struct APrimalBuff_Companion_Client_AddCompanionReaction_Params
{
public:
	struct FCompanionReactionData                WithReactionData;                                  // 0x0(0xB0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcePlayNow;                                     // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C30[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIconOverride;                              // 0xB8(0x8)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        UniqueID;                                          // 0xC0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C31[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.CanStartCompanionEvent
struct APrimalBuff_Companion_CanStartCompanionEvent_Params
{
public:
	class AActor*                                EventActor;                                        // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionEventData                   WithEventData;                                     // 0x8(0x50)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x58(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.CanRemotelyFocusOnRemoteActorForTooltip
struct APrimalBuff_Companion_CanRemotelyFocusOnRemoteActorForTooltip_Params
{
public:
	class AActor*                                TargetedActor;                                     // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C33[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.CanPlayEnvironmentalCompanionReaction
struct APrimalBuff_Companion_CanPlayEnvironmentalCompanionReaction_Params
{
public:
	struct FCompanionReactionData                CanPlayReactionData;                               // 0x0(0xB0)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xB0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C34[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.CanPlayCompanionReaction
struct APrimalBuff_Companion_CanPlayCompanionReaction_Params
{
public:
	struct FCompanionReactionData                CanPlayReactionData;                               // 0x0(0xB0)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xB0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C35[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.BPServerside_IsPerMapExplorerNoteUnlocked
struct APrimalBuff_Companion_BPServerside_IsPerMapExplorerNoteUnlocked_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         CouldDetermine;                                    // 0x4(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         HasPlayerUnlockedNote;                             // 0x5(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C36[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC8 (0xC8 - 0x0)
// Function ShooterGame.PrimalBuff_Companion.AddCompanionReaction
struct APrimalBuff_Companion_AddCompanionReaction_Params
{
public:
	struct FCompanionReactionData                WithReactionData;                                  // 0x0(0xB0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForcePlayNow;                                     // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C37[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIconOverride;                              // 0xB8(0x8)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        UniqueID;                                          // 0xC0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C38[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.UpdateTethersByState
struct APrimalBuff_Grappled_UpdateTethersByState_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.UpdateTetherMasterRef
struct APrimalBuff_Grappled_UpdateTetherMasterRef_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInit;                                             // 0x1B8(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C42[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.UpdateOwnerMovementSpeed
struct APrimalBuff_Grappled_UpdateOwnerMovementSpeed_Params
{
public:
	struct FVector                               WithCharVelocity;                                  // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.UpdateGrappleTetherVars
struct APrimalBuff_Grappled_UpdateGrappleTetherVars_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.UpdateAgainstSurfaceFromHits
struct APrimalBuff_Grappled_UpdateAgainstSurfaceFromHits_Params
{
public:
	TArray<struct FHitResult>                    Hits;                                              // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateGrappleTethers
struct APrimalBuff_Grappled_Tick_UpdateGrappleTethers_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateAgainstSurface
struct APrimalBuff_Grappled_Tick_UpdateAgainstSurface_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.TetherHasValidMasterRef
struct APrimalBuff_Grappled_TetherHasValidMasterRef_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C43[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SyncOwnerInputs
struct APrimalBuff_Grappled_SyncOwnerInputs_Params
{
public:
	struct FVector2D                             NewInputs;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SimulateTetherFriction
struct APrimalBuff_Grappled_SimulateTetherFriction_Params
{
public:
	struct FVector                               WithCharVelocity;                                  // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3C44[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SimulateTautTetherForces
struct APrimalBuff_Grappled_SimulateTautTetherForces_Params
{
public:
	struct FVector                               WithCharVelocity;                                  // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        LastGravityZ;                                      // 0x1C(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldUseDynamicTetherTension
struct APrimalBuff_Grappled_ShouldUseDynamicTetherTension_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C45[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldTetherBreak
struct APrimalBuff_Grappled_ShouldTetherBreak_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForChar;                                           // 0x1B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        OverrideBreakPastDist;                             // 0x1C0(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C46[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldReturnToIdleGrappleState
struct APrimalBuff_Grappled_ShouldReturnToIdleGrappleState_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldReplicateOwnerInputs
struct APrimalBuff_Grappled_ShouldReplicateOwnerInputs_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldOwnerBeAffectedByTether
struct APrimalBuff_Grappled_ShouldOwnerBeAffectedByTether_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     ForGrappeState;                                    // 0x1B8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C47[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1D8 (0x1D8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ShouldForceOwnerIntoFallingState
struct APrimalBuff_Grappled_ShouldForceOwnerIntoFallingState_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               WithOwnerVelocity;                                 // 0x1B8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	enum class EMovementMode                     CheckMovementModeOverride;                         // 0x1D0(0x1)(ConstParm, BlueprintVisible, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1D1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C48[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SetupDelegateBindingsForChar
struct APrimalBuff_Grappled_SetupDelegateBindingsForChar_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoBind;                                           // 0x8(0x1)(Edit, Net, Parm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C4A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherLength
struct APrimalBuff_Grappled_SetGrappleTetherLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SetNewLength;                                      // 0x1B8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ForTetherIndex;                                    // 0x1BC(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C4C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherAtIndexLength
struct APrimalBuff_Grappled_SetGrappleTetherAtIndexLength_Params
{
public:
	int32                                        AtIndex;                                           // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        SetNewLength;                                      // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C4D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.SetGrappleState
struct APrimalBuff_Grappled_SetGrappleState_Params
{
public:
	enum class EGrappleState                     NewGrappleState;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUpdate;                                      // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Server_SyncOwnerInputs
struct APrimalBuff_Grappled_Server_SyncOwnerInputs_Params
{
public:
	struct FVector2D                             NewInputs;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLengths
struct APrimalBuff_Grappled_Server_SuggestTetherLengths_Params
{
public:
	TArray<float>                                NewTetherLengths;                                  // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLength
struct APrimalBuff_Grappled_Server_SuggestTetherLength_Params
{
public:
	float                                        NewTetherLength;                                   // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Server_SetGrappleState
struct APrimalBuff_Grappled_Server_SetGrappleState_Params
{
public:
	uint8                                        NewGrappleState;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUpdate;                                      // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.RemoveGrappleTether
struct APrimalBuff_Grappled_RemoveGrappleTether_Params
{
public:
	int32                                        AtIndex;                                           // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C54[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WithTag;                                           // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalBuff_Grappled*                  WithMasterBuff;                                    // 0x18(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceNetSync;                                     // 0x20(0x1)(BlueprintVisible, ExportObject, Parm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRemoveAllTethersWithTag;                          // 0x21(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x22(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C55[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthSuggestion
struct APrimalBuff_Grappled_ReceiveTetherLengthSuggestion_Params
{
public:
	int32                                        ForTetherIndex;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	float                                        NewTetherLength;                                   // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthsSuggestion
struct APrimalBuff_Grappled_ReceiveTetherLengthsSuggestion_Params
{
public:
	TArray<float>                                NewTetherLengths;                                  // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnReleasedPrimalChar
struct APrimalBuff_Grappled_OnReleasedPrimalChar_Params
{
public:
	class APrimalCharacter*                      ReleasedChar;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnOwnerSleepStateChanged
struct APrimalBuff_Grappled_OnOwnerSleepStateChanged_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C59[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnOwnerDeath
struct APrimalBuff_Grappled_OnOwnerDeath_Params
{
public:
	class APrimalCharacter*                      DyingChar;                                         // 0x0(0x8)(Edit, Net, EditConst, InstancedReference, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnOwnerCapsuleHit
struct APrimalBuff_Grappled_OnOwnerCapsuleHit_Params
{
public:
	class AActor*                                OtherActor;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               NormalImpulse;                                     // 0x10(0x18)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x28(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherRemoved
struct APrimalBuff_Grappled_OnGrappleTetherRemoved_Params
{
public:
	struct FGrappleTether                        RemovedTether;                                     // 0x0(0x1B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherBroken
struct APrimalBuff_Grappled_OnGrappleTetherBroken_Params
{
public:
	int32                                        BrokenIndex;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherAdded
struct APrimalBuff_Grappled_OnGrappleTetherAdded_Params
{
public:
	struct FGrappleTether                        AddedTether;                                       // 0x0(0x1B8)(ExportObject, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappleStateChangedNotify
struct APrimalBuff_Grappled_OnGrappleStateChangedNotify_Params
{
public:
	uint8                                        NewGrappleState;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEarlyNotify;                                    // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappledPrimalChar
struct APrimalBuff_Grappled_OnGrappledPrimalChar_Params
{
public:
	class APrimalCharacter*                      GrappledChar;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        WithMasterTether;                                  // 0x8(0x1B8)(Edit, ConstParm, BlueprintVisible, Net, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharSleepStateChange
struct APrimalBuff_Grappled_OnGrappledCharSleepStateChange_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3C5D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharDeath
struct APrimalBuff_Grappled_OnGrappledCharDeath_Params
{
public:
	class APrimalCharacter*                      DyingChar;                                         // 0x0(0x8)(Edit, Net, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLengths
struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLengths_Params
{
public:
	TArray<float>                                SyncedTetherLengths;                               // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLength
struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLength_Params
{
public:
	float                                        SyncedTetherLength;                                // 0x0(0x4)(BlueprintVisible, ExportObject, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ModifyTetherTensionLerpValue
struct APrimalBuff_Grappled_ModifyTetherTensionLerpValue_Params
{
public:
	float                                        CurrentLerpValue;                                  // 0x0(0x4)(Edit, ConstParm, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ModifyTetherMoveVelocity
struct APrimalBuff_Grappled_ModifyTetherMoveVelocity_Params
{
public:
	struct FVector                               CurrentMoveVelocity;                               // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x18(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ModifyOverriddenCharVelocity
struct APrimalBuff_Grappled_ModifyOverriddenCharVelocity_Params
{
public:
	struct FVector                               CurrentCharVelocity;                               // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3C60[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1D8 (0x1D8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ModifyGrappledCharVelocity
struct APrimalBuff_Grappled_ModifyGrappledCharVelocity_Params
{
public:
	struct FVector                               CurrentCharVelocity;                               // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x18(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x1D0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3C63[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x320 (0x320 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.MakeGrappleTether
struct APrimalBuff_Grappled_MakeGrappleTether_Params
{
public:
	struct FCreateGrappleTetherData              FromData;                                          // 0x0(0x160)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalBuff_Grappled*                  ForMasterBuff;                                     // 0x160(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ReturnValue;                                       // 0x168(0x1B8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsValidSurfaceHit
struct APrimalBuff_Grappled_IsValidSurfaceHit_Params
{
public:
	struct FHitResult                            ForHit;                                            // 0x0(0xF0)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C65[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsValidGrappleHit
struct APrimalBuff_Grappled_IsValidGrappleHit_Params
{
public:
	struct FHitResult                            ForHit;                                            // 0x0(0xF0)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C66[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsTethersMasterGrappleBuff
struct APrimalBuff_Grappled_IsTethersMasterGrappleBuff_Params
{
public:
	struct FGrappleTether                        CheckTether;                                       // 0x0(0x1B8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C69[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsTetherAtMaxLength
struct APrimalBuff_Grappled_IsTetherAtMaxLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C6A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsSwingingTowardsAxisCenter
struct APrimalBuff_Grappled_IsSwingingTowardsAxisCenter_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C6C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsOwnerLookingAtAgainstSurface
struct APrimalBuff_Grappled_IsOwnerLookingAtAgainstSurface_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsOwnerAgainstValidSurface
struct APrimalBuff_Grappled_IsOwnerAgainstValidSurface_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsOwnerAboveGround
struct APrimalBuff_Grappled_IsOwnerAboveGround_Params
{
public:
	struct FVector                               FoundGroundLocation;                               // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckDistance;                                     // 0x18(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C6E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsHitWithinGrappleRange
struct APrimalBuff_Grappled_IsHitWithinGrappleRange_Params
{
public:
	struct FHitResult                            ForHit;                                            // 0x0(0xF0)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C70[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsGrappleTetherValid
struct APrimalBuff_Grappled_IsGrappleTetherValid_Params
{
public:
	struct FGrappleTether                        CheckTether;                                       // 0x0(0x1B8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C71[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsGrappledCharHardAttached
struct APrimalBuff_Grappled_IsGrappledCharHardAttached_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C73[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.IsCharPastMaxTetherLength
struct APrimalBuff_Grappled_IsCharPastMaxTetherLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForChar;                                           // 0x1B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C77[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.InitializeGrappleTether
struct APrimalBuff_Grappled_InitializeGrappleTether_Params
{
public:
	struct FGrappleTether                        InitTether;                                        // 0x0(0x1B8)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalBuff_Grappled*                  ByGrappleBuff;                                     // 0x1B8(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C78[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GrappleTick
struct APrimalBuff_Grappled_GrappleTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x378 (0x378 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetTetherMasterRef
struct APrimalBuff_Grappled_GetTetherMasterRef_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        MasterRef;                                         // 0x1B8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x370(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C79[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthForTime
struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthForTime_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1B8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C7A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthDelta
struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthDelta_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1B8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C7B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_GrappledActorAboveVelocity
struct APrimalBuff_Grappled_GetTetherBreakLimit_GrappledActorAboveVelocity_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1B8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C7C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetRequiredTetherLengthForChar
struct APrimalBuff_Grappled_GetRequiredTetherLengthForChar_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForChar;                                           // 0x1B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C7D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetReplicatedOwnerInputs
struct APrimalBuff_Grappled_GetReplicatedOwnerInputs_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetOwnerAppendedTetherTag
struct APrimalBuff_Grappled_GetOwnerAppendedTetherTag_Params
{
public:
	class FString                                WithRootTag;                                       // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalBuff_Grappled*                  OwnerGrappleBuff;                                  // 0x10(0x8)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetNumValidTethers
struct APrimalBuff_Grappled_GetNumValidTethers_Params
{
public:
	bool                                         bOnlyReservedTethers;                              // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C7E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetNumReservedTethers
struct APrimalBuff_Grappled_GetNumReservedTethers_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetMinTetherLength
struct APrimalBuff_Grappled_GetMinTetherLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1B8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C7F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetMaxTetherLength
struct APrimalBuff_Grappled_GetMaxTetherLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1B8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C80[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetInitGrappleAnchorRelativeOffset
struct APrimalBuff_Grappled_GetInitGrappleAnchorRelativeOffset_Params
{
public:
	struct FGrappleAnchor                        ForAnchorData;                                     // 0x0(0x50)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                WithAnchorOwner;                                   // 0x50(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x58(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleVelocityDampingRate
struct APrimalBuff_Grappled_GetGrappleVelocityDampingRate_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C81[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherRootTag
struct APrimalBuff_Grappled_GetGrappleTetherRootTag_Params
{
public:
	class FString                                ForTag;                                            // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherReleaseMaxVelocity
struct APrimalBuff_Grappled_GetGrappleTetherReleaseMaxVelocity_Params
{
public:
	class APrimalCharacter*                      ForReleasingChar;                                  // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C83[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullMaxVelocity
struct APrimalBuff_Grappled_GetGrappleTetherPullMaxVelocity_Params
{
public:
	class APrimalCharacter*                      ForPullingChar;                                    // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C86[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullAcceleration
struct APrimalBuff_Grappled_GetGrappleTetherPullAcceleration_Params
{
public:
	class APrimalCharacter*                      ForPullingChar;                                    // 0x0(0x8)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C87[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetGrappleAnchorWorldLocation
struct APrimalBuff_Grappled_GetGrappleAnchorWorldLocation_Params
{
public:
	struct FGrappleAnchor                        ForAnchorData;                                     // 0x0(0x50)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                WithAnchorOwner;                                   // 0x50(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x58(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1D0 (0x1D0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetCurrentTetherMoveDir
struct APrimalBuff_Grappled_GetCurrentTetherMoveDir_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x1B8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetCurrentSwingingAxisValues
struct APrimalBuff_Grappled_GetCurrentSwingingAxisValues_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetCurrentGrappleState
struct APrimalBuff_Grappled_GetCurrentGrappleState_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	enum class EGrappleState                     ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C89[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetCharDistanceFromTetherEndRatio
struct APrimalBuff_Grappled_GetCharDistanceFromTetherEndRatio_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForChar;                                           // 0x1B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C8B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetCharAngleToGrappleTetherEnd
struct APrimalBuff_Grappled_GetCharAngleToGrappleTetherEnd_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ForChar;                                           // 0x1B8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x1C0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C8C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetAverageTetherEndLocation
struct APrimalBuff_Grappled_GetAverageTetherEndLocation_Params
{
public:
	bool                                         bReservedTethersOnly;                              // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C8D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetAllCurrentGrapplers
struct APrimalBuff_Grappled_GetAllCurrentGrapplers_Params
{
public:
	TArray<class APrimalCharacter*>              ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.GetActorAttachParentChar
struct APrimalBuff_Grappled_GetActorAttachParentChar_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.DisplayGrappleSystemHudNotification
struct APrimalBuff_Grappled_DisplayGrappleSystemHudNotification_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                FromActor;                                         // 0x8(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        NotificationType;                                  // 0x10(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3C90[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NotificationID;                                    // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReasonString;                                      // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C91[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CustomGrappleTick
struct APrimalBuff_Grappled_CustomGrappleTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ClampOwnerReleasingVelocity
struct APrimalBuff_Grappled_ClampOwnerReleasingVelocity_Params
{
public:
	struct FVector                               WithReleasingVelocity;                             // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ClampGrappleVelocity
struct APrimalBuff_Grappled_ClampGrappleVelocity_Params
{
public:
	struct FVector                               ClampVelocity;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CheckForTetherBreak
struct APrimalBuff_Grappled_CheckForTetherBreak_Params
{
public:
	struct FGrappleTether                        CheckTether;                                       // 0x0(0x1B8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        WithIndex;                                         // 0x1B8(0x4)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideBreakPastDist;                             // 0x1BC(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CheckForAutoBreakTether
struct APrimalBuff_Grappled_CheckForAutoBreakTether_Params
{
public:
	struct FGrappleTether                        CheckTether;                                       // 0x0(0x1B8)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C96[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanUpdateTetherLength
struct APrimalBuff_Grappled_CanUpdateTetherLength_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        WithLength;                                        // 0x1B8(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1BC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C97[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanTetherOwnerPullGrappledChar
struct APrimalBuff_Grappled_CanTetherOwnerPullGrappledChar_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C98[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanSyncGrappleTetherLengths
struct APrimalBuff_Grappled_CanSyncGrappleTetherLengths_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanReceiveNewGrappleTether
struct APrimalBuff_Grappled_CanReceiveNewGrappleTether_Params
{
public:
	class FString                                WithTag;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C9A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanPullChar
struct APrimalBuff_Grappled_CanPullChar_Params
{
public:
	class APrimalCharacter*                      PullChar;                                          // 0x0(0x8)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForStart;                                         // 0x8(0x1)(Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C9D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanOwnerGrappleSwing
struct APrimalBuff_Grappled_CanOwnerGrappleSwing_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanManipulateOwnerVelocity
struct APrimalBuff_Grappled_CanManipulateOwnerVelocity_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanGrappleTetherAffectOwnerMovement
struct APrimalBuff_Grappled_CanGrappleTetherAffectOwnerMovement_Params
{
public:
	struct FGrappleTether                        ForTether;                                         // 0x0(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3C9F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C8 (0x1C8 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanCharControlGrappleTether
struct APrimalBuff_Grappled_CanCharControlGrappleTether_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FGrappleTether                        ForTether;                                         // 0x8(0x1B8)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSlaveGrappleToControl;                       // 0x1C0(0x1)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CA3[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanChangeGrappleState
struct APrimalBuff_Grappled_CanChangeGrappleState_Params
{
public:
	uint8                                        DesiredGrappleState;                               // 0x0(0x1)(OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.CanBeGrappledAgainstSurface
struct APrimalBuff_Grappled_CanBeGrappledAgainstSurface_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.BreakGrappleTether
struct APrimalBuff_Grappled_BreakGrappleTether_Params
{
public:
	int32                                        AtIndex;                                           // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CA4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                WithTag;                                           // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalBuff_Grappled*                  WithMasterBuff;                                    // 0x18(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBreakAllTethersWithTag;                           // 0x20(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CA5[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.BreakChildTetherOnGrappledChar
struct APrimalBuff_Grappled_BreakChildTetherOnGrappledChar_Params
{
public:
	struct FGrappleTether                        WithTether;                                        // 0x0(0x1B8)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CA6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.BP_InterceptGrappleLogic
struct APrimalBuff_Grappled_BP_InterceptGrappleLogic_Params
{
public:
	struct FVector                               CharVelocity;                                      // 0x0(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CA7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.AreGrappleTetherTagsEqual
struct APrimalBuff_Grappled_AreGrappleTetherTagsEqual_Params
{
public:
	class FString                                TagA;                                              // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	class FString                                TagB;                                              // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyCompareRootTag;                               // 0x20(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CA8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ApplyTetherMoveVelocity
struct APrimalBuff_Grappled_ApplyTetherMoveVelocity_Params
{
public:
	struct FVector                               CurrentVelocity;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3CA9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.ApplyOwnerSwingingVelocity
struct APrimalBuff_Grappled_ApplyOwnerSwingingVelocity_Params
{
public:
	struct FVector                               CurrentVelocity;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3CAA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.AllowGrappleLogic
struct APrimalBuff_Grappled_AllowGrappleLogic_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.AdjustMovementVectorIfAgainstSurface
struct APrimalBuff_Grappled_AdjustMovementVectorIfAgainstSurface_Params
{
public:
	struct FVector                               AdjustVector;                                      // 0x0(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x170 (0x170 - 0x0)
// Function ShooterGame.PrimalBuff_Grappled.AddGrappleTether
struct APrimalBuff_Grappled_AddGrappleTether_Params
{
public:
	struct FCreateGrappleTetherData              FromData;                                          // 0x0(0x160)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventNetSync;                                   // 0x160(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CAD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AddAtIndex;                                        // 0x164(0x4)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x168(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CAE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.UnloadLevelsForMissionTag
struct APrimalBuff_MissionData_UnloadLevelsForMissionTag_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Vector
struct APrimalBuff_MissionData_SetMissionData_Vector_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               Value;                                             // 0x10(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Struct
struct APrimalBuff_MissionData_SetMissionData_Struct_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FPropertyThunkWrapper                 Value;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_String
struct APrimalBuff_MissionData_SetMissionData_String_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                Value;                                             // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Rotator
struct APrimalBuff_MissionData_SetMissionData_Rotator_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              Value;                                             // 0x10(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Int
struct APrimalBuff_MissionData_SetMissionData_Int_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        Value;                                             // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Float
struct APrimalBuff_MissionData_SetMissionData_Float_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        Value;                                             // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Double
struct APrimalBuff_MissionData_SetMissionData_Double_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	double                                       Value;                                             // 0x10(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Bool
struct APrimalBuff_MissionData_SetMissionData_Bool_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         Value;                                             // 0x10(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_3CCA[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ServerRequestToggleWeapon
struct APrimalBuff_MissionData_ServerRequestToggleWeapon_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMissionWithMissionTag
struct APrimalBuff_MissionData_ServerRequestStartMissionWithMissionTag_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AMissionDispatcher*                    FromDispatcher;                                    // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMission
struct APrimalBuff_MissionData_ServerRequestStartMission_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	class AMissionDispatcher*                    FromDispatcher;                                    // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ServerRequestMissionEligibilityCheck
struct APrimalBuff_MissionData_ServerRequestMissionEligibilityCheck_Params
{
public:
	class AMissionDispatcher*                    DispatcherFilter;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ServerRequestEquipMissionItem
struct APrimalBuff_MissionData_ServerRequestEquipMissionItem_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseStarted
struct APrimalBuff_MissionData_OnActiveMissionPhaseStarted_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FName                                  OldPhase;                                          // 0x8(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewPhase;                                          // 0x10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseEnded
struct APrimalBuff_MissionData_OnActiveMissionPhaseEnded_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FName                                  OldPhase;                                          // 0x8(0x8)(Edit, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  NewPhase;                                          // 0x10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Int
struct APrimalBuff_MissionData_MultiUpdateMissionData_Int_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        Value;                                             // 0x10(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Bool
struct APrimalBuff_MissionData_MultiUpdateMissionData_Bool_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         Value;                                             // 0x10(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_3CD3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.MultiClearParticleIndicator
struct APrimalBuff_MissionData_MultiClearParticleIndicator_Params
{
public:
	float                                        RemoveAfterDuration;                               // 0x0(0x4)(Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.LoadLevelsForMissionTag
struct APrimalBuff_MissionData_LoadLevelsForMissionTag_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.IsPlayerEligibleForMission_CheckFromClient
struct APrimalBuff_MissionData_IsPlayerEligibleForMission_CheckFromClient_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bOutIsRecentData;                                  // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CD5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FClientMissionEligibility             OutEligibilityData;                                // 0x10(0x38)(Edit, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxTimeConsideredRecent;                           // 0x48(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CD6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AMissionDispatcher*                    DispatcherFilter;                                  // 0x50(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x58(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CD7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActiveWithMissionTag
struct APrimalBuff_MissionData_IsMissionTypeActiveWithMissionTag_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CD9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActive
struct APrimalBuff_MissionData_IsMissionTypeActive_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bExactClassMatch;                                  // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CDB[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetWorldIndicatorsForMission
struct APrimalBuff_MissionData_GetWorldIndicatorsForMission_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	TArray<struct FMissionWorldIndicator>        WorldIndicators;                                   // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCompanionOnly;                                    // 0x18(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSortByPriority;                                   // 0x19(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CDD[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionDebugData
struct APrimalBuff_MissionData_GetMissionDebugData_Params
{
public:
	TArray<struct FSerializedMissionData>        OutMissionData;                                    // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Vector
struct APrimalBuff_MissionData_GetMissionData_Vector_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FVector                               OutValue;                                          // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Struct
struct APrimalBuff_MissionData_GetMissionData_Struct_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FPropertyThunkWrapper                 DestStruct;                                        // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_String
struct APrimalBuff_MissionData_GetMissionData_String_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                OutValue;                                          // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Rotator
struct APrimalBuff_MissionData_GetMissionData_Rotator_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              OutValue;                                          // 0x10(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Int
struct APrimalBuff_MissionData_GetMissionData_Int_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	int32                                        OutValue;                                          // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Float
struct APrimalBuff_MissionData_GetMissionData_Float_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        OutValue;                                          // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Double
struct APrimalBuff_MissionData_GetMissionData_Double_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	double                                       OutValue;                                          // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Bool
struct APrimalBuff_MissionData_GetMissionData_Bool_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  Key;                                               // 0x8(0x8)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         OutValue;                                          // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3CE8[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetBiomeMissionTag
struct APrimalBuff_MissionData_GetBiomeMissionTag_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class FName                                  ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetAllCurrentMissions
struct APrimalBuff_MissionData_GetAllCurrentMissions_Params
{
public:
	TArray<class AMissionType*>                  OutMissions;                                       // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.GetActiveMission
struct APrimalBuff_MissionData_GetActiveMission_Params
{
public:
	class AMissionType*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientUnloadMissionLevels
struct APrimalBuff_MissionData_ClientUnloadMissionLevels_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientSpawnEmitter
struct APrimalBuff_MissionData_ClientSpawnEmitter_Params
{
public:
	class UClass*                                EmitterType;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CE9[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            EmitterTransform;                                  // 0x10(0x60)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        EmitterLifespan;                                   // 0x70(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CEA[0xC];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionNotification
struct APrimalBuff_MissionData_ClientSendMissionNotification_Params
{
public:
	class AMissionType*                          FromMission;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class FName                                  NotificationTag;                                   // 0x8(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x20(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DisplayScale;                                      // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSingleton;                                      // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CEC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            MessageSound;                                      // 0x38(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionAlert
struct APrimalBuff_MissionData_ClientSendMissionAlert_Params
{
public:
	enum class EMissionAlertType                 AlertType;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CEE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AlertTitle;                                        // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionAlertEntry>            AlertEntries;                                      // 0x18(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3CEF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            Sound;                                             // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         FlyoutFromTop;                                     // 0x38(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CF0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientMissionEvent
struct APrimalBuff_MissionData_ClientMissionEvent_Params
{
public:
	class AMissionType*                          Mission;                                           // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bMissionStarted;                                   // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMissionCompletedSuccessfully;                     // 0x9(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CF1[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientMissionEligibilityResponse
struct APrimalBuff_MissionData_ClientMissionEligibilityResponse_Params
{
public:
	TArray<struct FMissionEligibilityData>       EligibilityData;                                   // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalBuff_MissionData.ClientLoadMissionLevels
struct APrimalBuff_MissionData_ClientLoadMissionLevels_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCableComponent.SpreadOutParticles
struct UPrimalCableComponent_SpreadOutParticles_Params
{
public:
	struct FVector                               StartPosition;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               EndPosition;                                       // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCableComponent.SetAttachEndOverrideComponent
struct UPrimalCableComponent_SetAttachEndOverrideComponent_Params
{
public:
	class USceneComponent*                       Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCableComponent.GetEndPositions
struct UPrimalCableComponent_GetEndPositions_Params
{
public:
	struct FVector                               OutStartPosition;                                  // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OutEndPosition;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalCableComponent.GetCableParticle
struct UPrimalCableComponent_GetCableParticle_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3CF8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCableParticle                        ReturnValue;                                       // 0x8(0x38)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCableComponent.GetCableMidPoint
struct UPrimalCableComponent_GetCableMidPoint_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCableComponent.GetAttachEndOverrideComponent
struct UPrimalCableComponent_GetAttachEndOverrideComponent_Params
{
public:
	class USceneComponent*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.UnProne
struct UPrimalCharacterMovement_UnProne_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.UnCrouch
struct UPrimalCharacterMovement_UnCrouch_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.SetBase
struct UPrimalCharacterMovement_SetBase_Params
{
public:
	class UPrimitiveComponent*                   NewBase;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class FName                                  BoneName;                                          // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bNotifyActor;                                      // 0x10(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D03[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.ServerJumpOutOfWater
struct UPrimalCharacterMovement_ServerJumpOutOfWater_Params
{
public:
	struct FVector_NetQuantize100                WallNormal;                                        // 0x0(0x18)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        JumpFlag;                                          // 0x18(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D05[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.Prone
struct UPrimalCharacterMovement_Prone_Params
{
public:
	bool                                         bClientSimulation;                                 // 0x0(0x1)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.IsOnWalkableFloor
struct UPrimalCharacterMovement_IsOnWalkableFloor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.IsMovingBackwards
struct UPrimalCharacterMovement_IsMovingBackwards_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.GetPrimalCharacter
struct UPrimalCharacterMovement_GetPrimalCharacter_Params
{
public:
	class APrimalCharacter*                      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterMovement.ClearBase
struct UPrimalCharacterMovement_ClearBase_Params
{
public:
	bool                                         bNotifyActor;                                      // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.UpdateWeightStat
struct UPrimalCharacterStatusComponent_UpdateWeightStat_Params
{
public:
	bool                                         bForceSetValue;                                    // 0x0(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.UpdatedCurrentStatusValue
struct UPrimalCharacterStatusComponent_UpdatedCurrentStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D24[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Amount;                                            // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bManualModification;                               // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D26[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bDamageDontKill;                                   // 0x18(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontAdjustOtherStats;                             // 0x19(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D27[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.TickStatus
struct UPrimalCharacterStatusComponent_TickStatus_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bForceStatusUpdate;                                // 0x4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D28[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetTamed
struct UPrimalCharacterStatusComponent_SetTamed_Params
{
public:
	float                                        TameIneffectivenessModifier;                       // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSkipAddingTamedLevels;                            // 0x4(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D2A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetMutationPoints
struct UPrimalCharacterStatusComponent_SetMutationPoints_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D2C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NewPoints;                                         // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetMaxStatusValue
struct UPrimalCharacterStatusComponent_SetMaxStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       StatType;                                          // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D2D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewValue;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetLevelUpStatWeightOverrides
struct UPrimalCharacterStatusComponent_SetLevelUpStatWeightOverrides_Params
{
public:
	TArray<float>                                Weights;                                           // 0x0(0x10)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetLevelUpPoints
struct UPrimalCharacterStatusComponent_SetLevelUpPoints_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTamedPoints;                                      // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D30[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NewPoints;                                         // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetExtraCharacterLevel
struct UPrimalCharacterStatusComponent_SetExtraCharacterLevel_Params
{
public:
	int32                                        NewExtraCharacterLevel;                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetCheatLevels
struct UPrimalCharacterStatusComponent_SetCheatLevels_Params
{
public:
	TArray<int32>                                LevelsToApply;                                     // 0x0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelNoStatChange
struct UPrimalCharacterStatusComponent_SetBaseLevelNoStatChange_Params
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelCustomized
struct UPrimalCharacterStatusComponent_SetBaseLevelCustomized_Params
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_3D33[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FStatValuePair>                CustomBaseStats;                                   // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<enum class EPrimalCharacterStatusValue> PrioritizeStats;                                   // 0x18(0x10)(Edit, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bDontCurrentSetToMax;                              // 0x28(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D34[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevel
struct UPrimalCharacterStatusComponent_SetBaseLevel_Params
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	bool                                         bDontCurrentSetToMax;                              // 0x4(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D36[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.SetAllStatsToMaximumExcluding
struct UPrimalCharacterStatusComponent_SetAllStatsToMaximumExcluding_Params
{
public:
	enum class EPrimalCharacterStatusValue       Exclude;                                           // 0x0(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.RescaleMaxStat
struct UPrimalCharacterStatusComponent_RescaleMaxStat_Params
{
public:
	enum class EPrimalCharacterStatusValue       LevelUpValueType;                                  // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D38[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        TargetValue;                                       // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsPercentOfTrueValue;                             // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D39[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.RemoveStatusValueModifierByInstigator
struct UPrimalCharacterStatusComponent_RemoveStatusValueModifierByInstigator_Params
{
public:
	class AActor*                                Instigator;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.RemoveStatusValueModifierByIndex
struct UPrimalCharacterStatusComponent_RemoveStatusValueModifierByIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.NetSyncMaxStatusValues
struct UPrimalCharacterStatusComponent_NetSyncMaxStatusValues_Params
{
public:
	TArray<float>                                NetMaxStatusValues;                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                NetBaseMaxStatusValues;                            // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.NetSetMaxTamingEffectivenessBaseLevelMultiplier
struct UPrimalCharacterStatusComponent_NetSetMaxTamingEffectivenessBaseLevelMultiplier_Params
{
public:
	float                                        NewValue;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.ModifyCurrentStatusValue
struct UPrimalCharacterStatusComponent_ModifyCurrentStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D3C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Amount;                                            // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPercentOfMax;                                     // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPercentOfCurrent;                                 // 0x9(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bManualModification;                               // 0xA(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSetValue;                                         // 0xB(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D3D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bDamageDontKill;                                   // 0x18(0x1)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceSetValue;                                    // 0x19(0x1)(Edit, ConstParm, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D3E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.IsInStatusState
struct UPrimalCharacterStatusComponent_IsInStatusState_Params
{
public:
	enum class EPrimalCharacterStatusState       StateType;                                         // 0x0(0x1)(BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.IsAtMaxLevel
struct UPrimalCharacterStatusComponent_IsAtMaxLevel_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.IsAtMaxExperience
struct UPrimalCharacterStatusComponent_IsAtMaxExperience_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.HasExperienceForLevelUp
struct UPrimalCharacterStatusComponent_HasExperienceForLevelUp_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueString
struct UPrimalCharacterStatusComponent_GetStatusValueString_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bValueOnly;                                        // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D3F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueRecoveryRate
struct UPrimalCharacterStatusComponent_GetStatusValueRecoveryRate_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusNameString
struct UPrimalCharacterStatusComponent_GetStatusNameString_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D42[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetStatusMaxValueString
struct UPrimalCharacterStatusComponent_GetStatusMaxValueString_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bValueOnly;                                        // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D43[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetRawStatusValueRecoveryRate
struct UPrimalCharacterStatusComponent_GetRawStatusValueRecoveryRate_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D44[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetMutationPoints
struct UPrimalCharacterStatusComponent_GetMutationPoints_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D45[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetMovementSpeedModifier
struct UPrimalCharacterStatusComponent_GetMovementSpeedModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetMeleeDamageModifier
struct UPrimalCharacterStatusComponent_GetMeleeDamageModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetMaxLevel
struct UPrimalCharacterStatusComponent_GetMaxLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetLevelUpPoints
struct UPrimalCharacterStatusComponent_GetLevelUpPoints_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTamedPoints;                                      // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D47[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetExtraCharacterLevel
struct UPrimalCharacterStatusComponent_GetExtraCharacterLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForPreviousLevelUp
struct UPrimalCharacterStatusComponent_GetExperienceRequiredForPreviousLevelUp_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForNextLevelUp
struct UPrimalCharacterStatusComponent_GetExperienceRequiredForNextLevelUp_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetDinoStatDistributionAgainstMax
struct UPrimalCharacterStatusComponent_GetDinoStatDistributionAgainstMax_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTamedPoints;                                      // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheckLevel;                                       // 0x2(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeMaxTamingEffLevels;                        // 0x3(0x1)(ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetDinoFoodConsumptionRateMultiplier
struct UPrimalCharacterStatusComponent_GetDinoFoodConsumptionRateMultiplier_Params
{
public:
	float                                        Amount;                                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetDebugString
struct UPrimalCharacterStatusComponent_GetDebugString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetCraftingSpeedModifier
struct UPrimalCharacterStatusComponent_GetCraftingSpeedModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetCharacterLevel
struct UPrimalCharacterStatusComponent_GetCharacterLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.GetBaseLevelFromLevelUpPoints
struct UPrimalCharacterStatusComponent_GetBaseLevelFromLevelUpPoints_Params
{
public:
	bool                                         bIncludePlayerAddedLevels;                         // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D4A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.CopyPrimalStatusComponentValues
struct UPrimalCharacterStatusComponent_CopyPrimalStatusComponentValues_Params
{
public:
	class UPrimalCharacterStatusComponent*       Src;                                               // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.ConvertIntToCharacterStatusEnum
struct UPrimalCharacterStatusComponent_ConvertIntToCharacterStatusEnum_Params
{
public:
	int32                                        InInteger;                                         // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3D4B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.ClientSyncMaxStatusValues
struct UPrimalCharacterStatusComponent_ClientSyncMaxStatusValues_Params
{
public:
	TArray<float>                                NetMaxStatusValues;                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                NetBaseMaxStatusValues;                            // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.ClearAllLevelUpPoints
struct UPrimalCharacterStatusComponent_ClearAllLevelUpPoints_Params
{
public:
	bool                                         bTamedPoints;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.CanLevelUp
struct UPrimalCharacterStatusComponent_CanLevelUp_Params
{
public:
	enum class EPrimalCharacterStatusValue       LevelUpValueType;                                  // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckExperience;                                  // 0x1(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.CanGainLevel
struct UPrimalCharacterStatusComponent_CanGainLevel_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPSetRecoveryRateStatusValue
struct UPrimalCharacterStatusComponent_BPSetRecoveryRateStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D4D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewValue;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxLevel
struct UPrimalCharacterStatusComponent_BPModifyMaxLevel_Params
{
public:
	int32                                        InMaxLevel;                                        // 0x0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxExperiencePoints
struct UPrimalCharacterStatusComponent_BPModifyMaxExperiencePoints_Params
{
public:
	float                                        InMaxExperiencePoints;                             // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPGetPercentStatusValue
struct UPrimalCharacterStatusComponent_BPGetPercentStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D4F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPGetMaxStatusValue
struct UPrimalCharacterStatusComponent_BPGetMaxStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D50[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPGetCurrentStatusValue
struct UPrimalCharacterStatusComponent_BPGetCurrentStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D52[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetMaxStatusValue
struct UPrimalCharacterStatusComponent_BPDirectSetMaxStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewValue;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetCurrentStatusValue
struct UPrimalCharacterStatusComponent_BPDirectSetCurrentStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D54[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        NewValue;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.BPAdjustStatusValueModification
struct UPrimalCharacterStatusComponent_BPAdjustStatusValueModification_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D56[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Amount;                                            // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                DamageTypeClass;                                   // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bManualModification;                               // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D57[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.AddStatusValueModifier
struct UPrimalCharacterStatusComponent_AddStatusValueModifier_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D5A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Amount;                                            // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Speed;                                             // 0x8(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bContinueOnUnchangedValue;                         // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetValue;                                         // 0xD(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D5B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        StatusValueModifierDescriptionIndex;               // 0x10(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bResetExistingModifierDescriptionIndex;            // 0x14(0x1)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D5C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LimitExistingModifierDescriptionToMaxAmount;       // 0x18(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSetAdditionalValue;                               // 0x1C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	enum class EPrimalCharacterStatusValue       StopAtValueNearMax;                                // 0x1D(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bMakeUntameable;                                   // 0x1E(0x1)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D5D[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ScaleValueByCharacterDamageType;                   // 0x20(0x8)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                Instigator;                                        // 0x28(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceImmediateTick;                               // 0x30(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3D5E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCharacterStatusComponent.AddExperience
struct UPrimalCharacterStatusComponent_AddExperience_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bShareWithTribe;                                   // 0x4(0x1)(BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EXPType                           XPType;                                            // 0x5(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3D5F[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalFallingTreeActor.UpdateWindSource
struct APrimalFallingTreeActor_UpdateWindSource_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalFieldSystemActor.SetActivationType
struct APrimalFieldSystemActor_SetActivationType_Params
{
public:
	enum class EFieldActivationType_New          NewActivationType;                                 // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalFieldSystemActor.CE_Trigger
struct APrimalFieldSystemActor_CE_Trigger_Params
{
public:
	struct FVector                               IncomingImpactVector;                              // 0x0(0x18)(BlueprintVisible, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        DirectionalForceStrengthMultiplier;                // 0x18(0x4)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        RadialForceStrengthMultiplier;                     // 0x1C(0x4)(ConstParm, Net, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        IncomingVelocity;                                  // 0x20(0x4)(Edit, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DA2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.UnRegisterWindSource
struct APrimalFoliageSolver_UnRegisterWindSource_Params
{
public:
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.RegisterWindSource
struct APrimalFoliageSolver_RegisterWindSource_Params
{
public:
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.GetValidSourceCount
struct APrimalFoliageSolver_GetValidSourceCount_Params
{
public:
	enum class EInteractionType                  Type;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_3DA4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.GetSourceDataId
struct APrimalFoliageSolver_GetSourceDataId_Params
{
public:
	enum class EInteractionType                  Type;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_3DA5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.ApplySimParametersWithValues
struct APrimalFoliageSolver_ApplySimParametersWithValues_Params
{
public:
	struct FTransform                            SourceSpaceTransform;                              // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x60(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x78(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        InnerSphereRadius;                                 // 0x90(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OuterSphereRadius;                                 // 0x94(0x4)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        InteractionStrength;                               // 0x98(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FoliagePlasticity;                                 // 0x9C(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        WaterBendAmount;                                   // 0xA0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector3f                             DirectionalRadial;                                 // 0xA4(0xC)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EInteractionType                  InteractionType;                                   // 0xB0(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DAA[0xF];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4f                             ExtraCapsuleVelocity;                              // 0xC0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OwnerLocation;                                     // 0xD0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DAB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector4f                             Dir;                                               // 0xF0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector4f                             SrcScale;                                          // 0x100(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.ApplyParametersFromVolumetricDispatch
struct APrimalFoliageSolver_ApplyParametersFromVolumetricDispatch_Params
{
public:
	struct FTransform                            SourceSpaceTransform;                              // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVolumetricDispatch                   Dispatch;                                          // 0x60(0x78)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class EInteractionType                  Type;                                              // 0xD8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_3DAC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.ApplyParametersFromSource
struct APrimalFoliageSolver_ApplyParametersFromSource_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3DAD[0xC];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            SourceSpaceTransform;                              // 0x10(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x70(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DAE[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalFoliageSolver.ApplyParameters
struct APrimalFoliageSolver_ApplyParameters_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGameData.TickedWorld
struct UPrimalGameData_TickedWorld_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	float                                        DeltaTime;                                         // 0x8(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_3DB3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.LocalIsPerMapExplorerNoteUnlocked
struct UPrimalGameData_LocalIsPerMapExplorerNoteUnlocked_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DB5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.LocalIsGlobalExplorerNoteUnlocked
struct UPrimalGameData_LocalIsGlobalExplorerNoteUnlocked_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DB7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.LoadedWorld
struct UPrimalGameData_LoadedWorld_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.GetXPMax
struct UPrimalGameData_GetXPMax_Params
{
public:
	enum class ELevelExperienceRampType          LevelType;                                         // 0x0(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DB9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalGameData.GetStatusStateDefinitions
struct UPrimalGameData_GetStatusStateDefinitions_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_3DBB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalCharacterStatusStateDefinition ReturnValue;                                       // 0x8(0x58)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalGameData.GetRedirectedClassFromRedirector
struct UPrimalGameData_GetRedirectedClassFromRedirector_Params
{
public:
	struct FInvalidReferenceRedirector           Redirector;                                        // 0x0(0x48)(ConstParm, BlueprintVisible, DisableEditOnTemplate, EditConst)
	class UClass*                                ReturnValue;                                       // 0x48(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGameData.GetRedirectedClass
struct UPrimalGameData_GetRedirectedClass_Params
{
public:
	class FString                                Key;                                               // 0x0(0x10)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class UObject*                               WorldContextObject;                                // 0x10(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGameData.GetNonBPDinoAncestorsFromBP
struct UPrimalGameData_GetNonBPDinoAncestorsFromBP_Params
{
public:
	TArray<struct FDinoAncestorsEntryBlueprint>  BPEntries;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalGameData.GetLevelXP
struct UPrimalGameData_GetLevelXP_Params
{
public:
	enum class ELevelExperienceRampType          LevelType;                                         // 0x0(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DBD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ForLevel;                                          // 0x4(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.GetLevelMax
struct UPrimalGameData_GetLevelMax_Params
{
public:
	enum class ELevelExperienceRampType          LevelType;                                         // 0x0(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DBE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGameData.GetLevelExperienceRamp
struct UPrimalGameData_GetLevelExperienceRamp_Params
{
public:
	enum class ELevelExperienceRampType          LevelType;                                         // 0x0(0x1)(ConstParm, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DBF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLevelExperienceRamp                  ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalGameData.GetIndexDynamicMatBytesByName
struct UPrimalGameData_GetIndexDynamicMatBytesByName_Params
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(ConstParm, Net, OutParm)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGameData.GetGenericCombatMusic
struct UPrimalGameData_GetGenericCombatMusic_Params
{
public:
	class APrimalCharacter*                      ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForEnemy;                                          // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGameData.GetExplorerNoteDescription
struct UPrimalGameData_GetExplorerNoteDescription_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3DC1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGameData.GetDinoEntry
struct UPrimalGameData_GetDinoEntry_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalGameData.GetColorForDefinition
struct UPrimalGameData_GetColorForDefinition_Params
{
public:
	int32                                        DefinitionIndex;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGameData.GetBuffsForBitmask
struct UPrimalGameData_GetBuffsForBitmask_Params
{
public:
	int32                                        Mask;                                              // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_3DC5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UClass*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGameData.GetBPDinoAncestorsFromNonBP
struct UPrimalGameData_GetBPDinoAncestorsFromNonBP_Params
{
public:
	TArray<struct FDinoAncestorsEntry>           NonBPEntries;                                      // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntryBlueprint>  ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGameData.GetBitmaskForBuffs
struct UPrimalGameData_GetBitmaskForBuffs_Params
{
public:
	TArray<class APrimalBuff*>                   ActiveBuffs;                                       // 0x0(0x10)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DC7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGameData.GetAllAbilitiesForDino
struct UPrimalGameData_GetAllAbilitiesForDino_Params
{
public:
	class FName                                  DinoTag;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FDinoAbilityInfo>              AbilityInfos;                                      // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DC9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalGameData.GetAbilityForInputAction
struct UPrimalGameData_GetAbilityForInputAction_Params
{
public:
	class FName                                  DinoTag;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  InputAction;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, DuplicateTransient)
	struct FDinoAbilityInfo                      AbilityInfo;                                       // 0x10(0x28)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DCB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGameData.BPPreventAddingLocalPlayer
struct UPrimalGameData_BPPreventAddingLocalPlayer_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumLocalPlayers;                                   // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DCC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              FirstPC;                                           // 0x10(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        ControllerId;                                      // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3DCD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.BPMergeModGameData
struct UPrimalGameData_BPMergeModGameData_Params
{
public:
	class UPrimalGameData*                       AnotherGameData;                                   // 0x0(0x8)(ExportObject, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.BPGetItemQualityIndex
struct UPrimalGameData_BPGetItemQualityIndex_Params
{
public:
	float                                        ItemRating;                                        // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGameData.BPGetGlobalUIData
struct UPrimalGameData_BPGetGlobalUIData_Params
{
public:
	bool                                         bIsPsOrXbUi;                                       // 0x0(0x1)(Edit, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3DCF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalGlobalUIData*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGameData.BPGetGameData
struct UPrimalGameData_BPGetGameData_Params
{
public:
	class UPrimalGameData*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGameData.ArkChangeUIPlatform
struct UPrimalGameData_ArkChangeUIPlatform_Params
{
public:
	class FString                                Platform;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGlobals.Subtract_DoubleDouble
struct UPrimalGlobals_Subtract_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalGlobals.OnConfirmationDialogClosed
struct UPrimalGlobals_OnConfirmationDialogClosed_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalGlobals.IsAudibleSimple
struct UPrimalGlobals_IsAudibleSimple_Params
{
public:
	class UAudioComponent*                       AudioComponent;                                    // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E0D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGlobals.GetShooterPlayerCameraManager
struct UPrimalGlobals_GetShooterPlayerCameraManager_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class AShooterPlayerCameraManager*           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGlobals.GetDayCycleManager
struct UPrimalGlobals_GetDayCycleManager_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class ADayCycleManager*                      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalGlobals.FlushLevelStreamingOnNextCameraUpdate
struct UPrimalGlobals_FlushLevelStreamingOnNextCameraUpdate_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalGlobals.EqualEqual_DoubleDouble
struct UPrimalGlobals_EqualEqual_DoubleDouble_Params
{
public:
	double                                       A;                                                 // 0x0(0x8)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	double                                       B;                                                 // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E12[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGlobals.Conv_FloatToDouble
struct UPrimalGlobals_Conv_FloatToDouble_Params
{
public:
	float                                        InFloat;                                           // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3E13[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalGlobals.Conv_DoubleToFloat
struct UPrimalGlobals_Conv_DoubleToFloat_Params
{
public:
	double                                       InDouble;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E14[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalGlobalUIData.GetIconForKeyName
struct UPrimalGlobalUIData_GetIconForKeyName_Params
{
public:
	class FString                                ActionKeyName;                                     // 0x0(0x10)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReInitializeMap;                                  // 0x10(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E1F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UTexture2D*                            ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalHarvestingComponent.BPRecieveComponentDamage
struct UPrimalHarvestingComponent_BPRecieveComponentDamage_Params
{
public:
	float                                        Damage;                                            // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E24[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x28(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x30(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalHarvestingComponent.BPCustomHarvestResource
struct UPrimalHarvestingComponent_BPCustomHarvestResource_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumToGive;                                         // 0x8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E25[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageTypeClass;                                   // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                ToActor;                                           // 0x18(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E26[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.UpdateTribeGroupInventoryRank
struct UPrimalInventoryComponent_UpdateTribeGroupInventoryRank_Params
{
public:
	uint8                                        NewRank;                                           // 0x0(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.UpdateNetWeaponClipAmmo
struct UPrimalInventoryComponent_UpdateNetWeaponClipAmmo_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Ammo;                                              // 0x8(0x4)(ConstParm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E33[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.TransferItemToInventory
struct UPrimalInventoryComponent_TransferItemToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemIndex;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3E35[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsToInventoryWithFilter
struct UPrimalInventoryComponent_TransferAllItemsToInventoryWithFilter_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OfItemClasses;                                     // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        IgnoreItemClasses;                                 // 0x18(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSubclasses;                                  // 0x28(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E36[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsToInventory
struct UPrimalInventoryComponent_TransferAllItemsToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassToInventory
struct UPrimalInventoryComponent_TransferAllItemsOfClassToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OfItemClass;                                       // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSubclasses;                                  // 0x10(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E37[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassesToInventory
struct UPrimalInventoryComponent_TransferAllItemsOfClassesToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        OfItemClasses;                                     // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSubclasses;                                  // 0x18(0x1)(Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E39[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x280 (0x280 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.StaticDropNewItemWithInfo
struct UPrimalInventoryComponent_StaticDropNewItemWithInfo_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	struct FItemNetInfo                          ItemInfo;                                          // 0x8(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TheDroppedTemplateOverride;                        // 0x1E8(0x8)(ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DroppedRotationOffset;                             // 0x1F0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideSpawnTransform;                           // 0x208(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocationOverride;                                  // 0x210(0x18)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              RotationOverride;                                  // 0x228(0x18)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDropImpulse;                               // 0x240(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bThrow;                                            // 0x241(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSecondaryAction;                                  // 0x242(0x1)(ConstParm, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetItemDropLocation;                              // 0x243(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           DroppedMeshOverride;                               // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DroppedScaleOverride;                              // 0x250(0x18)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DroppedMaterialOverride;                           // 0x268(0x8)(Edit, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DroppedLifeSpanOverride;                           // 0x270(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E3D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ADroppedItem*                          ReturnValue;                                       // 0x278(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.StaticDropNewItem
struct UPrimalInventoryComponent_StaticDropNewItem_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                AnItemClass;                                       // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ItemQuality;                                       // 0x10(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceNoBlueprint;                                 // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E40[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        QuantityOverride;                                  // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x1C(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E41[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TheDroppedTemplateOverride;                        // 0x20(0x8)(ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              DroppedRotationOffset;                             // 0x28(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideSpawnTransform;                           // 0x40(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E42[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocationOverride;                                  // 0x48(0x18)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              RotationOverride;                                  // 0x60(0x18)(BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPreventDropImpulse;                               // 0x78(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bThrow;                                            // 0x79(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSecondaryAction;                                  // 0x7A(0x1)(ConstParm, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetItemDropLocation;                              // 0x7B(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E43[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UStaticMesh*                           DroppedMeshOverride;                               // 0x80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               DroppedScaleOverride;                              // 0x88(0x18)(ConstParm, BlueprintReadOnly, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    DroppedMaterialOverride;                           // 0xA0(0x8)(Edit, BlueprintVisible, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DroppedLifeSpanOverride;                           // 0xA8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E44[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class ADroppedItem*                          ReturnValue;                                       // 0xB0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.SetNextItemSpoilingID
struct UPrimalInventoryComponent_SetNextItemSpoilingID_Params
{
public:
	struct FItemNetID                            NextItemID;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.SetNextItemConsumptionID
struct UPrimalInventoryComponent_SetNextItemConsumptionID_Params
{
public:
	struct FItemNetID                            NextItemID;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.SetFreeCraftingMode
struct UPrimalInventoryComponent_SetFreeCraftingMode_Params
{
public:
	bool                                         bNewVal;                                           // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.SetCraftingEnabled
struct UPrimalInventoryComponent_SetCraftingEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerSplitItemStack
struct UPrimalInventoryComponent_ServerSplitItemStack_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        AmountToSplit;                                     // 0x8(0x4)(BlueprintVisible, ExportObject, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerSelectedCustomItemAction
struct UPrimalInventoryComponent_ServerSelectedCustomItemAction_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FName                                  SelectedOption;                                    // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst)
	class AShooterPlayerController*              ForPC;                                             // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerRequestItems
struct UPrimalInventoryComponent_ServerRequestItems_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bEquippedItems;                                    // 0x8(0x1)(BlueprintVisible, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFirstSpawn;                                     // 0x9(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E48[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerRepairItem
struct UPrimalInventoryComponent_ServerRepairItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class AShooterPlayerController*              ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRepairIgnoreInventoryRequirement;                 // 0x10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E4A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        RepairPercentage;                                  // 0x14(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        RepairSpeedMultiplier;                             // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E4B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerRemoveItemFromSlot
struct UPrimalInventoryComponent_ServerRemoveItemFromSlot_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerMergeItemStack
struct UPrimalInventoryComponent_ServerMergeItemStack_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerMakeRecipeItem
struct UPrimalInventoryComponent_ServerMakeRecipeItem_Params
{
public:
	class APrimalStructureItemContainer*         Container;                                         // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            NoteToConsume;                                     // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                RecipeItemTemplate;                                // 0x10(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                CustomName;                                        // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class FString                                CustomDescription;                                 // 0x28(0x10)(ExportObject, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FColor>                        CustomColors;                                      // 0x38(0x10)(Edit, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  CustomRequirements;                                // 0x48(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerForceMergeItemStack
struct UPrimalInventoryComponent_ServerForceMergeItemStack_Params
{
public:
	struct FItemNetID                            Item1ID;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            Item2ID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerCraftItem
struct UPrimalInventoryComponent_ServerCraftItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class AShooterPlayerController*              ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ServerAddItemToSlot
struct UPrimalInventoryComponent_ServerAddItemToSlot_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        SlotIndex;                                         // 0x8(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bSuppressSound;                                    // 0xC(0x1)(Edit, BlueprintVisible, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E4F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.RemoveItem
struct UPrimalInventoryComponent_RemoveItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bDoDrop;                                           // 0x8(0x1)(Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSecondryAction;                                   // 0x9(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceRemoval;                                     // 0xA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShowHUDMessage;                                    // 0xB(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E52[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowViewing
struct UPrimalInventoryComponent_RemoteInventoryAllowViewing_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxAllowedDistanceOffset;                          // 0x8(0x4)(ConstParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E53[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowRepairingItems
struct UPrimalInventoryComponent_RemoteInventoryAllowRepairingItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreEnabled;                                    // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E54[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowCraftingItems
struct UPrimalInventoryComponent_RemoteInventoryAllowCraftingItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreEnabled;                                    // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E55[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.OverrideUseItem
struct UPrimalInventoryComponent_OverrideUseItem_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E56[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.NotifyClientsDurabilityChange
struct UPrimalInventoryComponent_NotifyClientsDurabilityChange_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsRepairingAllowed
struct UPrimalInventoryComponent_IsRepairingAllowed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsOnCraftRequestCooldown
struct UPrimalInventoryComponent_IsOnCraftRequestCooldown_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsLocalToPlayer
struct UPrimalInventoryComponent_IsLocalToPlayer_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E5B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsLocal
struct UPrimalInventoryComponent_IsLocal_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsCraftingAllowed
struct UPrimalInventoryComponent_IsCraftingAllowed_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E5C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsAtMaxInventoryItems
struct UPrimalInventoryComponent_IsAtMaxInventoryItems_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.IsAllowedInventoryAccess
struct UPrimalInventoryComponent_IsAllowedInventoryAccess_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E5D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.InventoryViewersStopLocalSound
struct UPrimalInventoryComponent_InventoryViewersStopLocalSound_Params
{
public:
	class USoundBase*                            ASound;                                            // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.InventoryViewersPlayLocalSound
struct UPrimalInventoryComponent_InventoryViewersPlayLocalSound_Params
{
public:
	class USoundBase*                            ASound;                                            // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAttach;                                           // 0x8(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E61[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.InventoryCustomSortPredicate
struct UPrimalInventoryComponent_InventoryCustomSortPredicate_Params
{
public:
	class UPrimalItem*                           LeftItem;                                          // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalItem*                           RightItem;                                         // 0x8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E63[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.InventoryCustomFilter
struct UPrimalInventoryComponent_InventoryCustomFilter_Params
{
public:
	TArray<class UPrimalItem*>                   UnfilteredItemsList;                               // 0x0(0x10)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalItem*>                   FilteredItemsList;                                 // 0x10(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.HasResources
struct UPrimalInventoryComponent_HasResources_Params
{
public:
	TArray<struct FCraftingResourceRequirement>  RequiredResources;                                 // 0x0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E64[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.HasItemsEquipped
struct UPrimalInventoryComponent_HasItemsEquipped_Params
{
public:
	TArray<class UClass*>                        ItemTemplates;                                     // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequiresExactClassMatch;                          // 0x10(0x1)(Edit, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyArkItems;                                     // 0x11(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnsureAllItems;                                   // 0x12(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x13(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E67[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetTotalEquippedItemStat
struct UPrimalInventoryComponent_GetTotalEquippedItemStat_Params
{
public:
	enum class EPrimalItemStat                   StatType;                                          // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetNumVanityItems
struct UPrimalInventoryComponent_GetNumVanityItems_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetNumNonVanityItems
struct UPrimalInventoryComponent_GetNumNonVanityItems_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetNumItems
struct UPrimalInventoryComponent_GetNumItems_Params
{
public:
	bool                                         bIncludeVanityItems;                               // 0x0(0x1)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyCountVanityItems;                             // 0x1(0x1)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetMaxInventoryItems
struct UPrimalInventoryComponent_GetMaxInventoryItems_Params
{
public:
	bool                                         bIgnoreHiddenDefaultInventory;                     // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E6C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetLastItemSlotIndex
struct UPrimalInventoryComponent_GetLastItemSlotIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetItemTemplateQuantity
struct UPrimalInventoryComponent_GetItemTemplateQuantity_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           IgnoreItem;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreBlueprints;                                 // 0x10(0x1)(BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCheckValidForCrafting;                            // 0x11(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0x12(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceCheckForDupes;                               // 0x13(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetInventoryUpdatedFrame
struct UPrimalInventoryComponent_GetInventoryUpdatedFrame_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetGrinderSettings
struct UPrimalInventoryComponent_GetGrinderSettings_Params
{
public:
	int32                                        MaxQuantityToGrind;                                // 0x0(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GrindGiveItemsPercent;                             // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemsToGivePerGrind;                            // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetForceShowCraftablesInventoryTab
struct UPrimalInventoryComponent_GetForceShowCraftablesInventoryTab_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfType
struct UPrimalInventoryComponent_GetEquippedItemOfType_Params
{
public:
	enum class EPrimalEquipmentType              AType;                                             // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E71[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfClass
struct UPrimalInventoryComponent_GetEquippedItemOfClass_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetEquippedArmorRating
struct UPrimalInventoryComponent_GetEquippedArmorRating_Params
{
public:
	enum class EPrimalEquipmentType              EquipmentType;                                     // 0x0(0x1)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E75[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetEmptySlotCount
struct UPrimalInventoryComponent_GetEmptySlotCount_Params
{
public:
	bool                                         bIsVanityItem;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E77[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetCapacityForItem
struct UPrimalInventoryComponent_GetCapacityForItem_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bCheckWeight;                                      // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E78[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GetAbsoluteMaxInventoryItems
struct UPrimalInventoryComponent_GetAbsoluteMaxInventoryItems_Params
{
public:
	bool                                         bIsSkin;                                           // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E79[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GenerateCustomCrateItems
struct UPrimalInventoryComponent_GenerateCustomCrateItems_Params
{
public:
	class UClass*                                SourceClass;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSupplyCrateItemSet>           CustomItemSets;                                    // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        CustomMinItemSets;                                 // 0x18(0x4)(ConstParm, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomMaxItemSets;                                 // 0x1C(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        CustomNumItemSetsPower;                            // 0x20(0x4)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCustomSetsRandomWithoutReplacement;               // 0x24(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E7E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalItem*>                   GeneratedItems;                                    // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        MinQualityMultiplier;                              // 0x38(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxQualityMultiplier;                              // 0x3C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumPasses;                                         // 0x40(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        QuantityMultiplier;                                // 0x44(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SetPowerWeight;                                    // 0x48(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxItemDifficultyClamp;                            // 0x4C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsMissionReward;                                  // 0x50(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x51(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E7F[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C (0x1C - 0x0)
// Function ShooterGame.PrimalInventoryComponent.GenerateCrateItems
struct UPrimalInventoryComponent_GenerateCrateItems_Params
{
public:
	float                                        MinQualityMultiplier;                              // 0x0(0x4)(ConstParm, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        MaxQualityMultiplier;                              // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumPasses;                                         // 0x8(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        QuantityMultiplier;                                // 0xC(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SetPowerWeight;                                    // 0x10(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxItemDifficultyClamp;                            // 0x14(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E81[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.FindAllItemsOfType
struct UPrimalInventoryComponent_FindAllItemsOfType_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequiresExactClassMatch;                          // 0x8(0x1)(Edit, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeInventoryItems;                            // 0x9(0x1)(EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeEquippedItems;                             // 0xA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeArkTributeItems;                           // 0xB(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeSlotItems;                                 // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeBlueprints;                                // 0xD(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeEngrams;                                   // 0xE(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E85[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalItem*>                   ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.EjectItem
struct UPrimalInventoryComponent_EjectItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bPreventImpule;                                    // 0x8(0x1)(ConstParm, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceEject;                                       // 0x9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetItemLocation;                                  // 0xA(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E86[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               LocationOverride;                                  // 0x10(0x18)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShowHUDMessage;                                    // 0x28(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E87[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                TheDroppedTemplateOverride;                        // 0x30(0x8)(ExportObject, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAssignToTribeForPickup;                           // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E88[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        AssignedTribeID;                                   // 0x3C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class ADroppedItem*                          ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ConsumeResources
struct UPrimalInventoryComponent_ConsumeResources_Params
{
public:
	TArray<struct FCraftingResourceRequirement>  Resources;                                         // 0x0(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E89[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ConsumeArmorDurability
struct UPrimalInventoryComponent_ConsumeArmorDurability_Params
{
public:
	float                                        ConsumptionAmount;                                 // 0x0(0x4)(Edit, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllArmorTypes;                                    // 0x4(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              SpecificArmorType;                                 // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8A[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        FromDamageBlocked;                                 // 0x8(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ClientUpdateFreeCraftingMode
struct UPrimalInventoryComponent_ClientUpdateFreeCraftingMode_Params
{
public:
	bool                                         bNewFreeCraftingModeValue;                         // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ClientItemMessageNotification
struct UPrimalInventoryComponent_ClientItemMessageNotification_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	enum class EPrimalItemMessage                ItemMessageType;                                   // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E8C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.ClearCraftQueue
struct UPrimalInventoryComponent_ClearCraftQueue_Params
{
public:
	bool                                         bForceClearActiveCraftRepair;                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.CheckFullInventoryConditionForItem
struct UPrimalInventoryComponent_CheckFullInventoryConditionForItem_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E91[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.CanGrindItems
struct UPrimalInventoryComponent_CanGrindItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E92[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.CanGrindItem
struct UPrimalInventoryComponent_CanGrindItem_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E93[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.CanEquipItem
struct UPrimalInventoryComponent_CanEquipItem_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E94[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRequestedInventoryItems
struct UPrimalInventoryComponent_BPRequestedInventoryItems_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryGetMaxVisibleSlots
struct UPrimalInventoryComponent_BPRemoteInventoryGetMaxVisibleSlots_Params
{
public:
	int32                                        NumItems;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3E99[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsLocal;                                          // 0x10(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3E9A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowViewing
struct UPrimalInventoryComponent_BPRemoteInventoryAllowViewing_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E9B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowRemoveItems
struct UPrimalInventoryComponent_BPRemoteInventoryAllowRemoveItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItemToTransfer;                                  // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E9C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowCrafting
struct UPrimalInventoryComponent_BPRemoteInventoryAllowCrafting_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E9D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItems
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3E9E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem_SpecificQuantity
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_SpecificQuantity_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItem;                                            // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        SpecificQuantityIn;                                // 0x10(0x4)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        SpecificQuantityOut;                               // 0x14(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EA3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem
struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItem;                                            // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EA4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItemType
struct UPrimalInventoryComponent_BPPreventEquipItemType_Params
{
public:
	enum class EPrimalEquipmentType              EquipmentType;                                     // 0x0(0x1)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItem
struct UPrimalInventoryComponent_BPPreventEquipItem_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EA7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPOverrideItemMinimumUseInterval
struct UPrimalInventoryComponent_BPOverrideItemMinimumUseInterval_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EAA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPOnTransferAll
struct UPrimalInventoryComponent_BPOnTransferAll_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemRemoved
struct UPrimalInventoryComponent_BPNotifyItemRemoved_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemQuantityUpdated
struct UPrimalInventoryComponent_BPNotifyItemQuantityUpdated_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Amount;                                            // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3EAB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPNotifyItemAdded
struct UPrimalInventoryComponent_BPNotifyItemAdded_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EAF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPIsValidCraftingResource
struct UPrimalInventoryComponent_BPIsValidCraftingResource_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EB1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPIsCraftingAllowed
struct UPrimalInventoryComponent_BPIsCraftingAllowed_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EB2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPInventoryDrawItemIcon
struct UPrimalInventoryComponent_BPInventoryDrawItemIcon_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class UCanvas*                               ItemCanvas;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemCanvasSize;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemCanvasScale;                                   // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bItemEnabled;                                      // 0x30(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TheTintColor;                                      // 0x34(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EB4[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPIncrementItemTemplateQuantity
struct UPrimalInventoryComponent_BPIncrementItemTemplateQuantity_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        Amount;                                            // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bReplicateToClient;                                // 0xC(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsBlueprint;                                      // 0xD(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	bool                                         bRequireExactClassMatch;                           // 0xE(0x1)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsCraftingResourceConsumption;                    // 0xF(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFromUseConsumption;                             // 0x10(0x1)(Edit, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsArkTributeItem;                                 // 0x11(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EBA[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           UseSpecificItem;                                   // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontExceedMaxItems;                               // 0x20(0x1)(Edit, ConstParm, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EBB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPGetItemOfTemplate
struct UPrimalInventoryComponent_BPGetItemOfTemplate_Params
{
public:
	class UClass*                                ItemTemplate;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOnlyInventoryItems;                               // 0x8(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyEquippedItems;                                // 0x9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IgnoreItemsWithFullQuantity;                       // 0xA(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFavorSlotItems;                                   // 0xB(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsBlueprint;                                      // 0xC(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	bool                                         bRequiresExactClassMatch;                          // 0xD(0x1)(Edit, ExportObject, EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreSlotItems;                                  // 0xE(0x1)(EditFixedSize, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyArkItems;                                     // 0xF(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreferEngram;                                     // 0x10(0x1)(BlueprintReadOnly, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsForCraftingConsumption;                         // 0x11(0x1)(ConstParm, Net, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EBF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPGetExtraItemDisplay
struct UPrimalInventoryComponent_BPGetExtraItemDisplay_Params
{
public:
	bool                                         bShowExtraItem;                                    // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Description;                                       // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, DuplicateTransient)
	class FString                                CustomString;                                      // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UTexture2D*                            EntryIcon;                                         // 0x28(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UMaterialInterface*                    EntryMaterial;                                     // 0x30(0x8)(BlueprintReadOnly, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPFindItemWithID
struct UPrimalInventoryComponent_BPFindItemWithID_Params
{
public:
	int32                                        ItemID1;                                           // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ItemID2;                                           // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class UPrimalItem*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPDropInventoryDeposit
struct UPrimalInventoryComponent_BPDropInventoryDeposit_Params
{
public:
	double                                       DestroyAtTime;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxItemsDropped;                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideDepositLocation;                          // 0xC(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DepositLocationOverride;                           // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPDropForceLocationInventoryDeposit
struct UPrimalInventoryComponent_BPDropForceLocationInventoryDeposit_Params
{
public:
	double                                       DestroyAtTime;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideMaxItemsDropped;                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DepositLocationOverride;                           // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DeadPlayerID;                                      // 0x28(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructureItemContainer*         ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowRemoveItems
struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowRemoveItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItemToTransfer;                                  // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        RequestedQuantity;                                 // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequestedByPlayer;                                // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequestDropping;                                  // 0x15(0x1)(BlueprintVisible, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x16(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EC4[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowAddItems
struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowAddItems_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           AnItem;                                            // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        AnItemQuantityOverride;                            // 0x10(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRequestedByPlayer;                                // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EC5[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPCreateDropItemInventoryEmpty
struct UPrimalInventoryComponent_BPCreateDropItemInventoryEmpty_Params
{
public:
	double                                       DestroyAtTime;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                OverrideInventoryDepositClass;                     // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructureItemContainer*         CopyStructureValues;                               // 0x10(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                GroundIgnoreActor;                                 // 0x18(0x8)(Edit, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DeadPlayerID;                                      // 0x20(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DropInventoryOnGroundTraceDistance;                // 0x24(0x4)(ExportObject, Net, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverrideDepositLocation;                          // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               DepositLocationOverride;                           // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructureItemContainer*         ReturnValue;                                       // 0x48(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPCraftingFinishedNotification
struct UPrimalInventoryComponent_BPCraftingFinishedNotification_Params
{
public:
	class UPrimalItem*                           ItemToBeCrafted;                                   // 0x0(0x8)(Edit, BlueprintVisible, Parm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPAllowUseInInventory
struct UPrimalInventoryComponent_BPAllowUseInInventory_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsRemoteInventory;                                // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EC7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              ByPC;                                              // 0x10(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EC8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPAllowAddInventoryItem
struct UPrimalInventoryComponent_BPAllowAddInventoryItem_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        RequestedQuantity;                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyAddAll;                                       // 0xC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EC9[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.BPAccessedInventory
struct UPrimalInventoryComponent_BPAccessedInventory_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_OnlyAddAll
struct UPrimalInventoryComponent_AllowAddInventoryItem_OnlyAddAll_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3ECA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_MaxQuantity
struct UPrimalInventoryComponent_AllowAddInventoryItem_MaxQuantity_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        RequestedQuantityIn;                               // 0x8(0x4)(Edit, ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        RequestedQuantityOut;                              // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3ECB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_AnyQuantity
struct UPrimalInventoryComponent_AllowAddInventoryItem_AnyQuantity_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3ECC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.AddItemObjectEx
struct UPrimalInventoryComponent_AddItemObjectEx_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bAddToSlot;                                        // 0x9(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontStack;                                        // 0xA(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShowHUDNotification;                              // 0xB(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontRecalcSpoilingTime;                           // 0xC(0x1)(EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceIncompleteStacking;                          // 0xD(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ECD[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     OwnerPlayer;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, Net, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClampStats;                                       // 0x18(0x1)(Edit, BlueprintVisible, Net, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ECE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           InsertAfterItem;                                   // 0x20(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInsertAtItemInstead;                              // 0x28(0x1)(Edit, BlueprintReadOnly, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3ECF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalInventoryComponent.AddItemObject
struct UPrimalInventoryComponent_AddItemObject_Params
{
public:
	class UPrimalItem*                           AnItem;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimalItem*                           ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.UseItemOntoItem
struct UPrimalItem_UseItemOntoItem_Params
{
public:
	class UPrimalItem*                           DestinationItem;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AdditionalData;                                    // 0x8(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EEE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.Use
struct UPrimalItem_Use_Params
{
public:
	bool                                         bOverridePlayerInput;                              // 0x0(0x1)(ConstParm, OutParm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.UpdatedItem
struct UPrimalItem_UpdatedItem_Params
{
public:
	bool                                         ResetUploadTime;                                   // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.UnequipWeapon
struct UPrimalItem_UnequipWeapon_Params
{
public:
	bool                                         bDelayedUnequip;                                   // 0x0(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalItem.StaticGetItemNameAndIcon
struct UPrimalItem_StaticGetItemNameAndIcon_Params
{
public:
	class UClass*                                ItemType;                                          // 0x0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class FString                                OutItemName;                                       // 0x8(0x10)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            OutItemIcon;                                       // 0x18(0x8)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShortName;                                        // 0x20(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              ForPC;                                             // 0x28(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EF1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.StaticGetDinoColorSetIndexForItemColorIDFromDyeList
struct UPrimalItem_StaticGetDinoColorSetIndexForItemColorIDFromDyeList_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.StaticGetDinoColorSetIndexForItemColorID
struct UPrimalItem_StaticGetDinoColorSetIndexForItemColorID_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalItem.StaticGetColorForItemColorIDFromDyeList
struct UPrimalItem_StaticGetColorForItemColorIDFromDyeList_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.PrimalItem.StaticGetColorForItemColorID
struct UPrimalItem_StaticGetColorForItemColorID_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          ReturnValue;                                       // 0x4(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.SlottedTick
struct UPrimalItem_SlottedTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.SkinEquippedBlueprintTick
struct UPrimalItem_SkinEquippedBlueprintTick_Params
{
public:
	class UPrimalItem*                           OwnerItem;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaSeconds;                                      // 0x8(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EF2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalItem.SetUnreplicatedEggData
struct UPrimalItem_SetUnreplicatedEggData_Params
{
public:
	struct FUnreplicatedEggData                  EggData;                                           // 0x0(0x68)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.SetQuantity
struct UPrimalItem_SetQuantity_Params
{
public:
	int32                                        NewQuantity;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShowHUDNotification;                               // 0x4(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.SetItemStatValues
struct UPrimalItem_SetItemStatValues_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        Val;                                               // 0x4(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.SetItemStatInfo
struct UPrimalItem_SetItemStatInfo_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FItemStatInfo                         Val;                                               // 0x4(0x24)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.SetItemColors
struct UPrimalItem_SetItemColors_Params
{
public:
	TArray<int32>                                ColorIDs;                                          // 0x0(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.PrimalItem.SetCustomItemData
struct UPrimalItem_SetCustomItemData_Params
{
public:
	struct FCustomItemData                       InData;                                            // 0x0(0x78)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.SetCustomColorParams
struct UPrimalItem_SetCustomColorParams_Params
{
public:
	class UPrimalItem*                           ThePrimalItem;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              TheMIC;                                            // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          TheColor;                                          // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheIndex;                                          // 0x20(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EF5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.SetAssociatedDinoID
struct UPrimalItem_SetAssociatedDinoID_Params
{
public:
	class APrimalDinoCharacter*                  AssociatedDino;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.PrimalItem.ServerSendItemExecCommandToPlayer
struct UPrimalItem_ServerSendItemExecCommandToPlayer_Params
{
public:
	class AShooterPlayerController*              ToPC;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x88(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceSendToLocalPlayer;                           // 0x89(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreRelevancy;                                  // 0x8A(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3EF6[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalItem.ServerSendItemExecCommandToEveryone
struct UPrimalItem_ServerSendItemExecCommandToEveryone_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x80(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceSendToLocalPlayer;                           // 0x81(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIgnoreRelevancy;                                  // 0x82(0x1)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3EF7[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.SelectedCustomContextMenuItem
struct UPrimalItem_SelectedCustomContextMenuItem_Params
{
public:
	class FName                                  ContextItem;                                       // 0x0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.RepairItem
struct UPrimalItem_RepairItem_Params
{
public:
	bool                                         bIgnoreInventoryRequirement;                       // 0x0(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3EF9[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        UseNextRepairPercentage;                           // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        RepairSpeedMultiplier;                             // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.RemoveFromSlot
struct UPrimalItem_RemoveFromSlot_Params
{
public:
	bool                                         bForce;                                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFastInventory;                                    // 0x1(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.RemovedSkinFromItem
struct UPrimalItem_RemovedSkinFromItem_Params
{
public:
	class UPrimalItem*                           FromOwnerItem;                                     // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFirstTime;                                      // 0x8(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EFA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.RemoveCustomItemData
struct UPrimalItem_RemoveCustomItemData_Params
{
public:
	class FName                                  CustomDataName;                                    // 0x0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.RemoveClipAmmo
struct UPrimalItem_RemoveClipAmmo_Params
{
public:
	bool                                         bDontUpdateItem;                                   // 0x0(0x1)(ExportObject, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.PrimalItem.RefreshAttachments
struct UPrimalItem_RefreshAttachments_Params
{
public:
	bool                                         bRefreshDefaultAttachments;                        // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsShieldSpecificRefresh;                           // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFromUpdateItem;                                 // 0x2(0x1)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.RecalcSpoilingTime
struct UPrimalItem_RecalcSpoilingTime_Params
{
public:
	double                                       TimeSeconds;                                       // 0x0(0x8)(Edit, Net, Parm, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        SpoilPercent;                                      // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3EFB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             ForComp;                                           // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.OverrideItemRating
struct UPrimalItem_OverrideItemRating_Params
{
public:
	float                                        Rating;                                            // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.OverrideCrouchingSound
struct UPrimalItem_OverrideCrouchingSound_Params
{
public:
	class USoundBase*                            InSound;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsProne;                                          // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_3EFC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SoundState;                                        // 0xC(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.NotifyEditText
struct UPrimalItem_NotifyEditText_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalItem.MergeCustomItemDatas
struct UPrimalItem_MergeCustomItemDatas_Params
{
public:
	TArray<struct FCustomItemData>               DataSet1;                                          // 0x0(0x10)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomItemData>               DataSet2;                                          // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomItemData>               ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.MeetRepairingRequirements
struct UPrimalItem_MeetRepairingRequirements_Params
{
public:
	class UPrimalInventoryComponent*             CompareInventoryComp;                              // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsForCraftQueueAddition;                          // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUpdateWirelessResources;                     // 0x9(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xA(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3EFD[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.MakeRepairingRequirementsString
struct UPrimalItem_MakeRepairingRequirementsString_Params
{
public:
	class UPrimalInventoryComponent*             CompareInventoryComp;                              // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCraftingResourceRequirement>  InRepairingRequirements;                           // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseStartHoldBP
struct UPrimalItem_LocalUseStartHoldBP_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseStartHold
struct UPrimalItem_LocalUseStartHold_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseItemReleaseBP
struct UPrimalItem_LocalUseItemReleaseBP_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseItemRelease
struct UPrimalItem_LocalUseItemRelease_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseAfterHoldBP
struct UPrimalItem_LocalUseAfterHoldBP_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUseAfterHold
struct UPrimalItem_LocalUseAfterHold_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.LocalUse
struct UPrimalItem_LocalUse_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsValidForCrafting
struct UPrimalItem_IsValidForCrafting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsUsableConsumable
struct UPrimalItem_IsUsableConsumable_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsOwnerInWater
struct UPrimalItem_IsOwnerInWater_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsOwnerInNoPainWater
struct UPrimalItem_IsOwnerInNoPainWater_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.IsCustomContextMenuItemEnabled
struct UPrimalItem_IsCustomContextMenuItemEnabled_Params
{
public:
	class FName                                  ContextItem;                                       // 0x0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F03[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsCooldownReadyForUse
struct UPrimalItem_IsCooldownReadyForUse_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.IsBroken
struct UPrimalItem_IsBroken_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.InitNewItem
struct UPrimalItem_InitNewItem_Params
{
public:
	float                                        ItemQuality;                                       // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F08[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxItemDifficultyClamp;                            // 0x10(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinRandomQuality;                                  // 0x14(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.InitializeItem
struct UPrimalItem_InitializeItem_Params
{
public:
	bool                                         bForceReInit;                                      // 0x0(0x1)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F09[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UWorld*                                OptionalInitWorld;                                 // 0x8(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.IncrementItemQuantity
struct UPrimalItem_IncrementItemQuantity_Params
{
public:
	int32                                        Amount;                                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRepicateToClient;                                 // 0x4(0x1)(Edit, ConstParm, Net, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontUpdateWeight;                                 // 0x5(0x1)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFromUseConsumption;                             // 0x6(0x1)(Edit, Net, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsArkTributeItem;                                 // 0x7(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFromCraftingConsumption;                        // 0x8(0x1)(Edit, ConstParm, ExportObject, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.HasCustomItemData
struct UPrimalItem_HasCustomItemData_Params
{
public:
	class FName                                  CustomDataName;                                    // 0x0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F0B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.HasBuffToGiveOwnerWhenEquipped
struct UPrimalItem_HasBuffToGiveOwnerWhenEquipped_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.HasAvailableCustomCosmetics
struct UPrimalItem_HasAvailableCustomCosmetics_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.PrimalItem.HandleShieldDamageBlocking
struct UPrimalItem_HandleShieldDamageBlocking_Params
{
public:
	class AShooterCharacter*                     ForShooterCharacter;                               // 0x0(0x8)(ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DamageIn;                                          // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FVector                               HitPoint;                                          // 0x40(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x58(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F0D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageType
struct UPrimalItem_GetWeaponTemplateMeleeDamageType_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageAmount
struct UPrimalItem_GetWeaponTemplateMeleeDamageAmount_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageType
struct UPrimalItem_GetWeaponTemplateHarvestDamageType_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageMultiplier
struct UPrimalItem_GetWeaponTemplateHarvestDamageMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponTemplateDurabilityToConsumePerMeleeHit
struct UPrimalItem_GetWeaponTemplateDurabilityToConsumePerMeleeHit_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetWeaponClipAmmo
struct UPrimalItem_GetWeaponClipAmmo_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetUseItemAddCharacterStatusValue
struct UPrimalItem_GetUseItemAddCharacterStatusValue_Params
{
public:
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F0E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.PrimalItem.GetUnreplicatedEggData
struct UPrimalItem_GetUnreplicatedEggData_Params
{
public:
	struct FUnreplicatedEggData                  EggData;                                           // 0x0(0x68)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetSpoilingTime
struct UPrimalItem_GetSpoilingTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.GetRepairingRequirementsString
struct UPrimalItem_GetRepairingRequirementsString_Params
{
public:
	class UPrimalInventoryComponent*             CompareInventoryComp;                              // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseBaseRequirements;                              // 0x8(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F0F[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideRepairPercent;                             // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APlayerController*                     OwningPlayer;                                      // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetRemainingCooldownTime
struct UPrimalItem_GetRemainingCooldownTime_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetProjectileType
struct UPrimalItem_GetProjectileType_Params
{
public:
	class UClass*                                ItemType;                                          // 0x0(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetOwnerPlayer
struct UPrimalItem_GetOwnerPlayer_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetOwnerActor
struct UPrimalItem_GetOwnerActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetMaxItemQuantity
struct UPrimalItem_GetMaxItemQuantity_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F10[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.GetMaximumAdditionalCrafting
struct UPrimalItem_GetMaximumAdditionalCrafting_Params
{
public:
	class UPrimalInventoryComponent*             ForComp;                                           // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              PC;                                                // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F11[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetMaxDurability
struct UPrimalItem_GetMaxDurability_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemWeight
struct UPrimalItem_GetItemWeight_Params
{
public:
	bool                                         bJustOneQuantity;                                  // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceNotBlueprintWeight;                          // 0x1(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F12[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemStatValues
struct UPrimalItem_GetItemStatValues_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.GetItemStatString
struct UPrimalItem_GetItemStatString_Params
{
public:
	enum class EPrimalItemStat                   StatType;                                          // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F14[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemStatModifier
struct UPrimalItem_GetItemStatModifier_Params
{
public:
	enum class EPrimalItemStat                   StatType;                                          // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F15[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.GetItemStatInfo
struct UPrimalItem_GetItemStatInfo_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	struct FItemStatInfo                         ReturnValue;                                       // 0x4(0x24)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetItemShortName
struct UPrimalItem_GetItemShortName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1E8 (0x1E8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemNetInfo
struct UPrimalItem_GetItemNetInfo_Params
{
public:
	bool                                         bIsForSendingToClient;                             // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F18[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FItemNetInfo                          ReturnValue;                                       // 0x8(0x1E0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetItemDyeColors
struct UPrimalItem_GetItemDyeColors_Params
{
public:
	TArray<struct FLinearColor>                  ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.GetItemCustomColor
struct UPrimalItem_GetItemCustomColor_Params
{
public:
	int32                                        ColorRegion;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FLinearColor                          OutColor;                                          // 0x4(0x10)(ConstParm, ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F1C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemColorIDFromDyeItemIDFromDyeList
struct UPrimalItem_GetItemColorIDFromDyeItemIDFromDyeList_Params
{
public:
	int32                                        DyeItemListIndex;                                  // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemColorIDFromDyeItemID
struct UPrimalItem_GetItemColorIDFromDyeItemID_Params
{
public:
	int32                                        MasterItemListIndex;                               // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetItemColorID
struct UPrimalItem_GetItemColorID_Params
{
public:
	int32                                        TheRegion;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetItemBytes
struct UPrimalItem_GetItemBytes_Params
{
public:
	TArray<uint8>                                Bytes;                                             // 0x0(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetInventoryIconDisplayText
struct UPrimalItem_GetInventoryIconDisplayText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetInitializeItemOwnerInventory
struct UPrimalItem_GetInitializeItemOwnerInventory_Params
{
public:
	class UPrimalInventoryComponent*             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetHUDIconMaterial
struct UPrimalItem_GetHUDIconMaterial_Params
{
public:
	class UMaterialInterface*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetEngramRequirementLevel
struct UPrimalItem_GetEngramRequirementLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetEggHatchTimeRemaining
struct UPrimalItem_GetEggHatchTimeRemaining_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	float                                        AdditionalMultiplier;                              // 0x8(0x4)(ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetDurabilityPercentage
struct UPrimalItem_GetDurabilityPercentage_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalItem.GetCustomItemData
struct UPrimalItem_GetCustomItemData_Params
{
public:
	class FName                                  CustomDataName;                                    // 0x0(0x8)(Net, EditFixedSize, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	struct FCustomItemData                       OutData;                                           // 0x8(0x78)(Edit, ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x80(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F23[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetCryopodDeploymentRange
struct UPrimalItem_GetCryopodDeploymentRange_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetCraftingResourceRequirement
struct UPrimalItem_GetCraftingResourceRequirement_Params
{
public:
	int32                                        CraftingResourceIndex;                             // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.GetCraftingRequirements
struct UPrimalItem_GetCraftingRequirements_Params
{
public:
	TArray<struct FCraftingResourceRequirement>  CombinedRequirements;                              // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Percent;                                           // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_3F25[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCraftingResourceRequirement>  ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.GetComponentToAttach
struct UPrimalItem_GetComponentToAttach_Params
{
public:
	int32                                        AttachmentIndex;                                   // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F27[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                UseOtherActor;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UActorComponent*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetBuffToGiveOwnerWhenEquipped
struct UPrimalItem_GetBuffToGiveOwnerWhenEquipped_Params
{
public:
	bool                                         bForceResolveSoftRef;                              // 0x0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F29[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetAvailableCustomCosmetics
struct UPrimalItem_GetAvailableCustomCosmetics_Params
{
public:
	TArray<struct FCustomCosmeticModSkin>        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.GetAttachedComponentsNum
struct UPrimalItem_GetAttachedComponentsNum_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.GetAttachedComponent
struct UPrimalItem_GetAttachedComponent_Params
{
public:
	int32                                        AttachmentIndex;                                   // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F2E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                UseOtherActor;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UActorComponent*                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.GetAssociatedDinoID
struct UPrimalItem_GetAssociatedDinoID_Params
{
public:
	int32                                        OutDinoID1;                                        // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        OutDinoID2;                                        // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.GetAllStructuresToBuild
struct UPrimalItem_GetAllStructuresToBuild_Params
{
public:
	TArray<TSoftClassPtr<class APrimalStructure>> ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.GetActualEquipmentType
struct UPrimalItem_GetActualEquipmentType_Params
{
public:
	bool                                         bGetBaseValue;                                     // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalEquipmentType              ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.EquippedBlueprintTick
struct UPrimalItem_EquippedBlueprintTick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.DoesItemUseColorRegion
struct UPrimalItem_DoesItemUseColorRegion_Params
{
public:
	int32                                        RegionIndex;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F33[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1E8 (0x1E8 - 0x0)
// Function ShooterGame.PrimalItem.CreateItemFromNetInfo
struct UPrimalItem_CreateItemFromNetInfo_Params
{
public:
	struct FItemNetInfo                          NewItemInfo;                                       // 0x0(0x1E0)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalItem*                           ReturnValue;                                       // 0x1E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.CreateFromBytes
struct UPrimalItem_CreateFromBytes_Params
{
public:
	TArray<uint8>                                Bytes;                                             // 0x0(0x10)(Edit, ConstParm, Net, Parm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	class UPrimalItem*                           ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.Crafted
struct UPrimalItem_Crafted_Params
{
public:
	bool                                         bWasCraftedFromEngram;                             // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CraftBlueprint
struct UPrimalItem_CraftBlueprint_Params
{
public:
	bool                                         bConsumeResources;                                 // 0x0(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.ConsumeResourcesForRepair
struct UPrimalItem_ConsumeResourcesForRepair_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Percent;                                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_3F39[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     PC;                                                // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.ClampStats
struct UPrimalItem_ClampStats_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.ClampItemRating
struct UPrimalItem_ClampItemRating_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalItem.CheckForRepairResources
struct UPrimalItem_CheckForRepairResources_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Percent;                                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_3F3C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     PC;                                                // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F3D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CheckForInventoryDupes
struct UPrimalItem_CheckForInventoryDupes_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.CanUseWithItemSource
struct UPrimalItem_CanUseWithItemSource_Params
{
public:
	class UPrimalItem*                           DestinationItem;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F40[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.CanUseWithItemDestination
struct UPrimalItem_CanUseWithItemDestination_Params
{
public:
	class UPrimalItem*                           SourceItem;                                        // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F41[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.CanUse
struct UPrimalItem_CanUse_Params
{
public:
	bool                                         bIgnoreCooldown;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CanSpoil
struct UPrimalItem_CanSpoil_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CanShowNotificationItem
struct UPrimalItem_CanShowNotificationItem_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.CanRepair
struct UPrimalItem_CanRepair_Params
{
public:
	bool                                         bIgnoreInventoryRequirement;                       // 0x0(0x1)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.CanFullyCraft
struct UPrimalItem_CanFullyCraft_Params
{
public:
	bool                                         bForceUpdateWirelessResources;                     // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CanEquipWeapon
struct UPrimalItem_CanEquipWeapon_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CanDrop
struct UPrimalItem_CanDrop_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.CanCraft
struct UPrimalItem_CanCraft_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPUsedOntoItem
struct UPrimalItem_BPUsedOntoItem_Params
{
public:
	class UPrimalItem*                           DestinationItem;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AdditionalData;                                    // 0x8(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F46[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPTributeItemUploaded
struct UPrimalItem_BPTributeItemUploaded_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPTributeItemDownloaded
struct UPrimalItem_BPTributeItemDownloaded_Params
{
public:
	class UObject*                               ContextObject;                                     // 0x0(0x8)(ConstParm, ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPSupportUseOntoItem
struct UPrimalItem_BPSupportUseOntoItem_Params
{
public:
	class UPrimalItem*                           DestinationItem;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F47[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.BPShouldHideTopLevelCustomContextMenuOption
struct UPrimalItem_BPShouldHideTopLevelCustomContextMenuOption_Params
{
public:
	class FName                                  ContextItem;                                       // 0x0(0x8)(Edit, ConstParm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F48[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPSetWeaponClipAmmo
struct UPrimalItem_BPSetWeaponClipAmmo_Params
{
public:
	int32                                        NewClipAmmo;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPSetupHUDIconMaterial
struct UPrimalItem_BPSetupHUDIconMaterial_Params
{
public:
	class UMaterialInstanceDynamic*              TheMID;                                            // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalItem.BPServerHandleItemNetExecCommand
struct UPrimalItem_BPServerHandleItemNetExecCommand_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalItem.BPProcessEditText
struct UPrimalItem_BPProcessEditText_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                TextToUse;                                         // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F4C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.BPPreventWeaponEquip
struct UPrimalItem_BPPreventWeaponEquip_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPPreventUseOntoItem
struct UPrimalItem_BPPreventUseOntoItem_Params
{
public:
	class UPrimalItem*                           DestinationItem;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F4D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.BPPreventUpload
struct UPrimalItem_BPPreventUpload_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.BPPreventNewColorization
struct UPrimalItem_BPPreventNewColorization_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPPreventEquip
struct UPrimalItem_BPPreventEquip_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F4E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPPreInitializeItem
struct UPrimalItem_BPPreInitializeItem_Params
{
public:
	class UWorld*                                OptionalInitWorld;                                 // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPPostInitializeItem
struct UPrimalItem_BPPostInitializeItem_Params
{
public:
	class UWorld*                                OptionalInitWorld;                                 // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPPostAddBuffToGiveOwnerCharacter
struct UPrimalItem_BPPostAddBuffToGiveOwnerCharacter_Params
{
public:
	class APrimalCharacter*                      OwnerCharacter;                                    // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalBuff*                           Buff;                                              // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPOverrideProjectileType
struct UPrimalItem_BPOverrideProjectileType_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPOverrideInheritedStatWeight
struct UPrimalItem_BPOverrideInheritedStatWeight_Params
{
public:
	int32                                        StatType;                                          // 0x0(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Weight;                                            // 0x4(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPOverrideEquippedDurabilityPercentage
struct UPrimalItem_BPOverrideEquippedDurabilityPercentage_Params
{
public:
	float                                        OutDurabilityPercentageValue;                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPOverrideCraftingConsumption
struct UPrimalItem_BPOverrideCraftingConsumption_Params
{
public:
	int32                                        AmountToConsume;                                   // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPOnLocalUse
struct UPrimalItem_BPOnLocalUse_Params
{
public:
	class AShooterCharacter*                     ForCharacter;                                      // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPOnItemConsumed
struct UPrimalItem_BPOnItemConsumed_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        RemainingQuantity;                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F52[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPNotifyDropped
struct UPrimalItem_BPNotifyDropped_Params
{
public:
	class APrimalCharacter*                      FromCharacter;                                     // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWasThrown;                                        // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F53[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.BPMatchesItemID
struct UPrimalItem_BPMatchesItemID_Params
{
public:
	int32                                        ItemID1;                                           // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ItemID2;                                           // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F55[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPMakeItemID
struct UPrimalItem_BPMakeItemID_Params
{
public:
	int32                                        TheItemID1;                                        // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheItemID2;                                        // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.BPIsValidForCrafting
struct UPrimalItem_BPIsValidForCrafting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPInitItemColors
struct UPrimalItem_BPInitItemColors_Params
{
public:
	TArray<int32>                                ColorIDs;                                          // 0x0(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetSkinnedCustomInventoryWidgetText
struct UPrimalItem_BPGetSkinnedCustomInventoryWidgetText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPGetMaxAmmo
struct UPrimalItem_BPGetMaxAmmo_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemStatRandomValue
struct UPrimalItem_BPGetItemStatRandomValue_Params
{
public:
	float                                        QualityLevel;                                      // 0x0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        Idx;                                               // 0x4(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemStatModifier
struct UPrimalItem_BPGetItemStatModifier_Params
{
public:
	int32                                        Idx;                                               // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	int32                                        ItemStatValue;                                     // 0x4(0x4)(Edit, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemName
struct UPrimalItem_BPGetItemName_Params
{
public:
	class FString                                ItemNameIn;                                        // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemID
struct UPrimalItem_BPGetItemID_Params
{
public:
	int32                                        ItemID1;                                           // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ItemID2;                                           // 0x4(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemIcon
struct UPrimalItem_BPGetItemIcon_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemDurabilityPercentage
struct UPrimalItem_BPGetItemDurabilityPercentage_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalItem.BPGetItemDescription
struct UPrimalItem_BPGetItemDescription_Params
{
public:
	class FString                                InDescription;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGetLongDescription;                               // 0x10(0x1)(ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F5E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              ForPC;                                             // 0x18(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetFuelParticleSystemOverride
struct UPrimalItem_BPGetFuelParticleSystemOverride_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetFuelAudioOverride
struct UPrimalItem_BPGetFuelAudioOverride_Params
{
public:
	class APrimalStructure*                      ForStructure;                                      // 0x0(0x8)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class USoundBase*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetTextColor
struct UPrimalItem_BPGetCustomInventoryWidgetTextColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetText
struct UPrimalItem_BPGetCustomInventoryWidgetText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomIconMaterialParent
struct UPrimalItem_BPGetCustomIconMaterialParent_Params
{
public:
	class UMaterialInterface*                    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomDurabilityTextColor
struct UPrimalItem_BPGetCustomDurabilityTextColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomDurabilityText
struct UPrimalItem_BPGetCustomDurabilityText_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.BPGetCustomAutoDecreaseDurabilityPerInterval
struct UPrimalItem_BPGetCustomAutoDecreaseDurabilityPerInterval_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPForceAllowRemoteAddToInventory
struct UPrimalItem_BPForceAllowRemoteAddToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F61[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPEquippedItemOnXPEarning
struct UPrimalItem_BPEquippedItemOnXPEarning_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        HowMuchXP;                                         // 0x8(0x4)(ConstParm, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EXPType                           TheXPType;                                         // 0xC(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F63[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalItem.BPDrawItemIcon
struct UPrimalItem_BPDrawItemIcon_Params
{
public:
	class UCanvas*                               ItemCanvas;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemCanvasSize;                                    // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ItemCanvasScale;                                   // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bItemEnabled;                                      // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F67[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          TheTintColor;                                      // 0x2C(0x10)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F68[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.PrimalItem.BPConsumeProjectileImpact
struct UPrimalItem_BPConsumeProjectileImpact_Params
{
public:
	class AShooterProjectile*                    TheProjectile;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FHitResult                            HitResult;                                         // 0x8(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F6B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.PrimalItem.BPClientHandleItemNetExecCommand
struct UPrimalItem_BPClientHandleItemNetExecCommand_Params
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x8(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x80(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalItem.BPCanUse
struct UPrimalItem_BPCanUse_Params
{
public:
	bool                                         bIgnoreCooldown;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPCanAddToInventory
struct UPrimalItem_BPCanAddToInventory_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F70[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.BPBreakItemID
struct UPrimalItem_BPBreakItemID_Params
{
public:
	struct FItemNetID                            ItemNetID;                                         // 0x0(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                        TheItemID1;                                        // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheItemID2;                                        // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_End
struct UPrimalItem_BPAnimNotifyCustomState_End_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_Begin
struct UPrimalItem_BPAnimNotifyCustomState_Begin_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        TotalDuration;                                     // 0x18(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F73[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x20(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalItem.BPAnimNotifyCustomEvent
struct UPrimalItem_BPAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotify*                           AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.BPAllowRemoteRemoveFromInventory
struct UPrimalItem_BPAllowRemoteRemoveFromInventory_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequestedByPlayer;                                // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F74[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.BPAllowRemoteAddToInventory
struct UPrimalItem_BPAllowRemoteAddToInventory_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequestedByPlayer;                                // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F76[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.BPAllowCrafting
struct UPrimalItem_BPAllowCrafting_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.BlueprintOwnerPosssessed
struct UPrimalItem_BlueprintOwnerPosssessed_Params
{
public:
	class AController*                           PossessedByController;                             // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalItem.BlueprintEquipped
struct UPrimalItem_BlueprintEquipped_Params
{
public:
	bool                                         bIsFromSaveGame;                                   // 0x0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.ApplyingSkinOntoItem
struct UPrimalItem_ApplyingSkinOntoItem_Params
{
public:
	class UPrimalItem*                           ToOwnerItem;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFirstTime;                                      // 0x8(0x1)(BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F7A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.ApplyColorsToMesh
struct UPrimalItem_ApplyColorsToMesh_Params
{
public:
	class UMeshComponent*                        MComp;                                             // 0x0(0x8)(EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.ApplyColorsFromStructure
struct UPrimalItem_ApplyColorsFromStructure_Params
{
public:
	class APrimalStructure*                      TheStructure;                                      // 0x0(0x8)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalItem.AllowRemoteAddToInventory
struct UPrimalItem_AllowRemoteAddToInventory_Params
{
public:
	class UPrimalInventoryComponent*             InvComp;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ByPC;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bRequestedByPlayer;                                // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F7D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalItem.AllowEquipItem
struct UPrimalItem_AllowEquipItem_Params
{
public:
	class UPrimalInventoryComponent*             ToInventory;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3F7F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalItem.AddToSlot
struct UPrimalItem_AddToSlot_Params
{
public:
	int32                                        TheSlotIndex;                                      // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFastInventory;                                    // 0x5(0x1)(Edit, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F81[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalItem.AddNewItem
struct UPrimalItem_AddNewItem_Params
{
public:
	class UClass*                                ItemArchetype;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class UPrimalInventoryComponent*             GiveToInventory;                                   // 0x8(0x8)(ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDontStack;                                        // 0x11(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F84[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ItemQuality;                                       // 0x14(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceNoBlueprint;                                 // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F85[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        QuantityOverride;                                  // 0x1C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_3F86[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxItemDifficultyClamp;                            // 0x24(0x4)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         CreateOnClient;                                    // 0x28(0x1)(Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F87[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ApplyItemSkin;                                     // 0x30(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        MinRandomQuality;                                  // 0x38(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ClampStats;                                        // 0x3C(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bIgnoreAbsoluteMaxInventory;                       // 0x3D(0x1)(Edit, ExportObject, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipDenySpawningInThisMap;                        // 0x3E(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_3F88[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalItem*                           ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalItem.AddItemDurability
struct UPrimalItem_AddItemDurability_Params
{
public:
	float                                        DurabilityToAdd;                                   // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalLocalProfile.SaveProfile
struct UPrimalLocalProfile_SaveProfile_Params
{
public:
	bool                                         bAllowForcedItemDownload;                          // 0x0(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalLocalProfile.OnFinishedLoadingAllClustersItems
struct UPrimalLocalProfile_OnFinishedLoadingAllClustersItems_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_3FEC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<struct FItemNetInfo>                  ArkItems;                                          // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalLocalProfile.OnAllClustersItemsRemoved
struct UPrimalLocalProfile_OnAllClustersItemsRemoved_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_3FED[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<struct FItemNetID>                    ItemsIds;                                          // 0x18(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalNavigationSystem.GetNavAreaAtLocation
struct UPrimalNavigationSystem_GetNavAreaAtLocation_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Extent;                                            // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class AActor*                                ForActor;                                          // 0x30(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalNavModifierComponent.SetFailsafeExtentAndLocation
struct UPrimalNavModifierComponent_SetFailsafeExtentAndLocation_Params
{
public:
	struct FVector                               InExtent;                                          // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               InLocation;                                        // 0x18(0x18)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalNavModifierComponent.GetFailsafeExtentAndLocation
struct UPrimalNavModifierComponent_GetFailsafeExtentAndLocation_Params
{
public:
	struct FVector                               OutExtent;                                         // 0x0(0x18)(Edit, ExportObject, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OutLocation;                                       // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalPlayerData.SetPlayerHexagonCount
struct UPrimalPlayerData_SetPlayerHexagonCount_Params
{
public:
	int32                                        NewHexagonCount;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_3FFF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.SetChibiLevels
struct UPrimalPlayerData_SetChibiLevels_Params
{
public:
	int32                                        NewLevels;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4001[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalPlayerData.SavePlayerData
struct UPrimalPlayerData_SavePlayerData_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.LinkedPlayerIDString
struct UPrimalPlayerData_LinkedPlayerIDString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalPlayerData.HasUnlockedAllExplorerNotes
struct UPrimalPlayerData_HasUnlockedAllExplorerNotes_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalPlayerData.HasGeneralizedAchievementTag
struct UPrimalPlayerData_HasGeneralizedAchievementTag_Params
{
public:
	class FName                                  Tag;                                               // 0x0(0x8)(ConstParm, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4004[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.GrantGeneralizedAchievementTag
struct UPrimalPlayerData_GrantGeneralizedAchievementTag_Params
{
public:
	class FName                                  ObtainedAchievementTag;                            // 0x0(0x8)(ConstParm, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.GetUniqueNetIdAsString
struct UPrimalPlayerData_GetUniqueNetIdAsString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.GetUniqueIdString
struct UPrimalPlayerData_GetUniqueIdString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalPlayerData.GetPlayerState
struct UPrimalPlayerData_GetPlayerState_Params
{
public:
	class AShooterPlayerState*                   IgnorePlayerState;                                 // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyCheckExistingPlayers;                         // 0x8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4007[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        LocalPlayerIndex;                                  // 0xC(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterPlayerState*                   ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalPlayerData.GetPlayerHexagonCount
struct UPrimalPlayerData_GetPlayerHexagonCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.FindCharacterForPlayer
struct UPrimalPlayerData_FindCharacterForPlayer_Params
{
public:
	class UWorld*                                InWorld;                                           // 0x0(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalPlayerData.BPForceDefeatedBoss
struct UPrimalPlayerData_BPForceDefeatedBoss_Params
{
public:
	int32                                        DifficultyIndex;                                   // 0x0(0x4)(Edit, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  BossName;                                          // 0x4(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4009[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterPlayerController*              PlayerController;                                  // 0x10(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalPlayerData.BPApplyToPlayerCharacter
struct UPrimalPlayerData_BPApplyToPlayerCharacter_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     NewPlayerCharacter;                                // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalPlayerData.BPAppliedToPlayerState
struct UPrimalPlayerData_BPAppliedToPlayerState_Params
{
public:
	class AShooterPlayerState*                   ForPlayerState;                                    // 0x0(0x8)(BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalPreviewSceneSetup.NotifySetupPreviewScene
struct APrimalPreviewSceneSetup_NotifySetupPreviewScene_Params
{
public:
	class UMeshComponent*                        ForMeshComp;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	TArray<class USceneComponent*>               ForChildComps;                                     // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              ForPC;                                             // 0x18(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalPreviewSceneSetup.NotifyPreviewSceneUpdated
struct APrimalPreviewSceneSetup_NotifyPreviewSceneUpdated_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.SpawnImpactEffect
struct AShooterProjectile_SpawnImpactEffect_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterProjectile.ShouldNotifyServerOfClientImpact
struct AShooterProjectile_ShouldNotifyServerOfClientImpact_Params
{
public:
	class AActor*                                ImpactedActor;                                     // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_400F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x108 (0x108 - 0x0)
// Function ShooterGame.ShooterProjectile.ProjectileBounced
struct AShooterProjectile_ProjectileBounced_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               ImpactVelocity;                                    // 0xF0(0x18)(Net, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterProjectile.PreventExplosionEmitter
struct AShooterProjectile_PreventExplosionEmitter_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4011[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterProjectile.OnTouch
struct AShooterProjectile_OnTouch_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.OnProjectileStop
struct AShooterProjectile_OnProjectileStop_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterProjectile.OnImpact
struct AShooterProjectile_OnImpact_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bFromReplication;                                  // 0xF0(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4014[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.OnExplode
struct AShooterProjectile_OnExplode_Params
{
public:
	struct FHitResult                            Result;                                            // 0x0(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.ShooterProjectile.NetResetTransformAndVelocity
struct AShooterProjectile_NetResetTransformAndVelocity_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              NewRotation;                                       // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               NewVelocity;                                       // 0x30(0x18)(Edit, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        NewMoveIgnoreActors;                               // 0x48(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterProjectile.NetAttachRootComponentTo
struct AShooterProjectile_NetAttachRootComponentTo_Params
{
public:
	class USceneComponent*                       InParent;                                          // 0x0(0x8)(OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	class FName                                  InSocketName;                                      // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FVector                               RelativeLocation;                                  // 0x10(0x18)(ConstParm, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              RelativeRotation;                                  // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterProjectile.GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim
struct AShooterProjectile_GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterProjectile.GetProjectileID
struct AShooterProjectile_GetProjectileID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterProjectile.ExplodeAtLocation
struct AShooterProjectile_ExplodeAtLocation_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtNormal;                                          // 0x18(0x18)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.Explode
struct AShooterProjectile_Explode_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterProjectile.DisableAndDestroy
struct AShooterProjectile_DisableAndDestroy_Params
{
public:
	bool                                         ForceOnClient;                                     // 0x0(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.ShooterProjectile.ClientOnImpact
struct AShooterProjectile_ClientOnImpact_Params
{
public:
	struct FVector                               ProjectileLocation;                                // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ProjectileRotation;                                // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FHitResult                            HitResult;                                         // 0x30(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.ClientNetImpactFX
struct AShooterProjectile_ClientNetImpactFX_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterProjectile.ClientNetExplode
struct AShooterProjectile_ClientNetExplode_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterProjectile.BPSpawnedFragments
struct AShooterProjectile_BPSpawnedFragments_Params
{
public:
	TArray<class AShooterProjectile*>            FragmentArray;                                     // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x108 (0x108 - 0x0)
// Function ShooterGame.ShooterProjectile.BPProjectileBounced
struct AShooterProjectile_BPProjectileBounced_Params
{
public:
	struct FHitResult                            ImpactResult;                                      // 0x0(0xF0)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               ImpactVelocity;                                    // 0xF0(0x18)(Net, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterProjectile.BPInitVelocity
struct AShooterProjectile_BPInitVelocity_Params
{
public:
	struct FVector                               ShootDirection;                                    // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterProjectile.BPInitializedVelocity
struct AShooterProjectile_BPInitializedVelocity_Params
{
public:
	struct FVector                               InVelocity;                                        // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        CustomSpeed;                                       // 0x18(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4017[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterProjectile.BPIgnoreRadialDamageVictim
struct AShooterProjectile_BPIgnoreRadialDamageVictim_Params
{
public:
	class AActor*                                Victim;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4018[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterProjectile.BPDamageScalarApplied
struct AShooterProjectile_BPDamageScalarApplied_Params
{
public:
	float                                        Scalar;                                            // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterProjectile.BPApplyExplosionDamageAndVFX
struct AShooterProjectile_BPApplyExplosionDamageAndVFX_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceSpawnExplosionEmitter;                       // 0xF0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_401B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterProjectile.BP_IgnoreProjectileImpact
struct AShooterProjectile_BP_IgnoreProjectileImpact_Params
{
public:
	struct FHitResult                            ImpactHit;                                         // 0x0(0xF0)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_401C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterProjectile.ApplyDamageScalar
struct AShooterProjectile_ApplyDamageScalar_Params
{
public:
	float                                        Scalar;                                            // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterProjectile.AddMoveIgnoreActor
struct AShooterProjectile_AddMoveIgnoreActor_Params
{
public:
	class AActor*                                IgnoreActor;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalProjectileArrow.PickedUp
struct APrimalProjectileArrow_PickedUp_Params
{
public:
	class AShooterCharacter*                     ByCharacter;                                       // 0x0(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneRotation
struct APrimalProjectileNetGun_GetManagedBoneRotation_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocationsAndRotations
struct APrimalProjectileNetGun_GetManagedBoneLocationsAndRotations_Params
{
public:
	TArray<struct FVector>                       Locations;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FRotator>                      Rotations;                                         // 0x10(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocation
struct APrimalProjectileNetGun_GetManagedBoneLocation_Params
{
public:
	class FName                                  InBoneName;                                        // 0x0(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.PrimalRaft.BPOverrideSwimmingVelocity
struct APrimalRaft_BPOverrideSwimmingVelocity_Params
{
public:
	struct FVector                               InitialVelocity;                                   // 0x0(0x18)(ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               Gravity;                                           // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        FluidFriction;                                     // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        NetBuoyancy;                                       // 0x34(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x38(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4041[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x40(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalRaft.BPAllowMovementSound
struct APrimalRaft_BPAllowMovementSound_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalRaft.BP_OverrideSwimmingAcceleration
struct APrimalRaft_BP_OverrideSwimmingAcceleration_Params
{
public:
	struct FVector                               ModifyAcceleration;                                // 0x0(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x18(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4043[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalRichTextBlock.SetText
struct UPrimalRichTextBlock_SetText_Params
{
public:
	class FText                                  InText;                                            // 0x0(0x18)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDoParse;                                          // 0x18(0x1)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4048[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalRichTextBlock.SetString
struct UPrimalRichTextBlock_SetString_Params
{
public:
	class FString                                InString;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalRichTextBlock.GetText
struct UPrimalRichTextBlock_GetText_Params
{
public:
	class FText                                  ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalScrollBox.GetFirstWidgetWithinVisibleScrollboxFrame
struct UPrimalScrollBox_GetFirstWidgetWithinVisibleScrollboxFrame_Params
{
public:
	class UWidget*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStaticData.GetPrimalStaticData
struct UPrimalStaticData_GetPrimalStaticData_Params
{
public:
	class UClass*                                DataType;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalStaticData*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructureBearTrap.TriggerTouched
struct APrimalStructureBearTrap_TriggerTouched_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4058[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureBearTrap.NetGotoTrapState
struct APrimalStructureBearTrap_NetGotoTrapState_Params
{
public:
	int8                                         TrapState;                                         // 0x0(0x1)(Edit, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureBearTrap.IsTrapPrepared
struct APrimalStructureBearTrap_IsTrapPrepared_Params
{
public:
	float                                        AnimSetupTime;                                     // 0x0(0x4)(Edit, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_405E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalStructureBearTrap.BPNotifyImmobilizedCharacterIsDeadOrInConscious
struct APrimalStructureBearTrap_BPNotifyImmobilizedCharacterIsDeadOrInConscious_Params
{
public:
	bool                                         IsDead;                                            // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	bool                                         IsConscious;                                       // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureSeating.Release
struct APrimalStructureSeating_Release_Params
{
public:
	class AShooterCharacter*                     ShooterCharacter;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureSeating.HasAvailableSeat
struct APrimalStructureSeating_HasAvailableSeat_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureSeating.GetNumTakenSeats
struct APrimalStructureSeating_GetNumTakenSeats_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalStructureSeating.GetNearestFreeSpot
struct APrimalStructureSeating_GetNearestFreeSpot_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               CharacterLocation;                                 // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4079[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.Control
struct APrimalStructureSeating_Control_Params
{
public:
	class AShooterCharacter*                     ShooterCharacter;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
	int32                                        SeatNumber;                                        // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLockedToSeat;                                     // 0xC(0x1)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_407C[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.PrimalStructureSeating.ChangeSeating
struct APrimalStructureSeating_ChangeSeating_Params
{
public:
	struct FSeatingSpot                          PrimarySeatingSpot;                                // 0x0(0x38)(Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FSeatingSpot>                  ExtraSeatingSpots;                                 // 0x38(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_407D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureSeating.CanSeat
struct APrimalStructureSeating_CanSeat_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     ForCharacter;                                      // 0x8(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bForce;                                            // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_407F[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPSeatedPlayer
struct APrimalStructureSeating_BPSeatedPlayer_Params
{
public:
	class AShooterCharacter*                     SeatedChar;                                        // 0x0(0x8)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        AtSeatNumber;                                      // 0x8(0x4)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4082[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPReleasedPlayer
struct APrimalStructureSeating_BPReleasedPlayer_Params
{
public:
	class AShooterCharacter*                     ReleasedChar;                                      // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, EditConst, InstancedReference, SubobjectReference)
	int32                                        AtSeatNumber;                                      // 0x8(0x4)(Edit, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4084[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPPreventReleaseSeatingStructure
struct APrimalStructureSeating_BPPreventReleaseSeatingStructure_Params
{
public:
	class AShooterCharacter*                     ForSitter;                                         // 0x0(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4085[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPHandleSitterPoop
struct APrimalStructureSeating_BPHandleSitterPoop_Params
{
public:
	class AShooterCharacter*                     ForSitter;                                         // 0x0(0x8)(Edit, ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4089[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPGetBestSeatNumber
struct APrimalStructureSeating_BPGetBestSeatNumber_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        InBestSeatNumber;                                  // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSeating.BPAllowSeating
struct APrimalStructureSeating_BPAllowSeating_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_408A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureBed.SpawnedPlayerFor
struct APrimalStructureBed_SpawnedPlayerFor_Params
{
public:
	class AShooterPlayerController*              PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APawn*                                 ForPawn;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureDoor.OnRep_DoorOpenState
struct APrimalStructureDoor_OnRep_DoorOpenState_Params
{
public:
	int8                                         PrevDoorOpenState;                                 // 0x0(0x1)(ConstParm, ExportObject, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureDoor.NetGotoDoorState
struct APrimalStructureDoor_NetGotoDoorState_Params
{
public:
	int8                                         DoorState;                                         // 0x0(0x1)(BlueprintVisible, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureDoor.HasSamePinCode
struct APrimalStructureDoor_HasSamePinCode_Params
{
public:
	class APrimalStructureItemContainer*         OtherContainer;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_409F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureDoor.GetDoorState
struct APrimalStructureDoor_GetDoorState_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureDoor.CanOpen
struct APrimalStructureDoor_CanOpen_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_40A0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureDoor.BPSetDoorState
struct APrimalStructureDoor_BPSetDoorState_Params
{
public:
	int32                                        DoorState;                                         // 0x0(0x4)(BlueprintVisible, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureDoor.BPOverrideChangeDoorState
struct APrimalStructureDoor_BPOverrideChangeDoorState_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureDoor.BPGotoDoorState
struct APrimalStructureDoor_BPGotoDoorState_Params
{
public:
	int32                                        NewDoorState;                                      // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.ServerActivate
struct APrimalStructureElevatorPlatform_ServerActivate_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceDirection;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalStructureElevatorState     Dir;                                               // 0x9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40AB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceToTravelOverride;                          // 0xC(0x4)(Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.PlatformIsActive
struct APrimalStructureElevatorPlatform_PlatformIsActive_Params
{
public:
	enum class EPrimalStructureElevatorState     Direction;                                         // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.HasSamePinCode
struct APrimalStructureElevatorPlatform_HasSamePinCode_Params
{
public:
	class APrimalStructureItemContainer*         OtherContainer;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_40AC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.HasReachedMaxWeight
struct APrimalStructureElevatorPlatform_HasReachedMaxWeight_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.GetTrackHeight
struct APrimalStructureElevatorPlatform_GetTrackHeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.GetCurrentLiftedWeight
struct APrimalStructureElevatorPlatform_GetCurrentLiftedWeight_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.GetAllTrackStructures
struct APrimalStructureElevatorPlatform_GetAllTrackStructures_Params
{
public:
	TArray<class AActor*>                        Tracks;                                            // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.Deactivate
struct APrimalStructureElevatorPlatform_Deactivate_Params
{
public:
	bool                                         bSwitchDirection;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseZPosOverride;                                  // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ZPosOverride;                                      // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.BPElevatorStopped
struct APrimalStructureElevatorPlatform_BPElevatorStopped_Params
{
public:
	bool                                         bSwitchedDirection;                                // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalStructureElevatorState     NewDirection;                                      // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureElevatorPlatform.Activate
struct APrimalStructureElevatorPlatform_Activate_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceDirection;                                   // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalStructureElevatorState     Dir;                                               // 0x9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_40B5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DistanceToTravelOverride;                          // 0xC(0x4)(Net, Parm, OutParm, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureElevatorTrack.SetElevatorBase
struct APrimalStructureElevatorTrack_SetElevatorBase_Params
{
public:
	class APrimalStructureElevatorPlatform*      NewBase;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureElevatorTrack.MulticastSetElevatorBase
struct APrimalStructureElevatorTrack_MulticastSetElevatorBase_Params
{
public:
	class APrimalStructureElevatorPlatform*      NewBase;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureElevatorTrack.HasPlatformAttachedToTheTrack
struct APrimalStructureElevatorTrack_HasPlatformAttachedToTheTrack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureElevatorTrack.BPGetElevatorPlatform
struct APrimalStructureElevatorTrack_BPGetElevatorPlatform_Params
{
public:
	class APrimalStructureElevatorPlatform*      ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_PlantedCrop
struct APrimalStructureItemContainer_CropPlot_OnRep_PlantedCrop_Params
{
public:
	class UClass*                                PrevPlantedCrop;                                   // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_HasFruitItems
struct APrimalStructureItemContainer_CropPlot_OnRep_HasFruitItems_Params
{
public:
	bool                                         bPreviousHasFruitItems;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_CurrentCropPhase
struct APrimalStructureItemContainer_CropPlot_OnRep_CurrentCropPhase_Params
{
public:
	enum class ESeedCropPhase                    PrevCropPhase;                                     // 0x0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_CropPlot.BPGetAdditionalGrowthMultiplier
struct APrimalStructureItemContainer_CropPlot_BPGetAdditionalGrowthMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_CropPlot.AddWater
struct APrimalStructureItemContainer_CropPlot_AddWater_Params
{
public:
	float                                        Amount;                                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAllowNetworking;                                  // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.SetAppliedBuff
struct APrimalStructureItemContainer_SupplyCrate_SetAppliedBuff_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureKeypad.ActivateKeypad
struct APrimalStructureKeypad_ActivateKeypad_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PinCode;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bEnable;                                           // 0xC(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_40F8[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructureLadder.EndClimbingLadder
struct APrimalStructureLadder_EndClimbingLadder_Params
{
public:
	class AShooterCharacter*                     TheCharacter;                                      // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bServerClimbOver;                                  // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40FB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ServerClimbOverLoc;                                // 0x10(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFromJump;                                       // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_40FC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureLadder.BP_SetLaddersRetracted
struct APrimalStructureLadder_BP_SetLaddersRetracted_Params
{
public:
	bool                                         bRetract;                                          // 0x0(0x1)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructurePlacer.SetForceDisplayMissionAreaStructureNoBuildZones
struct APrimalStructurePlacer_SetForceDisplayMissionAreaStructureNoBuildZones_Params
{
public:
	bool                                         bForceDisplay;                                     // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructurePlacer.SetChoosingRotation
struct APrimalStructurePlacer_SetChoosingRotation_Params
{
public:
	bool                                         bNewChoosingRotation;                              // 0x0(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructurePlacer.IsPlacingActive
struct APrimalStructurePlacer_IsPlacingActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.PrimalStructurePlacer.GetLastPlacementProperties
struct APrimalStructurePlacer_GetLastPlacementProperties_Params
{
public:
	struct FVector                               OutLastHitLoc;                                     // 0x0(0x18)(Edit, ConstParm, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutLastHitRot;                                     // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutLastViewRot;                                    // 0x30(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructurePlacer.DrawStructurePreviewHUD
struct APrimalStructurePlacer_DrawStructurePreviewHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
	class APrimalStructure*                      PlacingStructure;                                  // 0x8(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructurePortableLadder.UpdateBoxCollisionForRetraction
struct APrimalStructurePortableLadder_UpdateBoxCollisionForRetraction_Params
{
public:
	bool                                         bRetracted;                                        // 0x0(0x1)(OutParm, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructureSeaMine.OnTriggerEndOverlap
struct APrimalStructureSeaMine_OnTriggerEndOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4110[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructureSeaMine.OnTriggerBeginOverlap
struct APrimalStructureSeaMine_OnTriggerBeginOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4112[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.PrimalStructureSeaMine.OnHit
struct APrimalStructureSeaMine_OnHit_Params
{
public:
	class AActor*                                SelfActor;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               NormalImpulse;                                     // 0x10(0x18)(Edit, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x28(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructureSeaMine.OnExplodingTriggerBeginOverlap
struct APrimalStructureSeaMine_OnExplodingTriggerBeginOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4114[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureSign.OnRep_SignText
struct APrimalStructureSign_OnRep_SignText_Params
{
public:
	class FString                                PreviousSignText;                                  // 0x0(0x10)(Edit, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalStructureSkeletalDoor.OnEndOverlap
struct APrimalStructureSkeletalDoor_OnEndOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4123[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructureSkeletalDoor.OnBeginOverlap
struct APrimalStructureSkeletalDoor_OnBeginOverlap_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                OtherActor;                                        // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4124[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureSkeletalDoor.GetDoorOpenState
struct APrimalStructureSkeletalDoor_GetDoorOpenState_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.PrimalStructureTripwire.TriggerTouched
struct APrimalStructureTripwire_TriggerTouched_Params
{
public:
	class UPrimitiveComponent*                   OverlappedComponent;                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Other;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPrimitiveComponent*                   OtherComp;                                         // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	int32                                        OtherBodyIndex;                                    // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bFromSweep;                                        // 0x1C(0x1)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_412A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            SweepResult;                                       // 0x20(0xF0)(ConstParm, Net, EditFixedSize, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureTripwire.SetConnectedTo
struct APrimalStructureTripwire_SetConnectedTo_Params
{
public:
	class APrimalStructureTripwire*              InTripwire;                                        // 0x0(0x8)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureTripwire.NetUpdateBoxName
struct APrimalStructureTripwire_NetUpdateBoxName_Params
{
public:
	class FString                                NewName;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureTripwire.Multicast_ConnectedTo
struct APrimalStructureTripwire_Multicast_ConnectedTo_Params
{
public:
	class APrimalStructureTripwire*              InTripwire;                                        // 0x0(0x8)(Edit, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureTurret.NetMultiUpdateTarget
struct APrimalStructureTurret_NetMultiUpdateTarget_Params
{
public:
	class AActor*                                PNewTarget;                                        // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	double                                       NewLastFireTime;                                   // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureTurret.GetTargetAltAimSocket
struct APrimalStructureTurret_GetTargetAltAimSocket_Params
{
public:
	class APrimalCharacter*                      ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructureTurret.ClientsFireProjectile
struct APrimalStructureTurret_ClientsFireProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureTurret.BPTurretPreventsTargeting
struct APrimalStructureTurret_BPTurretPreventsTargeting_Params
{
public:
	class APrimalCharacter*                      PotentialTarget;                                   // 0x0(0x8)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4138[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureTurret.BPCopyCustomSettingsFromTurret
struct APrimalStructureTurret_BPCopyCustomSettingsFromTurret_Params
{
public:
	class APrimalStructureTurret*                FromTurret;                                        // 0x0(0x8)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_413A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.TryFiring
struct APrimalStructureTurretBallista_TryFiring_Params
{
public:
	bool                                         ShouldFire;                                        // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.ServerSetTargeting
struct APrimalStructureTurretBallista_ServerSetTargeting_Params
{
public:
	bool                                         bTargeting;                                        // 0x0(0x1)(ExportObject, BlueprintReadOnly, OutParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.GetCurrentAmmoType
struct APrimalStructureTurretBallista_GetCurrentAmmoType_Params
{
public:
	class UClass*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.ClientsFireProjectile
struct APrimalStructureTurretBallista_ClientsFireProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.BPGetDamageMultiplier
struct APrimalStructureTurretBallista_BPGetDamageMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureTurretBallista.BPCanFire
struct APrimalStructureTurretBallista_BPCanFire_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.UpdateLockState
struct APrimalStructureUnderwaterBase_UpdateLockState_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DoLock;                                            // 0x8(0x1)(ExportObject, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontIncrementTagger;                              // 0x9(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4167[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.UpdateFrameState
struct APrimalStructureUnderwaterBase_UpdateFrameState_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         HideFrame;                                         // 0x8(0x1)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontIncrementTagger;                              // 0x9(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4169[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.UpdateFloodState
struct APrimalStructureUnderwaterBase_UpdateFloodState_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DoFlood;                                           // 0x8(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontIncrementTagger;                              // 0x9(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_416C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.SetPortholeState
struct APrimalStructureUnderwaterBase_SetPortholeState_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	int32                                        NewState;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.GetLinkedBaseByPortholeIndex
struct APrimalStructureUnderwaterBase_GetLinkedBaseByPortholeIndex_Params
{
public:
	int32                                        PortholeIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        LinkedPortholeIndex;                               // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructureUnderwaterBase*        ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.BPSetPortholeState
struct APrimalStructureUnderwaterBase_BPSetPortholeState_Params
{
public:
	int32                                        PortholeIndex;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewState;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalStructureUnderwaterBase.AreBasesOpenToEachOther
struct APrimalStructureUnderwaterBase_AreBasesOpenToEachOther_Params
{
public:
	class APrimalStructureUnderwaterBase*        OtherBase;                                         // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        MyPortholeIndex;                                   // 0x8(0x4)(BlueprintReadOnly, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        OtherPortholeIndex;                                // 0xC(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4176[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureWaterPipe.SetHasWater
struct APrimalStructureWaterPipe_SetHasWater_Params
{
public:
	bool                                         bNewHasWater;                                      // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureWaterPipe.OnRep_HasWater
struct APrimalStructureWaterPipe_OnRep_HasWater_Params
{
public:
	bool                                         bPreviousHasWater;                                 // 0x0(0x1)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalStructureWaterPipe.BPOnWaterStateChange
struct APrimalStructureWaterPipe_BPOnWaterStateChange_Params
{
public:
	bool                                         bPipeHasWaterOrPower;                              // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalStructureWaterPipe.BPOnRefreshPipeMaterials
struct APrimalStructureWaterPipe_BPOnRefreshPipeMaterials_Params
{
public:
	bool                                         bPipeHasWaterOrPower;                              // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4183[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    NewMaterial;                                       // 0x8(0x8)(Edit, ConstParm, Net, EditFixedSize, Transient, DisableEditOnInstance, EditConst, DuplicateTransient)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalUI_Toast.SetCounter
struct UPrimalUI_Toast_SetCounter_Params
{
public:
	int32                                        NewCounter;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalUI_Toast.OverrideTextValueWithString
struct UPrimalUI_Toast_OverrideTextValueWithString_Params
{
public:
	class FString                                NewText;                                           // 0x0(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         HideProgressBar;                                   // 0x10(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalUI_Toast.OverrideTextValue
struct UPrimalUI_Toast_OverrideTextValue_Params
{
public:
	class FText                                  NewText;                                           // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         HideProgressBar;                                   // 0x18(0x1)(ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalUI_Toast.OverrideCounterStart
struct UPrimalUI_Toast_OverrideCounterStart_Params
{
public:
	int32                                        Num;                                               // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalUI_Toast.IsAtCounterMax
struct UPrimalUI_Toast_IsAtCounterMax_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalUI_Toast.InitCounter
struct UPrimalUI_Toast_InitCounter_Params
{
public:
	int32                                        NewCounterMax;                                     // 0x0(0x4)(Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInWillSetCounter;                                 // 0x4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_418F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.UsesAmmo
struct AShooterWeapon_UsesAmmo_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.UseAmmo
struct AShooterWeapon_UseAmmo_Params
{
public:
	int32                                        UseAmmoAmountOverride;                             // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.StopWeaponAnimation
struct AShooterWeapon_StopWeaponAnimation_Params
{
public:
	struct FWeaponAnim                           Animation;                                         // 0x0(0x10)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	bool                                         bReplicate;                                        // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToInstigator;                            // 0x11(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4194[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.StartFire
struct AShooterWeapon_StartFire_Params
{
public:
	bool                                         bFromGamepad;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.SetAmmoReloadState
struct AShooterWeapon_SetAmmoReloadState_Params
{
public:
	enum class EWeaponAmmoReloadState            NewState;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.SetAmmoInClip
struct AShooterWeapon_SetAmmoInClip_Params
{
public:
	int32                                        NewAmmo;                                           // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.SetAccessoryEnabled
struct AShooterWeapon_SetAccessoryEnabled_Params
{
public:
	bool                                         bEnabled;                                          // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.ServerSetMeleeAnimIndex
struct AShooterWeapon_ServerSetMeleeAnimIndex_Params
{
public:
	int32                                        SelectedMeleeAnim;                                 // 0x0(0x4)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.ServerSetColorizeRegion
struct AShooterWeapon_ServerSetColorizeRegion_Params
{
public:
	int32                                        TheRegion;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bValToUse;                                         // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_419B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.SelectMeleeAttackAnim
struct AShooterWeapon_SelectMeleeAttackAnim_Params
{
public:
	int32                                        ForceSelectedAnim;                                 // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_419D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.PlayWeaponSound
struct AShooterWeapon_PlayWeaponSound_Params
{
public:
	class USoundCue*                             Sound;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class UAudioComponent*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon.PlayWeaponAnimationEx
struct AShooterWeapon_PlayWeaponAnimationEx_Params
{
public:
	struct FWeaponAnim                           Animation;                                         // 0x0(0x10)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        InPlayRate;                                        // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bPlayBothFirstAndThirdPerson;                      // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReplicate;                                        // 0x15(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToInstigator;                            // 0x16(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPauseOnFinish1P;                                  // 0x17(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x18(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x19(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x1C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon.PlayWeaponAnimation
struct AShooterWeapon_PlayWeaponAnimation_Params
{
public:
	struct FWeaponAnim                           Animation;                                         // 0x0(0x10)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	bool                                         bPlayBothFirstAndThirdPerson;                      // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReplicate;                                        // 0x11(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToInstigator;                            // 0x12(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPauseOnFinish1P;                                  // 0x13(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x14(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x15(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_41A6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41A7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.OnDurabilityChanged
struct AShooterWeapon_OnDurabilityChanged_Params
{
public:
	float                                        NewDurabilityPercent;                              // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUpdate;                                      // 0x4(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, InstancedReference, SubobjectReference)
	uint8                                        Pad_41AC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.NetSetLastAttackMontage
struct AShooterWeapon_NetSetLastAttackMontage_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.LoadPrimalCameraWeaponOverride
struct AShooterWeapon_LoadPrimalCameraWeaponOverride_Params
{
public:
	class UClass*                                WeaponCameraOverrideClass;                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.IsPlayingWeaponAnimMontage
struct AShooterWeapon_IsPlayingWeaponAnimMontage_Params
{
public:
	struct FWeaponAnim                           WeaponAnimMontage;                                 // 0x0(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        TimeFromEndToConsiderFinished;                     // 0x10(0x4)(Edit, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41AE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.IsOwningClient
struct AShooterWeapon_IsOwningClient_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.IsLocallyOwned
struct AShooterWeapon_IsLocallyOwned_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.IsInMeleeAttack
struct AShooterWeapon_IsInMeleeAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.IsFiring
struct AShooterWeapon_IsFiring_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.IsClimbing
struct AShooterWeapon_IsClimbing_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.HasInfiniteAmmo
struct AShooterWeapon_HasInfiniteAmmo_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.GetWeaponMesh
struct AShooterWeapon_GetWeaponMesh_Params
{
public:
	class USkeletalMeshComponent*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.GetWeaponDamageMultiplier
struct AShooterWeapon_GetWeaponDamageMultiplier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.GetWeaponCameraSettingsOverride
struct AShooterWeapon_GetWeaponCameraSettingsOverride_Params
{
public:
	class UPrimalCameraConfig_WeaponOverride*    ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.GetWeaponAttackPlayRate
struct AShooterWeapon_GetWeaponAttackPlayRate_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.GetStandingAnimation
struct AShooterWeapon_GetStandingAnimation_Params
{
public:
	float                                        OutBlendInTime;                                    // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OutBlendOutTime;                                   // 0x4(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.GetReloadAnim
struct AShooterWeapon_GetReloadAnim_Params
{
public:
	bool                                         bOnlyCheckRegularReload;                           // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41B5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FWeaponAnim                           ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.GetPawnOwner
struct AShooterWeapon_GetPawnOwner_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.GetMuzzleLocation
struct AShooterWeapon_GetMuzzleLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.GetMuzzleDirection
struct AShooterWeapon_GetMuzzleDirection_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.GetDebugInfoString
struct AShooterWeapon_GetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.GetCurrentAmmoInClip
struct AShooterWeapon_GetCurrentAmmoInClip_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.GetCurrentAmmo
struct AShooterWeapon_GetCurrentAmmo_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.GetColorizeRegionActivated
struct AShooterWeapon_GetColorizeRegionActivated_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41BC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.GetAmmoReloadState
struct AShooterWeapon_GetAmmoReloadState_Params
{
public:
	enum class EWeaponAmmoReloadState            ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.GetAdjustedAim
struct AShooterWeapon_GetAdjustedAim_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.ForceTPVTargetingAnimation
struct AShooterWeapon_ForceTPVTargetingAnimation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.ForcesTPVCameraOffset
struct AShooterWeapon_ForcesTPVCameraOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.ForceMeshUpdate
struct AShooterWeapon_ForceMeshUpdate_Params
{
public:
	bool                                         bIsFirstPerson;                                    // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.FindComponentByName
struct AShooterWeapon_FindComponentByName_Params
{
public:
	class FName                                  ComponentName;                                     // 0x0(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class USceneComponent*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.ConsumeAmmoItem
struct AShooterWeapon_ConsumeAmmoItem_Params
{
public:
	int32                                        Quantity;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon.ClientSpawnMeleeEffects
struct AShooterWeapon_ClientSpawnMeleeEffects_Params
{
public:
	struct FVector                               Impact;                                            // 0x0(0x18)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.ClientSetClipAmmo
struct AShooterWeapon_ClientSetClipAmmo_Params
{
public:
	int32                                        NewClipAmmo;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlyUpdateItem;                                   // 0x4(0x1)(ConstParm, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_41C0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.CanReload
struct AShooterWeapon_CanReload_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.CanMeleeAttack
struct AShooterWeapon_CanMeleeAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterWeapon.CanFire
struct AShooterWeapon_CanFire_Params
{
public:
	bool                                         bForceAllowSubmergedFiring;                        // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPWeaponZoom
struct AShooterWeapon_BPWeaponZoom_Params
{
public:
	bool                                         bZoomingIn;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.ShooterWeapon.BPWeaponDealDamage
struct AShooterWeapon_BPWeaponDealDamage_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DamageAmount;                                      // 0x108(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41C4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DamageType;                                        // 0x110(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Impulse;                                           // 0x118(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x11C(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPWeaponCanFire
struct AShooterWeapon_BPWeaponCanFire_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPTryFireWeapon
struct AShooterWeapon_BPTryFireWeapon_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon.BPSpawnMeleeEffects
struct AShooterWeapon_BPSpawnMeleeEffects_Params
{
public:
	struct FVector                               Impact;                                            // 0x0(0x18)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.BPShouldDealDamage
struct AShooterWeapon_BPShouldDealDamage_Params
{
public:
	class AActor*                                TestActor;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41C5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPRemainEquipped
struct AShooterWeapon_BPRemainEquipped_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPPreventSwitchingWeapon
struct AShooterWeapon_BPPreventSwitchingWeapon_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPPostSpawnMuzzleEffect
struct AShooterWeapon_BPPostSpawnMuzzleEffect_Params
{
public:
	class UParticleSystemComponent*              NewMuzzlePSC;                                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOverrideRootRotationOffset
struct AShooterWeapon_BPOverrideRootRotationOffset_Params
{
public:
	struct FRotator                              InRootRotation;                                    // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOverrideMeleeSwingSocket
struct AShooterWeapon_BPOverrideMeleeSwingSocket_Params
{
public:
	class FName                                  FromSocket;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOverrideFPVMasterPoseComponent
struct AShooterWeapon_BPOverrideFPVMasterPoseComponent_Params
{
public:
	class USkeletalMeshComponent*                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOverrideAimDirection
struct AShooterWeapon_BPOverrideAimDirection_Params
{
public:
	struct FVector                               DesiredAimDirection;                               // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOnWeaponAnimPlayedNotify
struct AShooterWeapon_BPOnWeaponAnimPlayedNotify_Params
{
public:
	struct FWeaponAnim                           Animation;                                         // 0x0(0x10)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        InPlayRate;                                        // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bPlayBothFirstAndThirdPerson;                      // 0x14(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReplicate;                                        // 0x15(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReplicateToInstigator;                            // 0x16(0x1)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPauseOnFinish1P;                                  // 0x17(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseAndServerUpdateMesh;                 // 0x18(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceTickPoseOnServer;                            // 0x19(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_41CF[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOnStopTargeting
struct AShooterWeapon_BPOnStopTargeting_Params
{
public:
	bool                                         bFromGamepadLeft;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPOnStartTargeting
struct AShooterWeapon_BPOnStartTargeting_Params
{
public:
	bool                                         bFromGamepadLeft;                                  // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPModifyFOV
struct AShooterWeapon_BPModifyFOV_Params
{
public:
	float                                        InFOV;                                             // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPIsValidUnStasisCaster
struct AShooterWeapon_BPIsValidUnStasisCaster_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetTPVCameraOffset
struct AShooterWeapon_BPGetTPVCameraOffset_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetTargetingTooltipInfoLabel
struct AShooterWeapon_BPGetTargetingTooltipInfoLabel_Params
{
public:
	class FText                                  ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetSelectedMeleeAttackAnim
struct AShooterWeapon_BPGetSelectedMeleeAttackAnim_Params
{
public:
	struct FWeaponAnim                           ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetSeatingAnimation
struct AShooterWeapon_BPGetSeatingAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetDebugInfoString
struct AShooterWeapon_BPGetDebugInfoString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetCurrentState
struct AShooterWeapon_BPGetCurrentState_Params
{
public:
	enum class EWeaponState                      ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetCrosshairColor
struct AShooterWeapon_BPGetCrosshairColor_Params
{
public:
	struct FColor                                ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPGetActorForTargetingTooltip
struct AShooterWeapon_BPGetActorForTargetingTooltip_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPForceTPVTargetingAnimation
struct AShooterWeapon_BPForceTPVTargetingAnimation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPDrawHUD
struct AShooterWeapon_BPDrawHUD_Params
{
public:
	class AShooterHUD*                           HUD;                                               // 0x0(0x8)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, GlobalConfig, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon.BPConstrainAspectRatio
struct AShooterWeapon_BPConstrainAspectRatio_Params
{
public:
	float                                        OutAspectRatio;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41DE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPCanToggleAccessory
struct AShooterWeapon_BPCanToggleAccessory_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPCanMeleeAttack
struct AShooterWeapon_BPCanMeleeAttack_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon.BPCanEquip
struct AShooterWeapon_BPCanEquip_Params
{
public:
	class AShooterCharacter*                     ByCharacter;                                       // 0x0(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_41E2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_End
struct AShooterWeapon_BPAnimNotifyCustomState_End_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_Begin
struct AShooterWeapon_BPAnimNotifyCustomState_Begin_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	float                                        TotalDuration;                                     // 0x18(0x4)(ExportObject, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_41E5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimNotifyState*                      AnimNotifyObject;                                  // 0x20(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomEvent
struct AShooterWeapon_BPAnimNotifyCustomEvent_Params
{
public:
	class FName                                  CustomEventName;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USkeletalMeshComponent*                MeshComp;                                          // 0x8(0x8)(ConstParm, ExportObject, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UAnimSequenceBase*                     Animation;                                         // 0x10(0x8)(ConstParm, ExportObject, ReturnParm, Config, EditConst)
	class UAnimNotify*                           AnimNotifyObject;                                  // 0x18(0x8)(Edit, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.BPAllowNativeFireWeapon
struct AShooterWeapon_BPAllowNativeFireWeapon_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon.BPAdjustAmmoPerShot
struct AShooterWeapon_BPAdjustAmmoPerShot_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.AllowUnequip
struct AShooterWeapon_AllowUnequip_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon.AllowTargeting
struct AShooterWeapon_AllowTargeting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterWeapon.AllowedToFire
struct AShooterWeapon_AllowedToFire_Params
{
public:
	bool                                         bForceAllowSubmergedFiring;                        // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.SetLockedTarget
struct AShooterWeapon_Projectile_SetLockedTarget_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	bool                                         bIsLocked;                                         // 0x8(0x1)(Edit, ExportObject, Net, OutParm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_4249[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectileEx
struct AShooterWeapon_Projectile_ServerFireProjectileEx_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x30(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        RandomSeed;                                        // 0x34(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ProjectileID;                                      // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectile
struct AShooterWeapon_Projectile_ServerFireProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ProjectileID;                                      // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.Listener_LockOn_Update
struct AShooterWeapon_Projectile_Listener_LockOn_Update_Params
{
public:
	bool                                         Reset;                                             // 0x0(0x1)(ConstParm, ReturnParm, Config, EditConst)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.GetTrajectoryTarget
struct AShooterWeapon_Projectile_GetTrajectoryTarget_Params
{
public:
	int32                                        SubSteps;                                          // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        TotalTime;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	struct FHitResult                            ReturnValue;                                       // 0x8(0xF0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectileEx
struct AShooterWeapon_Projectile_ClientsFireProjectileEx_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Speed;                                             // 0x30(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        RandomSeed;                                        // 0x34(0x4)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ProjectileID;                                      // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectile
struct AShooterWeapon_Projectile_ClientsFireProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ProjectileID;                                      // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.BPSelectProjectileToFire
struct AShooterWeapon_Projectile_BPSelectProjectileToFire_Params
{
public:
	class UClass*                                ProjectileClassOverride;                           // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class USoundCue*                             FireSoundOverride;                                 // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSpawnOnClient;                                    // 0x10(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_424E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideMaxSpeed;                                  // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon_Projectile.BPOnSpawnedProjectile
struct AShooterWeapon_Projectile_BPOnSpawnedProjectile_Params
{
public:
	class AShooterProjectile*                    Projectile;                                        // 0x0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponBow.ServerSetPullString
struct APrimalWeaponBow_ServerSetPullString_Params
{
public:
	bool                                         bIsPulling;                                        // 0x0(0x1)(BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponBow.BPCanStartFire
struct APrimalWeaponBow_BPCanStartFire_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponElectronicBinoculars.SetBinocularsTargeting
struct APrimalWeaponElectronicBinoculars_SetBinocularsTargeting_Params
{
public:
	bool                                         SetTargeting;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponElectronicBinoculars.ServerSetActivateNightVision
struct APrimalWeaponElectronicBinoculars_ServerSetActivateNightVision_Params
{
public:
	int8                                         bActive;                                           // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalWeaponElectronicBinoculars.GetZoomFloat
struct APrimalWeaponElectronicBinoculars_GetZoomFloat_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponElectronicBinoculars.ClientSetActivateNightVision
struct APrimalWeaponElectronicBinoculars_ClientSetActivateNightVision_Params
{
public:
	int8                                         bActive;                                           // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWeaponGPS.ServerSetUseCompassInsteadOfGPS
struct APrimalWeaponGPS_ServerSetUseCompassInsteadOfGPS_Params
{
public:
	bool                                         bUseCompass;                                       // 0x0(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalWeaponGrenade.BPGetProjectileSpeed
struct APrimalWeaponGrenade_BPGetProjectileSpeed_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWheeledVehicleCharacter.ServerHonk
struct APrimalWheeledVehicleCharacter_ServerHonk_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWheeledVehicleCharacter.NetHonk
struct APrimalWheeledVehicleCharacter_NetHonk_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.SetAttachment
struct UPrimalWindSourceComponent_SetAttachment_Params
{
public:
	class UPrimitiveComponent*                   NewAttachmentComponent;                            // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        AttachmentCollectionIndex;                         // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42C7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.IsInteractionEnabled
struct UPrimalWindSourceComponent_IsInteractionEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.IsAttachedToPrimalStructure
struct UPrimalWindSourceComponent_IsAttachedToPrimalStructure_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.IsAttachedToPrimalCharacter
struct UPrimalWindSourceComponent_IsAttachedToPrimalCharacter_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.GetScaledRadiiForFoliageInteraction
struct UPrimalWindSourceComponent_GetScaledRadiiForFoliageInteraction_Params
{
public:
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        Inner;                                             // 0x8(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Outer;                                             // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.GetCurrentWindSourceLocation
struct UPrimalWindSourceComponent_GetCurrentWindSourceLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.GetCurrentExtraCapsuleWindSourceLocation
struct UPrimalWindSourceComponent_GetCurrentExtraCapsuleWindSourceLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.BPImpactingFluidSurfaceTick
struct UPrimalWindSourceComponent_BPImpactingFluidSurfaceTick_Params
{
public:
	struct FVector                               ImpactLocation;                                    // 0x0(0x18)(BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PenetrationScalar;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.BPImpactedFluidSurface
struct UPrimalWindSourceComponent_BPImpactedFluidSurface_Params
{
public:
	struct FVector                               ImpactLocation;                                    // 0x0(0x18)(BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PenetrationScalar;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.BPExitedFluidSurface
struct UPrimalWindSourceComponent_BPExitedFluidSurface_Params
{
public:
	struct FVector                               ImpactLocation;                                    // 0x0(0x18)(BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        PenetrationScalar;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_42D5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalWindSourceComponent.AttachWindSourceToMeshComponent
struct UPrimalWindSourceComponent_AttachWindSourceToMeshComponent_Params
{
public:
	class UMeshComponent*                        AttachMeshComp;                                    // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  AttachSocket;                                      // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWordFilter.SanitizeString
struct UPrimalWordFilter_SanitizeString_Params
{
public:
	class FString                                ToSanitize;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_42EE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWordFilter.HasIllegalWord
struct UPrimalWordFilter_HasIllegalWord_Params
{
public:
	class FString                                ToCheck;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_42F3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWordFilter.HasBadParseCharacter
struct UPrimalWordFilter_HasBadParseCharacter_Params
{
public:
	class FString                                ToCheck;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         AllowMultiline;                                    // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_42F5[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalWorldBuffCustomImplement.Tick
struct UPrimalWorldBuffCustomImplement_Tick_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalWorldBuffCustomImplement.GetWorld
struct UPrimalWorldBuffCustomImplement_GetWorld_Params
{
public:
	class UWorld*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalWorldBuffCustomImplement.GetOwner
struct UPrimalWorldBuffCustomImplement_GetOwner_Params
{
public:
	class UObject*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackIncreased
struct UPrimalWorldBuffCustomImplement_BuffStackIncreased_Params
{
public:
	int32                                        NewStackCount;                                     // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackDecrease
struct UPrimalWorldBuffCustomImplement_BuffStackDecrease_Params
{
public:
	int32                                        NewStackCount;                                     // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.RemoveWorldBuff
struct UPrimalWorldBuffData_RemoveWorldBuff_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  WorldBuffIdentifier;                               // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffSet
struct UPrimalWorldBuffData_GetWorldBuffSet_Params
{
public:
	class FName                                  WorldBuffSetName;                                  // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FWorldBuffDefinition>          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffDefinitionByName
struct UPrimalWorldBuffData_GetWorldBuffDefinitionByName_Params
{
public:
	class FName                                  WorldBuffIdentifier;                               // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FWorldBuffDefinition                  OutWorldBuffDefinition;                            // 0x8(0xF0)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_42F9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.GetWorldBuffData
struct UPrimalWorldBuffData_GetWorldBuffData_Params
{
public:
	class UPrimalWorldBuffData*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.CanActivateWorldBuff
struct UPrimalWorldBuffData_CanActivateWorldBuff_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  WorldBuffIdentifier;                               // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FName>                          OutWorldBuffsToBeReplaced;                         // 0x10(0x10)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_42FA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalWorldBuffData.AddWorldBuff
struct UPrimalWorldBuffData_AddWorldBuff_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  WorldBuffIdentifier;                               // 0x8(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        StacksToGive;                                      // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_42FC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.PrimalWorldModifier.TryStaticMeshActorReskin
struct APrimalWorldModifier_TryStaticMeshActorReskin_Params
{
public:
	class AStaticMeshActor*                      ForStaticMeshActor;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FSublevelOverrideGroup                CurrentSublevelOverrideGroup;                      // 0x8(0x38)(BlueprintVisible, ExportObject, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalWorldModifier.TryFoliageReskin
struct APrimalWorldModifier_TryFoliageReskin_Params
{
public:
	class AInstancedFoliageActor*                ForFoliageActor;                                   // 0x0(0x8)(Edit, ConstParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWorldModifier.IsAllowedOnCurrentMap
struct APrimalWorldModifier_IsAllowedOnCurrentMap_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWorldModifier.HasPriority
struct APrimalWorldModifier_HasPriority_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.PrimalWorldModifier.GetCurrentSublevelOverrideGroup
struct APrimalWorldModifier_GetCurrentSublevelOverrideGroup_Params
{
public:
	struct FSublevelOverrideGroup                OutSublevelOverrideGroup;                          // 0x0(0x38)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalWorldModifier.BPSkinFoliage
struct APrimalWorldModifier_BPSkinFoliage_Params
{
public:
	class UHierarchicalInstancedStaticMeshComponent* FoliageInstance;                                   // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalWorldSettings.IsAllowedInLevelBounds
struct APrimalWorldSettings_IsAllowedInLevelBounds_Params
{
public:
	struct FVector                               AtLocat;                                           // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4303[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.PrimalWorldSettings.GetMissionMetaData
struct APrimalWorldSettings_GetMissionMetaData_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FMissionMetaData                      Value;                                             // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4305[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.PrimalWorldSettings.GetFoliageAndFluidSimEnabled
struct APrimalWorldSettings_GetFoliageAndFluidSimEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.PrimalWorldSettings.GetExtraStaticMeshSocketByName
struct APrimalWorldSettings_GetExtraStaticMeshSocketByName_Params
{
public:
	class UStaticMesh*                           ForStaticMesh;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  FakeSocketName;                                    // 0x8(0x8)(Edit, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FFakeStaticMeshSocketData             OutFakeSocketData;                                 // 0x10(0x70)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x80(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4306[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalWorldSettings.CanSpawnGloballyLimitedParticle
struct APrimalWorldSettings_CanSpawnGloballyLimitedParticle_Params
{
public:
	class UNiagaraComponent*                     ForNiagaraComponent;                               // 0x0(0x8)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4307[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.UseAlternateStandingAnim
struct AShooterCharacter_UseAlternateStandingAnim_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.UseAltAimOffsetAnim
struct AShooterCharacter_UseAltAimOffsetAnim_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.UseAdditiveStandingAnim
struct AShooterCharacter_UseAdditiveStandingAnim_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.UpdateAllyRadarDatas
struct AShooterCharacter_UpdateAllyRadarDatas_Params
{
public:
	TArray<struct FAllyRadarDatas>               NewDatas;                                          // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.SyncGrapHookDistance
struct AShooterCharacter_SyncGrapHookDistance_Params
{
public:
	float                                        Distance;                                          // 0x0(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.StructurePlacementUseAlternateOriginActor
struct AShooterCharacter_StructurePlacementUseAlternateOriginActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.StartWeaponSwitch
struct AShooterCharacter_StartWeaponSwitch_Params
{
public:
	class UPrimalItem*                           APrimalItem;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDontClearLastWeapon;                              // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4375[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.StartCameraTransition
struct AShooterCharacter_StartCameraTransition_Params
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.SetPreventEquipAllWeapons
struct AShooterCharacter_SetPreventEquipAllWeapons_Params
{
public:
	bool                                         bPrevent;                                          // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.SetPlayerHexagonCount
struct AShooterCharacter_SetPlayerHexagonCount_Params
{
public:
	int32                                        NewHexagonCount;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_437A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.SetImplantSuicideCooldownStartTime
struct AShooterCharacter_SetImplantSuicideCooldownStartTime_Params
{
public:
	double                                       StartTime;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterCharacter.SetHairOnComponent
struct AShooterCharacter_SetHairOnComponent_Params
{
public:
	class USkeletalMeshComponent*                HairComponent;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMeshComponent*                LeaderPoseComponent;                               // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	TSoftObjectPtr<class USkeletalMesh>          HairMesh;                                          // 0x10(0x30)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                AnimBlueprint;                                     // 0x40(0x8)(Edit, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference)
	TSoftObjectPtr<class UMaterialInterface>     FemaleHairOverride;                                // 0x48(0x30)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.SetFastInventoryMode
struct AShooterCharacter_SetFastInventoryMode_Params
{
public:
	bool                                         Activate;                                          // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.SetExpectedBase
struct AShooterCharacter_SetExpectedBase_Params
{
public:
	class APrimalStructure*                      BaseStructure;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.SetCarriedPitchYaw
struct AShooterCharacter_SetCarriedPitchYaw_Params
{
public:
	float                                        NewCarriedPitch;                                   // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        NewCarriedYaw;                                     // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.ShooterCharacter.SetCameraMode
struct AShooterCharacter_SetCameraMode_Params
{
public:
	bool                                         bFirstPerson;                                      // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreSettingFirstPersonRiding;                   // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x2(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.SetBoneModifiersOverride
struct AShooterCharacter_SetBoneModifiersOverride_Params
{
public:
	TArray<struct FBoneModifierNamed>            NamedBoneModifiers;                                // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.SetAutoPlayer
struct AShooterCharacter_SetAutoPlayer_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerStartSurfaceCameraForPassenger
struct AShooterCharacter_ServerStartSurfaceCameraForPassenger_Params
{
public:
	float                                        Yaw;                                               // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x4(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Roll;                                              // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	bool                                         bShouldInvertInput;                                // 0xC(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4394[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerSetViewingInventory
struct AShooterCharacter_ServerSetViewingInventory_Params
{
public:
	bool                                         bIsViewing;                                        // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMulticast;                                        // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerSetTargeting
struct AShooterCharacter_ServerSetTargeting_Params
{
public:
	bool                                         bNewTargeting;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerSetBallistaTargeting
struct AShooterCharacter_ServerSetBallistaTargeting_Params
{
public:
	bool                                         StartTargeting;                                    // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerSetBallistaNewRotation
struct AShooterCharacter_ServerSetBallistaNewRotation_Params
{
public:
	float                                        Pitch;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Yaw;                                               // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerSeatingStructureAction
struct AShooterCharacter_ServerSeatingStructureAction_Params
{
public:
	uint8                                        ActionNumber;                                      // 0x0(0x1)(BlueprintReadOnly, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerRequestHexagonTrade
struct AShooterCharacter_ServerRequestHexagonTrade_Params
{
public:
	int32                                        RequestedTradableItemIndex;                        // 0x0(0x4)(ConstParm, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        Quantity;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerReleaseGrapHookCable
struct AShooterCharacter_ServerReleaseGrapHookCable_Params
{
public:
	bool                                         bReleasing;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerReceiveTribeInvite
struct AShooterCharacter_ServerReceiveTribeInvite_Params
{
public:
	class AShooterPlayerController*              PlayerSendingInvite;                               // 0x0(0x8)(Edit, BlueprintReadOnly, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerPrepareMountedDinoForLaunch
struct AShooterCharacter_ServerPrepareMountedDinoForLaunch_Params
{
public:
	struct FVector                               ViewLoc;                                           // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ViewDir;                                           // 0x18(0x18)(ExportObject, BlueprintReadOnly, EditFixedSize, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerNotifyProjectileImpact
struct AShooterCharacter_ServerNotifyProjectileImpact_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bFromReplication;                                  // 0xF0(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43A4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FromProjectileID;                                  // 0xF4(0x4)(ExportObject, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x108 (0x108 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerNotifyBallistaShot
struct AShooterCharacter_ServerNotifyBallistaShot_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerNetEndClimbingLadder
struct AShooterCharacter_ServerNetEndClimbingLadder_Params
{
public:
	bool                                         bIsClimbOver;                                      // 0x0(0x1)(Edit, Net, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43A7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ClimbOverLoc;                                      // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               JumpDir;                                           // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerForceUpdatedAimedActors
struct AShooterCharacter_ServerForceUpdatedAimedActors_Params
{
public:
	float                                        OverrideMaxDistance;                               // 0x0(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReplicateToSimulatedClients;                      // 0x4(0x1)(ConstParm, BlueprintVisible, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43A8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerFireBallistaProjectile
struct AShooterCharacter_ServerFireBallistaProjectile_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerDetachGrapHookCable
struct AShooterCharacter_ServerDetachGrapHookCable_Params
{
public:
	bool                                         bDoUpwardsJump;                                    // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43AD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        UpwardsJumpYaw;                                    // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCharacter.ServerClearSwitchingWeapon
struct AShooterCharacter_ServerClearSwitchingWeapon_Params
{
public:
	bool                                         bOnlyIfDefaultWeapon;                              // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClientRequestNextWeaponID;                        // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.RenamePlayer
struct AShooterCharacter_RenamePlayer_Params
{
public:
	class FString                                NewName;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.PlayEmoteAnimation
struct AShooterCharacter_PlayEmoteAnimation_Params
{
public:
	uint8                                        EmoteIndex;                                        // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.OnWeaponUnequipped
struct AShooterCharacter_OnWeaponUnequipped_Params
{
public:
	class AShooterWeapon*                        OldWeapon;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.OnWeaponEquipped
struct AShooterCharacter_OnWeaponEquipped_Params
{
public:
	class AShooterWeapon*                        NewWeapon;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.OnRep_CurrentWeapon
struct AShooterCharacter_OnRep_CurrentWeapon_Params
{
public:
	class AShooterWeapon*                        LastWeapon;                                        // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSimulatedForceUpdateAimedActors
struct AShooterCharacter_NetSimulatedForceUpdateAimedActors_Params
{
public:
	float                                        OverrideMaxDistance;                               // 0x0(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSetOverrideHeadHairColor
struct AShooterCharacter_NetSetOverrideHeadHairColor_Params
{
public:
	uint8                                        HairColor;                                         // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43B4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ToIndex;                                           // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSetOverrideFacialHairColor
struct AShooterCharacter_NetSetOverrideFacialHairColor_Params
{
public:
	uint8                                        HairColor;                                         // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43B6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ToIndex;                                           // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSetHeadHairPercent
struct AShooterCharacter_NetSetHeadHairPercent_Params
{
public:
	float                                        ThePercent;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewHeadHairIndex;                                  // 0x4(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSetFacialHairPercent
struct AShooterCharacter_NetSetFacialHairPercent_Params
{
public:
	float                                        ThePercent;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewFacialHairIndex;                                // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.NetSetEyebrowStyle
struct AShooterCharacter_NetSetEyebrowStyle_Params
{
public:
	int32                                        NewEyebrowIndex;                                   // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.LinkedPlayerIDString
struct AShooterCharacter_LinkedPlayerIDString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsWatchingExplorerNote
struct AShooterCharacter_IsWatchingExplorerNote_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsUsingShield
struct AShooterCharacter_IsUsingShield_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsUsingClimbingPick
struct AShooterCharacter_IsUsingClimbingPick_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsTargeting
struct AShooterCharacter_IsTargeting_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.IsProjectileInCache
struct AShooterCharacter_IsProjectileInCache_Params
{
public:
	int32                                        ProjectileID;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43C0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.IsPreInventoryItem
struct AShooterCharacter_IsPreInventoryItem_Params
{
public:
	class UPrimalItem*                           TheItem;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43C2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsPlayingUpperBodyCallAnimation
struct AShooterCharacter_IsPlayingUpperBodyCallAnimation_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsPlayingRepawnAnim
struct AShooterCharacter_IsPlayingRepawnAnim_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsPlayingInitialSpawnAnim
struct AShooterCharacter_IsPlayingInitialSpawnAnim_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsOutside
struct AShooterCharacter_IsOutside_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsNearTopOfLadder
struct AShooterCharacter_IsNearTopOfLadder_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCharacter.IsIndoorsAtLoc
struct AShooterCharacter_IsIndoorsAtLoc_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
	struct FVector                               ActorLoc;                                          // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43CA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsGrapplingHardAttached
struct AShooterCharacter_IsGrapplingHardAttached_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsGrapplingAttachedToMe
struct AShooterCharacter_IsGrapplingAttachedToMe_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsFiring
struct AShooterCharacter_IsFiring_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsCurrentPassengerLimitCameraYaw
struct AShooterCharacter_IsCurrentPassengerLimitCameraYaw_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsCarriedAsPassenger
struct AShooterCharacter_IsCarriedAsPassenger_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.IsBlockingWithShield
struct AShooterCharacter_IsBlockingWithShield_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.HasAnyOtherBuffsUsingConsolidatedMultiUse
struct AShooterCharacter_HasAnyOtherBuffsUsingConsolidatedMultiUse_Params
{
public:
	class APrimalBuff*                           BuffToSkip;                                        // 0x0(0x8)(ExportObject, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43D0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GivePrimalItemWeapon
struct AShooterCharacter_GivePrimalItemWeapon_Params
{
public:
	class UPrimalItem*                           APrimalItem;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCharacter.GiveHexagonsOnMissionReward
struct AShooterCharacter_GiveHexagonsOnMissionReward_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        BonusEarnedHexagons;                               // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        HexagonAmountOverride;                             // 0xC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterCharacter.GiveHexagons
struct AShooterCharacter_GiveHexagons_Params
{
public:
	int32                                        NumHexagons;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        TriggerIndex;                                      // 0x4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideHexGainFalloffRate;                        // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideHexGainFalloffMin;                         // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideCollectSFXVolume;                          // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43DD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               OverrideVfxSpawnLoc;                               // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideHexagonVFXActorCount;                      // 0x30(0x4)(Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         VFXImmediatelyAttracts;                            // 0x34(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43DF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43E0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.GiveDefaultWeapon
struct AShooterCharacter_GiveDefaultWeapon_Params
{
public:
	bool                                         bForceGiveDefaultWeapon;                           // 0x0(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetWeapon
struct AShooterCharacter_GetWeapon_Params
{
public:
	class AShooterWeapon*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetTargetingSpeedModifier
struct AShooterCharacter_GetTargetingSpeedModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetSpawnedForController
struct AShooterCharacter_GetSpawnedForController_Params
{
public:
	class AShooterPlayerController*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetSeatingAnimation
struct AShooterCharacter_GetSeatingAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetRidingDinoAnimSpeedRatio
struct AShooterCharacter_GetRidingDinoAnimSpeedRatio_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetRidingDino
struct AShooterCharacter_GetRidingDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetPlayerHexagonCount
struct AShooterCharacter_GetPlayerHexagonCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetPlayerData
struct AShooterCharacter_GetPlayerData_Params
{
public:
	class UPrimalPlayerData*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetPercentageOfHeadHairGrowth
struct AShooterCharacter_GetPercentageOfHeadHairGrowth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetPercentageOfFacialHairGrowth
struct AShooterCharacter_GetPercentageOfFacialHairGrowth_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetLastAttackTime
struct AShooterCharacter_GetLastAttackTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetHeadHairIndex
struct AShooterCharacter_GetHeadHairIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.GetHeadHairColor
struct AShooterCharacter_GetHeadHairColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetFacialHairIndex
struct AShooterCharacter_GetFacialHairIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.GetFacialHairColor
struct AShooterCharacter_GetFacialHairColor_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.GetEyebrowIndex
struct AShooterCharacter_GetEyebrowIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetDinoRidingMoveAnimation
struct AShooterCharacter_GetDinoRidingMoveAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetDinoRidingAnimation
struct AShooterCharacter_GetDinoRidingAnimation_Params
{
public:
	class UAnimSequence*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCharacter.GetCharacterCreatorDynamicMatValue
struct AShooterCharacter_GetCharacterCreatorDynamicMatValue_Params
{
public:
	int32                                        GameData_DefaultDynamicMaterialByteFloats_index;   // 0x0(0x4)(ExportObject, Net, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FPlayerDynamicMaterialFloat           AssociatedDynamicMatModifierRange;                 // 0x4(0x20)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x24(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterCharacter.GetBoneModifierValue
struct AShooterCharacter_GetBoneModifierValue_Params
{
public:
	enum class EBoneModifierType                 BoneModifierType;                                  // 0x0(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_43EE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoneModifierRangeArray               AssociatedBoneModifierRange;                       // 0x8(0x30)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43EF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterCharacter.GetBlockingShieldOffsets
struct AShooterCharacter_GetBlockingShieldOffsets_Params
{
public:
	struct FVector                               OutBlockingShieldFPVTranslation;                   // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutBlockingShieldFPVRotation;                      // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_43F1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.GetAlternateStandingAnim
struct AShooterCharacter_GetAlternateStandingAnim_Params
{
public:
	float                                        OutBlendInTime;                                    // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OutBlendOutTime;                                   // 0x4(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterCharacter.GetAllBoneModifierValues
struct AShooterCharacter_GetAllBoneModifierValues_Params
{
public:
	TArray<enum class EBoneModifierType>         AssociatedBoneModifierType;                        // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FBoneModifierRangeArray>       AssociatedBoneModifierRanges;                      // 0x10(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnimNonAdditive
struct AShooterCharacter_GetAdditiveStandingAnimNonAdditive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnim
struct AShooterCharacter_GetAdditiveStandingAnim_Params
{
public:
	float                                        OutBlendInTime;                                    // 0x0(0x4)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	float                                        OutBlendOutTime;                                   // 0x4(0x4)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	class UAnimSequence*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetActualTargetingFOV
struct AShooterCharacter_GetActualTargetingFOV_Params
{
public:
	float                                        DefaultTargetingFOV;                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.GetActiveMission
struct AShooterCharacter_GetActiveMission_Params
{
public:
	class AMissionType*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCharacter.GameStateHandleEvent
struct AShooterCharacter_GameStateHandleEvent_Params
{
public:
	class FName                                  NameParam;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               VecParam;                                          // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.FindForPlayerController
struct AShooterCharacter_FindForPlayerController_Params
{
public:
	class AShooterPlayerController*              APC;                                               // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCharacter.DoForceStreamComponents
struct AShooterCharacter_DoForceStreamComponents_Params
{
public:
	bool                                         bFirstPerson;                                      // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceMaxTexturesOnConsole;                        // 0x1(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.CycleFastInventoryNext
struct AShooterCharacter_CycleFastInventoryNext_Params
{
public:
	bool                                         Next;                                              // 0x0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCharacter.CycleFastInventory
struct AShooterCharacter_CycleFastInventory_Params
{
public:
	bool                                         bRefresh;                                          // 0x0(0x1)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNext;                                             // 0x1(0x1)(Edit, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCharacter.ClientsSpawnHexagonVFX
struct AShooterCharacter_ClientsSpawnHexagonVFX_Params
{
public:
	int32                                        NumHexagons;                                       // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        OverrideCollectSFXVolume;                          // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OverrideVfxSpawnLoc;                               // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        OverrideHexagonVFXActorCount;                      // 0x20(0x4)(Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         VFXImmediatelyAttracts;                            // 0x24(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_43F9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.ClientSetExpectedBase
struct AShooterCharacter_ClientSetExpectedBase_Params
{
public:
	uint32                                       BaseID;                                            // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ClientReceiveNextWeaponID
struct AShooterCharacter_ClientReceiveNextWeaponID_Params
{
public:
	struct FItemNetID                            TheItemID;                                         // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCharacter.ClientNotifyTribeRequest
struct AShooterCharacter_ClientNotifyTribeRequest_Params
{
public:
	class FString                                RequestTribeName;                                  // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     PlayerCharacter;                                   // 0x10(0x8)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCharacter.ClientInviteToAlliance
struct AShooterCharacter_ClientInviteToAlliance_Params
{
public:
	int32                                        RequestingTeam;                                    // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint32                                       AllianceID;                                        // 0x4(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                AllianceName;                                      // 0x8(0x10)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                InviteeName;                                       // 0x18(0x10)(ConstParm, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCharacter.ClearRidingDino
struct AShooterCharacter_ClearRidingDino_Params
{
public:
	bool                                         bFromDino;                                         // 0x0(0x1)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_43FE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        OverrideUnboardDirection;                          // 0x4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceEvenIfBuffPreventsClear;                     // 0x8(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_43FF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.CanStartWeaponSwitch
struct AShooterCharacter_CanStartWeaponSwitch_Params
{
public:
	class UPrimalItem*                           APrimalItem;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4402[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.CanEquipWeapons
struct AShooterCharacter_CanEquipWeapons_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCharacter.CallGameStateHandleEvent
struct AShooterCharacter_CallGameStateHandleEvent_Params
{
public:
	class FName                                  NameParam;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               VecParam;                                          // 0x8(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.BuffsPreventFirstPerson
struct AShooterCharacter_BuffsPreventFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.BPSetPlayerHexagonCount
struct AShooterCharacter_BPSetPlayerHexagonCount_Params
{
public:
	int32                                        NewHexagonCount;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4406[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.BPSetFirstPersonMasterPoseComponent
struct AShooterCharacter_BPSetFirstPersonMasterPoseComponent_Params
{
public:
	class USkeletalMeshComponent*                FirstPersonMasterPosecomponent;                    // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCharacter.BPOverrideHealthBarOffset
struct AShooterCharacter_BPOverrideHealthBarOffset_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4409[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacter.BPGetPlayerHexagonCount
struct AShooterCharacter_BPGetPlayerHexagonCount_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCharacter.BPGetHealthBarColor
struct AShooterCharacter_BPGetHealthBarColor_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.BPCanImplantSuicide
struct AShooterCharacter_BPCanImplantSuicide_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.AttachToLadder
struct AShooterCharacter_AttachToLadder_Params
{
public:
	class USceneComponent*                       Parent;                                            // 0x0(0x8)(Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCharacter.ApplyBodyColors
struct AShooterCharacter_ApplyBodyColors_Params
{
public:
	class USkeletalMeshComponent*                ToMesh;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacter.AnimUseAimOffset
struct AShooterCharacter_AnimUseAimOffset_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.SetCurrentAcceleration
struct UShooterCharacterMovement_SetCurrentAcceleration_Params
{
public:
	struct FVector                               NewAcceleration;                                   // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.SetClimbingTarget
struct UShooterCharacterMovement_SetClimbingTarget_Params
{
public:
	struct FVector                               TargetPosition;                                    // 0x0(0x18)(ConstParm, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FRotator                              TargetRotation;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.IsWaterWalking
struct UShooterCharacterMovement_IsWaterWalking_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.BPApplyVelocityBraking
struct UShooterCharacterMovement_BPApplyVelocityBraking_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        Friction;                                          // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, SubobjectReference)
	float                                        BrakingDeceleration;                               // 0x8(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4499[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InOutVelocity;                                     // 0x10(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.BP_PhysicsRotation
struct UShooterCharacterMovement_BP_PhysicsRotation_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.BP_PerformMovement
struct UShooterCharacterMovement_BP_PerformMovement_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCharacterMovement.BP_GetAnalogueInputModifier
struct UShooterCharacterMovement_BP_GetAnalogueInputModifier_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.JumpToExplorerNoteByIndex
struct UPrimalCheatManagerExtension_JumpToExplorerNoteByIndex_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOnlyIfUnopened;                                   // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44A2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.JTEN
struct UPrimalCheatManagerExtension_JTEN_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bOnlyIfUnopened;                                   // 0x4(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44A6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.GetTargetActor
struct UPrimalCheatManagerExtension_GetTargetActor_Params
{
public:
	class AActor*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.GetRidingDino
struct UPrimalCheatManagerExtension_GetRidingDino_Params
{
public:
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.GetPlayerCharacter
struct UPrimalCheatManagerExtension_GetPlayerCharacter_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.GetAllExplorerNoteActors
struct UPrimalCheatManagerExtension_GetAllExplorerNoteActors_Params
{
public:
	TArray<class AActor*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.PrimalCheatManagerExtension.GetAllActorsInRadius
struct UPrimalCheatManagerExtension_GetAllActorsInRadius_Params
{
public:
	enum class ECheatActorType                   Type;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_44B2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Radius;                                            // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.WritePNTScreenshot
struct AShooterPlayerController_WritePNTScreenshot_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ViewingAnUploadTerminal
struct AShooterPlayerController_ViewingAnUploadTerminal_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.UpdateTrackingWaypointMark
struct AShooterPlayerController_UpdateTrackingWaypointMark_Params
{
public:
	class FName                                  WithCustomTag;                                     // 0x0(0x8)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.UpdateCustomActorTrackListEntries_Combined
struct AShooterPlayerController_UpdateCustomActorTrackListEntries_Combined_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x11(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44BE[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomTrackedActorInfo>       ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.UnlockExplorerNote
struct AShooterPlayerController_UnlockExplorerNote_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ForceShowExplorerNoteUI;                           // 0x4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_44C2[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.UnlockEmote
struct AShooterPlayerController_UnlockEmote_Params
{
public:
	class FName                                  EmoteName;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.UndermeshSphere
struct AShooterPlayerController_UndermeshSphere_Params
{
public:
	int32                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.TurnInput
struct AShooterPlayerController_TurnInput_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterPlayerController.TryCreateTeamPingType
struct AShooterPlayerController_TryCreateTeamPingType_Params
{
public:
	enum class ETeamPingType                     PingType;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.ShooterPlayerController.TraceTeamPingType
struct AShooterPlayerController_TraceTeamPingType_Params
{
public:
	enum class ETeamPingType                     PingType;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_44C5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            Hit;                                               // 0x8(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	enum class ETeamPingType                     ReturnPingType;                                    // 0xF8(0x1)(Edit, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xF9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_44C6[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.Tick_UpdatePings
struct AShooterPlayerController_Tick_UpdatePings_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.Tick_SearchForPOIs
struct AShooterPlayerController_Tick_SearchForPOIs_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.TestPhysxPerf
struct AShooterPlayerController_TestPhysxPerf_Params
{
public:
	int32                                        RayCount;                                          // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DistanceOfRays;                                    // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.TestAlarmNotification
struct AShooterPlayerController_TestAlarmNotification_Params
{
public:
	class FString                                Title;                                             // 0x0(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x10(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.TellServerAboutNewAutoTrackSetting_ServerLogic
struct AShooterPlayerController_TellServerAboutNewAutoTrackSetting_ServerLogic_Params
{
public:
	bool                                         SelectedAutotrack;                                 // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.TellServerAboutNewAutoTrackSetting
struct AShooterPlayerController_TellServerAboutNewAutoTrackSetting_Params
{
public:
	bool                                         SelectedAutotrack;                                 // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SwitchFastInventory
struct AShooterPlayerController_SwitchFastInventory_Params
{
public:
	bool                                         bNext;                                             // 0x0(0x1)(Edit, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.StopTrackingItem
struct AShooterPlayerController_StopTrackingItem_Params
{
public:
	class UPrimalItem*                           ItemReference;                                     // 0x0(0x8)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.StartTrackingItem
struct AShooterPlayerController_StartTrackingItem_Params
{
public:
	class UPrimalItem*                           ItemReference;                                     // 0x0(0x8)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.StartSurfaceCameraForPassenger
struct AShooterPlayerController_StartSurfaceCameraForPassenger_Params
{
public:
	float                                        OnSurfaceTargetYaw;                                // 0x0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnSurfaceTargetPitch;                              // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnSurfaceTargetRoll;                               // 0x8(0x4)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.StartSurfaceCamera
struct AShooterPlayerController_StartSurfaceCamera_Params
{
public:
	float                                        OnSurfaceTargetYaw;                                // 0x0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnSurfaceTargetPitch;                              // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnSurfaceTargetRoll;                               // 0x8(0x4)(ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OnSurfaceCameraInterpolationSpeed;                 // 0xC(0x4)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         UseSurfaceCameraInterpolation;                     // 0x10(0x1)(Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44D4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               CameraOffset;                                      // 0x18(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.StartPlacingStructrue
struct AShooterPlayerController_StartPlacingStructrue_Params
{
public:
	class UClass*                                BuildingStructure;                                 // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.SpawnTestStructures
struct AShooterPlayerController_SpawnTestStructures_Params
{
public:
	int32                                        NumStructures;                                     // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Spacing;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        StructureArrayIndex;                               // 0x8(0x4)(Edit, ConstParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumStructureTypes;                                 // 0xC(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.SpawnTestDinos
struct AShooterPlayerController_SpawnTestDinos_Params
{
public:
	int32                                        NumDinos;                                          // 0x0(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Spacing;                                           // 0x4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        DinoArrayIndex;                                    // 0x8(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDinoTypes;                                      // 0xC(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ShowTribeFlagPainting
struct AShooterPlayerController_ShowTribeFlagPainting_Params
{
public:
	bool                                         AutoUploadLastPainting;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalStructureTribeFlag*             TribeFlag;                                         // 0x8(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ShowCustomTrackedDinoListMenu
struct AShooterPlayerController_ShowCustomTrackedDinoListMenu_Params
{
public:
	int32                                        SpecificCharacterID;                               // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x4(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsFavorite;                                        // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsWaypoint;                                        // 0x6(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44E3[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ShouldSpawnWaterInteraction
struct AShooterPlayerController_ShouldSpawnWaterInteraction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ShouldShowExtendedHUDInfo
struct AShooterPlayerController_ShouldShowExtendedHUDInfo_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ShouldHideGameplayUI
struct AShooterPlayerController_ShouldHideGameplayUI_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetVideoReplayEnabled
struct AShooterPlayerController_SetVideoReplayEnabled_Params
{
public:
	bool                                         ShouldEnabled;                                     // 0x0(0x1)(ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetReplayVideoQuality
struct AShooterPlayerController_SetReplayVideoQuality_Params
{
public:
	int32                                        VideoQuality;                                      // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.SetPlayerPos
struct AShooterPlayerController_SetPlayerPos_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetNumReplaySecondsToStore
struct AShooterPlayerController_SetNumReplaySecondsToStore_Params
{
public:
	int32                                        NumSecondsToStore;                                 // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetMultiUseWheelCategory
struct AShooterPlayerController_SetMultiUseWheelCategory_Params
{
public:
	int32                                        Category;                                          // 0x0(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	uint8                                        Pad_44E6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalBuff*                           OptionalBuff;                                      // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                OverrideTargetActor;                               // 0x10(0x8)(ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetMissionWaypointVisible
struct AShooterPlayerController_SetMissionWaypointVisible_Params
{
public:
	bool                                         bInIsVisible;                                      // 0x0(0x1)(Edit, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetMissionWaypointInfo
struct AShooterPlayerController_SetMissionWaypointInfo_Params
{
public:
	class FString                                InWaypointTitle;                                   // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               InWaypointDestination;                             // 0x10(0x18)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  InWaypointID;                                      // 0x28(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetInfiniteStats
struct AShooterPlayerController_SetInfiniteStats_Params
{
public:
	bool                                         bInfinite;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetGodMode
struct AShooterPlayerController_SetGodMode_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetFCustomTrackedPlayerInfoMembersByPlayerRef
struct AShooterPlayerController_SetFCustomTrackedPlayerInfoMembersByPlayerRef_Params
{
public:
	class AShooterCharacter*                     HandledPlayer;                                     // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Isfavorited;                                       // 0x8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsATeammateOnMap;                                  // 0x9(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTrackedWaypoint;                                // 0xA(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsValidForCurrentFilter;                          // 0xB(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_44EE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCustomTrackedActorInfo               ReturnValue;                                       // 0x10(0xE0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetFCustomTrackedDinoInfoMembersByDinoRef
struct AShooterPlayerController_SetFCustomTrackedDinoInfoMembersByDinoRef_Params
{
public:
	class APrimalDinoCharacter*                  HandledDino;                                       // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Isfavorited;                                       // 0x8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsTrackedWaypoint;                                // 0x9(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsValidForCurrentFilter;                          // 0xA(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_44EF[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCustomTrackedActorInfo               ReturnValue;                                       // 0x10(0xE0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetDoFInterpTime
struct AShooterPlayerController_SetDoFInterpTime_Params
{
public:
	float                                        InterpTime;                                        // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCustomActorTracking_LastSavedScrollbarIndex
struct AShooterPlayerController_SetCustomActorTracking_LastSavedScrollbarIndex_Params
{
public:
	int32                                        NewScrollbarIndex;                                 // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCustomActorTracking_LastSavedDinoGroup
struct AShooterPlayerController_SetCustomActorTracking_LastSavedDinoGroup_Params
{
public:
	int32                                        DinoGroup;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCustomActorTracking_LastSavedCustomTameSelectionType
struct AShooterPlayerController_SetCustomActorTracking_LastSavedCustomTameSelectionType_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCustomActorTracking_LastSavedCustomTameSearchText
struct AShooterPlayerController_SetCustomActorTracking_LastSavedCustomTameSearchText_Params
{
public:
	class FString                                CustomTameSearchText;                              // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetControllerGamepadActive
struct AShooterPlayerController_SetControllerGamepadActive_Params
{
public:
	bool                                         bIsActive;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCinematicModeAdvanced
struct AShooterPlayerController_SetCinematicModeAdvanced_Params
{
public:
	bool                                         bInCinematicMode;                                  // 0x0(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bPreventCameraAnimFPV;                             // 0x1(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetHUDHidden;                                     // 0x2(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableKeymappings;                               // 0x3(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FName>                          KeyActionNames;                                    // 0x8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableChat;                                      // 0x18(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_44FD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetCheatPlayer
struct AShooterPlayerController_SetCheatPlayer_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetChangingCameraMode
struct AShooterPlayerController_SetChangingCameraMode_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetAutoPlayer
struct AShooterPlayerController_SetAutoPlayer_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.SetAdminIcon
struct AShooterPlayerController_SetAdminIcon_Params
{
public:
	bool                                         bAdminIcon;                                        // 0x0(0x1)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerVerifyStructurePlacementItemData
struct AShooterPlayerController_ServerVerifyStructurePlacementItemData_Params
{
public:
	struct FItemNetID                            PlaceUsingItemID;                                  // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUploadDino
struct AShooterPlayerController_ServerUploadDino_Params
{
public:
	class APrimalDinoCharacter*                  DownloadedDino;                                    // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUploadCurrentCharacterAndItems
struct AShooterPlayerController_ServerUploadCurrentCharacterAndItems_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUploadCharaterDataToArk
struct AShooterPlayerController_ServerUploadCharaterDataToArk_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUpdateCustomActorTrackListEntries_Players
struct AShooterPlayerController_ServerUpdateCustomActorTrackListEntries_Players_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4506[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUpdateCustomActorTrackListEntries_Creatures
struct AShooterPlayerController_ServerUpdateCustomActorTrackListEntries_Creatures_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4508[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUnlockPerMapExplorerNote
struct AShooterPlayerController_ServerUnlockPerMapExplorerNote_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAvoidBuff;                                        // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_4509[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerUnbanPlayer
struct AShooterPlayerController_ServerUnbanPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTransferToRemoteInventory
struct AShooterPlayerController_ServerTransferToRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bAlsoTryToEqup;                                    // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_450B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        RequestedQuantity;                                 // 0x14(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTransferredPlayerConfirmationResult
struct AShooterPlayerController_ServerTransferredPlayerConfirmationResult_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTransferFromRemoteInventory
struct AShooterPlayerController_ServerTransferFromRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        RequestedQuantity;                                 // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ToSlotIndex;                                       // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_450F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTransferAllToRemoteInventory
struct AShooterPlayerController_ServerTransferAllToRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                CurrentCustomFolderFilter;                         // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentNameFilter;                                 // 0x18(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentDestinationFolder;                          // 0x28(0x10)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNoFolderView;                                     // 0x38(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         OnlySkins;                                         // 0x39(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         AlsoSkins;                                         // 0x3A(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4513[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTransferAllFromRemoteInventory
struct AShooterPlayerController_ServerTransferAllFromRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                CurrentCustomFolderFilter;                         // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentNameFilter;                                 // 0x18(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentDestinationFolder;                          // 0x28(0x10)(ConstParm, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNoFolderView;                                     // 0x38(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4517[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTogglePOIVisibilityForTrackedPlayerWaypoint_ServerLogic
struct AShooterPlayerController_ServerTogglePOIVisibilityForTrackedPlayerWaypoint_ServerLogic_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4519[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTogglePOIVisibilityForTrackedPlayerWaypoint
struct AShooterPlayerController_ServerTogglePOIVisibilityForTrackedPlayerWaypoint_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_451B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTogglePOIVisibilityForTrackedCreatureWaypoint_ServerLogic
struct AShooterPlayerController_ServerTogglePOIVisibilityForTrackedCreatureWaypoint_ServerLogic_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_451E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTogglePOIVisibilityForTrackedCreatureWaypoint
struct AShooterPlayerController_ServerTogglePOIVisibilityForTrackedCreatureWaypoint_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_451F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerTogglePOIVisibilityForTrackedActorWaypoint_Combined
struct AShooterPlayerController_ServerTogglePOIVisibilityForTrackedActorWaypoint_Combined_Params
{
public:
	int32                                        TrackedActorIndex;                                 // 0x0(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x5(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoToggle;                                         // 0x6(0x1)(ConstParm, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4523[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStructureSkinNetMessage
struct AShooterPlayerController_ServerStructureSkinNetMessage_Params
{
public:
	class APrimalStructure*                      TheStructure;                                      // 0x0(0x8)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  SkinMessageName;                                   // 0x8(0x8)(Edit, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FSkinNetMessageParams                 SkinMessageParams;                                 // 0x10(0x40)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStructureSetSkinPersistentData
struct AShooterPlayerController_ServerStructureSetSkinPersistentData_Params
{
public:
	class APrimalStructure*                      TheStructure;                                      // 0x0(0x8)(Edit, Net, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FSkinNetMessageParams                 SkinMessageParams;                                 // 0x8(0x40)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStopWeaponFire
struct AShooterPlayerController_ServerStopWeaponFire_Params
{
public:
	class AShooterWeapon*                        Weapon;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStopWeaponAltFire
struct AShooterPlayerController_ServerStopWeaponAltFire_Params
{
public:
	class AShooterWeapon*                        Weapon;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStartWeaponFire
struct AShooterPlayerController_ServerStartWeaponFire_Params
{
public:
	class AShooterWeapon*                        Weapon;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerStartWeaponAltFire
struct AShooterPlayerController_ServerStartWeaponAltFire_Params
{
public:
	class AShooterWeapon*                        Weapon;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSpectateToPlayerByID
struct AShooterPlayerController_ServerSpectateToPlayerByID_Params
{
public:
	uint64                                       PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetVRPlayer
struct AShooterPlayerController_ServerSetVRPlayer_Params
{
public:
	bool                                         bSetVRPlayer;                                      // 0x0(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetSupressAdminIcon
struct AShooterPlayerController_ServerSetSupressAdminIcon_Params
{
public:
	bool                                         bSuppress;                                         // 0x0(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetSubscribedApp
struct AShooterPlayerController_ServerSetSubscribedApp_Params
{
public:
	int32                                        AppID;                                             // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bPreventDefaultItems;                              // 0x4(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_452F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetSlomoRateFromSpectator
struct AShooterPlayerController_ServerSetSlomoRateFromSpectator_Params
{
public:
	float                                        Rate;                                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetMessageOfTheDay
struct AShooterPlayerController_ServerSetMessageOfTheDay_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetItemBalloonLocation
struct AShooterPlayerController_ServerSetItemBalloonLocation_Params
{
public:
	class APrimalStructureMovingContainer*       ItemBalloon;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FPrimalMapMarkerEntryData             MapMarker;                                         // 0x8(0x28)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFreeCraftingQuantity
struct AShooterPlayerController_ServerSetFreeCraftingQuantity_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Quantity;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4536[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFavoriteTrackedPlayerViaCharacterIndex_ServerLogic
struct AShooterPlayerController_ServerSetFavoriteTrackedPlayerViaCharacterIndex_ServerLogic_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldFavorite;                                    // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4539[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFavoriteTrackedPlayerViaCharacterIndex
struct AShooterPlayerController_ServerSetFavoriteTrackedPlayerViaCharacterIndex_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldFavorite;                                    // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_453A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFavoriteTrackedCreatureViaCharacterIndex_ServerLogic
struct AShooterPlayerController_ServerSetFavoriteTrackedCreatureViaCharacterIndex_ServerLogic_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldFavorite;                                    // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_453B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFavoriteTrackedCreatureViaCharacterIndex
struct AShooterPlayerController_ServerSetFavoriteTrackedCreatureViaCharacterIndex_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldFavorite;                                    // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_453E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetFavoriteTrackedActorViaCharacterIndex_Combined
struct AShooterPlayerController_ServerSetFavoriteTrackedActorViaCharacterIndex_Combined_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldFavorite;                                    // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x5(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4542[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetDeathWaypointVisible_ServerLogic
struct AShooterPlayerController_ServerSetDeathWaypointVisible_ServerLogic_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetDeathWaypointVisible
struct AShooterPlayerController_ServerSetDeathWaypointVisible_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetDeathWaypointInvisible_ServerLogic
struct AShooterPlayerController_ServerSetDeathWaypointInvisible_ServerLogic_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetDeathWaypointInvisible
struct AShooterPlayerController_ServerSetDeathWaypointInvisible_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetActiveWaypointTrackedPlayerViaCharacterIndex_ServerLogic
struct AShooterPlayerController_ServerSetActiveWaypointTrackedPlayerViaCharacterIndex_ServerLogic_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_454A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetActiveWaypointTrackedPlayerViaCharacterIndex
struct AShooterPlayerController_ServerSetActiveWaypointTrackedPlayerViaCharacterIndex_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_454B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetActiveWaypointTrackedCreatureViaCharacterIndex_ServerLogic
struct AShooterPlayerController_ServerSetActiveWaypointTrackedCreatureViaCharacterIndex_ServerLogic_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_454D[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetActiveWaypointTrackedCreatureViaCharacterIndex
struct AShooterPlayerController_ServerSetActiveWaypointTrackedCreatureViaCharacterIndex_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_454E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSetActiveWaypointTrackedActorViaCharacterIndex_Combined
struct AShooterPlayerController_ServerSetActiveWaypointTrackedActorViaCharacterIndex_Combined_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x5(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4550[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSendDirectMessage
struct AShooterPlayerController_ServerSendDirectMessage_Params
{
public:
	class FString                                PlayerSteamID;                                     // 0x0(0x10)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                Message;                                           // 0x10(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSendChatMessage
struct AShooterPlayerController_ServerSendChatMessage_Params
{
public:
	class FString                                ChatMessage;                                       // 0x0(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	enum class EChatSendMode                     SendMode;                                          // 0x10(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4552[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        SenderPlatform;                                    // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadEnd
struct AShooterPlayerController_ServerSendArkDataPayloadEnd_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4555[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadBegin
struct AShooterPlayerController_ServerSendArkDataPayloadBegin_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_455C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DataClass;                                         // 0x18(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TagName;                                           // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Name;                                              // 0x38(0x10)(ConstParm, Net, OutParm)
	TArray<class FString>                        DataStats;                                         // 0x48(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       ID1;                                               // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ID2;                                               // 0x5C(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayload
struct AShooterPlayerController_ServerSendArkDataPayload_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4560[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                DataBytes;                                         // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerSelectedCustomItemAction
struct AShooterPlayerController_ServerSelectedCustomItemAction_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FName                                  SelectedOption;                                    // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestUpdateTrackedWaypointsOnly_ServerLogic
struct AShooterPlayerController_ServerRequestUpdateTrackedWaypointsOnly_ServerLogic_Params
{
public:
	bool                                         ClientAutoTrackTamesSetting;                       // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestUpdateTrackedWaypointsOnly
struct AShooterPlayerController_ServerRequestUpdateTrackedWaypointsOnly_Params
{
public:
	bool                                         ClientAutoTrackTamesSetting;                       // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestUpdateTrackedWaypointsAndMapPlayers_ServerLogic
struct AShooterPlayerController_ServerRequestUpdateTrackedWaypointsAndMapPlayers_ServerLogic_Params
{
public:
	bool                                         ClientAutoTrackTamesSetting;                       // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestUpdateTrackedWaypointsAndMapPlayers
struct AShooterPlayerController_ServerRequestUpdateTrackedWaypointsAndMapPlayers_Params
{
public:
	bool                                         ClientAutoTrackTamesSetting;                       // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestStructuresPlacedOnFloor
struct AShooterPlayerController_ServerRequestStructuresPlacedOnFloor_Params
{
public:
	TArray<class APrimalStructure*>              OnStructures;                                      // 0x0(0x10)(ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestShowLeaderboards
struct AShooterPlayerController_ServerRequestShowLeaderboards_Params
{
public:
	class UClass*                                LeaderboardType;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestSetPin
struct AShooterPlayerController_ServerRequestSetPin_Params
{
public:
	class UObject*                               ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        PinValue;                                          // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSetting;                                        // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_456A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        TheCustomIndex;                                    // 0x10(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_456B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestSetDefaultDestination
struct AShooterPlayerController_ServerRequestSetDefaultDestination_Params
{
public:
	int32                                        ForSpawnPointID;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SpawnPointID;                                      // 0x4(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRespawnAtPoint
struct AShooterPlayerController_ServerRequestRespawnAtPoint_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SpawnRegionIndex;                                  // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponClipAmmo
struct AShooterPlayerController_ServerRequestRemoveWeaponClipAmmo_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponAccessoryOnly
struct AShooterPlayerController_ServerRequestRemoveWeaponAccessoryOnly_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkinOnly
struct AShooterPlayerController_ServerRequestRemoveItemSkinOnly_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkin
struct AShooterPlayerController_ServerRequestRemoveItemSkin_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveDinoFromTamingListByID_ServerLogic
struct AShooterPlayerController_ServerRequestRemoveDinoFromTamingListByID_ServerLogic_Params
{
public:
	int32                                        InID1;                                             // 0x0(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InID2;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveDinoFromTamingListByID
struct AShooterPlayerController_ServerRequestRemoveDinoFromTamingListByID_Params
{
public:
	int32                                        InID1;                                             // 0x0(0x4)(BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InID2;                                             // 0x4(0x4)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoveCustomCosmetic
struct AShooterPlayerController_ServerRequestRemoveCustomCosmetic_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestRemoteDropAllItems
struct AShooterPlayerController_ServerRequestRemoteDropAllItems_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                CurrentCustomFolderFilter;                         // 0x8(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentNameFilter;                                 // 0x18(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestPlaceStructureSkin
struct AShooterPlayerController_ServerRequestPlaceStructureSkin_Params
{
public:
	class APrimalStructure*                      StructureToSkin;                                   // 0x0(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureSkinClass;                                // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int64                                        CustomCosmeticStructureSkinModID;                  // 0x10(0x8)(ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomCosmeticStructureSkinModVariantID;           // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4583[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE8 (0xE8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestPlaceStructure
struct AShooterPlayerController_ServerRequestPlaceStructure_Params
{
public:
	int32                                        StructureIndex;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4585[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BuildLocation;                                     // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              BuildRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              PlayerViewRotation;                                // 0x38(0x18)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FItemNetID                            PlaceUsingItemID;                                  // 0x50(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FPlacementData                        PlacementData;                                     // 0x58(0x88)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, Config)
	bool                                         bIsCheat;                                          // 0xE0(0x1)(Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFlipped;                                        // 0xE1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4588[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        WithSnapPointCycle;                                // 0xE4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestLevelUp
struct AShooterPlayerController_ServerRequestLevelUp_Params
{
public:
	class UPrimalCharacterStatusComponent*       ForStatusComp;                                     // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPrimalCharacterStatusValue       ValueType;                                         // 0x8(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_458E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithItem
struct AShooterPlayerController_ServerRequestInventoryUseItemWithItem_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID1;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FItemNetID                            ItemID2;                                           // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        AdditionalData;                                    // 0x18(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4590[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithActor
struct AShooterPlayerController_ServerRequestInventoryUseItemWithActor_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID1;                                           // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        AdditionalData;                                    // 0x18(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4592[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemRemoteWithItemLocal
struct AShooterPlayerController_ServerRequestInventoryUseItemRemoteWithItemLocal_Params
{
public:
	class UPrimalInventoryComponent*             Localinv;                                          // 0x0(0x8)(Edit, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalInventoryComponent*             Remoteinv;                                         // 0x8(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID1;                                           // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FItemNetID                            ItemID2;                                           // 0x18(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        AdditionalData;                                    // 0x20(0x4)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4599[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItem
struct AShooterPlayerController_ServerRequestInventoryUseItem_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestInventorySwapItems
struct AShooterPlayerController_ServerRequestInventorySwapItems_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID1;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FItemNetID                            ItemID2;                                           // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestFastTravelToPoint
struct AShooterPlayerController_ServerRequestFastTravelToPoint_Params
{
public:
	int32                                        FromSpawnPointID;                                  // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SpawnPointID;                                      // 0x4(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestDropAllItems
struct AShooterPlayerController_ServerRequestDropAllItems_Params
{
public:
	class FString                                CurrentCustomFolderFilter;                         // 0x0(0x10)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CurrentNameFilter;                                 // 0x10(0x10)(ConstParm, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         OnlySkins;                                         // 0x20(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         AlsoSkins;                                         // 0x21(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45A3[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestDownloadPlayerCharacter
struct AShooterPlayerController_ServerRequestDownloadPlayerCharacter_Params
{
public:
	struct FArkTributePlayerData                 DownloadedCharacter;                               // 0x0(0x120)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SpawnPointID;                                      // 0x120(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SpawnRegionIndex;                                  // 0x124(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x138 (0x138 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestDownloadDino
struct AShooterPlayerController_ServerRequestDownloadDino_Params
{
public:
	struct FARKTributeDino                       DownloadedDino;                                    // 0x0(0x138)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestDinoCharStats
struct AShooterPlayerController_ServerRequestDinoCharStats_Params
{
public:
	class APrimalDinoCharacter*                  TheDinoChar;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestDinoAncestors
struct AShooterPlayerController_ServerRequestDinoAncestors_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestCustomTrackedActorList_ServerLogic
struct AShooterPlayerController_ServerRequestCustomTrackedActorList_ServerLogic_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewScrollbarIndex;                                 // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ClientAutoTrackTamesSetting;                       // 0x1C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45A4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestCustomTrackedActorList
struct AShooterPlayerController_ServerRequestCustomTrackedActorList_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewScrollbarIndex;                                 // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ClientAutoTrackTamesSetting;                       // 0x1C(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45A8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestContainerFuel
struct AShooterPlayerController_ServerRequestContainerFuel_Params
{
public:
	class APrimalStructureItemContainer*         Container;                                         // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestApplyCustomCosmetic
struct AShooterPlayerController_ServerRequestApplyCustomCosmetic_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int64                                        CustomCosmeticSkinID;                              // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CustomCosmeticSkinVariantID;                       // 0x10(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45AB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRequestActorItems
struct AShooterPlayerController_ServerRequestActorItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bInventoryItems;                                   // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWithFirstSpawn;                                   // 0x9(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45AC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRepeatMultiUse
struct AShooterPlayerController_ServerRepeatMultiUse_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45AE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRepairItem
struct AShooterPlayerController_ServerRepairItem_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemoveSteamItem
struct AShooterPlayerController_ServerRemoveSteamItem_Params
{
public:
	uint32                                       ItemdDefId;                                        // 0x0(0x4)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemovePawnItem
struct AShooterPlayerController_ServerRemovePawnItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bSecondryAction;                                   // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers
struct AShooterPlayerController_ServerRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemoveCustomActorTrackListEntries_FromTotalList_Players
struct AShooterPlayerController_ServerRemoveCustomActorTrackListEntries_FromTotalList_Players_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemoveCustomActorTrackListEntries_FromTotalList_Creatures
struct AShooterPlayerController_ServerRemoveCustomActorTrackListEntries_FromTotalList_Creatures_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerRemoveAdminPlayer
struct AShooterPlayerController_ServerRemoveAdminPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerReceiveCustomActorTrackList_Players
struct AShooterPlayerController_ServerReceiveCustomActorTrackList_Players_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerReceiveCustomActorTrackList_Creatures
struct AShooterPlayerController_ServerReceiveCustomActorTrackList_Creatures_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45B8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandUnreliableBP
struct AShooterPlayerController_ServerProcessItemNetExecCommandUnreliableBP_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ForItemID;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEquippedItem;                                   // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45BC[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CommandName;                                       // 0x14(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45BD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBPNetExecParams                      ExecParams;                                        // 0x20(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandBP
struct AShooterPlayerController_ServerProcessItemNetExecCommandBP_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ForItemID;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEquippedItem;                                   // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45BF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CommandName;                                       // 0x14(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45C1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBPNetExecParams                      ExecParams;                                        // 0x20(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerPaint
struct AShooterPlayerController_ServerPaint_Params
{
public:
	class UStructurePaintingComponent*           Structure;                                         // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FPaintItem>                    Paints;                                            // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLastBatch;                                        // 0x18(0x1)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFromLoadFile;                                     // 0x19(0x1)(ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReplicateToClients;                                // 0x1A(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45C6[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerNotifyEditText
struct AShooterPlayerController_ServerNotifyEditText_Params
{
public:
	class FString                                TextToUse;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         CheckedBox;                                        // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_45CA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ForObjectClass;                                    // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ExtraID1;                                          // 0x20(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       ExtraID2;                                          // 0x24(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               ForObject;                                         // 0x28(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerMultiUse
struct AShooterPlayerController_ServerMultiUse_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45CB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerLoadArkInventoryItems
struct AShooterPlayerController_ServerLoadArkInventoryItems_Params
{
public:
	TArray<struct FItemNetInfo>                  ArkInventoryItems;                                 // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFinalBatch;                                       // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45CF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerKickPlayer
struct AShooterPlayerController_ServerKickPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerInventoryClearCraftQueue
struct AShooterPlayerController_ServerInventoryClearCraftQueue_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerGrindItemInRemoteInventory
struct AShooterPlayerController_ServerGrindItemInRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         GrindStack;                                        // 0x10(0x1)(ExportObject, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45D3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerGlobalCommand
struct AShooterPlayerController_ServerGlobalCommand_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerGiveItem
struct AShooterPlayerController_ServerGiveItem_Params
{
public:
	struct FSoftObjectPath                       ItemString;                                        // 0x0(0x20)(ConstParm, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        QuantityOverride;                                  // 0x20(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0x24(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         UseExactQuality;                                   // 0x29(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGiveEngram;                                       // 0x2A(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45D4[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerEquipToRemoteInventory
struct AShooterPlayerController_ServerEquipToRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerEquipPawnItem
struct AShooterPlayerController_ServerEquipPawnItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDropFromRemoteInventory
struct AShooterPlayerController_ServerDropFromRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDownloadTransferredPlayer
struct AShooterPlayerController_ServerDownloadTransferredPlayer_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SpawnPointRegionIndex;                             // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDisallowPlayerToJoinNoCheck
struct AShooterPlayerController_ServerDisallowPlayerToJoinNoCheck_Params
{
public:
	class FString                                PlayerID;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDeleteItemFromCustomFolder
struct AShooterPlayerController_ServerDeleteItemFromCustomFolder_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CFolderName;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InventoryCompType;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x1C(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_45DD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDeleteCustomFolder
struct AShooterPlayerController_ServerDeleteCustomFolder_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CFolderName;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InventoryCompType;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_45DF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerDataSetRPC
struct AShooterPlayerController_ServerDataSetRPC_Params
{
public:
	TArray<struct FDataSet>                      DataSets;                                          // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCycleSpectator
struct AShooterPlayerController_ServerCycleSpectator_Params
{
public:
	bool                                         bNext;                                             // 0x0(0x1)(Edit, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCraftItem
struct AShooterPlayerController_ServerCraftItem_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerClearDeathWaypoint_ServerLogic
struct AShooterPlayerController_ServerClearDeathWaypoint_ServerLogic_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerClearDeathWaypoint
struct AShooterPlayerController_ServerClearDeathWaypoint_Params
{
public:
	int32                                        DeathLocationIndex;                                // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCheckIsValidPlayerToDownload
struct AShooterPlayerController_ServerCheckIsValidPlayerToDownload_Params
{
public:
	struct FArkTributePlayerData                 PlayerData;                                        // 0x0(0x120)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1E8 (0x1E8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_UploadItem
struct AShooterPlayerController_ServerCharacterUploadWithItems_UploadItem_Params
{
public:
	uint64                                       PlayerDataID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	struct FItemNetInfo                          InvItem;                                           // 0x8(0x1E0)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_Start
struct AShooterPlayerController_ServerCharacterUploadWithItems_Start_Params
{
public:
	uint64                                       PlayerDataID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	struct FArkTributePlayerData                 PlayerData;                                        // 0x8(0x120)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_FinishAndCreateCharacter
struct AShooterPlayerController_ServerCharacterUploadWithItems_FinishAndCreateCharacter_Params
{
public:
	uint64                                       PlayerDataID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_CharaterPayload
struct AShooterPlayerController_ServerCharacterUploadWithItems_CharaterPayload_Params
{
public:
	uint64                                       PlayerDataID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	TArray<uint8>                                PlayerDataChunk;                                   // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerBanPlayer
struct AShooterPlayerController_ServerBanPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAutoStackItemIDs
struct AShooterPlayerController_ServerAutoStackItemIDs_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FItemNetID>                    ItemIDs;                                           // 0x8(0x10)(EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAsyncLoadArkInventoryItems
struct AShooterPlayerController_ServerAsyncLoadArkInventoryItems_Params
{
public:
	TArray<struct FItemNetInfo>                  ArkInventoryItems;                                 // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFinalBatch;                                       // 0x10(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45EC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAllowPlayerToJoinNoCheck
struct AShooterPlayerController_ServerAllowPlayerToJoinNoCheck_Params
{
public:
	class FString                                PlayerID;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddItemToCustomFolder
struct AShooterPlayerController_ServerAddItemToCustomFolder_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                CFolderName;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InventoryCompType;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x1C(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_45ED[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddItemToArkInventory
struct AShooterPlayerController_ServerAddItemToArkInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        RequestedQuantity;                                 // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45EE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddItemFromArkInventory
struct AShooterPlayerController_ServerAddItemFromArkInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        RequestedQuantity;                                 // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45F2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddCustomActorTrackListEntries_Players
struct AShooterPlayerController_ServerAddCustomActorTrackListEntries_Players_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45F4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddCustomActorTrackListEntries_Creatures_ForcePOIVisible
struct AShooterPlayerController_ServerAddCustomActorTrackListEntries_Creatures_ForcePOIVisible_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45F8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddCustomActorTrackListEntries_Creatures
struct AShooterPlayerController_ServerAddCustomActorTrackListEntries_Creatures_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddAdminPlayer
struct AShooterPlayerController_ServerAddAdminPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerAddAchievementID
struct AShooterPlayerController_ServerAddAchievementID_Params
{
public:
	class FString                                AchievementID;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsOnSpawn;                                        // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_45FD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerActorViewRemoteInventory
struct AShooterPlayerController_ServerActorViewRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ServerActorCloseRemoteInventory
struct AShooterPlayerController_ServerActorCloseRemoteInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_SendBlockListFromClient
struct AShooterPlayerController_Server_SendBlockListFromClient_Params
{
public:
	TArray<class FString>                        BlockedEOSUserIds;                                 // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_SelectAndJoinVoiceChannel
struct AShooterPlayerController_Server_SelectAndJoinVoiceChannel_Params
{
public:
	int32                                        VoiceFilterType;                                   // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_RespondToPing
struct AShooterPlayerController_Server_RespondToPing_Params
{
public:
	struct FReplicatePingData                    RespondToPingData;                                 // 0x0(0x38)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_Ping
struct AShooterPlayerController_Server_Ping_Params
{
public:
	struct FReplicatePingData                    WithPingData;                                      // 0x0(0x38)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_HandleOnPossessBlockedPlayer
struct AShooterPlayerController_Server_HandleOnPossessBlockedPlayer_Params
{
public:
	class AShooterPlayerController*              OtherPC;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_GetPlatformNameFromId
struct AShooterPlayerController_Server_GetPlatformNameFromId_Params
{
public:
	uint32                                       ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.Server_DoTeamPing
struct AShooterPlayerController_Server_DoTeamPing_Params
{
public:
	struct FTeamPingData                         WithPingData;                                      // 0x0(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.SendAlarmNotification
struct AShooterPlayerController_SendAlarmNotification_Params
{
public:
	class FString                                SteamID;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Title;                                             // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x20(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.SameLinkedId
struct AShooterPlayerController_SameLinkedId_Params
{
public:
	int64                                        Value;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4609[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.RespondToPing
struct AShooterPlayerController_RespondToPing_Params
{
public:
	struct FReplicatePingData                    RespondToPingData;                                 // 0x0(0x38)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.RequestSpectator
struct AShooterPlayerController_RequestSpectator_Params
{
public:
	class FString                                InSpectatorPass;                                   // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.RenamePlayer
struct AShooterPlayerController_RenamePlayer_Params
{
public:
	class FString                                NewName;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.RemoveMinimapMark
struct AShooterPlayerController_RemoveMinimapMark_Params
{
public:
	class FName                                  WithCustomTag;                                     // 0x0(0x8)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  OnMap;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.RemoveCustomActorTrackListEntries_FromTotalList_Combined
struct AShooterPlayerController_RemoveCustomActorTrackListEntries_FromTotalList_Combined_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x11(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Teammateplayers;                                   // 0x12(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4611[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.RemoteServerCheat
struct AShooterPlayerController_RemoteServerCheat_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.RemoteCheat
struct AShooterPlayerController_RemoteCheat_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ReceiveCustomActorTrackList_Combined
struct AShooterPlayerController_ReceiveCustomActorTrackList_Combined_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x11(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4616[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomTrackedActorInfo>       ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.PurchaseEngramPoint
struct AShooterPlayerController_PurchaseEngramPoint_Params
{
public:
	int32                                        NumPointsToPurchase;                               // 0x0(0x4)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.PlayHitMarkerCharacterBP
struct AShooterPlayerController_PlayHitMarkerCharacterBP_Params
{
public:
	bool                                         bHitFriendlyTarget;                                // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_461B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitMarkerSettings                    HitMarkerSettings;                                 // 0x8(0x30)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.PlayHitMarkerCharacter
struct AShooterPlayerController_PlayHitMarkerCharacter_Params
{
public:
	bool                                         bHitFriendlyTarget;                                // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_461C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitMarkerSettings                    HitMarkerSettings;                                 // 0x8(0x30)(Edit, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.PlayerCommand
struct AShooterPlayerController_PlayerCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.PingNearbyPlayers
struct AShooterPlayerController_PingNearbyPlayers_Params
{
public:
	struct FReplicatePingData                    WithPingData;                                      // 0x0(0x38)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnServerRefreshSteamInventoryFinished
struct AShooterPlayerController_OnServerRefreshSteamInventoryFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4620[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       SteamID;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryToCheckConsumeFinished
struct AShooterPlayerController_OnRefreshSteamInventoryToCheckConsumeFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4623[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       SteamID;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryFinished
struct AShooterPlayerController_OnRefreshSteamInventoryFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4626[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       SteamID;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnRecievedUpdatedCachedTeamTameList
struct AShooterPlayerController_OnRecievedUpdatedCachedTeamTameList_Params
{
public:
	bool                                         IsInfoFresh;                                       // 0x0(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4628[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DesiredIndexOfWidgetThatShouldHaveItsCreatureReturned; // 0x4(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnLoadArkTributePlayersDataFinished
struct AShooterPlayerController_OnLoadArkTributePlayersDataFinished_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_462B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FArkTributePlayerData>         PlayersData;                                       // 0x8(0x10)(Edit, ExportObject, EditFixedSize, Parm, Config, GlobalConfig, SubobjectReference)
	int32                                        FailureResponseCode;                               // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_462D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnFirstSaveAfterCharacterDownloadFinished
struct AShooterPlayerController_OnFirstSaveAfterCharacterDownloadFinished_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnCurrentCharacterAndItemsUploaded
struct AShooterPlayerController_OnCurrentCharacterAndItemsUploaded_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnConsumeItemFinished
struct AShooterPlayerController_OnConsumeItemFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4630[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       SteamID;                                           // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnArkTributeSaved
struct AShooterPlayerController_OnArkTributeSaved_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnAddItemFinished
struct AShooterPlayerController_OnAddItemFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4634[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint64>                               SteamItemUserIDs;                                  // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint64                                       SteamID;                                           // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.OnAddedItemsToAllClustersInventory
struct AShooterPlayerController_OnAddedItemsToAllClustersInventory_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_4636[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<int32>                                MasterIndexNum;                                    // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.NotifyTribeWarStatus
struct AShooterPlayerController_NotifyTribeWarStatus_Params
{
public:
	class FString                                EnemyTribeString;                                  // 0x0(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StatusType;                                        // 0x10(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4639[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.NotifyPawnBuffsOfDamageEvent
struct AShooterPlayerController_NotifyPawnBuffsOfDamageEvent_Params
{
public:
	class AActor*                                DamagedActor;                                      // 0x0(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        DamageAmount;                                      // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_463B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterPlayerController.NewMinimapMark
struct AShooterPlayerController_NewMinimapMark_Params
{
public:
	struct FMinimapMark                          NewMark;                                           // 0x0(0x78)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.ShooterPlayerController.NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Simple
struct AShooterPlayerController_NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Simple_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector_NetQuantize                   AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator_NetQuantize                  AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x38(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4644[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize                   FoliageOrigin_ImpactPoint;                         // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        TraceEndpointZ;                                    // 0x58(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4645[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USceneComponent*                       AttachToComponent;                                 // 0x60(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterPlayerController.NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction
struct AShooterPlayerController_NetSpawnFoliageVFXActorAtLocationAndDoFoliageInteraction_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector_NetQuantize                   AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator_NetQuantize                  AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x38(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_464E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize                   FoliageOrigin_ImpactPoint;                         // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize                   TraceEndpoint;                                     // 0x58(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x70(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.NetSpawnActorAtLocation
struct AShooterPlayerController_NetSpawnActorAtLocation_Params
{
public:
	class UClass*                                AnActorClass;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector_NetQuantize                   AtLocation;                                        // 0x8(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator_NetQuantize                  AtRotation;                                        // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x38(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x40(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	class FName                                  AttachSocketName;                                  // 0x44(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4656[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterPlayerController.MobileSpawnTameConsoleAdd
struct AShooterPlayerController_MobileSpawnTameConsoleAdd_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               SpawnLoc;                                          // 0x8(0x18)(ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRot;                                          // 0x20(0x18)(Edit, ConstParm, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ShouldTame;                                        // 0x3C(0x1)(ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsBaby;                                            // 0x3D(0x1)(Edit, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_465B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SaddleItem;                                        // 0x40(0x8)(ConstParm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.MobileSpawnTame
struct AShooterPlayerController_MobileSpawnTame_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               SpawnLoc;                                          // 0x8(0x18)(ExportObject, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRot;                                          // 0x20(0x18)(Edit, ConstParm, EditFixedSize, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x38(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ShouldTame;                                        // 0x3C(0x1)(ExportObject, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsBaby;                                            // 0x3D(0x1)(Edit, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_465C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                SaddleItem;                                        // 0x40(0x8)(ConstParm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldGender;                                      // 0x48(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsFemale;                                          // 0x49(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_465D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.MarkDinoListEntryWidgetFavoritePlayer
struct AShooterPlayerController_MarkDinoListEntryWidgetFavoritePlayer_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.MarkDinoListEntryWidgetFavoriteCreature
struct AShooterPlayerController_MarkDinoListEntryWidgetFavoriteCreature_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.MarkDinoListEntryWidgetFavoriteCombined
struct AShooterPlayerController_MarkDinoListEntryWidgetFavoriteCombined_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         IsPlayer;                                          // 0x4(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_465E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.ShooterPlayerController.LogChatMessage
struct AShooterPlayerController_LogChatMessage_Params
{
public:
	struct FPrimalChatMessage                    Message;                                           // 0x0(0xA0)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.LockEmote
struct AShooterPlayerController_LockEmote_Params
{
public:
	class FName                                  EmoteName;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.LinkedPlayerIDString
struct AShooterPlayerController_LinkedPlayerIDString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.JoinVoiceLobby
struct AShooterPlayerController_JoinVoiceLobby_Params
{
public:
	class FString                                InLobbyId;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.JoinVoiceChannel
struct AShooterPlayerController_JoinVoiceChannel_Params
{
public:
	class FString                                InChannelName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InChannelCredentials;                              // 0x10(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsViewingInventoryUI
struct AShooterPlayerController_IsViewingInventoryUI_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsTribeAdmin
struct AShooterPlayerController_IsTribeAdmin_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsSpectator
struct AShooterPlayerController_IsSpectator_Params
{
public:
	bool                                         bIncludeSOTFIntro;                                 // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsSOTFIntro
struct AShooterPlayerController_IsSOTFIntro_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsRemoteControlling
struct AShooterPlayerController_IsRemoteControlling_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsPOINearCenterOfScreen
struct AShooterPlayerController_IsPOINearCenterOfScreen_Params
{
public:
	struct FVector2D                             POIPosition;                                       // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             DeadZone;                                          // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_465F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsPlayerViewingPing
struct AShooterPlayerController_IsPlayerViewingPing_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FPingData                             CheckPingData;                                     // 0x8(0x60)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x68(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4660[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsPingedItem
struct AShooterPlayerController_IsPingedItem_Params
{
public:
	class UPrimitiveComponent*                   PingComponent;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4661[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsPawnAcknowledged
struct AShooterPlayerController_IsPawnAcknowledged_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsMinimapOpened
struct AShooterPlayerController_IsMinimapOpened_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsJumpInputPressed
struct AShooterPlayerController_IsJumpInputPressed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsInTribe
struct AShooterPlayerController_IsInTribe_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsInputPressed
struct AShooterPlayerController_IsInputPressed_Params
{
public:
	class FName                                  InputName;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
	class FName                                  GamepadInputName;                                  // 0x8(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4662[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsHudVisible
struct AShooterPlayerController_IsHudVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsGameInputAllowed
struct AShooterPlayerController_IsGameInputAllowed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayerOrLivingLocalPlayer
struct AShooterPlayerController_IsFirstLocalPlayerOrLivingLocalPlayer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayer
struct AShooterPlayerController_IsFirstLocalPlayer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.IsEmoteUnlocked
struct AShooterPlayerController_IsEmoteUnlocked_Params
{
public:
	class FName                                  EmoteName;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4663[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsAtPersonalTameLimit
struct AShooterPlayerController_IsAtPersonalTameLimit_Params
{
public:
	bool                                         bIsForStructure;                                   // 0x0(0x1)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IsAltFireInputPressed
struct AShooterPlayerController_IsAltFireInputPressed_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.ShooterPlayerController.InitPing
struct AShooterPlayerController_InitPing_Params
{
public:
	struct FPingData                             ForPingData;                                       // 0x0(0x60)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FReplicatePingData                    InitFromData;                                      // 0x60(0x38)(ConstParm, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4664[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.InitCharacterPainting
struct AShooterPlayerController_InitCharacterPainting_Params
{
public:
	class APrimalCharacter*                      Char;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.IncrementStat
struct AShooterPlayerController_IncrementStat_Params
{
public:
	enum class EPrimalGDKStat                    StatToIncrement;                                   // 0x0(0x1)(Edit, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.HideRiders
struct AShooterPlayerController_HideRiders_Params
{
public:
	bool                                         bDoHide;                                           // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.HavePingDataOfPlayer
struct AShooterPlayerController_HavePingDataOfPlayer_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnIndex;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4665[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.HasGodMode
struct AShooterPlayerController_HasGodMode_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.HasBestScoreForMission
struct AShooterPlayerController_HasBestScoreForMission_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4666[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GlobalCommand
struct AShooterPlayerController_GlobalCommand_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GiveSlotItemNum
struct AShooterPlayerController_GiveSlotItemNum_Params
{
public:
	int32                                        MasterIndexNum;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        SlotNum;                                           // 0x4(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        QuantityOverride;                                  // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4667[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.GiveSlotItem
struct AShooterPlayerController_GiveSlotItem_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        SlotNum;                                           // 0x10(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        QuantityOverride;                                  // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4668[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.GiveColors
struct AShooterPlayerController_GiveColors_Params
{
public:
	int32                                        Quantity;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetTrackedActorCategoryEnumFromInt
struct AShooterPlayerController_GetTrackedActorCategoryEnumFromInt_Params
{
public:
	int32                                        InputInt;                                          // 0x0(0x4)(Edit, ConstParm, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ETrackedActorCategory             ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4669[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetTeamPingSettingsByType
struct AShooterPlayerController_GetTeamPingSettingsByType_Params
{
public:
	enum class ETeamPingType                     TeamPingType;                                      // 0x0(0x1)(BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_466A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTeamPingDataForClient                ReturnValue;                                       // 0x8(0x80)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetTamedDinosNearBy
struct AShooterPlayerController_GetTamedDinosNearBy_Params
{
public:
	TArray<class APrimalDinoCharacter*>          Dinos;                                             // 0x0(0x10)(Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RangeRadius;                                       // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_466B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               NearLocation;                                      // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetSubscribedAppIds
struct AShooterPlayerController_GetSubscribedAppIds_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetShooterSpectatorPawn
struct AShooterPlayerController_GetShooterSpectatorPawn_Params
{
public:
	class AShooterSpectatorPawn*                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetShooterHud
struct AShooterPlayerController_GetShooterHud_Params
{
public:
	class AShooterHUD*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPlayerViewPointNoModifiers
struct AShooterPlayerController_GetPlayerViewPointNoModifiers_Params
{
public:
	struct FVector                               Out_Location;                                      // 0x0(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              Out_Rotation;                                      // 0x18(0x18)(BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForAiming;                                         // 0x30(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNoTPVAim;                                         // 0x31(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_466C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPlayerCharacterName
struct AShooterPlayerController_GetPlayerCharacterName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPlayerCharacterEvenIfDead
struct AShooterPlayerController_GetPlayerCharacterEvenIfDead_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPlayerCharacter
struct AShooterPlayerController_GetPlayerCharacter_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPingTitleForActor
struct AShooterPlayerController_GetPingTitleForActor_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPingIconForComponent
struct AShooterPlayerController_GetPingIconForComponent_Params
{
public:
	class UPrimitiveComponent*                   ForComponent;                                      // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPersonalTameLimitString
struct AShooterPlayerController_GetPersonalTameLimitString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetPawnInventoryComponent
struct AShooterPlayerController_GetPawnInventoryComponent_Params
{
public:
	class UPrimalInventoryComponent*             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetNearbyPOIs
struct AShooterPlayerController_GetNearbyPOIs_Params
{
public:
	TArray<struct FPointOfInterestData_ForCompanion> ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetLocalPlayerViewSize
struct AShooterPlayerController_GetLocalPlayerViewSize_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetLinkedPlayerID
struct AShooterPlayerController_GetLinkedPlayerID_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetLastInventoryRetrievalTime
struct AShooterPlayerController_GetLastInventoryRetrievalTime_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedSkinRemote
struct AShooterPlayerController_GetInventoryUISelectedSkinRemote_Params
{
public:
	class UPrimalItem*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedSkinLocal
struct AShooterPlayerController_GetInventoryUISelectedSkinLocal_Params
{
public:
	class UPrimalItem*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemRemote
struct AShooterPlayerController_GetInventoryUISelectedItemRemote_Params
{
public:
	class UPrimalItem*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemLocal
struct AShooterPlayerController_GetInventoryUISelectedItemLocal_Params
{
public:
	class UPrimalItem*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetIntFromTrackedActorCategoryEnum
struct AShooterPlayerController_GetIntFromTrackedActorCategoryEnum_Params
{
public:
	enum class ETrackedActorCategory             InputEnum;                                         // 0x0(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_466D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetHeldItemSlots
struct AShooterPlayerController_GetHeldItemSlots_Params
{
public:
	TArray<uint8>                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetExplorerNoteEntry
struct AShooterPlayerController_GetExplorerNoteEntry_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_466E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FExplorerNoteEntry                    ReturnValue;                                       // 0x8(0x110)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetControllerPlayer
struct AShooterPlayerController_GetControllerPlayer_Params
{
public:
	class AShooterCharacter*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetBestScoreForMission
struct AShooterPlayerController_GetBestScoreForMission_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FLeaderboardRow                       ReturnValue;                                       // 0x8(0x48)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetAllCachedTeamTames
struct AShooterPlayerController_GetAllCachedTeamTames_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetAllAimedHarvestActors
struct AShooterPlayerController_GetAllAimedHarvestActors_Params
{
public:
	float                                        MaxDistance;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_466F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        OutHarvestActors;                                  // 0x8(0x10)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               OutHarvestComponents;                              // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                OutHitBodyIndices;                                 // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4670[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.GetActiveMission
struct AShooterPlayerController_GetActiveMission_Params
{
public:
	class AMissionType*                          ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.FormatTextWithKeyBindings
struct AShooterPlayerController_FormatTextWithKeyBindings_Params
{
public:
	class FString                                InText;                                            // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreMarkup;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4671[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        IconOffset;                                        // 0x14(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.FindGetTrackedActorWaypointIndexID
struct AShooterPlayerController_FindGetTrackedActorWaypointIndexID_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerCategory;                                    // 0x4(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.FindGetTrackedActorWaypointIndex
struct AShooterPlayerController_FindGetTrackedActorWaypointIndex_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ETrackedActorCategory             PlayerCategory;                                    // 0x4(0x1)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4672[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.FindGetTrackedActorFavoritedIndexID
struct AShooterPlayerController_FindGetTrackedActorFavoritedIndexID_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerCategory;                                    // 0x4(0x4)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.FindGetTrackedActorFavoritedIndex
struct AShooterPlayerController_FindGetTrackedActorFavoritedIndex_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ETrackedActorCategory             PlayerCategory;                                    // 0x4(0x1)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4673[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.EnforcementHighlight
struct AShooterPlayerController_EnforcementHighlight_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.EndWhistleSelectionInput
struct AShooterPlayerController_EndWhistleSelectionInput_Params
{
public:
	bool                                         bFromRelease;                                      // 0x0(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.EndEmoteSelection
struct AShooterPlayerController_EndEmoteSelection_Params
{
public:
	bool                                         bFromRelease;                                      // 0x0(0x1)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.EnableSpectator
struct AShooterPlayerController_EnableSpectator_Params
{
public:
	bool                                         DestroyPlayerCharacter;                            // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.DrawMultiUsePingEntry
struct AShooterPlayerController_DrawMultiUsePingEntry_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	class FName                                  Text;                                              // 0x4(0x8)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	uint8                                        Pad_4674[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UCanvas*                               Canvas;                                            // 0x10(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, SubobjectReference)
	struct FVector2D                             CanvasPosition;                                    // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.DrawCrosshairOnScreenBP
struct AShooterPlayerController_DrawCrosshairOnScreenBP_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.DoPlayerCommand
struct AShooterPlayerController_DoPlayerCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.DoPingTrace
struct AShooterPlayerController_DoPingTrace_Params
{
public:
	struct FReplicatePingData                    NewPing;                                           // 0x0(0x38)(BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsResponding;                                     // 0x38(0x1)(BlueprintVisible, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x39(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4675[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.DoesPlayerOwnPing
struct AShooterPlayerController_DoesPlayerOwnPing_Params
{
public:
	class AShooterPlayerController*              PlayerPC;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PingOwnerID;                                       // 0x8(0x4)(DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4676[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.DebugCheckSeven
struct AShooterPlayerController_DebugCheckSeven_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUsedActorItem
struct AShooterPlayerController_ClientUsedActorItem_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUploadedDinosLoaded
struct AShooterPlayerController_ClientUploadedDinosLoaded_Params
{
public:
	TArray<struct FARKTributeDinoListing>        UploadedDinosDataListings;                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUploadedCharactersLoaded
struct AShooterPlayerController_ClientUploadedCharactersLoaded_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_4677[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FArkTributePlayerDataListing>  UploadedCharactersDataListings;                    // 0x8(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUploadDino
struct AShooterPlayerController_ClientUploadDino_Params
{
public:
	class APrimalDinoCharacter*                  DownloadedDino;                                    // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4F8 (0x4F8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateMyPlayerDataStruct
struct AShooterPlayerController_ClientUpdateMyPlayerDataStruct_Params
{
public:
	struct FPrimalPlayerDataStruct               NetMyPlayerDataStruct;                             // 0x0(0x4F8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateItemWeaponClipAmmo
struct AShooterPlayerController_ClientUpdateItemWeaponClipAmmo_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        Ammo;                                              // 0x10(0x4)(ConstParm, OutParm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4678[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateItemQuantity
struct AShooterPlayerController_ClientUpdateItemQuantity_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        ItemQuantity;                                      // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4679[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateItemDurability
struct AShooterPlayerController_ClientUpdateItemDurability_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        ItemDurability;                                    // 0x10(0x4)(ConstParm, Net, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_467A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateItemCustomData
struct AShooterPlayerController_ClientUpdateItemCustomData_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FCustomItemData                       InData;                                            // 0x10(0x78)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateInventoryCraftQueue
struct AShooterPlayerController_ClientUpdateInventoryCraftQueue_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemCraftQueueEntry>          CraftQueueEntries;                                 // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateCustomActorTrackListEntries_Players
struct AShooterPlayerController_ClientUpdateCustomActorTrackListEntries_Players_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_467B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUpdateCustomActorTrackListEntries_Creatures
struct AShooterPlayerController_ClientUpdateCustomActorTrackListEntries_Creatures_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_467C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUnlockExplorerNote
struct AShooterPlayerController_ClientUnlockExplorerNote_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ForceShowExplorerNoteUI;                           // 0x4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_467D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientUnlockAchievement
struct AShooterPlayerController_ClientUnlockAchievement_Params
{
public:
	class FString                                AchievementID;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_467E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientTeleportSpectator
struct AShooterPlayerController_ClientTeleportSpectator_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint64                                       PlayerID;                                          // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSwapActorItems
struct AShooterPlayerController_ClientSwapActorItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID1;                                           // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FItemNetID                            ItemID2;                                           // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientStopLocalSound
struct AShooterPlayerController_ClientStopLocalSound_Params
{
public:
	class USoundBase*                            ASound;                                            // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientStartSurfaceCameraForPassenger
struct AShooterPlayerController_ClientStartSurfaceCameraForPassenger_Params
{
public:
	float                                        Yaw;                                               // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x4(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Roll;                                              // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	bool                                         bInvertTurnInput;                                  // 0xC(0x1)(ExportObject, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_467F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientStartReceivingActorItems
struct AShooterPlayerController_ClientStartReceivingActorItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquippedItems;                                    // 0x8(0x1)(BlueprintVisible, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4680[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientStartActivity
struct AShooterPlayerController_ClientStartActivity_Params
{
public:
	class FString                                AcitivityName;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientsideTogglePOIVisibilityForTrackedPlayerWaypoint
struct AShooterPlayerController_ClientsideTogglePOIVisibilityForTrackedPlayerWaypoint_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4681[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientsideTogglePOIVisibilityForTrackedCreatureWaypoint
struct AShooterPlayerController_ClientsideTogglePOIVisibilityForTrackedCreatureWaypoint_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4682[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientsideSetActiveWaypointTrackedPlayerViaCharacterIndex
struct AShooterPlayerController_ClientsideSetActiveWaypointTrackedPlayerViaCharacterIndex_Params
{
public:
	int32                                        TrackedPlayerIndex;                                // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4683[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientsideSetActiveWaypointTrackedCreatureViaCharacterIndex
struct AShooterPlayerController_ClientsideSetActiveWaypointTrackedCreatureViaCharacterIndex_Params
{
public:
	int32                                        TrackedCreatureIndex;                              // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ShouldMarkActive;                                  // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4684[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShowSpawnUIForTransferringPlayer
struct AShooterPlayerController_ClientShowSpawnUIForTransferringPlayer_Params
{
public:
	class UClass*                                NewHUDClass;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	uint64                                       TransferingPlayerID;                               // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseTimer;                                         // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4685[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShowSpawnUI
struct AShooterPlayerController_ClientShowSpawnUI_Params
{
public:
	float                                        Delay;                                             // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShowPaintingUI
struct AShooterPlayerController_ClientShowPaintingUI_Params
{
public:
	class UObject*                               ObjectToPaint;                                     // 0x0(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShowLeaderboard
struct AShooterPlayerController_ClientShowLeaderboard_Params
{
public:
	class UClass*                                LeaderboardType;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FLeaderboardRow>               LeaderboardRows;                                   // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bPlayerHasValidLatestScore;                        // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4686[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLeaderboardRow                       LatestPlayerScore;                                 // 0x28(0x48)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShowCharacterCreationUI
struct AShooterPlayerController_ClientShowCharacterCreationUI_Params
{
public:
	bool                                         bShowDownloadCharacter;                            // 0x0(0x1)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientShooterWasKicked
struct AShooterPlayerController_ClientShooterWasKicked_Params
{
public:
	class FText                                  KickReason;                                        // 0x0(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetSpectatorLocation
struct AShooterPlayerController_ClientSetSpectatorLocation_Params
{
public:
	struct FVector                               NewLocation;                                       // 0x0(0x18)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetPersonalDinoTameCount
struct AShooterPlayerController_ClientSetPersonalDinoTameCount_Params
{
public:
	int32                                        NewPersonalDinoTameCount;                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetHUDAndInitUIScenes
struct AShooterPlayerController_ClientSetHUDAndInitUIScenes_Params
{
public:
	class UClass*                                NewHUDClass;                                       // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetControlRotation
struct AShooterPlayerController_ClientSetControlRotation_Params
{
public:
	struct FRotator                              NewRotation;                                       // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetContainerFuel
struct AShooterPlayerController_ClientSetContainerFuel_Params
{
public:
	class APrimalStructureItemContainer*         Container;                                         // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        FuelQuantity;                                      // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4687[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetCanEnableCheats
struct AShooterPlayerController_ClientSetCanEnableCheats_Params
{
public:
	bool                                         bIsPossible;                                       // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSetArkTributeLimits
struct AShooterPlayerController_ClientSetArkTributeLimits_Params
{
public:
	bool                                         LimitItems;                                        // 0x0(0x1)(EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         LimitDinos;                                        // 0x1(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         LimitCharacters;                                   // 0x2(0x1)(Edit, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4688[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxItems;                                          // 0x4(0x4)(BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxDinos;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxCharacters;                                     // 0xC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotificationCustom
struct AShooterPlayerController_ClientServerSOTFNotificationCustom_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayScale;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x24(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x28(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        TribeID;                                           // 0x38(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4689[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotification
struct AShooterPlayerController_ClientServerSOTFNotification_Params
{
public:
	enum class ESTOFNotificationType             NotificationType;                                  // 0x0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_468A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                MessageText;                                       // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayScale;                                      // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x2C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x30(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            SoundToPlay;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         bLastPlayer;                                       // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_468B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TribeName;                                         // 0x48(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	TArray<class FString>                        PlayerNames;                                       // 0x58(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DeathReason;                                       // 0x68(0x10)(ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FPrimalPlayerCharacterConfigStructReplicated> DeadPlayersData;                                   // 0x78(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TribeID;                                           // 0x88(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_468C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerNotificationSingle
struct AShooterPlayerController_ClientServerNotificationSingle_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayScale;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x24(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x28(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        MessageTypeID;                                     // 0x38(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Priority;                                          // 0x3C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerNotification
struct AShooterPlayerController_ClientServerNotification_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayScale;                                      // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x24(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class UTexture2D*                            MessageIcon;                                       // 0x28(0x8)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        Priority;                                          // 0x38(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_468D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerChatMessage
struct AShooterPlayerController_ClientServerChatMessage_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsBold;                                           // 0x20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_468E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientServerChatDirectMessage
struct AShooterPlayerController_ClientServerChatDirectMessage_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	struct FLinearColor                          MessageColor;                                      // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsBold;                                           // 0x20(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_468F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SenderId;                                          // 0x28(0x10)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendVersion
struct AShooterPlayerController_ClientSendVersion_Params
{
public:
	class FString                                Version;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendItemNetExecCommandToServer
struct AShooterPlayerController_ClientSendItemNetExecCommandToServer_Params
{
public:
	class UPrimalItem*                           ForItem;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  CommandName;                                       // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	struct FBPNetExecParams                      ExecParams;                                        // 0x10(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         bIsReliable;                                       // 0x88(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4690[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendFolderData
struct AShooterPlayerController_ClientSendFolderData_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FServerCustomFolder>           ServerCustomFolder;                                // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Config)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadEnd
struct AShooterPlayerController_ClientSendArkDataPayloadEnd_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4691[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	uint64                                       PlayerDataID;                                      // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadBegin
struct AShooterPlayerController_ClientSendArkDataPayloadBegin_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4692[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                DataClass;                                         // 0x18(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TagName;                                           // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Name;                                              // 0x38(0x10)(ConstParm, Net, OutParm)
	TArray<class FString>                        DataStats;                                         // 0x48(0x10)(Edit, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       ID1;                                               // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint32                                       ID2;                                               // 0x5C(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayload
struct AShooterPlayerController_ClientSendArkDataPayload_Params
{
public:
	struct FGuid                                 ID;                                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	enum class EPrimalARKTributeDataType         ArkDataType;                                       // 0x10(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4693[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<uint8>                                DataBytes;                                         // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRunLocalConsoleCommand
struct AShooterPlayerController_ClientRunLocalConsoleCommand_Params
{
public:
	class FString                                Command;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bWriteToLog;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4694[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRequestNewTrackInfoFromServer_TimerRestriction
struct AShooterPlayerController_ClientRequestNewTrackInfoFromServer_TimerRestriction_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewScrollbarIndex;                                 // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4695[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRequestNewTrackInfoFromServer
struct AShooterPlayerController_ClientRequestNewTrackInfoFromServer_Params
{
public:
	bool                                         FromUI;                                            // 0x0(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4696[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CustomTameSelectionType;                           // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4697[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                CustomTameSearchText;                              // 0x10(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewScrollbarIndex;                                 // 0x20(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4698[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromSteamInventory
struct AShooterPlayerController_ClientRemoveItemFromSteamInventory_Params
{
public:
	TArray<uint64>                               ItemSteamUserID;                                   // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Quantity;                                          // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4699[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromArk
struct AShooterPlayerController_ClientRemoveItemFromArk_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            RemovedItemID;                                     // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers
struct AShooterPlayerController_ClientRemoveCustomActorTrackListEntries_FromTotalList_TeammatePlayers_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveCustomActorTrackListEntries_FromTotalList_Players
struct AShooterPlayerController_ClientRemoveCustomActorTrackListEntries_FromTotalList_Players_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveCustomActorTrackListEntries_FromTotalList_Creatures
struct AShooterPlayerController_ClientRemoveCustomActorTrackListEntries_FromTotalList_Creatures_Params
{
public:
	TArray<int32>                                InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRemoveActorItem
struct AShooterPlayerController_ClientRemoveActorItem_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x8(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         ShowHUDMessage;                                    // 0x10(0x1)(Edit, Net, EditFixedSize, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientRefreshSteamInventoryFinished
struct AShooterPlayerController_ClientRefreshSteamInventoryFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveTribeLog
struct AShooterPlayerController_ClientReceiveTribeLog_Params
{
public:
	class FString                                LogString;                                         // 0x0(0x10)(ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveTamingInfoList
struct AShooterPlayerController_ClientReceiveTamingInfoList_Params
{
public:
	TArray<struct FTamingDinoInfo>               InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveStructuresPlacedOnFloor
struct AShooterPlayerController_ClientReceiveStructuresPlacedOnFloor_Params
{
public:
	TArray<struct FStructuresOnFloor>            Structures;                                        // 0x0(0x10)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveOriginalHairColor
struct AShooterPlayerController_ClientReceiveOriginalHairColor_Params
{
public:
	struct FLinearColor                          HairColor;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveMyTribeOnlineList
struct AShooterPlayerController_ClientReceiveMyTribeOnlineList_Params
{
public:
	TArray<uint32>                               OnlinePlayerIDs;                                   // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveDinoCharStats
struct AShooterPlayerController_ClientReceiveDinoCharStats_Params
{
public:
	class APrimalDinoCharacter*                  TheDinoChar;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                CurValues;                                         // 0x8(0x10)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                MaxValues;                                         // 0x18(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveDinoAncestors
struct AShooterPlayerController_ClientReceiveDinoAncestors_Params
{
public:
	class APrimalDinoCharacter*                  ForDino;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           DinoAncestors;                                     // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FDinoAncestorsEntry>           DinoAncestorsMale;                                 // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsFemale;                             // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        RandomMutationsMale;                               // 0x2C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveCustomActorTrackList_Players
struct AShooterPlayerController_ClientReceiveCustomActorTrackList_Players_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveCustomActorTrackList_Creatures
struct AShooterPlayerController_ClientReceiveCustomActorTrackList_Creatures_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_469F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientReceiveActiveMissionTags
struct AShooterPlayerController_ClientReceiveActiveMissionTags_Params
{
public:
	TArray<class FName>                          MissionTags;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientProgressAchievementInteger
struct AShooterPlayerController_ClientProgressAchievementInteger_Params
{
public:
	class FString                                AchievementID;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ProgressInteger;                                   // 0x10(0x4)(ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_46A0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientProgressAchievement
struct AShooterPlayerController_ClientProgressAchievement_Params
{
public:
	class FString                                AchievementID;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Progress;                                          // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, Config, EditConst, SubobjectReference)
	bool                                         SavePlayerData;                                    // 0x14(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_46A1[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandUnreliableBP
struct AShooterPlayerController_ClientProcessItemNetExecCommandUnreliableBP_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ForItemID;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEquippedItem;                                   // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46A2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CommandName;                                       // 0x14(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBPNetExecParams                      ExecParams;                                        // 0x20(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandBP
struct AShooterPlayerController_ClientProcessItemNetExecCommandBP_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ForItemID;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEquippedItem;                                   // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46A4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  CommandName;                                       // 0x14(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46A5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBPNetExecParams                      ExecParams;                                        // 0x20(0x78)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientPlayLocalSound
struct AShooterPlayerController_ClientPlayLocalSound_Params
{
public:
	class USoundBase*                            ASound;                                            // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAttach;                                           // 0x8(0x1)(Edit, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46A6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientPlayerIsValidToDownload
struct AShooterPlayerController_ClientPlayerIsValidToDownload_Params
{
public:
	bool                                         bIsValid;                                          // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_46A7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FArkTributePlayerData                 PlayerData;                                        // 0x8(0x120)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientOnEndDownloadTransferredPlayerCharacter
struct AShooterPlayerController_ClientOnEndDownloadTransferredPlayerCharacter_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_46A8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        FailureResponseCode;                               // 0x4(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Config, GlobalConfig, SubobjectReference)
	class FString                                FailureResponseMessage;                            // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientOnCurrentCharacterAndItemsUploaded
struct AShooterPlayerController_ClientOnCurrentCharacterAndItemsUploaded_Params
{
public:
	uint64                                       TransferringPlayerDataId;                          // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientOnAddedItemsToAllClustersInventory
struct AShooterPlayerController_ClientOnAddedItemsToAllClustersInventory_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_46A9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                UserId;                                            // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	TArray<int32>                                MasterIndexNum;                                    // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockHairStyleOrEmote
struct AShooterPlayerController_ClientNotifyUnlockHairStyleOrEmote_Params
{
public:
	class FName                                  HairstyleOrEmoteName;                              // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockedEngram
struct AShooterPlayerController_ClientNotifyUnlockedEngram_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTekGram;                                          // 0x8(0x1)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46AA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyTribeXP
struct AShooterPlayerController_ClientNotifyTribeXP_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyTamedDino
struct AShooterPlayerController_ClientNotifyTamedDino_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifySummonedDino
struct AShooterPlayerController_ClientNotifySummonedDino_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyShowProfileRequest
struct AShooterPlayerController_ClientNotifyShowProfileRequest_Params
{
public:
	struct FUniqueNetIdRepl                      ProfileId;                                         // 0x0(0x30)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyRemotePlayerDeath
struct AShooterPlayerController_ClientNotifyRemotePlayerDeath_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                AttackerName;                                      // 0x10(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerKill
struct AShooterPlayerController_ClientNotifyPlayerKill_Params
{
public:
	class AActor*                                PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 VictimPawn;                                        // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeathReason
struct AShooterPlayerController_ClientNotifyPlayerDeathReason_Params
{
public:
	class FString                                ReasonString;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeath
struct AShooterPlayerController_ClientNotifyPlayerDeath_Params
{
public:
	class APawn*                                 InstigatingPawn;                                   // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyPaintFinished
struct AShooterPlayerController_ClientNotifyPaintFinished_Params
{
public:
	bool                                         bSuccess;                                          // 0x0(0x1)(Edit, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyMessageOfTheDay
struct AShooterPlayerController_ClientNotifyMessageOfTheDay_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	float                                        TimeToDisplay;                                     // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46AB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyLevelUp
struct AShooterPlayerController_ClientNotifyLevelUp_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        NewLevel;                                          // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46AC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyEditText
struct AShooterPlayerController_ClientNotifyEditText_Params
{
public:
	class UClass*                                ForObjectClass;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExtraID1;                                          // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ExtraID2;                                          // 0xC(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               ForObject;                                         // 0x10(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyDinoKill
struct AShooterPlayerController_ClientNotifyDinoKill_Params
{
public:
	class APrimalDinoCharacter*                  InstigatingPawn;                                   // 0x0(0x8)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 VictimPawn;                                        // 0x8(0x8)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyDinoDeath
struct AShooterPlayerController_ClientNotifyDinoDeath_Params
{
public:
	class FString                                DinoName;                                          // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                AttackerName;                                      // 0x10(0x10)(ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsVehicle;                                        // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46AD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientNotifyDefeatedDino
struct AShooterPlayerController_ClientNotifyDefeatedDino_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientLoadArkItems
struct AShooterPlayerController_ClientLoadArkItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FItemNetInfo>                  ItemInfos;                                         // 0x8(0x10)(BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClear;                                            // 0x18(0x1)(Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFinalBatch;                                       // 0x19(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46AE[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientInsertActorItem
struct AShooterPlayerController_ClientInsertActorItem_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetInfo                          ItemInfo;                                          // 0x8(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            InsertAfterItemID;                                 // 0x1E8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientHUDNotificationTypeParams
struct AShooterPlayerController_ClientHUDNotificationTypeParams_Params
{
public:
	int32                                        MessageType;                                       // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        MessageType1;                                      // 0x4(0x4)(ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MessageParam2;                                     // 0x8(0x4)(EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46AF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               ObjectParam1;                                      // 0x10(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientGetMessageOfTheDay
struct AShooterPlayerController_ClientGetMessageOfTheDay_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientFinishedReceivingActorItems
struct AShooterPlayerController_ClientFinishedReceivingActorItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquippedItems;                                    // 0x8(0x1)(BlueprintVisible, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientFinishedLoadArkItems
struct AShooterPlayerController_ClientFinishedLoadArkItems_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientEndActivity
struct AShooterPlayerController_ClientEndActivity_Params
{
public:
	class FString                                ActivityName;                                      // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsCompleted;                                      // 0x10(0x1)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDrawUndermeshSphere
struct AShooterPlayerController_ClientDrawUndermeshSphere_Params
{
public:
	int32                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDrawBrushComponentInGame
struct AShooterPlayerController_ClientDrawBrushComponentInGame_Params
{
public:
	class UBrushComponent*                       BrushComponent;                                    // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, SubobjectReference)
	float                                        Duration;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         bDrawSolidBox;                                     // 0xC(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDownloadPlayerCharacterRequestFinished
struct AShooterPlayerController_ClientDownloadPlayerCharacterRequestFinished_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDownloadDinoRequestFinished
struct AShooterPlayerController_ClientDownloadDinoRequestFinished_Params
{
public:
	bool                                         Success;                                           // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDoMultiUse
struct AShooterPlayerController_ClientDoMultiUse_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UseIndex;                                          // 0x8(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46B3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDisplayNotificationDialog
struct AShooterPlayerController_ClientDisplayNotificationDialog_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	class FString                                Title;                                             // 0x10(0x10)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIsError;                                          // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	bool                                         OnOkGoToMainMenu;                                  // 0x21(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAutoClose;                                        // 0x22(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanBeTop;                                         // 0x23(0x1)(BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHideXBoxFooter;                                   // 0x24(0x1)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientDataSetRPC
struct AShooterPlayerController_ClientDataSetRPC_Params
{
public:
	TArray<struct FDataSet>                      DataSets;                                          // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientCreateDeathMark
struct AShooterPlayerController_ClientCreateDeathMark_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientCollectedAchievementItem
struct AShooterPlayerController_ClientCollectedAchievementItem_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientChatMessage
struct AShooterPlayerController_ClientChatMessage_Params
{
public:
	struct FPrimalChatMessage                    Chat;                                              // 0x0(0xA0)(BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddItemToArk
struct AShooterPlayerController_ClientAddItemToArk_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetInfo                          ItemInfo;                                          // 0x8(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFromLoad;                                         // 0x1E8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddFolderToInventoryComponent
struct AShooterPlayerController_ClientAddFolderToInventoryComponent_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                NewCustomFolderName;                               // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        InventoryCompType;                                 // 0x18(0x4)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46B6[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddFloatingText
struct AShooterPlayerController_ClientAddFloatingText_Params
{
public:
	struct FVector_NetQuantize                   AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                FloatingTextString;                                // 0x18(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FColor                                FloatingTextColor;                                 // 0x28(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ScaleX;                                            // 0x2C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ScaleY;                                            // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        TextLifeSpan;                                      // 0x34(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               TextVelocity;                                      // 0x38(0x18)(BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        MinScale;                                          // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FadeInTime;                                        // 0x54(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	float                                        FadeOutTime;                                       // 0x58(0x4)(Edit, BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46B7[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddFloatingDamageText
struct AShooterPlayerController_ClientAddFloatingDamageText_Params
{
public:
	struct FVector_NetQuantize                   AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DamageAmount;                                      // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	int32                                        FromTeamID;                                        // 0x1C(0x4)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddCustomActorTrackListEntries_Players
struct AShooterPlayerController_ClientAddCustomActorTrackListEntries_Players_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddCustomActorTrackListEntries_Creatures_ForcePOIVisible
struct AShooterPlayerController_ClientAddCustomActorTrackListEntries_Creatures_ForcePOIVisible_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46B9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddCustomActorTrackListEntries_Creatures
struct AShooterPlayerController_ClientAddCustomActorTrackListEntries_Creatures_Params
{
public:
	TArray<struct FCustomTrackedActorInfo>       InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46BA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x200 (0x200 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddActorItemToFolder
struct AShooterPlayerController_ClientAddActorItemToFolder_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetInfo                          ItemInfo;                                          // 0x8(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x1E8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ShowHUDNotification;                               // 0x1E9(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46BB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ToFolder;                                          // 0x1F0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.ShooterPlayerController.ClientAddActorItem
struct AShooterPlayerController_ClientAddActorItem_Params
{
public:
	class UPrimalInventoryComponent*             ForInventory;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetInfo                          ItemInfo;                                          // 0x8(0x1E0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEquipItem;                                        // 0x1E8(0x1)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ShowHUDNotification;                               // 0x1E9(0x1)(BlueprintVisible, EditFixedSize, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46BC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_UpdateRallyPointData
struct AShooterPlayerController_Client_UpdateRallyPointData_Params
{
public:
	bool                                         DestroyRallyPoint;                                 // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46BD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTeamPingData                         RallyPointData;                                    // 0x8(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_RecieveBlockedUserIdsFromServer
struct AShooterPlayerController_Client_RecieveBlockedUserIdsFromServer_Params
{
public:
	TArray<uint32>                               BlockedUserIds;                                    // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_ReceivePingResponse
struct AShooterPlayerController_Client_ReceivePingResponse_Params
{
public:
	struct FReplicatePingData                    ResponseData;                                      // 0x0(0x38)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     RespondingPlayer;                                  // 0x38(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_ReceivePing
struct AShooterPlayerController_Client_ReceivePing_Params
{
public:
	struct FReplicatePingData                    ReceivedPingData;                                  // 0x0(0x38)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_ReceiveLastDeathTrackingActorLoc
struct AShooterPlayerController_Client_ReceiveLastDeathTrackingActorLoc_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_46BE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Loc;                                               // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_ReceiveBuffFromDayCycle
struct AShooterPlayerController_Client_ReceiveBuffFromDayCycle_Params
{
public:
	class UClass*                                GiveBuffClass;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class ADayCycleManager*                      FromDayCycle;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_GetPlatformNameFromId
struct AShooterPlayerController_Client_GetPlatformNameFromId_Params
{
public:
	uint32                                       ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	uint8                                        Pad_46BF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                PlatformName;                                      // 0x8(0x10)(ConstParm, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerController.Client_AddTeamPing
struct AShooterPlayerController_Client_AddTeamPing_Params
{
public:
	struct FTeamPingData                         WithPingData;                                      // 0x0(0x50)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.CheckRequestSpectator
struct AShooterPlayerController_CheckRequestSpectator_Params
{
public:
	class FString                                InSpectatorPass;                                   // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.CheckCheatsPassword
struct AShooterPlayerController_CheckCheatsPassword_Params
{
public:
	class FString                                Pass;                                              // 0x0(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.Cheat
struct AShooterPlayerController_Cheat_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ChangeServerRequestCustomTrackedActorListInterval_WithUI
struct AShooterPlayerController_ChangeServerRequestCustomTrackedActorListInterval_WithUI_Params
{
public:
	float                                        AdjustedTime;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.ChangeServerRequestCustomTrackedActorListInterval_WithoutUI
struct AShooterPlayerController_ChangeServerRequestCustomTrackedActorListInterval_WithoutUI_Params
{
public:
	float                                        AdjustedTime;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.CanTeamPing
struct AShooterPlayerController_CanTeamPing_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.CanPingRallyPoint
struct AShooterPlayerController_CanPingRallyPoint_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.CanPingPlayer
struct AShooterPlayerController_CanPingPlayer_Params
{
public:
	class AShooterCharacter*                     ForPlayer;                                         // 0x0(0x8)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_46C0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x3 (0x3 - 0x0)
// Function ShooterGame.ShooterPlayerController.CanDoPlayerCharacterInput
struct AShooterPlayerController_CanDoPlayerCharacterInput_Params
{
public:
	bool                                         bIgnoreCurrentWeapon;                              // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bWeaponForcesMountedWeaponry;                      // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1F0 (0x1F0 - 0x0)
// Function ShooterGame.ShooterPlayerController.CanDismissPOI
struct AShooterPlayerController_CanDismissPOI_Params
{
public:
	struct FPointOfInterestData                  DataPOI;                                           // 0x0(0x1E0)(Edit, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1E0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_46C1[0xF];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPSetFCustomTrackedPlayerInfoMembersByPlayerRef
struct AShooterPlayerController_BPSetFCustomTrackedPlayerInfoMembersByPlayerRef_Params
{
public:
	class AShooterCharacter*                     HandledPlayer;                                     // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Isfavorited;                                       // 0x8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsATeammateOnMap;                                  // 0x9(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsTrackedWaypoint;                                // 0xA(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsValidForCurrentFilter;                          // 0xB(0x1)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46C2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCustomTrackedActorInfo               ReturnValue;                                       // 0x10(0xE0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPServerRequestRespawnAtPoint
struct AShooterPlayerController_BPServerRequestRespawnAtPoint_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        SpawnRegionIndex;                                  // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPServerRequestCustomTrackedActorList
struct AShooterPlayerController_BPServerRequestCustomTrackedActorList_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         Handled;                                           // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_46C3[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NewScrollbarIndex;                                 // 0x1C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerController.BPServerRemovePawnItem
struct AShooterPlayerController_BPServerRemovePawnItem_Params
{
public:
	struct FItemNetID                            ItemID;                                            // 0x0(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bSecondryAction;                                   // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46C4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPServerHandleDataSetRPC
struct AShooterPlayerController_BPServerHandleDataSetRPC_Params
{
public:
	TArray<struct FDataSet>                      DataSets;                                          // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPServerCycleSpectator
struct AShooterPlayerController_BPServerCycleSpectator_Params
{
public:
	bool                                         bNext;                                             // 0x0(0x1)(Edit, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46C5[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPSearchForPOIs
struct AShooterPlayerController_BPSearchForPOIs_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPReceivedPlayer
struct AShooterPlayerController_BPReceivedPlayer_Params
{
public:
	class UPlayer*                               InPlayer;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPPreventTurnInput
struct AShooterPlayerController_BPPreventTurnInput_Params
{
public:
	bool                                         bIsSpectatorTurn;                                  // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPPreventChangeCamera
struct AShooterPlayerController_BPPreventChangeCamera_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPOnRecievedUpdatedCachedTeamTameList
struct AShooterPlayerController_BPOnRecievedUpdatedCachedTeamTameList_Params
{
public:
	int32                                        CustomTameSelectionType;                           // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        DinoGroup;                                         // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                CustomTameSearchText;                              // 0x8(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x18(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46C6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DesiredIndexOfWidgetThatShouldHaveItsCreatureReturned; // 0x1C(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Handled;                                           // 0x20(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_46C7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ScrollbarIndex;                                    // 0x24(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPHandleServerCheckUnfreeze
struct AShooterPlayerController_BPHandleServerCheckUnfreeze_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPHandleClientCheckUnfreeze
struct AShooterPlayerController_BPHandleClientCheckUnfreeze_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPGetExtraWaypointsSOTF
struct AShooterPlayerController_BPGetExtraWaypointsSOTF_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     PlayerPawn;                                        // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> IndicatorsIn;                                      // 0x10(0x10)(BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FPointOfInterestData_ForCompanion> IndicatorsOut;                                     // 0x20(0x10)(ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPClientUnlockExplorerNote
struct AShooterPlayerController_BPClientUnlockExplorerNote_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ForceShowExplorerNoteUI;                           // 0x4(0x1)(Edit, ConstParm, EditFixedSize, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46C8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPClientHandleDataSetRPC
struct AShooterPlayerController_BPClientHandleDataSetRPC_Params
{
public:
	TArray<struct FDataSet>                      DataSets;                                          // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPCheckClientPossession
struct AShooterPlayerController_BPCheckClientPossession_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPCheckCanDinoSpawnFromLocation
struct AShooterPlayerController_BPCheckCanDinoSpawnFromLocation_Params
{
public:
	class UClass*                                DinoClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               CheckLocation;                                     // 0x8(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPApplyFoliageHarvestEffectOnHitAndCollect
struct AShooterPlayerController_BPApplyFoliageHarvestEffectOnHitAndCollect_Params
{
public:
	struct FVector                               FoliageOrigin_ImpactPoint;                         // 0x0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               TraceEndpoint;                                     // 0x18(0x18)(Edit, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               InteractDir;                                       // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerController.BPAcknowledgePossession
struct AShooterPlayerController_BPAcknowledgePossession_Params
{
public:
	class APawn*                                 P;                                                 // 0x0(0x8)(ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.BlueprintGiveLevels
struct AShooterPlayerController_BlueprintGiveLevels_Params
{
public:
	TArray<int32>                                Levels;                                            // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.BlueprintGiveItem
struct AShooterPlayerController_BlueprintGiveItem_Params
{
public:
	TSoftClassPtr<class UPrimalItem>             Item;                                              // 0x0(0x30)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	int32                                        QuantityOverride;                                  // 0x30(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0x34(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x38(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         UseExactQuality;                                   // 0x39(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGiveEngram;                                       // 0x3A(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46C9[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerController.AutoCycle
struct AShooterPlayerController_AutoCycle_Params
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerController.AllowTribeGroupPermission
struct AShooterPlayerController_AllowTribeGroupPermission_Params
{
public:
	enum class ETribeGroupPermission             TribeGroupPermission;                              // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46CA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               OnObject;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_46CB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerController.AllowedToSpectateAllTeams
struct AShooterPlayerController_AllowedToSpectateAllTeams_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerController.AdminCheat
struct AShooterPlayerController_AdminCheat_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerController.AddFloatingDamageText
struct AShooterPlayerController_AddFloatingDamageText_Params
{
public:
	struct FVector                               AtLocation;                                        // 0x0(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DamageAmount;                                      // 0x18(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_46CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                DamagedActor;                                      // 0x20(0x8)(Edit, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x28(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class AShooterPlayerController*              EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_46CD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerController.AddCustomActorTrackListEntries_Combined
struct AShooterPlayerController_AddCustomActorTrackListEntries_Combined_Params
{
public:
	TArray<struct FTrackedActorPlusInfoStruct>   InfoList;                                          // 0x0(0x10)(ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsInfoFresh;                                       // 0x10(0x1)(Edit, ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x11(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ForcePOIVisible;                                   // 0x12(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_46CE[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FCustomTrackedActorInfo>       ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.VisualizeClass
struct UShooterCheatManager_VisualizeClass_Params
{
public:
	class FString                                ClassIn;                                           // 0x0(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTotal;                                          // 0x10(0x4)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_470F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.UnlockEngram
struct UShooterCheatManager_UnlockEngram_Params
{
public:
	class FString                                ItemClassName;                                     // 0x0(0x10)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.UnlockEmote
struct UShooterCheatManager_UnlockEmote_Params
{
public:
	class FString                                EmoteName;                                         // 0x0(0x10)(ConstParm, BlueprintVisible, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.UnlockAchievement
struct UShooterCheatManager_UnlockAchievement_Params
{
public:
	class FString                                AchievementID;                                     // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.UnbanPlayer
struct UShooterCheatManager_UnbanPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TTC
struct UShooterCheatManager_TTC_Params
{
public:
	class FString                                DinoID;                                            // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.TTAL
struct UShooterCheatManager_TTAL_Params
{
public:
	class FString                                ActorName;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_4710[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.TribeStructureAudit
struct UShooterCheatManager_TribeStructureAudit_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.TribeMessage
struct UShooterCheatManager_TribeMessage_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4711[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.TribeDinoAudit
struct UShooterCheatManager_TribeDinoAudit_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCheatManager.TransferImprints
struct UShooterCheatManager_TransferImprints_Params
{
public:
	class FString                                OldPlayerUniqueNetId;                              // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NewPlayerId;                                       // 0x10(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4712[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewImprinterName;                                  // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TPName
struct UShooterCheatManager_TPName_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.TPCoords
struct UShooterCheatManager_TPCoords_Params
{
public:
	float                                        Lat;                                               // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst)
	float                                        Lon;                                               // 0x4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, EditConst, DuplicateTransient)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TP
struct UShooterCheatManager_TP_Params
{
public:
	class FString                                LocationName;                                      // 0x0(0x10)(Edit, EditFixedSize, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TOD
struct UShooterCheatManager_TOD_Params
{
public:
	class FString                                TimeString;                                        // 0x0(0x10)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TimeOfDay
struct UShooterCheatManager_TimeOfDay_Params
{
public:
	class FString                                TimeString;                                        // 0x0(0x10)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToPlayerName
struct UShooterCheatManager_TeleportToPlayerName_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToPlayer
struct UShooterCheatManager_TeleportToPlayer_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToNearestDino
struct UShooterCheatManager_TeleportToNearestDino_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        ScanRange;                                         // 0xC(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreTames;                                      // 0x10(0x1)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4713[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NearestIncrement;                                  // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToCreature
struct UShooterCheatManager_TeleportToCreature_Params
{
public:
	class FString                                DinoID;                                            // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToActorLocation
struct UShooterCheatManager_TeleportToActorLocation_Params
{
public:
	class FString                                ActorName;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportToActiveHorde
struct UShooterCheatManager_TeleportToActiveHorde_Params
{
public:
	int32                                        EventIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportPlayerNameToMe
struct UShooterCheatManager_TeleportPlayerNameToMe_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportPlayerIDToMe
struct UShooterCheatManager_TeleportPlayerIDToMe_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TeleportCreatureToMe
struct UShooterCheatManager_TeleportCreatureToMe_Params
{
public:
	class FString                                DinoID;                                            // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.TCTM
struct UShooterCheatManager_TCTM_Params
{
public:
	class FString                                DinoID;                                            // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.TameAOE
struct UShooterCheatManager_TameAOE_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Affinity;                                          // 0x4(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Effectiveness;                                     // 0x8(0x4)(Edit, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.TakeTribe
struct UShooterCheatManager_TakeTribe_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.SummonTamed
struct UShooterCheatManager_SummonTamed_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.StartNearestHorde
struct UShooterCheatManager_StartNearestHorde_Params
{
public:
	class FName                                  HordeType;                                         // 0x0(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        DifficultyLevel;                                   // 0x8(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         Teleport;                                          // 0xC(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	uint8                                        Pad_4714[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.StartMissionWithMetaData
struct UShooterCheatManager_StartMissionWithMetaData_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.StartMission
struct UShooterCheatManager_StartMission_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.SPIG
struct UShooterCheatManager_SPIG_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Yaw;                                               // 0xC(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x10(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.SPI
struct UShooterCheatManager_SPI_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Yaw;                                               // 0xC(0x4)(ConstParm, ExportObject, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        Pitch;                                             // 0x10(0x4)(ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, Transient, Config)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnSetupDino
struct UShooterCheatManager_SpawnSetupDino_Params
{
public:
	class FString                                DinoBlueprintPath;                                 // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                SaddleBlueprintPath;                               // 0x10(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SaddleQuality;                                     // 0x20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x24(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                DinoStats;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SpawnDistance;                                     // 0x38(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        YOffset;                                           // 0x3C(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x40(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4715[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xE0 (0xE0 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnExactDino
struct UShooterCheatManager_SpawnExactDino_Params
{
public:
	class FString                                DinoBlueprintPath;                                 // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                SaddleBlueprintPath;                               // 0x10(0x10)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        SaddleQuality;                                     // 0x20(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        BaseLevel;                                         // 0x24(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExtraLevels;                                       // 0x28(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4716[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BaseStats;                                         // 0x30(0x10)(BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                AddedStats;                                        // 0x40(0x10)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                DinoName;                                          // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int8                                         Cloned;                                            // 0x60(0x1)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int8                                         Neutered;                                          // 0x61(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4717[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                TamedOn;                                           // 0x68(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                UploadedFrom;                                      // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ImprinterName;                                     // 0x88(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ImprinterUniqueNetId;                              // 0x98(0x10)(ConstParm, ExportObject, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ImprintQuality;                                    // 0xA8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4718[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Colors;                                            // 0xB0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	int64                                        DinoID;                                            // 0xC0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int64                                        Exp;                                               // 0xC8(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        SpawnDistance;                                     // 0xD0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        YOffset;                                           // 0xD4(0x4)(Edit, BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0xD8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4719[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnDino
struct UShooterCheatManager_SpawnDino_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x1C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnActorTamed
struct UShooterCheatManager_SpawnActorTamed_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_471A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnActorSpreadTamed
struct UShooterCheatManager_SpawnActorSpreadTamed_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumberActors;                                      // 0x1C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x20(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_471B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnActorSpread
struct UShooterCheatManager_SpawnActorSpread_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumberActors;                                      // 0x1C(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x20(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_471C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnActorBaby
struct UShooterCheatManager_SpawnActorBaby_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_471D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SpawnActor
struct UShooterCheatManager_SpawnActor_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	float                                        SpawnDistance;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnYOffset;                                      // 0x14(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ZOffset;                                           // 0x18(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_471E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.ShowTutorial
struct UShooterCheatManager_ShowTutorial_Params
{
public:
	int32                                        TutorialIndex;                                     // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceDisplay;                                     // 0x4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_471F[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ShowHibernatingDino
struct UShooterCheatManager_ShowHibernatingDino_Params
{
public:
	class FString                                DinoString;                                        // 0x0(0x10)(BlueprintReadOnly, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.ShowDebugPingLifetime
struct UShooterCheatManager_ShowDebugPingLifetime_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetVideoReplayEnabled
struct UShooterCheatManager_SetVideoReplayEnabled_Params
{
public:
	bool                                         ShouldEnabled;                                     // 0x0(0x1)(ExportObject, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetUnstasisRadius
struct UShooterCheatManager_SetUnstasisRadius_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetTimeOfDay
struct UShooterCheatManager_SetTimeOfDay_Params
{
public:
	class FString                                TimeString;                                        // 0x0(0x10)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetTargetPlayerColorVal
struct UShooterCheatManager_SetTargetPlayerColorVal_Params
{
public:
	int32                                        ColorValIndex;                                     // 0x0(0x4)(OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ColorVal;                                          // 0x4(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetTargetPlayerBodyVal
struct UShooterCheatManager_SetTargetPlayerBodyVal_Params
{
public:
	int32                                        BodyValIndex;                                      // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        BodyVal;                                           // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetTargetDinoColor
struct UShooterCheatManager_SetTargetDinoColor_Params
{
public:
	int32                                        ColorRegion;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        ColorID;                                           // 0x4(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetTamingEffectivenessModifier
struct UShooterCheatManager_SetTamingEffectivenessModifier_Params
{
public:
	float                                        TameEff;                                           // 0x0(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.SetStatOnTarget
struct UShooterCheatManager_SetStatOnTarget_Params
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetSleepingAOE
struct UShooterCheatManager_SetSleepingAOE_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bIsSleeping;                                       // 0x4(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4720[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetShowAllPlayers
struct UShooterCheatManager_SetShowAllPlayers_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.SetPlayerPos
struct UShooterCheatManager_SetPlayerPos_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetPlayerLevel
struct UShooterCheatManager_SetPlayerLevel_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int16                                        Level;                                             // 0x8(0x2)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_4721[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetPerfCheck
struct UShooterCheatManager_SetPerfCheck_Params
{
public:
	int32                                        PerfCheckLocation;                                 // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetNumReplaySecondsToStore
struct UShooterCheatManager_SetNumReplaySecondsToStore_Params
{
public:
	int32                                        NumSecondsToStore;                                 // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetNetworkTime
struct UShooterCheatManager_SetNetworkTime_Params
{
public:
	float                                        NewTime;                                           // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetMyTargetSleeping
struct UShooterCheatManager_SetMyTargetSleeping_Params
{
public:
	bool                                         bIsSleeping;                                       // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetMessageOfTheDay
struct UShooterCheatManager_SetMessageOfTheDay_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	class FString                                SetterID;                                          // 0x10(0x10)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.SetMaterialParamaterCollectionByNameAndFloatValue
struct UShooterCheatManager_SetMaterialParamaterCollectionByNameAndFloatValue_Params
{
public:
	class FName                                  ParamaterName;                                     // 0x0(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        ParamaterValue;                                    // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetInstantHarvest
struct UShooterCheatManager_SetInstantHarvest_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetInfiniteStats
struct UShooterCheatManager_SetInfiniteStats_Params
{
public:
	bool                                         bInfinite;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetImprintQuality
struct UShooterCheatManager_SetImprintQuality_Params
{
public:
	float                                        ImprintQuality;                                    // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetImprintedPlayer
struct UShooterCheatManager_SetImprintedPlayer_Params
{
public:
	class FString                                NewImprinterName;                                  // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class FString                                NewImprinterUniqueNetId;                           // 0x10(0x10)(Edit, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetHeadHairstyle
struct UShooterCheatManager_SetHeadHairstyle_Params
{
public:
	int32                                        HairStyleIndex;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetHeadHairPercent
struct UShooterCheatManager_SetHeadHairPercent_Params
{
public:
	float                                        ThePercent;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetGraphicsQuality
struct UShooterCheatManager_SetGraphicsQuality_Params
{
public:
	int32                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetGodMode
struct UShooterCheatManager_SetGodMode_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetGlobalPause
struct UShooterCheatManager_SetGlobalPause_Params
{
public:
	bool                                         bIsPaused;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetFacialHairstyle
struct UShooterCheatManager_SetFacialHairstyle_Params
{
public:
	int32                                        HairStyleIndex;                                    // 0x0(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetFacialHairPercent
struct UShooterCheatManager_SetFacialHairPercent_Params
{
public:
	float                                        ThePercent;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetDifficultyValue
struct UShooterCheatManager_SetDifficultyValue_Params
{
public:
	float                                        NewTime;                                           // 0x0(0x4)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetDebugMeleeAttacks
struct UShooterCheatManager_SetDebugMeleeAttacks_Params
{
public:
	bool                                         bDebugMelee;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4722[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DrawDuration;                                      // 0x4(0x4)(BlueprintVisible, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetDayCycleSpeed
struct UShooterCheatManager_SetDayCycleSpeed_Params
{
public:
	float                                        Speed;                                             // 0x0(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetDay
struct UShooterCheatManager_SetDay_Params
{
public:
	int32                                        Day;                                               // 0x0(0x4)(Edit, ConstParm, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetChatLogMaxAgeInDays
struct UShooterCheatManager_SetChatLogMaxAgeInDays_Params
{
public:
	int32                                        NumDays;                                           // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetCameraProfile
struct UShooterCheatManager_SetCameraProfile_Params
{
public:
	class FName                                  CameraProfileName;                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetBabyAgeAOE
struct UShooterCheatManager_SetBabyAgeAOE_Params
{
public:
	float                                        AgeValue;                                          // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetBabyAge
struct UShooterCheatManager_SetBabyAge_Params
{
public:
	float                                        AgeValue;                                          // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.SetActiveMissionDebugFlags
struct UShooterCheatManager_SetActiveMissionDebugFlags_Params
{
public:
	int32                                        DebugFlags;                                        // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.ServerChatToPlayer
struct UShooterCheatManager_ServerChatToPlayer_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                MessageText;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.ServerChatTo
struct UShooterCheatManager_ServerChatTo_Params
{
public:
	class FString                                SteamID;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                MessageText;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ServerChat
struct UShooterCheatManager_ServerChat_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.SendDataDogMetric
struct UShooterCheatManager_SendDataDogMetric_Params
{
public:
	class FString                                Message;                                           // 0x0(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.SDFRide
struct UShooterCheatManager_SDFRide_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoadIfUnloaded;                                   // 0xC(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4723[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.SDFBaby
struct UShooterCheatManager_SDFBaby_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        BabyCount;                                         // 0xC(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLoadIfUnloaded;                                   // 0x10(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4724[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.SDF
struct UShooterCheatManager_SDF_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsTamed;                                          // 0x8(0x1)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4725[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        DinoLevel;                                         // 0xC(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLoadIfUnloaded;                                   // 0x10(0x1)(Edit, ConstParm, Net, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4726[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ScriptCommand
struct UShooterCheatManager_ScriptCommand_Params
{
public:
	class FString                                CommandString;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.RunDinoTest
struct UShooterCheatManager_RunDinoTest_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AbilityDelay;                                      // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.RespawnPlayer
struct UShooterCheatManager_RespawnPlayer_Params
{
public:
	bool                                         KeepGender;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.RepairArea
struct UShooterCheatManager_RepairArea_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.RenameTribeID
struct UShooterCheatManager_RenameTribeID_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4727[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewName;                                           // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.RenameTribe
struct UShooterCheatManager_RenameTribe_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	class FString                                NewName;                                           // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.RenamePlayerId
struct UShooterCheatManager_RenamePlayerId_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4728[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                NewName;                                           // 0x8(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.RenamePlayer
struct UShooterCheatManager_RenamePlayer_Params
{
public:
	class FString                                PlayerName;                                        // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class FString                                NewName;                                           // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.RemoveWorldBuff
struct UShooterCheatManager_RemoveWorldBuff_Params
{
public:
	class FString                                WorldBuffIdentifier;                               // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.RemoveDinoTest
struct UShooterCheatManager_RemoveDinoTest_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.RegrowFoliage
struct UShooterCheatManager_RegrowFoliage_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.RainMonkeys
struct UShooterCheatManager_RainMonkeys_Params
{
public:
	int32                                        NumberActors;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ZOffset;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.RainDinos
struct UShooterCheatManager_RainDinos_Params
{
public:
	int32                                        NumberActors;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ZOffset;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.RainDanger
struct UShooterCheatManager_RainDanger_Params
{
public:
	int32                                        NumberActors;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ZOffset;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.RainCritters
struct UShooterCheatManager_RainCritters_Params
{
public:
	int32                                        NumberActors;                                      // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpreadAmount;                                      // 0x4(0x4)(BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        ZOffset;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.psc
struct UShooterCheatManager_Psc_Params
{
public:
	class FString                                Command;                                           // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.PrintActorLocation
struct UShooterCheatManager_PrintActorLocation_Params
{
public:
	class FString                                ActorName;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.PlayerCommand
struct UShooterCheatManager_PlayerCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.OpenMap
struct UShooterCheatManager_OpenMap_Params
{
public:
	class FString                                MapName;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.OneHPAOE
struct UShooterCheatManager_OneHPAOE_Params
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        TribeID;                                           // 0xC(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.MoveTargetTo
struct UShooterCheatManager_MoveTargetTo_Params
{
public:
	float                                        X;                                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0x4(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Z;                                                 // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.Mission
struct UShooterCheatManager_Mission_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.MaxAscend
struct UShooterCheatManager_MaxAscend_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.LvlUp
struct UShooterCheatManager_LvlUp_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int16                                        Level;                                             // 0x8(0x2)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_4729[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.LevelUpTarget
struct UShooterCheatManager_LevelUpTarget_Params
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumLevels;                                         // 0x8(0x4)(BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.LevelUpAOE
struct UShooterCheatManager_LevelUpAOE_Params
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        NumLevels;                                         // 0xC(0x4)(BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.LevelUp
struct UShooterCheatManager_LevelUp_Params
{
public:
	class FName                                  StatName;                                          // 0x0(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumLevels;                                         // 0x8(0x4)(BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.LessThan
struct UShooterCheatManager_LessThan_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        Connections;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	bool                                         IncludeContainers;                                 // 0x8(0x1)(Edit, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_472A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.KillPlayer
struct UShooterCheatManager_KillPlayer_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.KillAOETribe
struct UShooterCheatManager_KillAOETribe_Params
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        TribeID;                                           // 0xC(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         DestroyOnly;                                       // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_472B[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.KillAOE
struct UShooterCheatManager_KillAOE_Params
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.KickPlayer
struct UShooterCheatManager_KickPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.JoinTribe
struct UShooterCheatManager_JoinTribe_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TribeTeamID;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_472C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.IsUndermesh
struct UShooterCheatManager_IsUndermesh_Params
{
public:
	float                                        DebugDrawSeconds;                                  // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.InteractWithFluid
struct UShooterCheatManager_InteractWithFluid_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Speed;                                             // 0x4(0x4)(ConstParm, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         Splash;                                            // 0x8(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         Ripple;                                            // 0x9(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_472D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.InfiniteGod
struct UShooterCheatManager_InfiniteGod_Params
{
public:
	bool                                         bSet;                                              // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.HurtMyTarget
struct UShooterCheatManager_HurtMyTarget_Params
{
public:
	int32                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.HurtMyAOE
struct UShooterCheatManager_HurtMyAOE_Params
{
public:
	int32                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x4(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.HiWarp
struct UShooterCheatManager_HiWarp_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        Index;                                             // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_472E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.HideTutorial
struct UShooterCheatManager_HideTutorial_Params
{
public:
	int32                                        TutorialIndex;                                     // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.HibernationReport
struct UShooterCheatManager_HibernationReport_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GTIPL
struct UShooterCheatManager_GTIPL_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GTIDPL
struct UShooterCheatManager_GTIDPL_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.GMSummon
struct UShooterCheatManager_GMSummon_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        Level;                                             // 0x10(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	uint8                                        Pad_472F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GMComp
struct UShooterCheatManager_GMComp_Params
{
public:
	int32                                        Level;                                             // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveWeaponSet
struct UShooterCheatManager_GiveWeaponSet_Params
{
public:
	class FName                                  Tier;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  Quality;                                           // 0x8(0x8)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveToMeAOE
struct UShooterCheatManager_GiveToMeAOE_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveTekEngramsTo
struct UShooterCheatManager_GiveTekEngramsTo_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BlueprintPath;                                     // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveMaxLevel
struct UShooterCheatManager_GiveMaxLevel_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItemToPlayer
struct UShooterCheatManager_GiveItemToPlayer_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4730[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                BlueprintPath;                                     // 0x8(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        QuantityOverride;                                  // 0x18(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0x1C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x20(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4731[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItemSkins
struct UShooterCheatManager_GiveItemSkins_Params
{
public:
	class FString                                EquipmentType;                                     // 0x0(0x10)(ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItemSet
struct UShooterCheatManager_GiveItemSet_Params
{
public:
	class FName                                  Tier;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItemNumToPlayer
struct UShooterCheatManager_GiveItemNumToPlayer_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        MasterIndexNum;                                    // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        QuantityOverride;                                  // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4732[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItemNum
struct UShooterCheatManager_GiveItemNum_Params
{
public:
	int32                                        MasterIndexNum;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	int32                                        QuantityOverride;                                  // 0x4(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4733[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveItem
struct UShooterCheatManager_GiveItem_Params
{
public:
	class FString                                BlueprintPath;                                     // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        QuantityOverride;                                  // 0x10(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x18(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4734[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveExpToTarget
struct UShooterCheatManager_GiveExpToTarget_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         FromTribeShare;                                    // 0x4(0x1)(ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventSharingWithTribe;                          // 0x5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4735[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveExpToPlayer
struct UShooterCheatManager_GiveExpToPlayer_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        HowMuch;                                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         FromTribeShare;                                    // 0xC(0x1)(ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventSharingWithTribe;                          // 0xD(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4736[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveExplorerNote
struct UShooterCheatManager_GiveExplorerNote_Params
{
public:
	int32                                        NoteIndex;                                         // 0x0(0x4)(ExportObject, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveDinoSet
struct UShooterCheatManager_GiveDinoSet_Params
{
public:
	class FName                                  Tier;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumDinos;                                          // 0x8(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveCreativeModeToPlayer
struct UShooterCheatManager_GiveCreativeModeToPlayer_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveBossEngrams
struct UShooterCheatManager_GiveBossEngrams_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BossName;                                          // 0x4(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int8                                         Difficulty;                                        // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4737[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GiveArmorSet
struct UShooterCheatManager_GiveArmorSet_Params
{
public:
	class FName                                  Tier;                                              // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FName                                  Quality;                                           // 0x8(0x8)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.GFID
struct UShooterCheatManager_GFID_Params
{
public:
	class FName                                  BlueprintPath;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterCheatManager.GFI
struct UShooterCheatManager_GFI_Params
{
public:
	class FName                                  BlueprintPath;                                     // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        QuantityOverride;                                  // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        QualityOverride;                                   // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceBlueprint;                                   // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4738[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetTribeIdPlayerList
struct UShooterCheatManager_GetTribeIdPlayerList_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetTribe
struct UShooterCheatManager_GetTribe_Params
{
public:
	int32                                        TribeID;                                           // 0x0(0x4)(Edit, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetSteamIDForPlayerID
struct UShooterCheatManager_GetSteamIDForPlayerID_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetSpoiledEgg
struct UShooterCheatManager_GetSpoiledEgg_Params
{
public:
	int32                                        NumMutationsToAdd;                                 // 0x0(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetPlayerIDForSteamID
struct UShooterCheatManager_GetPlayerIDForSteamID_Params
{
public:
	int32                                        SteamID;                                           // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetEgg
struct UShooterCheatManager_GetEgg_Params
{
public:
	int32                                        NumMutationsToAdd;                                 // 0x0(0x4)(Edit, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GetAllMyTarget
struct UShooterCheatManager_GetAllMyTarget_Params
{
public:
	class FString                                VariableName;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.GCMP
struct UShooterCheatManager_GCMP_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.GameCommand
struct UShooterCheatManager_GameCommand_Params
{
public:
	class FString                                TheCommand;                                        // 0x0(0x10)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCheatManager.FSM
struct UShooterCheatManager_FSM_Params
{
public:
	bool                                         PreventFinishTheMatch;                             // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         UseQuetzalBus;                                     // 0x1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceTribes
struct UShooterCheatManager_ForceTribes_Params
{
public:
	class FString                                PlayerName1;                                       // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                PlayerName2;                                       // 0x10(0x10)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                NewTribeName;                                      // 0x20(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceTameAOE
struct UShooterCheatManager_ForceTameAOE_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceStartMission
struct UShooterCheatManager_ForceStartMission_Params
{
public:
	class FName                                  MissionTag;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceStartMatch
struct UShooterCheatManager_ForceStartMatch_Params
{
public:
	bool                                         PreventFinishTheMatch;                             // 0x0(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         UseQuetzalBus;                                     // 0x1(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceReturnIsXboxOneBuildOnPC
struct UShooterCheatManager_ForceReturnIsXboxOneBuildOnPC_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceReturnIsPS4BuildOnPC
struct UShooterCheatManager_ForceReturnIsPS4BuildOnPC_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribeId
struct UShooterCheatManager_ForcePlayerToJoinTribeId_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        TribeTeamID;                                       // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4739[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribe
struct UShooterCheatManager_ForcePlayerToJoinTribe_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                TribeName;                                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTargetTribe
struct UShooterCheatManager_ForcePlayerToJoinTargetTribe_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceGiveBuff
struct UShooterCheatManager_ForceGiveBuff_Params
{
public:
	class FName                                  BuffBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnable;                                           // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_473A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceEnableMeshCheckingOnMe
struct UShooterCheatManager_ForceEnableMeshCheckingOnMe_Params
{
public:
	bool                                         bEnableChecking;                                   // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTeleportingChecking;                        // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ForceCompleteActiveMission
struct UShooterCheatManager_ForceCompleteActiveMission_Params
{
public:
	class FString                                MissionStateSimValues;                             // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterCheatManager.FEMCOM
struct UShooterCheatManager_FEMCOM_Params
{
public:
	bool                                         bEnableKillChecking;                               // 0x0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bEnableTeleportingChecking;                        // 0x1(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.EnemyInVisible
struct UShooterCheatManager_EnemyInVisible_Params
{
public:
	bool                                         Invisible;                                         // 0x0(0x1)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterCheatManager.EnableSpectator
struct UShooterCheatManager_EnableSpectator_Params
{
public:
	bool                                         bDestroyPlayerCharacter;                           // 0x0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.EnableCheats
struct UShooterCheatManager_EnableCheats_Params
{
public:
	class FString                                Pass;                                              // 0x0(0x10)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.DumpAssetProperties
struct UShooterCheatManager_DumpAssetProperties_Params
{
public:
	class FString                                Asset;                                             // 0x0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.DrawDebugBoxForVolumes
struct UShooterCheatManager_DrawDebugBoxForVolumes_Params
{
public:
	float                                        Duration;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	int32                                        VolumeClassIndex;                                  // 0x4(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebugAllVolumeClasses;                            // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDrawSolidBox;                                     // 0x9(0x1)(ConstParm, BlueprintVisible, Net, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_473B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LineThickness;                                     // 0xC(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DrainWater
struct UShooterCheatManager_DrainWater_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DrainFood
struct UShooterCheatManager_DrainFood_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DoStall
struct UShooterCheatManager_DoStall_Params
{
public:
	float                                        StallSeconds;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.DoDamagePct
struct UShooterCheatManager_DoDamagePct_Params
{
public:
	float                                        PercentDamage;                                     // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        SpeedOfImpact;                                     // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Impulse;                                           // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.DisallowPlayerToJoinNoCheck
struct UShooterCheatManager_DisallowPlayerToJoinNoCheck_Params
{
public:
	class FString                                SteamID;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.DinoSet
struct UShooterCheatManager_DinoSet_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        Value;                                             // 0x8(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.Dino
struct UShooterCheatManager_Dino_Params
{
public:
	class FName                                  CheatName;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyWildDinoClasses
struct UShooterCheatManager_DestroyWildDinoClasses_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bExactMatch;                                       // 0x10(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_473C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyTribeStructuresLessThan
struct UShooterCheatManager_DestroyTribeStructuresLessThan_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        Connections;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	bool                                         IncludeContainers;                                 // 0x8(0x1)(Edit, BlueprintVisible, Parm, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         IncludeLargeGates;                                 // 0x9(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_473D[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyTribeIdStructures
struct UShooterCheatManager_DestroyTribeIdStructures_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyTribeIdPlayers
struct UShooterCheatManager_DestroyTribeIdPlayers_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyTribeIdDinos
struct UShooterCheatManager_DestroyTribeIdDinos_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyTribeId
struct UShooterCheatManager_DestroyTribeId_Params
{
public:
	int32                                        TribeTeamID;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyFoliage
struct UShooterCheatManager_DestroyFoliage_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         PutFoliageResourcesInInventory;                    // 0x4(0x1)(BlueprintVisible, Net, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_473E[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyAOE
struct UShooterCheatManager_DestroyAOE_Params
{
public:
	class FName                                  Category;                                          // 0x0(0x8)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	float                                        Radius;                                            // 0x8(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.DestroyActors
struct UShooterCheatManager_DestroyActors_Params
{
public:
	class FString                                ClassName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bExactMatch;                                       // 0x10(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_473F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.DefeatBoss
struct UShooterCheatManager_DefeatBoss_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  BossName;                                          // 0x4(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	int8                                         Difficulty;                                        // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4740[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.DefeatAllBosses
struct UShooterCheatManager_DefeatAllBosses_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterCheatManager.DCMSet
struct UShooterCheatManager_DCMSet_Params
{
public:
	class FName                                  Cheat;                                             // 0x0(0x8)(ExportObject, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Val;                                               // 0x8(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.CryoAOE
struct UShooterCheatManager_CryoAOE_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.Cryo
struct UShooterCheatManager_Cryo_Params
{
public:
	class FString                                DinoID;                                            // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.ClearPlayerInventory
struct UShooterCheatManager_ClearPlayerInventory_Params
{
public:
	int32                                        PlayerID;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bClearInventory;                                   // 0x4(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClearSlotItems;                                   // 0x5(0x1)(ExportObject, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClearEquippedItems;                               // 0x6(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4741[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.CheatAction
struct UShooterCheatManager_CheatAction_Params
{
public:
	class FString                                ActionName;                                        // 0x0(0x10)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ChatLogAppend
struct UShooterCheatManager_ChatLogAppend_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.Broadcast
struct UShooterCheatManager_Broadcast_Params
{
public:
	class FString                                MessageText;                                       // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.BPCheckDenySpawningInThisMap
struct UShooterCheatManager_BPCheckDenySpawningInThisMap_Params
{
public:
	class FString                                PackageName;                                       // 0x0(0x10)(ExportObject, OutParm, Transient, Config, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4742[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterCheatManager.BanPlayer
struct UShooterCheatManager_BanPlayer_Params
{
public:
	class FString                                PlayerSteamName;                                   // 0x0(0x10)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                Duration;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.ArkChangeUIPlatform
struct UShooterCheatManager_ArkChangeUIPlatform_Params
{
public:
	class FString                                Platform;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.AreAllSublevelsForDataLayerLoaded
struct UShooterCheatManager_AreAllSublevelsForDataLayerLoaded_Params
{
public:
	class FString                                DataLayerName;                                     // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.AllowPlayerToJoinNoCheck
struct UShooterCheatManager_AllowPlayerToJoinNoCheck_Params
{
public:
	class FString                                SteamID;                                           // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddWorldBuff
struct UShooterCheatManager_AddWorldBuff_Params
{
public:
	class FString                                WorldBuffIdentifier;                               // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddTokens
struct UShooterCheatManager_AddTokens_Params
{
public:
	int32                                        Quantity;                                          // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddMutations
struct UShooterCheatManager_AddMutations_Params
{
public:
	int32                                        StatType;                                          // 0x0(0x4)(Net, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	int32                                        HowMany;                                           // 0x4(0x4)(BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddItemToAllClustersInventory
struct UShooterCheatManager_AddItemToAllClustersInventory_Params
{
public:
	class FString                                UserId;                                            // 0x0(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	int32                                        MasterIndexNum;                                    // 0x10(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4743[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddHexagons
struct UShooterCheatManager_AddHexagons_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddExperienceToTarget
struct UShooterCheatManager_AddExperienceToTarget_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         FromTribeShare;                                    // 0x4(0x1)(ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventSharingWithTribe;                          // 0x5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4744[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddExperience
struct UShooterCheatManager_AddExperience_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         FromTribeShare;                                    // 0x4(0x1)(ExportObject, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPreventSharingWithTribe;                          // 0x5(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4745[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddEquipmentDurability
struct UShooterCheatManager_AddEquipmentDurability_Params
{
public:
	float                                        Durability;                                        // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddDinoTest
struct UShooterCheatManager_AddDinoTest_Params
{
public:
	class FName                                  DinoBlueprintPath;                                 // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DinoLevel;                                         // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AbilityDelay;                                      // 0xC(0x4)(ConstParm, BlueprintVisible, ExportObject, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddChibiExpToPlayer
struct UShooterCheatManager_AddChibiExpToPlayer_Params
{
public:
	int64                                        PlayerID;                                          // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        HowMuch;                                           // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4746[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddChibiExp
struct UShooterCheatManager_AddChibiExp_Params
{
public:
	float                                        HowMuch;                                           // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterCheatManager.AddBuffPreventTagToSelf
struct UShooterCheatManager_AddBuffPreventTagToSelf_Params
{
public:
	class FName                                  TagName;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterDamageType.OverrideBuffToGiveVictimCharacter
struct UShooterDamageType_OverrideBuffToGiveVictimCharacter_Params
{
public:
	class APrimalCharacter*                      Victim;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        IncomingDamage;                                    // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4749[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x10(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x40(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterDamageType.BPAdjustHarvestingDamage
struct UShooterDamageType_BPAdjustHarvestingDamage_Params
{
public:
	class AActor*                                Victim;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        IncomingDamage;                                    // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_474A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x10(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_474B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.ShooterDamageType.BPAdjustDamage
struct UShooterDamageType_BPAdjustDamage_Params
{
public:
	class AActor*                                Victim;                                            // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	float                                        IncomingDamage;                                    // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_474C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          TheDamageEvent;                                    // 0x10(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x30(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x38(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x40(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_474D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterDamageType.BPAdjustAggro
struct UShooterDamageType_BPAdjustAggro_Params
{
public:
	class APrimalDinoAIController*               DamagedCharacterController;                        // 0x0(0x8)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      DamagedCharacter;                                  // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        DesiredAggroValue;                                 // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        IncomingDamage;                                    // 0x14(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDamageEvent                          TheDamageEvent;                                    // 0x18(0x20)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AController*                           EventInstigator;                                   // 0x38(0x8)(BlueprintVisible, Net, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x40(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_474E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.ShooterGameInstance.StartNonDedicatedSession
struct UShooterGameInstance_StartNonDedicatedSession_Params
{
public:
	class FString                                MapName;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	class FString                                SessionName;                                       // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Config, EditConst, SubobjectReference)
	class FString                                Password;                                          // 0x20(0x10)(Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient)
	class FString                                AdminPassword;                                     // 0x30(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPrivate;                                          // 0x40(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4756[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ExtraParams;                                       // 0x48(0x10)(Edit, ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameInstance.Server_IsPlayerBlocked
struct UShooterGameInstance_Server_IsPlayerBlocked_Params
{
public:
	class APlayerController*                     InBlocker;                                         // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class APlayerController*                     InBlockee;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4757[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1B8 (0x1B8 - 0x0)
// Function ShooterGame.ShooterGameInstance.GetTribeDataMemberIds
struct UShooterGameInstance_GetTribeDataMemberIds_Params
{
public:
	struct FTribeData                            Data;                                              // 0x0(0x1A8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<int32>                                ReturnValue;                                       // 0x1A8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameInstance.FinishLoadMap
struct UShooterGameInstance_FinishLoadMap_Params
{
public:
	class FString                                LoadMapCommandString;                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameInstance.EnableOpenColorIOObject
struct UShooterGameInstance_EnableOpenColorIOObject_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameInstance.Client_IsPlayerBlocked
struct UShooterGameInstance_Client_IsPlayerBlocked_Params
{
public:
	int32                                        LinkedID;                                          // 0x0(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4758[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameInstance.CanUseUserGeneratedContent
struct UShooterGameInstance_CanUseUserGeneratedContent_Params
{
public:
	class UUserWidget*                           OurWidget;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4759[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromPath
struct UShooterGameInstance_AsyncUnloadAssetFromPath_Params
{
public:
	class FString                                AssetPathToUnload;                                 // 0x0(0x10)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceGarbageCollection;                           // 0x10(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromObject
struct UShooterGameInstance_AsyncUnloadAssetFromObject_Params
{
public:
	class UObject*                               AssetObjectToUnload;                               // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceGarbageCollection;                           // 0x8(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_475B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameInstance.AsyncLoadAssetFromPath
struct UShooterGameInstance_AsyncLoadAssetFromPath_Params
{
public:
	class FString                                AssetPath;                                         // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, OutParm, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterGameSession.OnRecreateSessionListenServerDestroy
struct AShooterGameSession_OnRecreateSessionListenServerDestroy_Params
{
public:
	class FName                                  InSessionName;                                     // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWasSuccessful;                                    // 0x8(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4764[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.SetSuperResolutionQualityLevel
struct UShooterGameUserSettings_SetSuperResolutionQualityLevel_Params
{
public:
	int32                                        QualityLevel;                                      // 0x0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.SetEnableReflex
struct UShooterGameUserSettings_SetEnableReflex_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.SetEnableDLSS
struct UShooterGameUserSettings_SetEnableDLSS_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.SetEnableDLFG
struct UShooterGameUserSettings_SetEnableDLFG_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetUserSettings
struct UShooterGameUserSettings_GetUserSettings_Params
{
public:
	class UShooterGameUserSettings*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetSupportedSuperResolutionQualityLevels
struct UShooterGameUserSettings_GetSupportedSuperResolutionQualityLevels_Params
{
public:
	TArray<int32>                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetSuperResolutionQualityLevelName
struct UShooterGameUserSettings_GetSuperResolutionQualityLevelName_Params
{
public:
	int32                                        QualityLevel;                                      // 0x0(0x4)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4766[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetSuperResolutionQualityLevel
struct UShooterGameUserSettings_GetSuperResolutionQualityLevel_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetQualityLevelPostProcessing
struct UShooterGameUserSettings_GetQualityLevelPostProcessing_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetEnableReflex
struct UShooterGameUserSettings_GetEnableReflex_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetEnableDLSS
struct UShooterGameUserSettings_GetEnableDLSS_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetEnableDLFG
struct UShooterGameUserSettings_GetEnableDLFG_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetDLSSSupported
struct UShooterGameUserSettings_GetDLSSSupported_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameUserSettings.GetDLSSModeIndex
struct UShooterGameUserSettings_GetDLSSModeIndex_Params
{
public:
	class FString                                Value;                                             // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	int32                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4767[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.IsAnyUIConsumingInput
struct UShooterGameViewportClient_IsAnyUIConsumingInput_Params
{
public:
	class UClass*                                PrimalUIClass;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerController*              Owner;                                             // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	class UPrimalUI*                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetViewportClient
struct UShooterGameViewportClient_GetViewportClient_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UShooterGameViewportClient*            ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetUIScenesFromClass
struct UShooterGameViewportClient_GetUIScenesFromClass_Params
{
public:
	class UClass*                                PrimalUIClass;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<class UPrimalUI*>                     ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetUISceneFromClass
struct UShooterGameViewportClient_GetUISceneFromClass_Params
{
public:
	class UClass*                                PrimalUIClass;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class ABasePlayerController*                 Owner;                                             // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	class UPrimalUI*                             ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetTopUI
struct UShooterGameViewportClient_GetTopUI_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_477F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalUI*                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetGameWorld
struct UShooterGameViewportClient_GetGameWorld_Params
{
public:
	class UWorld*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.GetAllUIScenesFromClass
struct UShooterGameViewportClient_GetAllUIScenesFromClass_Params
{
public:
	class UClass*                                PrimalUIClass;                                     // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class ABasePlayerController*                 Owner;                                             // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	TArray<class UPrimalUI*>                     ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.CloseAllUIsOnDie
struct UShooterGameViewportClient_CloseAllUIsOnDie_Params
{
public:
	class AShooterPlayerController*              SPC;                                               // 0x0(0x8)(Edit, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4780[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.AnyScenesWithMouseCapture
struct UShooterGameViewportClient_AnyScenesWithMouseCapture_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterGameViewportClient.AnyNonInventoryScenesWithMouseCapture
struct UShooterGameViewportClient_AnyNonInventoryScenesWithMouseCapture_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4781[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterGame_Menu.GetMainMenuOverrideData
struct AShooterGame_Menu_GetMainMenuOverrideData_Params
{
public:
	struct FActiveEventMainMenuOverride          OverrideData;                                      // 0x0(0x20)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4788[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterGame_Menu.GetMainMenuBackgroundTexture
struct AShooterGame_Menu_GetMainMenuBackgroundTexture_Params
{
public:
	class UTexture2D*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterHUD.StartCustomWheelRadialSelector
struct AShooterHUD_StartCustomWheelRadialSelector_Params
{
public:
	struct FCustomWheelSettings                  WheelSettings;                                     // 0x0(0x48)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FCustomWheelEntry>             Entries;                                           // 0x48(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFromGamepad;                                      // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_478A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               ForcedEntryTarget;                                 // 0x60(0x8)(ConstParm, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowMovement;                                     // 0x68(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x69(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_478B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.ShowTeamPingWheel
struct AShooterHUD_ShowTeamPingWheel_Params
{
public:
	bool                                         CanTrack;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.ShowSurvivorProfileUI
struct AShooterHUD_ShowSurvivorProfileUI_Params
{
public:
	class UUI_SurvivorProfile*                   ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.ShowSpawnUI
struct AShooterHUD_ShowSpawnUI_Params
{
public:
	class APrimalStructure*                      FastTravelIgnoreBed;                               // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.ShowPinEntryUI
struct AShooterHUD_ShowPinEntryUI_Params
{
public:
	class AActor*                                ATargetable;                                       // 0x0(0x8)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsSetting;                                        // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_478C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CustomIndex;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.ShowNewMinimap
struct AShooterHUD_ShowNewMinimap_Params
{
public:
	class AShooterPlayerController*              ToSPC;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UPrimalUI*                             ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterHUD.ShowMultiUseUIFor
struct AShooterHUD_ShowMultiUseUIFor_Params
{
public:
	class AActor*                                AnActor;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bFromGamepad;                                      // 0x8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_478D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMultiUseWheelOption                  WheelCategoryEntry;                                // 0x10(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.ShowMissionList
struct AShooterHUD_ShowMissionList_Params
{
public:
	class UObject*                               FromDispatcher;                                    // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, EditConst, InstancedReference, SubobjectReference)
	class UUI_MissionList*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterHUD.ShowMissionAlert
struct AShooterHUD_ShowMissionAlert_Params
{
public:
	enum class EMissionAlertType                 AlertType;                                         // 0x0(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_478E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AlertTitle;                                        // 0x8(0x10)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FMissionAlertEntry>            AlertEntries;                                      // 0x18(0x10)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_478F[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         FlyoutFromTop;                                     // 0x38(0x1)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4790[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.ShowMap
struct AShooterHUD_ShowMap_Params
{
public:
	class UMinimapSubMenuUI*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.ShowInventory
struct AShooterHUD_ShowInventory_Params
{
public:
	class UPrimalInventoryComponent*             InventoryComp;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UUI_Inventory*                         ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.ShowEngramsMenu
struct AShooterHUD_ShowEngramsMenu_Params
{
public:
	bool                                         bInputDelay;                                       // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4791[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UUI_EngramsMenu*                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterHUD.ShowChatBox
struct AShooterHUD_ShowChatBox_Params
{
public:
	bool                                         bShow;                                             // 0x0(0x1)(Edit, ConstParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bIsFromNewChat;                                    // 0x1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.ShowChangeCameraModeUI
struct AShooterHUD_ShowChangeCameraModeUI_Params
{
public:
	class UPrimalUI*                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.ShowBuildingUI
struct AShooterHUD_ShowBuildingUI_Params
{
public:
	class UBuildingUI*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.SetAllowShowChatBox
struct AShooterHUD_SetAllowShowChatBox_Params
{
public:
	bool                                         bAllow;                                            // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterHUD.ReplaceKeyboardControlsTextWithXboxControlIconPaths
struct AShooterHUD_ReplaceKeyboardControlsTextWithXboxControlIconPaths_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        IconOffset;                                        // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4792[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.IsUsingCustomWheelRadialSelector
struct AShooterHUD_IsUsingCustomWheelRadialSelector_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.IsUsingBuildingUI
struct AShooterHUD_IsUsingBuildingUI_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.ShooterHUD.IsMissionAlertVisible
struct AShooterHUD_IsMissionAlertVisible_Params
{
public:
	bool                                         bGetTopAlertVisibility;                            // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.IsChatBoxVisible
struct AShooterHUD_IsChatBoxVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterHUD.HitchDetected
struct AShooterHUD_HitchDetected_Params
{
public:
	struct FSoftObjectPath                       ForAsset;                                          // 0x0(0x20)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	float                                        HitchTime;                                         // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4793[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetSubtitlesWidget
struct AShooterHUD_GetSubtitlesWidget_Params
{
public:
	class UUI_Subtitles*                         ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetShooterPC
struct AShooterHUD_GetShooterPC_Params
{
public:
	class AShooterPlayerController*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterHUD.GetSelectedCustomWheelEntry
struct AShooterHUD_GetSelectedCustomWheelEntry_Params
{
public:
	struct FCustomWheelEntry                     SelectedEntry;                                     // 0x0(0x70)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x70(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4794[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetPlayerOwner
struct AShooterHUD_GetPlayerOwner_Params
{
public:
	class APlayerController*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetOrCreateSpawnMenu
struct AShooterHUD_GetOrCreateSpawnMenu_Params
{
public:
	class UPrimalUI*                             ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetOrCreateActiveHub
struct AShooterHUD_GetOrCreateActiveHub_Params
{
public:
	class UUI_Hub*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetOffLineSmallFont
struct AShooterHUD_GetOffLineSmallFont_Params
{
public:
	class UFont*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetOffLineNormalFont
struct AShooterHUD_GetOffLineNormalFont_Params
{
public:
	class UFont*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetOffLineBigFont
struct AShooterHUD_GetOffLineBigFont_Params
{
public:
	class UFont*                                 ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.ShooterHUD.GetMultiUseRadialSelection
struct AShooterHUD_GetMultiUseRadialSelection_Params
{
public:
	struct FMultiUseEntry                        SelectedEntry;                                     // 0x0(0x78)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeTimedEntries;                              // 0x78(0x1)(Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x79(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4795[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterHUD.GetIconForKey
struct AShooterHUD_GetIconForKey_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterHUD.GetFloatingHUDScreenEdgeFadeAlpha
struct AShooterHUD_GetFloatingHUDScreenEdgeFadeAlpha_Params
{
public:
	struct FVector2D                             ScreenPosition;                                    // 0x0(0x10)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4796[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetCurrentHubUI
struct AShooterHUD_GetCurrentHubUI_Params
{
public:
	class UUI_Hub*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.GetCurrentCrosshairScreenLocation
struct AShooterHUD_GetCurrentCrosshairScreenLocation_Params
{
public:
	struct FVector2D                             ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.GetChatBoxWidget
struct AShooterHUD_GetChatBoxWidget_Params
{
public:
	class UUI_ChatBox*                           ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.ShooterHUD.GetAdditionalExplorerNoteDynamicMaterialParams
struct AShooterHUD_GetAdditionalExplorerNoteDynamicMaterialParams_Params
{
public:
	struct FExplorerNoteEntry                    ExplorerNote;                                      // 0x0(0x110)(Edit, ConstParm, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNameScalarPair>               ScalarMaterialParams;                              // 0x110(0x10)(ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNameColorPair>                ColorMaterialParams;                               // 0x120(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterHUD.FormatTextureAsRichText
struct AShooterHUD_FormatTextureAsRichText_Params
{
public:
	class UTexture2D*                            InTexture;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, InstancedReference, SubobjectReference)
	int32                                        IconOffset;                                        // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4797[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterHUD.FormatRichTextWithKeyBindings
struct AShooterHUD_FormatRichTextWithKeyBindings_Params
{
public:
	class FString                                InText;                                            // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreMarkup;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4798[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterHUD.FormatRichTextWithColor
struct AShooterHUD_FormatRichTextWithColor_Params
{
public:
	class FString                                InText;                                            // 0x0(0x10)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          InColor;                                           // 0x10(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.ForceHUDHidden
struct AShooterHUD_ForceHUDHidden_Params
{
public:
	bool                                         bForcedHidden;                                     // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0xA8 (0xA8 - 0x0)
// Function ShooterGame.ShooterHUD.DrawMultiUseIcon
struct AShooterHUD_DrawMultiUseIcon_Params
{
public:
	struct FVector2D                             Vec;                                               // 0x0(0x10)(BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        Size;                                              // 0x10(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config)
	uint8                                        Pad_4799[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FMultiUseEntry                        Entry;                                             // 0x18(0x78)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            Icon;                                              // 0x90(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, Transient, Config, EditConst)
	class UMaterialInterface*                    MatIcon;                                           // 0x98(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                Color;                                             // 0xA0(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	uint8                                        Pad_479A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterHUD.DrawCrosshairOnScreen
struct AShooterHUD_DrawCrosshairOnScreen_Params
{
public:
	struct FVector2D                             AtScreenLocation;                                  // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WithCrossSpread;                                   // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FColor                                WithDrawColor;                                     // 0x14(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WithAlphaPercent;                                  // 0x18(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        WithScale;                                         // 0x1C(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.CreateOrGetTrackItemUI
struct AShooterHUD_CreateOrGetTrackItemUI_Params
{
public:
	class UTrackingItemUI*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.CloseSpawnMenu
struct AShooterHUD_CloseSpawnMenu_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.CloseActiveHub
struct AShooterHUD_CloseActiveHub_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterHUD.ChatWindowHasFocus
struct AShooterHUD_ChatWindowHasFocus_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlaysByInstigator
struct AShooterHUD_BPUpdateHUDRichTextOverlaysByInstigator_Params
{
public:
	class AActor*                                ByInstigator;                                      // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlayAtIndex
struct AShooterHUD_BPUpdateHUDRichTextOverlayAtIndex_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        Index;                                             // 0x70(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_479B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlay
struct AShooterHUD_BPUpdateHUDRichTextOverlay_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.BPUpdateAllHUDRichTextOverlays
struct AShooterHUD_BPUpdateAllHUDRichTextOverlays_Params
{
public:
	TArray<struct FHUDRichTextOverlayData>       InOverlayData;                                     // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterHUD.BPSimulateHit
struct AShooterHUD_BPSimulateHit_Params
{
public:
	float                                        DamageTaken;                                       // 0x0(0x4)(Edit, ReturnParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_479C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDamageEvent                          DamageEvent;                                       // 0x8(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	class APawn*                                 PawnInstigator;                                    // 0x28(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterHUD.BPShowUIScene
struct AShooterHUD_BPShowUIScene_Params
{
public:
	class UClass*                                UISceneTemplate;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               AssociatedObject1;                                 // 0x8(0x8)(ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               AssociatedObject2;                                 // 0x10(0x8)(BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        ExtraID1;                                          // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ExtraID2;                                          // 0x1C(0x4)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UPrimalUI*                             ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalWidgetAlignment
struct AShooterHUD_BPSetHUDRichTextOverlayVerticalWidgetAlignment_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EVerticalAlignment                InAlignV;                                          // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_479D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_479E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalScreenAnchor
struct AShooterHUD_BPSetHUDRichTextOverlayVerticalScreenAnchor_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EVerticalAlignment                InAnchorV;                                         // 0x70(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_479F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayUseAutoWrap
struct AShooterHUD_BPSetHUDRichTextOverlayUseAutoWrap_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         InAutoWrap;                                        // 0x70(0x1)(Edit, ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A1[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayScale
struct AShooterHUD_BPSetHUDRichTextOverlayScale_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        InScale;                                           // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47A3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayPosition
struct AShooterHUD_BPSetHUDRichTextOverlayPosition_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             InPosition;                                        // 0x70(0x10)(Parm, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x80(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xF0(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayInstigator
struct AShooterHUD_BPSetHUDRichTextOverlayInstigator_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InInstigator;                                      // 0x70(0x8)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalWidgetAlignment
struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalWidgetAlignment_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EHorizontalAlignment              InAlignH;                                          // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF0 (0xF0 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalScreenAnchor
struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalScreenAnchor_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	enum class EHorizontalAlignment              InAnchorH;                                         // 0x70(0x1)(Edit, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47A9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x78(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xE8(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDisplayText
struct AShooterHUD_BPSetHUDRichTextOverlayDisplayText_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                InString;                                          // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x80(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xF0(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDefaultTextColor
struct AShooterHUD_BPSetHUDRichTextOverlayDefaultTextColor_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          InColor;                                           // 0x70(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	struct FHUDRichTextOverlayData               OutOverlay;                                        // 0x80(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUpdateAfterSetting;                               // 0xF0(0x1)(BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlaysByInstigator
struct AShooterHUD_BPRemoveHUDRichTextOverlaysByInstigator_Params
{
public:
	class AActor*                                ByInstigator;                                      // 0x0(0x8)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlayAtIndex
struct AShooterHUD_BPRemoveHUDRichTextOverlayAtIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlay
struct AShooterHUD_BPRemoveHUDRichTextOverlay_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterHUD.BPGetHUDRichTextOverlays
struct AShooterHUD_BPGetHUDRichTextOverlays_Params
{
public:
	TArray<struct FHUDRichTextOverlayData>       ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.BPDrawUIHUD
struct AShooterHUD_BPDrawUIHUD_Params
{
public:
	class UCanvas*                               TheCanvas;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterHUD.BPDrawHUD
struct AShooterHUD_BPDrawHUD_Params
{
public:
	class UCanvas*                               TheCanvas;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterHUD.BPCustomAddHUDNotification
struct AShooterHUD_BPCustomAddHUDNotification_Params
{
public:
	class FString                                NotificationString;                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FColor                                NotificationColor;                                 // 0x10(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47AD[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    NotificationMaterial;                              // 0x18(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            NotificationTexture;                               // 0x20(0x8)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DisplayScale;                                      // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSingleton;                                      // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_47AE[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MessageTypeID;                                     // 0x34(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Priority;                                          // 0x38(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x3C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47AF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlayAtIndex
struct AShooterHUD_BPAddHUDRichTextOverlayAtIndex_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        InsertAtIndex;                                     // 0x70(0x4)(Edit, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlay
struct AShooterHUD_BPAddHUDRichTextOverlay_Params
{
public:
	struct FHUDRichTextOverlayData               InOverlay;                                         // 0x0(0x70)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.ShooterHUD.BPAddHUDNotification
struct AShooterHUD_BPAddHUDNotification_Params
{
public:
	class FString                                NotificationString;                                // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FColor                                NotificationColor;                                 // 0x10(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47B1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    NotificationMaterial;                              // 0x18(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UTexture2D*                            NotificationTexture;                               // 0x20(0x8)(Edit, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        DisplayTime;                                       // 0x28(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DisplayScale;                                      // 0x2C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsSingleton;                                      // 0x30(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_47B2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            SoundToPlay;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	int32                                        MessageTypeID;                                     // 0x40(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ItemMsgType;                                       // 0x44(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UClass*                                ItemClass;                                         // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ItemName;                                          // 0x50(0x10)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ItemQuantity;                                      // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	float                                        ItemQuantityFloat;                                 // 0x64(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        Priority;                                          // 0x68(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_47B3[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.ShooterImpactEffect.StaticSpawnImpactEffects
struct AShooterImpactEffect_StaticSpawnImpactEffects_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                ImpactEffectClass;                                 // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FHitResult                            SurfaceHit;                                        // 0x10(0xF0)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShotDirection;                                     // 0x100(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         UseShotDirectionForImpactEffectActorClassRotation; // 0x118(0x1)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         AttachImpactEffectActorToSurfaceHitActor;          // 0x119(0x1)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47C8[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              ReturnValue;                                       // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.UpdateCameraState
struct AShooterPlayerCameraManager_UpdateCameraState_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.StartCameraTransition
struct AShooterPlayerCameraManager_StartCameraTransition_Params
{
public:
	float                                        TransitionDuration;                                // 0x0(0x4)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseFinalModifiedViewTarget;                       // 0x4(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowSpectorPawn;                                 // 0x5(0x1)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47D0[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.ShouldUseSlowInterpToOldCamera
struct AShooterPlayerCameraManager_ShouldUseSlowInterpToOldCamera_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47D1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.ShouldUseASACamera
struct AShooterPlayerCameraManager_ShouldUseASACamera_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckShouldSwitchToOldCamera;                     // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47D2[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.SetLastTargetLocationLoc
struct AShooterPlayerCameraManager_SetLastTargetLocationLoc_Params
{
public:
	struct FVector                               NewTargetLocationLoc;                              // 0x0(0x18)(Edit, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.PrimalCameraQuaternionSpringInterp
struct AShooterPlayerCameraManager_PrimalCameraQuaternionSpringInterp_Params
{
public:
	struct FQuat                                 Current;                                           // 0x0(0x20)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	struct FQuat                                 Target;                                            // 0x20(0x20)(Edit, ConstParm, ReturnParm, Transient, Config)
	struct FQuaternionSpringState                SpringState;                                       // 0x40(0x40)(ExportObject, Net, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Stiffness;                                         // 0x80(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        CriticalDampingFactor;                             // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x88(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        Mass;                                              // 0x8C(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        TargetVelocityAmount;                              // 0x90(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bInitializeFromTarget;                             // 0x94(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47D3[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	struct FQuat                                 ReturnValue;                                       // 0xA0(0x20)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x3C (0x3C - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.PrimalCameraFloatSpringInterp
struct AShooterPlayerCameraManager_PrimalCameraFloatSpringInterp_Params
{
public:
	float                                        Current;                                           // 0x0(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        Target;                                            // 0x4(0x4)(Edit, ConstParm, ReturnParm, Transient, Config)
	struct FFloatSpringState                     SpringState;                                       // 0x8(0xC)(ExportObject, Net, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Stiffness;                                         // 0x14(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	float                                        CriticalDampingFactor;                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x1C(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        Mass;                                              // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	float                                        TargetVelocityAmount;                              // 0x24(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bClamp;                                            // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47D4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MinValue;                                          // 0x2C(0x4)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        MaxValue;                                          // 0x30(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bInitializeFromTarget;                             // 0x34(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.OnCameraStateChanged
struct AShooterPlayerCameraManager_OnCameraStateChanged_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	enum class EPrimalCameraState                PreviousState;                                     // 0x8(0x1)(BlueprintVisible, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47D6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.IsInFrustum
struct AShooterPlayerCameraManager_IsInFrustum_Params
{
public:
	struct FVector                               BoxLocation;                                       // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtents;                                        // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47D7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.IsFirstPerson
struct AShooterPlayerCameraManager_IsFirstPerson_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.HandleTurn
struct AShooterPlayerCameraManager_HandleTurn_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47D8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.HandleLook
struct AShooterPlayerCameraManager_HandleLook_Params
{
public:
	float                                        Val;                                               // 0x0(0x4)(BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47D9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetTPVCollisionHeight
struct AShooterPlayerCameraManager_GetTPVCollisionHeight_Params
{
public:
	class AActor*                                ForTarget;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIncludeHeightScalar;                              // 0x8(0x1)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetPrimalCameraState
struct AShooterPlayerCameraManager_GetPrimalCameraState_Params
{
public:
	enum class EPrimalCameraState                ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetPrimalCameraCurrentPivotLocationOffset
struct AShooterPlayerCameraManager_GetPrimalCameraCurrentPivotLocationOffset_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckShouldSwitchToOldCamera;                     // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetPrimalCameraCurrentPivotLocation
struct AShooterPlayerCameraManager_GetPrimalCameraCurrentPivotLocation_Params
{
public:
	class APrimalCharacter*                      ForChar;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckShouldSwitchToOldCamera;                     // 0x8(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetColorCodedStencil
struct AShooterPlayerCameraManager_GetColorCodedStencil_Params
{
public:
	enum class EStencilAlliance                  InAlliance;                                        // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_47DD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        HealthPercent;                                     // 0x4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47DE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetCameraStyle
struct AShooterPlayerCameraManager_GetCameraStyle_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetCameraAimViewPoint
struct AShooterPlayerCameraManager_GetCameraAimViewPoint_Params
{
public:
	struct FVector                               OutCamLoc;                                         // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OutCamRot;                                         // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetCahcedCameraStyle
struct AShooterPlayerCameraManager_GetCahcedCameraStyle_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.GetBlendableFromMIC
struct AShooterPlayerCameraManager_GetBlendableFromMIC_Params
{
public:
	class UMaterialInterface*                    InInterface;                                       // 0x0(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.CameraGetRotationForPawnMovementInput
struct AShooterPlayerCameraManager_CameraGetRotationForPawnMovementInput_Params
{
public:
	class APrimalCharacter*                      ForPawn;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FRotator                              InControlRotation;                                 // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8A0 (0x8A0 - 0x0)
// Function ShooterGame.ShooterPlayerCameraManager.BPUpdateViewTarget
struct AShooterPlayerCameraManager_BPUpdateViewTarget_Params
{
public:
	struct FTViewTarget                          OutVT;                                             // 0x0(0x890)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DeltaTime;                                         // 0x890(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x894(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47DF[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerUnlockEngram
struct AShooterPlayerState_ServerUnlockEngram_Params
{
public:
	class UClass*                                ForItemEntry;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bNotifyPlayerHUD;                                  // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUnlock;                                      // 0x9(0x1)(ConstParm, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E7[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerTribeRequestRemoveRankGroup
struct AShooterPlayerState_ServerTribeRequestRemoveRankGroup_Params
{
public:
	int32                                        RankGroupIndex;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerTribeRequestNewRallyPoint
struct AShooterPlayerState_ServerTribeRequestNewRallyPoint_Params
{
public:
	struct FTeamPingData                         RallyPointData;                                    // 0x0(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerTribeRequestNewAlliance
struct AShooterPlayerState_ServerTribeRequestNewAlliance_Params
{
public:
	class FString                                AllianceName;                                      // 0x0(0x10)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerTribeRequestApplyRankGroupSettings
struct AShooterPlayerState_ServerTribeRequestApplyRankGroupSettings_Params
{
public:
	int32                                        RankGroupIndex;                                    // 0x0(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47E8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTribeRankGroup                       NewGroupSettings;                                  // 0x8(0x28)(Edit, ExportObject, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerTribeRequestAddRankGroup
struct AShooterPlayerState_ServerTribeRequestAddRankGroup_Params
{
public:
	class FString                                GroupName;                                         // 0x0(0x10)(ExportObject, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerSetSelectedDinoOrderGroup
struct AShooterPlayerState_ServerSetSelectedDinoOrderGroup_Params
{
public:
	int32                                        NewGroup;                                          // 0x0(0x4)(BlueprintVisible, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerSetDinoGroupName
struct AShooterPlayerState_ServerSetDinoGroupName_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47E9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                GroupName;                                         // 0x8(0x10)(ExportObject, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerSetDefaultItemSlotClass
struct AShooterPlayerState_ServerSetDefaultItemSlotClass_Params
{
public:
	int32                                        SlotNum;                                           // 0x0(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ItemClass;                                         // 0x8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsEngram;                                         // 0x10(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47EB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestTransferOwnershipInMyTribe
struct AShooterPlayerState_ServerRequestTransferOwnershipInMyTribe_Params
{
public:
	int32                                        PlayerIndexInTribe;                                // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestSpawnPointsForDownloadedCharacters
struct AShooterPlayerState_ServerRequestSpawnPointsForDownloadedCharacters_Params
{
public:
	uint64                                       PlayerDataID;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, Config, GlobalConfig, SubobjectReference)
	int32                                        IgnoreBedID;                                       // 0x8(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeMemberGroupRank
struct AShooterPlayerState_ServerRequestSetTribeMemberGroupRank_Params
{
public:
	int32                                        PlayerIndexInTribe;                                // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        RankGroupIndex;                                    // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeGovernment
struct AShooterPlayerState_ServerRequestSetTribeGovernment_Params
{
public:
	struct FTribeGovernment                      TribeGovernment;                                   // 0x0(0x14)(Edit, BlueprintReadOnly, Parm, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestRenameTribe
struct AShooterPlayerState_ServerRequestRenameTribe_Params
{
public:
	class FString                                ServerRequestRenameTribe;                          // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestRemovePlayerIndexFromMyTribe
struct AShooterPlayerState_ServerRequestRemovePlayerIndexFromMyTribe_Params
{
public:
	int32                                        PlayerIndexInTribe;                                // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestRemoveAllianceMember
struct AShooterPlayerState_ServerRequestRemoveAllianceMember_Params
{
public:
	uint32                                       AllianceID;                                        // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       MemberID;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestPromotePlayerInMyTribe
struct AShooterPlayerState_ServerRequestPromotePlayerInMyTribe_Params
{
public:
	int32                                        PlayerIndexInTribe;                                // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestPromoteAllianceMember
struct AShooterPlayerState_ServerRequestPromoteAllianceMember_Params
{
public:
	uint32                                       AllianceID;                                        // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint32                                       MemberID;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestMySpawnPoints
struct AShooterPlayerState_ServerRequestMySpawnPoints_Params
{
public:
	int32                                        IgnoreBedID;                                       // 0x0(0x4)(BlueprintReadOnly, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47ED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                FilterClass;                                       // 0x8(0x8)(BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestLeaveAlliance
struct AShooterPlayerState_ServerRequestLeaveAlliance_Params
{
public:
	uint32                                       AllianceID;                                        // 0x0(0x4)(BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestDemotePlayerInMyTribe
struct AShooterPlayerState_ServerRequestDemotePlayerInMyTribe_Params
{
public:
	int32                                        PlayerIndexInTribe;                                // 0x0(0x4)(ConstParm, BlueprintVisible, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewTribe
struct AShooterPlayerState_ServerRequestCreateNewTribe_Params
{
public:
	class FString                                TribeName;                                         // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FTribeGovernment                      TribeGovernment;                                   // 0x10(0x14)(Edit, BlueprintReadOnly, Parm, Config)
	uint8                                        Pad_47EE[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewPlayer
struct AShooterPlayerState_ServerRequestCreateNewPlayer_Params
{
public:
	struct FPrimalPlayerCharacterConfigStructReplicated PlayerCharacterConfig;                             // 0x0(0x110)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRequestApplyEngramPoints
struct AShooterPlayerState_ServerRequestApplyEngramPoints_Params
{
public:
	class UClass*                                ForItemEntry;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerRejectTribeWar
struct AShooterPlayerState_ServerRejectTribeWar_Params
{
public:
	int32                                        EnemyTeamID;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_RemoveEntryByIndex
struct AShooterPlayerState_ServerDinoOrderGroup_RemoveEntryByIndex_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bIsClass;                                          // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47EF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        EntryIndex;                                        // 0x8(0x4)(ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_Clear
struct AShooterPlayerState_ServerDinoOrderGroup_Clear_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bClearClasses;                                     // 0x4(0x1)(Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClearChars;                                       // 0x5(0x1)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F0[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoClass
struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoClass_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoClass;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAdd;                                              // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoCharacter
struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoCharacter_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47F3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  DinoCharacter;                                     // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAdd;                                              // 0x10(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerDeclareTribeWar
struct AShooterPlayerState_ServerDeclareTribeWar_Params
{
public:
	int32                                        EnemyTeamID;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StartDayNum;                                       // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        EndDayNumber;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        WarStartTime;                                      // 0xC(0x4)(ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WarEndTime;                                        // 0x10(0x4)(ConstParm, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.ServerAcceptTribeWar
struct AShooterPlayerState_ServerAcceptTribeWar_Params
{
public:
	int32                                        EnemyTeamID;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1A8 (0x1A8 - 0x0)
// Function ShooterGame.ShooterPlayerState.SendTribeInviteData
struct AShooterPlayerState_SendTribeInviteData_Params
{
public:
	struct FTribeData                            TribeInviteData;                                   // 0x0(0x1A8)(ConstParm, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloaded
struct AShooterPlayerState_NotifyUniqueDinoDownloaded_Params
{
public:
	class FString                                TheDinoName;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloadAllowed
struct AShooterPlayerState_NotifyUniqueDinoDownloadAllowed_Params
{
public:
	class FString                                TheDinoName;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyTribememberLeft
struct AShooterPlayerState_NotifyTribememberLeft_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyTribememberJoined
struct AShooterPlayerState_NotifyTribememberJoined_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyPlayerLeftTribe
struct AShooterPlayerState_NotifyPlayerLeftTribe_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TribeName;                                         // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         Joinee;                                            // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyPlayerLeft
struct AShooterPlayerState_NotifyPlayerLeft_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyPlayerJoinedTribe
struct AShooterPlayerState_NotifyPlayerJoinedTribe_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                TribeName;                                         // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         Joinee;                                            // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47F6[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.NotifyPlayerJoined
struct AShooterPlayerState_NotifyPlayerJoined_Params
{
public:
	class FString                                ThePlayerName;                                     // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsTribeAdmin
struct AShooterPlayerState_IsTribeAdmin_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsInTribe
struct AShooterPlayerState_IsInTribe_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsFriendly
struct AShooterPlayerState_IsFriendly_Params
{
public:
	int32                                        OtherTeam;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47F7[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsDinoInOrderGroup
struct AShooterPlayerState_IsDinoInOrderGroup_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  DinoChar;                                          // 0x8(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47F9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsDinoClassInOrderGroup
struct AShooterPlayerState_IsDinoClassInOrderGroup_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_47FA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                DinoClass;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterPlayerState.IsAlliedWith
struct AShooterPlayerState_IsAlliedWith_Params
{
public:
	int32                                        OtherTeam;                                         // 0x0(0x4)(Edit, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47FC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.HasEngram
struct AShooterPlayerState_HasEngram_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_47FD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.GetUniqueNetIdAsString
struct AShooterPlayerState_GetUniqueNetIdAsString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.GetUniqueIdString
struct AShooterPlayerState_GetUniqueIdString_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.GetTribeId
struct AShooterPlayerState_GetTribeId_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterPlayerState.GetHexCostToPurchaseNextEngramPoint
struct AShooterPlayerState_GetHexCostToPurchaseNextEngramPoint_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.GetDefaultItemSlotClasses
struct AShooterPlayerState_GetDefaultItemSlotClasses_Params
{
public:
	TArray<class UClass*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.DoRespec
struct AShooterPlayerState_DoRespec_Params
{
public:
	class UPrimalPlayerData*                     ForPlayerData;                                     // 0x0(0x8)(Edit, BlueprintReadOnly, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterCharacter*                     ForCharacte;                                       // 0x8(0x8)(ConstParm, ExportObject, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSetRespecedAtCharacterLevel;                      // 0x10(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientUpdateNewRallyPoint
struct AShooterPlayerState_ClientUpdateNewRallyPoint_Params
{
public:
	bool                                         DestroyRallyPoint;                                 // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_47FF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTeamPingData                         RallyPointData;                                    // 0x8(0x50)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientRefreshDinoOrderGroup
struct AShooterPlayerState_ClientRefreshDinoOrderGroup_Params
{
public:
	int32                                        GroupIndex;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4800[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDinoOrderGroup                       GroupData;                                         // 0x8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        UseCurrentlySelectedGroup;                         // 0x38(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4801[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientReceiveSpawnPoints
struct AShooterPlayerState_ClientReceiveSpawnPoints_Params
{
public:
	TArray<struct FSpawnPointInfo>               SpawnPointsInfos;                                  // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x2A0 (0x2A0 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetServerOptions
struct AShooterPlayerState_ClientGetServerOptions_Params
{
public:
	struct FServerOptions                        Info;                                              // 0x0(0x2A0)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ReturnParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetPlayerWhiteListedData
struct AShooterPlayerState_ClientGetPlayerWhiteListedData_Params
{
public:
	TArray<struct FAdminPlayerDataInfo>          List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetPlayerConnectedData
struct AShooterPlayerState_ClientGetPlayerConnectedData_Params
{
public:
	TArray<struct FAdminPlayerDataInfo>          List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetPlayerBannedData
struct AShooterPlayerState_ClientGetPlayerBannedData_Params
{
public:
	TArray<struct FAdminPlayerDataInfo>          List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetPlayerAdministratorData
struct AShooterPlayerState_ClientGetPlayerAdministratorData_Params
{
public:
	TArray<struct FAdminPlayerDataInfo>          List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetAllPlayerNamesAndLocations
struct AShooterPlayerState_ClientGetAllPlayerNamesAndLocations_Params
{
public:
	TArray<struct FAliveNameAndLocation>         List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClientGetAlivePlayerConnectedData
struct AShooterPlayerState_ClientGetAlivePlayerConnectedData_Params
{
public:
	TArray<struct FAlivePlayerDataInfo>          List;                                              // 0x0(0x10)(ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.ClearTribe
struct AShooterPlayerState_ClearTribe_Params
{
public:
	bool                                         bDontRemoveFromTribe;                              // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x1(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	uint8                                        Pad_4802[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     ForPC;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.BroadcastDeath
struct AShooterPlayerState_BroadcastDeath_Params
{
public:
	class AShooterPlayerState*                   KillerPlayerState;                                 // 0x0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UDamageType*                           KillerDamageType;                                  // 0x8(0x8)(EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterPlayerState*                   KilledPlayerState;                                 // 0x10(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterPlayerState.AllowTribeGroupPermission
struct AShooterPlayerState_AllowTribeGroupPermission_Params
{
public:
	enum class ETribeGroupPermission             TribeGroupPermission;                              // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4803[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               OnObject;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4804[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterPlayerState.AllowDinoOrderByGroup
struct AShooterPlayerState_AllowDinoOrderByGroup_Params
{
public:
	class APrimalDinoCharacter*                  OrderDino;                                         // 0x0(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4805[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.ShooterPlayerState.AddToTribe
struct AShooterPlayerState_AddToTribe_Params
{
public:
	struct FTribeData                            MyNewTribe;                                        // 0x0(0x1A8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bMergeTribe;                                       // 0x1A8(0x1)(Edit, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForce;                                            // 0x1A9(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bIsFromInvite;                                     // 0x1AA(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_4806[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class APlayerController*                     InviterPC;                                         // 0x1B0(0x8)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4807[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.TimeSinceProjectileSpawn
struct AShooterProjectile_Swarm_TimeSinceProjectileSpawn_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.MultiSyncSwarm
struct AShooterProjectile_Swarm_MultiSyncSwarm_Params
{
public:
	TArray<struct FBoid>                         ServerSwarmData;                                   // 0x0(0x10)(Edit, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.MultiPrimaryProjectileDestroyed
struct AShooterProjectile_Swarm_MultiPrimaryProjectileDestroyed_Params
{
public:
	struct FVector                               ImpactLocation;                                    // 0x0(0x18)(BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	double                                       DestroyNetworkTime;                                // 0x18(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.GetNumberOfBoidsInFlight
struct AShooterProjectile_Swarm_GetNumberOfBoidsInFlight_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.BPOnBoidExplode
struct AShooterProjectile_Swarm_BPOnBoidExplode_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4810[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UParticleSystemComponent*              BoidParticles;                                     // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FHitResult                            Hit;                                               // 0x10(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0xD0 (0xD0 - 0x0)
// Function ShooterGame.ShooterProjectile_Swarm.BPGetBoidSpawnLocationAndVelocity
struct AShooterProjectile_Swarm_BPGetBoidSpawnLocationAndVelocity_Params
{
public:
	int32                                        BoidIndex;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4811[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FBoid                                 BoidData;                                          // 0x8(0x98)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0xA0(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               SpawnVelocity;                                     // 0xB8(0x18)(ConstParm, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterSpectatorPawn.SetSavedSpectatorPositionForIndex
struct AShooterSpectatorPawn_SetSavedSpectatorPositionForIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_4820[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Position;                                          // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FRotator                              Rotation;                                          // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterSpectatorPawn.SaveSpectatorPositionForIndex
struct AShooterSpectatorPawn_SaveSpectatorPositionForIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterSpectatorPawn.LoadSpectatorPositionFromIndex
struct AShooterSpectatorPawn_LoadSpectatorPositionFromIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterSpectatorPawn.GetSavedSpectatorPositions
struct AShooterSpectatorPawn_GetSavedSpectatorPositions_Params
{
public:
	TArray<struct FVector>                       Positions;                                         // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	TArray<struct FRotator>                      Rotations;                                         // 0x10(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterSpectatorPawn.BPOrbitCamOn
struct AShooterSpectatorPawn_BPOrbitCamOn_Params
{
public:
	class AActor*                                OrbitTarget;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon_FlameThrower.ClientSpawnHarvestFX
struct AShooterWeapon_FlameThrower_ClientSpawnHarvestFX_Params
{
public:
	TArray<struct FVector>                       Impacts;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.ShooterWeapon_FlameThrower.BPSpawnHarvestEffects
struct AShooterWeapon_FlameThrower_BPSpawnHarvestEffects_Params
{
public:
	TArray<struct FVector>                       Impacts;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.ServerPreFire
struct AShooterWeapon_Activated_ServerPreFire_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.ServerActivateWeapon
struct AShooterWeapon_Activated_ServerActivateWeapon_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_482C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NAnimIndex;                                        // 0x4(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.IsActivationAnimPlaying
struct AShooterWeapon_Activated_IsActivationAnimPlaying_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.HandleActivation
struct AShooterWeapon_Activated_HandleActivation_Params
{
public:
	bool                                         bActive;                                           // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.GetBeamTarget
struct AShooterWeapon_Activated_GetBeamTarget_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.ClientHandleActivation
struct AShooterWeapon_Activated_ClientHandleActivation_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.ClientActivateWeapon
struct AShooterWeapon_Activated_ClientActivateWeapon_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.BPPreFireEvent
struct AShooterWeapon_Activated_BPPreFireEvent_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon_Activated.ActivateWeapon
struct AShooterWeapon_Activated_ActivateWeapon_Params
{
public:
	bool                                         bActivate;                                         // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_482D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NAnimIndex;                                        // 0x4(0x4)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ShouldShowTargetingArray
struct AShooterWeapon_Climb_ShouldShowTargetingArray_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.SetClimbingAnchorPoint
struct AShooterWeapon_Climb_SetClimbingAnchorPoint_Params
{
public:
	uint8                                        Type;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Mode;                                              // 0x1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4833[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantize100                Direction;                                         // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantize100                Position;                                          // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	struct FVector_NetQuantizeNormal             Normal;                                            // 0x38(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ServerSetClimbingLeftArm
struct AShooterWeapon_Climb_ServerSetClimbingLeftArm_Params
{
public:
	bool                                         ClimbingLeftArm;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ServerRequestClimbMove
struct AShooterWeapon_Climb_ServerRequestClimbMove_Params
{
public:
	uint8                                        Type;                                              // 0x0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_4834[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Direction;                                         // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ClimbingLeftArm;                                   // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4835[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ServerReleaseClimbingAnchor
struct AShooterWeapon_Climb_ServerReleaseClimbingAnchor_Params
{
public:
	bool                                         bWithJump;                                         // 0x0(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4836[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector_NetQuantizeNormal             InputDir;                                          // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceMinTimeCheckBeforeReleasing;                 // 0x20(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4837[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ServerPerformTurn
struct AShooterWeapon_Climb_ServerPerformTurn_Params
{
public:
	bool                                         ClimbingLeftArm;                                   // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ReleaseClimbingAnchor
struct AShooterWeapon_Climb_ReleaseClimbingAnchor_Params
{
public:
	bool                                         bWithJump;                                         // 0x0(0x1)(Edit, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4838[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               InputDir;                                          // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceMinTimeCheckBeforeReleasing;                 // 0x20(0x1)(ConstParm, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4839[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.IsClimbingUp
struct AShooterWeapon_Climb_IsClimbingUp_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.IsClimbingHanging
struct AShooterWeapon_Climb_IsClimbingHanging_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.GetViewLocation
struct AShooterWeapon_Climb_GetViewLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.GetViewDirection
struct AShooterWeapon_Climb_GetViewDirection_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x118 (0x118 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.ClimbTrace
struct AShooterWeapon_Climb_ClimbTrace_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	uint8                                        Type;                                              // 0xF0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Transient, Config)
	uint8                                        Pad_483A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Direction;                                         // 0xF8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x110(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x111(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_483B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.CanLandOnSurface
struct AShooterWeapon_Climb_CanLandOnSurface_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_483C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xF8 (0xF8 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.CanClimbOnSurface
struct AShooterWeapon_Climb_CanClimbOnSurface_Params
{
public:
	struct FHitResult                            HitResult;                                         // 0x0(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	bool                                         ReturnValue;                                       // 0xF0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_483D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.ShooterWeapon_Climb.BPUpdateClimbTarget
struct AShooterWeapon_Climb_BPUpdateClimbTarget_Params
{
public:
	float                                        DeltaSeconds;                                      // 0x0(0x4)(ConstParm, Net, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	bool                                         bClimbing;                                         // 0x4(0x1)(BlueprintVisible, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               AnchorPosition;                                    // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AnchorNormal;                                      // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanClimb;                                         // 0x38(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCanLand;                                          // 0x39(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_483F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ClimbLocation;                                     // 0x40(0x18)(ConstParm, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ClimbNormal;                                       // 0x58(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHudVisible;                                       // 0x70(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4840[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.SimulateInstantHit
struct AShooterWeapon_Instant_SimulateInstantHit_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector_NetQuantizeNormal             ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bForceOnLocal;                                     // 0x30(0x1)(Edit, ConstParm, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4849[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ShotIndex;                                         // 0x34(0x4)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShotOrigin
struct AShooterWeapon_Instant_ServerNotifyShotOrigin_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	TArray<struct FHitResult>                    Impacts;                                           // 0x18(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector_NetQuantizeNormal>     ShootDirs;                                         // 0x28(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShot
struct AShooterWeapon_Instant_ServerNotifyShot_Params
{
public:
	TArray<struct FHitResult>                    Impacts;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector_NetQuantizeNormal>     ShootDirs;                                         // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x120 (0x120 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.ServerForceShot
struct AShooterWeapon_Instant_ServerForceShot_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               StartShotLoc;                                      // 0xF0(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               EndShotLoc;                                        // 0x108(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.NetSimulateForceShot
struct AShooterWeapon_Instant_NetSimulateForceShot_Params
{
public:
	struct FVector                               ShotOrigin;                                        // 0x0(0x18)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.GetFireLocationAndDirection
struct AShooterWeapon_Instant_GetFireLocationAndDirection_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Direction;                                         // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.GetCurrentSpread
struct AShooterWeapon_Instant_GetCurrentSpread_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x110 (0x110 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.BPSpawnImpactEffects
struct AShooterWeapon_Instant_BPSpawnImpactEffects_Params
{
public:
	struct FHitResult                            Impact;                                            // 0x0(0xF0)(ConstParm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0xF0(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bIsEntryHit;                                       // 0x108(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_484A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        WeaponMaxRange;                                    // 0x10C(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.BPPostSpawnTrailEffect
struct AShooterWeapon_Instant_BPPostSpawnTrailEffect_Params
{
public:
	class UParticleSystemComponent*              TrailPSC;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               StartPoint;                                        // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	struct FVector                               EndPoint;                                          // 0x20(0x18)(ConstParm, ExportObject, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.ShooterWeapon_Instant.BPGetCurrentSpread
struct AShooterWeapon_Instant_BPGetCurrentSpread_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon_InstantCharging.ServerSetCharging
struct AShooterWeapon_InstantCharging_ServerSetCharging_Params
{
public:
	double                                       StartTime;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.ShooterWeapon_InstantPenetrating.WeaponPenetrationTrace
struct AShooterWeapon_InstantPenetrating_WeaponPenetrationTrace_Params
{
public:
	struct FVector                               Start;                                             // 0x0(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	bool                                         FilterVisuals;                                     // 0x30(0x1)(ConstParm, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x31(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_4850[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x34(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FHitResult>                    HitResults;                                        // 0x38(0x10)(BlueprintVisible, ExportObject, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<bool>                                 IsEntryHit;                                        // 0x48(0x10)(ConstParm, BlueprintVisible, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDistance;                                       // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_4851[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.ShooterWeapon_InstantPenetrating.PassiveUseAmmo
struct AShooterWeapon_InstantPenetrating_PassiveUseAmmo_Params
{
public:
	int32                                        Amount;                                            // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x100 (0x100 - 0x0)
// Function ShooterGame.ShooterWeapon_InstantPenetrating.BPStopPenetratingAtHit
struct AShooterWeapon_InstantPenetrating_BPStopPenetratingAtHit_Params
{
public:
	struct FHitResult                            CurrentHit;                                        // 0x0(0xF0)(OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsEntryHit;                                       // 0xF0(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4852[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CurrentDistance;                                   // 0xF4(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CurrentMaxDistance;                                // 0xF8(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xFC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4853[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.ShooterWeapon_Placer.GetPlacementOrigin
struct AShooterWeapon_Placer_GetPlacementOrigin_Params
{
public:
	struct FVector                               OriginLocation;                                    // 0x0(0x18)(ConstParm, BlueprintVisible, EditFixedSize, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              OriginRotation;                                    // 0x18(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.ShooterWeapon_Placer.BPSecondaryAction
struct AShooterWeapon_Placer_BPSecondaryAction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HideActorList.HandleHideActorsList
struct AHideActorList_HandleHideActorsList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.HideActorList.GetDomeTag
struct AHideActorList_GetDomeTag_Params
{
public:
	class FName                                  ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.HideActorList.GetDomeState
struct AHideActorList_GetDomeState_Params
{
public:
	enum class EDomeState                        ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.SkyBoxLoader.SetSkyTextureIndices
struct ASkyBoxLoader_SetSkyTextureIndices_Params
{
public:
	int32                                        Texture0;                                          // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Texture1;                                          // 0x4(0x4)(ExportObject, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4860[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndexArray
struct ASkyBoxLoader_LoadSkyTextureIndexArray_Params
{
public:
	TArray<int32>                                TextureInices;                                     // 0x0(0x10)(ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4861[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndex
struct ASkyBoxLoader_LoadSkyTextureIndex_Params
{
public:
	int32                                        TextureIdx;                                        // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4862[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.SkyBoxLoader.K2_OnTextureIndicesLoaded
struct ASkyBoxLoader_K2_OnTextureIndicesLoaded_Params
{
public:
	TArray<int32>                                TextureIndices;                                    // 0x0(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.SOTFNotification.ComputeHeadHairMorphTargetValue
struct ASOTFNotification_ComputeHeadHairMorphTargetValue_Params
{
public:
	bool                                         bFemale;                                           // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        HairIndex;                                         // 0x1(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4864[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PercentOfGrowth;                                   // 0x4(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.SOTFNotification.ComputeFacialHairMorphTargetValue
struct ASOTFNotification_ComputeFacialHairMorphTargetValue_Params
{
public:
	bool                                         bFemale;                                           // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        HairIndex;                                         // 0x1(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4865[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PercentOfGrowth;                                   // 0x4(0x4)(Edit, ConstParm, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.SOTFNotification.ColorBG
struct ASOTFNotification_ColorBG_Params
{
public:
	struct FLinearColor                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.StatsPanelWidget_Character.SwitchTabStatsBuff
struct UStatsPanelWidget_Character_SwitchTabStatsBuff_Params
{
public:
	bool                                         bShowStats;                                        // 0x0(0x1)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.StatsPanelWidget_Character.OnSwitchTabStatsBuffBP
struct UStatsPanelWidget_Character_OnSwitchTabStatsBuffBP_Params
{
public:
	bool                                         bShowingStats;                                     // 0x0(0x1)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.StatWidget.ClickedButton
struct UStatWidget_ClickedButton_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.StructurePaintingComponent.SaveLocalPainting
struct UStructurePaintingComponent_SaveLocalPainting_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	class FString                                PaintingClass;                                     // 0x10(0x10)(BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         OverrideExisting;                                  // 0x20(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x21(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4883[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.StructurePaintingComponent.OnRep_PaintingId
struct UStructurePaintingComponent_OnRep_PaintingId_Params
{
public:
	int32                                        PrevUniquePaintingId;                              // 0x0(0x4)(Edit, ConstParm, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.StructurePaintingComponent.HasPaintingTexture
struct UStructurePaintingComponent_HasPaintingTexture_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.StructurePaintingComponent.ClientPaint
struct UStructurePaintingComponent_ClientPaint_Params
{
public:
	class AShooterPlayerController*              Painter;                                           // 0x0(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FPaintItem>                    Paints;                                            // 0x8(0x10)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.StructurePreventionZoneVolume.BPIsWithinAnyStructurePreventionVolume
struct AStructurePreventionZoneVolume_BPIsWithinAnyStructurePreventionVolume_Params
{
public:
	class UWorld*                                ForWorld;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtPoint;                                           // 0x8(0x18)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bCheckDisabled;                                    // 0x20(0x1)(Edit, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsForDamageCheck;                                 // 0x21(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreOptionalVolumes;                            // 0x22(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_488A[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class AStructurePreventionZoneVolume*        ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.SupplyCrateSpawningVolume.SpawnCratesFromAllVolumes
struct ASupplyCrateSpawningVolume_SpawnCratesFromAllVolumes_Params
{
public:
	class UWorld*                                TheWorld;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.SupplyCrateSpawningVolume.SetSpawnEnabled
struct ASupplyCrateSpawningVolume_SetSpawnEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.TargetableInterface.ToUObject
struct ITargetableInterface_ToUObject_Params
{
public:
	class UObject*                               ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.TickingHelperComponent.SetComponentTickGroup
struct UTickingHelperComponent_SetComponentTickGroup_Params
{
public:
	enum class ETickingGroup                     NewTickGroup;                                      // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.TickingHelperComponent.OnThrottledTick
struct UTickingHelperComponent_OnThrottledTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.TogglePainVolume.SetPainVolumeEnabled
struct ATogglePainVolume_SetPainVolumeEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.TogglePainVolume.OnInterpToggle
struct ATogglePainVolume_OnInterpToggle_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.TogglePainVolume.OnEndOverlap
struct ATogglePainVolume_OnEndOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.TogglePainVolume.OnBeginOverlap
struct ATogglePainVolume_OnBeginOverlap_Params
{
public:
	class AActor*                                OverlappedActor;                                   // 0x0(0x8)(Edit, ExportObject, Net, Parm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	class AActor*                                Actor;                                             // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.TogglePainVolume.GetOverlappedActors
struct ATogglePainVolume_GetOverlappedActors_Params
{
public:
	TArray<class AActor*>                        OutActors;                                         // 0x0(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.TogglePainVolume.GetOverlappedActorNum
struct ATogglePainVolume_GetOverlappedActorNum_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.TrackedDinoListEntryWidget.BPOnFavoriteButtonPressed
struct UTrackedDinoListEntryWidget_BPOnFavoriteButtonPressed_Params
{
public:
	bool                                         Favorited;                                         // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Handled;                                           // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.TrackingItemUI.StopTrackItem
struct UTrackingItemUI_StopTrackItem_Params
{
public:
	class UClass*                                ItemClass;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.TrackingItemUI.RemoveInfoTrackIndex
struct UTrackingItemUI_RemoveInfoTrackIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UIMainModShop.OnRequestedModPage
struct UUIMainModShop_OnRequestedModPage_Params
{
public:
	int64                                        ForModID;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UIMainModShop.IsModInstallPageOpen
struct UUIMainModShop_IsModInstallPageOpen_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UIMainModShop.GamepadChangeTab
struct UUIMainModShop_GamepadChangeTab_Params
{
public:
	bool                                         Forward;                                           // 0x0(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextCommittedWhiteListed
struct UUI_AdminMangment_OnTextCommittedWhiteListed_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48AC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextCommittedMessageOfTheDay
struct UUI_AdminMangment_OnTextCommittedMessageOfTheDay_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48AD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextCommittedManualBan
struct UUI_AdminMangment_OnTextCommittedManualBan_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48AE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextCommitted
struct UUI_AdminMangment_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48AF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextChangedMessageOfTheDay
struct UUI_AdminMangment_OnTextChangedMessageOfTheDay_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextChangedManulaBan
struct UUI_AdminMangment_OnTextChangedManulaBan_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextChangedManualWhiteLised
struct UUI_AdminMangment_OnTextChangedManualWhiteLised_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AdminMangment.OnTextChanged
struct UUI_AdminMangment_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AllPlayersList.OnTribeNameFilterChanged
struct UUI_AllPlayersList_OnTribeNameFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_AllPlayersList.OnPlayerNameFilterChanged
struct UUI_AllPlayersList_OnPlayerNameFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_ChatBox.HandleChatTextCommitted
struct UUI_ChatBox_HandleChatTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48B5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ChatBox.HandleChatTextChanged
struct UUI_ChatBox_HandleChatTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_ListSessions.SlotButtonSelected
struct UUI_ListSessions_SlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_ListSessions.SetupModFilterList
struct UUI_ListSessions_SetupModFilterList_Params
{
public:
	class UComboBoxString*                       ForComboBox;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.SetModIdFilter
struct UUI_ListSessions_SetModIdFilter_Params
{
public:
	int64                                        InFilterServerByModId;                             // 0x0(0x8)(Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                InFilterServerByModIdName;                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_ListSessions.SetCurrentServerSearchType
struct UUI_ListSessions_SetCurrentServerSearchType_Params
{
public:
	int32                                        ServerType;                                        // 0x0(0x4)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_ListSessions.OnTextCommitted
struct UUI_ListSessions_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48B8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.OnTextChanged
struct UUI_ListSessions_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.OnSortComboBoxSelectionChanged
struct UUI_ListSessions_OnSortComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48B9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.OnServersFilterComboBoxSelectionChanged
struct UUI_ListSessions_OnServersFilterComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48BA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.UI_ListSessions.OnServerListingClickedModPopup
struct UUI_ListSessions_OnServerListingClickedModPopup_Params
{
public:
	bool                                         bNeedInit;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48BB[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int64>                                ModIds;                                            // 0x8(0x10)(ExportObject, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	class FString                                ServerName;                                        // 0x18(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	int64                                        ServerID;                                          // 0x28(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_ListSessions.OnModPopupEventReport
struct UUI_ListSessions_OnModPopupEventReport_Params
{
public:
	class UPrimalUserWidget*                     WithUI;                                            // 0x0(0x8)(ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int64                                        ServerID;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_ListSessions.OnModPopupEventJoin
struct UUI_ListSessions_OnModPopupEventJoin_Params
{
public:
	class UPrimalUserWidget*                     WithUI;                                            // 0x0(0x8)(ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int64                                        ServerID;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_ListSessions.OnModPopupEventFavorite
struct UUI_ListSessions_OnModPopupEventFavorite_Params
{
public:
	class UPrimalUserWidget*                     WithUI;                                            // 0x0(0x8)(ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int64                                        ServerID;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_ListSessions.OnModPopupEventBack
struct UUI_ListSessions_OnModPopupEventBack_Params
{
public:
	class UPrimalUserWidget*                     WithUI;                                            // 0x0(0x8)(ConstParm, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int64                                        ServerID;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.OnMapComboBoxSelectionChanged
struct UUI_ListSessions_OnMapComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48BC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ListSessions.OnGameModeComboBoxSelectionChanged
struct UUI_ListSessions_OnGameModeComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48BD[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_ListSessions.OnCheckBoxChecked
struct UUI_ListSessions_OnCheckBoxChecked_Params
{
public:
	bool                                         InNewState;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_ListSessions.OnAutoFavoriteChecked
struct UUI_ListSessions_OnAutoFavoriteChecked_Params
{
public:
	bool                                         InNewState;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_ListSessions.ChangeSortAscendingDescending
struct UUI_ListSessions_ChangeSortAscendingDescending_Params
{
public:
	bool                                         Ascending;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_ConsoleCommand.OnTextCommited
struct UUI_ConsoleCommand_OnTextCommited_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48C8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_ConsoleCommand.ButtonSelected
struct UUI_ConsoleCommand_ButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_ConsoleDedicated.PlayerDoubleClicked
struct UUI_ConsoleDedicated_PlayerDoubleClicked_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ConsoleDedicated.OnTextChanged
struct UUI_ConsoleDedicated_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_ConsoleDedicated.HandleTextMessageTextCommitted
struct UUI_ConsoleDedicated_HandleTextMessageTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48CA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Cooking.OnRedSliderValueChanged
struct UUI_Cooking_OnRedSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Cooking.OnItemNameChanged
struct UUI_Cooking_OnItemNameChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Cooking.OnItemDescriptionChanged
struct UUI_Cooking_OnItemDescriptionChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Cooking.OnGreenSliderValueChanged
struct UUI_Cooking_OnGreenSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Cooking.OnBlueSliderValueChanged
struct UUI_Cooking_OnBlueSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Cooking.MyInventoryItemDoubleClicked
struct UUI_Cooking_MyInventoryItemDoubleClicked_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_CustomOverlay.ShowReticule
struct UUI_CustomOverlay_ShowReticule_Params
{
public:
	bool                                         Show;                                              // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetPointerScale
struct UUI_CustomOverlay_SetPointerScale_Params
{
public:
	float                                        Scale;                                             // 0x0(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetPointerColorAdd
struct UUI_CustomOverlay_SetPointerColorAdd_Params
{
public:
	float                                        Add;                                               // 0x0(0x4)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnTemplate)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetMouseVisibility
struct UUI_CustomOverlay_SetMouseVisibility_Params
{
public:
	bool                                         bIsVisible;                                        // 0x0(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetMousePositionFromPC
struct UUI_CustomOverlay_SetMousePositionFromPC_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetMousePosition
struct UUI_CustomOverlay_SetMousePosition_Params
{
public:
	struct FVector2D                             ViewportPosition;                                  // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetInnerRingScales
struct UUI_CustomOverlay_SetInnerRingScales_Params
{
public:
	float                                        Scale0;                                            // 0x0(0x4)(ConstParm, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Scale1;                                            // 0x4(0x4)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Scale2;                                            // 0x8(0x4)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_CustomOverlay.SetArrowAlpha
struct UUI_CustomOverlay_SetArrowAlpha_Params
{
public:
	float                                        TheLeftRightAlpha;                                 // 0x0(0x4)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheUpDownAlpha;                                    // 0x4(0x4)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_CustomOverlay.AddChildToCanvas
struct UUI_CustomOverlay_AddChildToCanvas_Params
{
public:
	class UUserWidget*                           Child;                                             // 0x0(0x8)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             Size;                                              // 0x8(0x10)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config)
	int32                                        ZOrder;                                            // 0x18(0x4)(Edit, Net, Parm, OutParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48D0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.SearchTextChanged
struct UUI_CustomTrackedDinoList_SearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.OpenToSpecificEntry
struct UUI_CustomTrackedDinoList_OpenToSpecificEntry_Params
{
public:
	int32                                        SpecificCharacterID;                               // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsPlayer;                                          // 0x4(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsFavorite;                                        // 0x5(0x1)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         IsWaypoint;                                        // 0x6(0x1)(Edit, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D2[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.OnFilterSelectionComboBoxSelectionChanged
struct UUI_CustomTrackedDinoList_OnFilterSelectionComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48D3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.OnActorGroupSelectionComboBoxSelectionChanged
struct UUI_CustomTrackedDinoList_OnActorGroupSelectionComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48D4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.MarkDinoListEntryWidgetFavorite
struct UUI_CustomTrackedDinoList_MarkDinoListEntryWidgetFavorite_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         IsPlayer;                                          // 0x4(0x1)(ConstParm, BlueprintVisible, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48D5[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_CustomTrackedDinoList.AdditionalSearchTermsTextboxChanged
struct UUI_CustomTrackedDinoList_AdditionalSearchTermsTextboxChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_DebugSpawnMenu.SortSelection
struct UUI_DebugSpawnMenu_SortSelection_Params
{
public:
	TArray<class UUI_DebugSpawnMenuEntry*>       OutDataListEntries;                                // 0x0(0x10)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_DepthOfFieldMenu.OnSliderValueChanged
struct UUI_DepthOfFieldMenu_OnSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_DepthOfFieldMenu.OnNumericValueCommitted
struct UUI_DepthOfFieldMenu_OnNumericValueCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48DE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_DepthOfFieldMenu.OnCheckBoxChanged
struct UUI_DepthOfFieldMenu_OnCheckBoxChanged_Params
{
public:
	bool                                         IsChecked;                                         // 0x0(0x1)(Edit, ConstParm, EditFixedSize, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_DinoOrderGroups.DinoOrderGroupSelected
struct UUI_DinoOrderGroups_DinoOrderGroupSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_DinoOrderGroups.DinoClassSelected
struct UUI_DinoOrderGroups_DinoClassSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_DinoOrderGroups.DinoCharSelected
struct UUI_DinoOrderGroups_DinoCharSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.UI_DyeItem.ShowUploadTribeFlagWindow
struct UUI_DyeItem_ShowUploadTribeFlagWindow_Params
{
public:
	bool                                         AutoUploadLastPainting;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCloseParentUIAfterFinished;                       // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_DyeItem.SavePainting
struct UUI_DyeItem_SavePainting_Params
{
public:
	class FString                                Filename;                                          // 0x0(0x10)(Edit, ExportObject, Net, EditFixedSize, OutParm, ReturnParm)
	bool                                         OverrideExisting;                                  // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_48E1[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_DyeItem.HandleOnSearchTextChanged
struct UUI_DyeItem_HandleOnSearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_DyeItem.DyeItemDoubleClicked
struct UUI_DyeItem_DyeItemDoubleClicked_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_DyeItem.DrawWithNewDye
struct UUI_DyeItem_DrawWithNewDye_Params
{
public:
	bool                                         UploadingTribeFlag;                                // 0x0(0x1)(Edit, ConstParm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_EngramsMenu.OnEngramsFilterChanged
struct UUI_EngramsMenu_OnEngramsFilterChanged_Params
{
public:
	bool                                         bIsChecked;                                        // 0x0(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_EngramsMenu.OnEngramFilterChanged
struct UUI_EngramsMenu_OnEngramFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_EngramsMenu.EngramSelected
struct UUI_EngramsMenu_EngramSelected_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_EngramsMenu.EngramDoubleClicked
struct UUI_EngramsMenu_EngramDoubleClicked_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_GenericConfirmationDialog.OverrideCancelButtonText
struct UUI_GenericConfirmationDialog_OverrideCancelButtonText_Params
{
public:
	class FText                                  CancelText;                                        // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_GenericConfirmationDialog.OverrideAcceptButtonText
struct UUI_GenericConfirmationDialog_OverrideAcceptButtonText_Params
{
public:
	class FText                                  AcceptText;                                        // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_GenericConfirmationDialog.GetSplitscreenLocalPlayerIndex
struct UUI_GenericConfirmationDialog_GetSplitscreenLocalPlayerIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Hairstyle.UpdateHeadHairStyleIndex
struct UUI_Hairstyle_UpdateHeadHairStyleIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Hairstyle.UpdateFacialHairStyleIndex
struct UUI_Hairstyle_UpdateFacialHairStyleIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Hairstyle.UpdateEyebrowStyleIndex
struct UUI_Hairstyle_UpdateEyebrowStyleIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Hairstyle.OnHeadHairStyleButtonClicked
struct UUI_Hairstyle_OnHeadHairStyleButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Hairstyle.OnFacialHairStyleButtonClicked
struct UUI_Hairstyle_OnFacialHairStyleButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Hairstyle.OnEyebrowStyleButtonClicked
struct UUI_Hairstyle_OnEyebrowStyleButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Hairstyle.GetDyeItemSelectors
struct UUI_Hairstyle_GetDyeItemSelectors_Params
{
public:
	TArray<class UDyeItemSelector*>              ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HexagonConversion.TradableItemSelected
struct UUI_HexagonConversion_TradableItemSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HexagonConversion.PopulateAvailableTradeItems
struct UUI_HexagonConversion_PopulateAvailableTradeItems_Params
{
public:
	TArray<bool>                                 AvailableItems;                                    // 0x0(0x10)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_HexagonConversion.OnSearchTextChanged
struct UUI_HexagonConversion_OnSearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HexagonConversion.HideItem
struct UUI_HexagonConversion_HideItem_Params
{
public:
	int32                                        ItemIndex;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HexagonConversion.GetWidgetIndexOfAssociatedItemIndex
struct UUI_HexagonConversion_GetWidgetIndexOfAssociatedItemIndex_Params
{
public:
	int32                                        ItemIndex;                                         // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HexagonConversion.GetCurrentlySelectedTradeItemWidgetIndex
struct UUI_HexagonConversion_GetCurrentlySelectedTradeItemWidgetIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HexagonConversion.FilterAvailableTradeItems
struct UUI_HexagonConversion_FilterAvailableTradeItems_Params
{
public:
	TArray<bool>                                 AvailableTradableItems;                            // 0x0(0x10)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                FilterText;                                        // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HostSession.UpdateDifficultyRules
struct UUI_HostSession_UpdateDifficultyRules_Params
{
public:
	int32                                        Difficulty;                                        // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.SlotButtonSelected
struct UUI_HostSession_SlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.SetTextIntFromSettingsData
struct UUI_HostSession_SetTextIntFromSettingsData_Params
{
public:
	int32                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_48F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UEditableTextBox*                      TextBox;                                           // 0x8(0x8)(Edit, BlueprintReadOnly, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HostSession.SetSliderFromSettingsData
struct UUI_HostSession_SetSliderFromSettingsData_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_48F6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataListValueGeneric*                 Slider;                                            // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        Scale;                                             // 0x10(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Offset;                                            // 0x14(0x4)(Edit, ExportObject, Parm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         bZeroUseDefaultValue;                              // 0x18(0x1)(ConstParm, BlueprintVisible, Net, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48F7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DefaultValue;                                      // 0x1C(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.SetSettingsWithSettingsDataAsset
struct UUI_HostSession_SetSettingsWithSettingsDataAsset_Params
{
public:
	class UPrimalGameSettingsData*               SettingsData;                                      // 0x0(0x8)(Edit, BlueprintVisible, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HostSession.SetSelectedMapIndex
struct UUI_HostSession_SetSelectedMapIndex_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.SetCheckBoxFromSettingsData
struct UUI_HostSession_SetCheckBoxFromSettingsData_Params
{
public:
	bool                                         Value;                                             // 0x0(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_48F8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataListValueGeneric*                 CheckBox;                                          // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HostSession.OnSliderValueChanged
struct UUI_HostSession_OnSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HostSession.OnSessionPasswordTextCommitted
struct UUI_HostSession_OnSessionPasswordTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48F9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_HostSession.OnSessionPasswordTextChanged
struct UUI_HostSession_OnSessionPasswordTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HostSession.OnSessionNameTextCommitted
struct UUI_HostSession_OnSessionNameTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48FA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_HostSession.OnSessionNameTextChanged
struct UUI_HostSession_OnSessionNameTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HostSession.OnNumericValueCommitted
struct UUI_HostSession_OnNumericValueCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48FB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.OnModInfoRequested
struct UUI_HostSession_OnModInfoRequested_Params
{
public:
	int64                                        ModId;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.OnImageLoadFinish
struct UUI_HostSession_OnImageLoadFinish_Params
{
public:
	class UTexture2DDynamic*                     NewTexture;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.OnDeleteMapServerDataButtonClicked
struct UUI_HostSession_OnDeleteMapServerDataButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.OnDeleteMapSaveGameButtonClicked
struct UUI_HostSession_OnDeleteMapSaveGameButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_HostSession.OnAdminPasswordTextCommitted
struct UUI_HostSession_OnAdminPasswordTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_48FC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_HostSession.OnAdminPasswordTextChanged
struct UUI_HostSession_OnAdminPasswordTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.OnActiveModReorderButtonClicked
struct UUI_HostSession_OnActiveModReorderButtonClicked_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.ModSelected
struct UUI_HostSession_ModSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_HostSession.IsInMapSelectView
struct UUI_HostSession_IsInMapSelectView_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.HighlightPresetButton
struct UUI_HostSession_HighlightPresetButton_Params
{
public:
	class UCustomButtonWidget*                   WhichButton;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.HasSaveForMapIndex
struct UUI_HostSession_HasSaveForMapIndex_Params
{
public:
	int32                                        MapIndex;                                          // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_48FD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.HasDLCforMapIndex
struct UUI_HostSession_HasDLCforMapIndex_Params
{
public:
	int32                                        MapIndex;                                          // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_48FE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.GetSwitchMapEntryForIndex
struct UUI_HostSession_GetSwitchMapEntryForIndex_Params
{
public:
	int32                                        MapIndex;                                          // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_48FF[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UDataListEntryButton_HostSession*      ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HostSession.GetSelectedMapIndex
struct UUI_HostSession_GetSelectedMapIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.GetModMaps
struct UUI_HostSession_GetModMaps_Params
{
public:
	TArray<class UDataListEntryButton_HostSession*> ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.GetMapSelectScrollBox
struct UUI_HostSession_GetMapSelectScrollBox_Params
{
public:
	class UScrollBox*                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.UI_HostSession.GetMapInfo
struct UUI_HostSession_GetMapInfo_Params
{
public:
	int32                                        MapIndex;                                          // 0x0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4900[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  OutMapName;                                        // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FMapDescription                       OutDescription;                                    // 0x20(0x28)(BlueprintVisible, ExportObject, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.EngramDoubleClicked
struct UUI_HostSession_EngramDoubleClicked_Params
{
public:
	class UDataListEntryButton*                  TheButton;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.DoesSettingsMatchSettingsDataAsset
struct UUI_HostSession_DoesSettingsMatchSettingsDataAsset_Params
{
public:
	class UPrimalGameSettingsData*               SettingsData;                                      // 0x0(0x8)(Edit, BlueprintVisible, Parm, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4901[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_HostSession.DeleteSingleplayerData
struct UUI_HostSession_DeleteSingleplayerData_Params
{
public:
	int32                                        SelectedIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_HostSession.BPPopulateMods
struct UUI_HostSession_BPPopulateMods_Params
{
public:
	TArray<struct FInstalledMod>                 ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_HostSession.BPIsPresetDifficultyUIOpen
struct UUI_HostSession_BPIsPresetDifficultyUIOpen_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_HostSession.ActiveModSelected
struct UUI_HostSession_ActiveModSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.UI_Hub.IsSubMenuActive
struct UUI_Hub_IsSubMenuActive_Params
{
public:
	enum class EHubSubMenu                       MenuType;                                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Hub.GetSurvivorProfileMenu
struct UUI_Hub_GetSurvivorProfileMenu_Params
{
public:
	bool                                         bAutoShow;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_490A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UUI_SurvivorProfile*                   ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.UI_HudOverlay.ShowOverlayTooltip
struct UUI_HudOverlay_ShowOverlayTooltip_Params
{
public:
	class AShooterPlayerController*              HUDOwner;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UObject*                               SponsorObject;                                     // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ToolTipPrefab;                                     // 0x10(0x8)(ConstParm, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenPos;                                         // 0x18(0x10)(BlueprintVisible, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EAlignHorizontalUI                HorizontalAlignment;                               // 0x28(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class EAlignVerticalUI                  VerticalAlignment;                                 // 0x29(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_490D[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             WithPadding;                                       // 0x30(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OverlayScale;                                      // 0x40(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRetainScreenProjectionFromWorld;                  // 0x50(0x1)(Edit, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_490E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ScreenProjectionWorldPosition;                     // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ScreenProjectionPositionOffset;                    // 0x70(0x10)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UToolTipWidget*                        ReturnValue;                                       // 0x80(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Inventory.SetInventoryVisibility
struct UUI_Inventory_SetInventoryVisibility_Params
{
public:
	bool                                         bVisible;                                          // 0x0(0x1)(Edit, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.UI_LeaderboardWidget.SetRows
struct UUI_LeaderboardWidget_SetRows_Params
{
public:
	class UClass*                                LeaderboardRowWidget;                              // 0x0(0x8)(BlueprintReadOnly, Net, OutParm, ReturnParm, Config, DisableEditOnInstance, InstancedReference, DuplicateTransient)
	struct FLeaderboardDisplayRow                HeaderRow;                                         // 0x8(0x20)(ExportObject, Net, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FLeaderboardDisplayRow>        Rows;                                              // 0x28(0x10)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_LeaderboardWidget.SetLeaderboardWidgetVisible
struct UUI_LeaderboardWidget_SetLeaderboardWidgetVisible_Params
{
public:
	bool                                         bIsVisible;                                        // 0x0(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_ListCharacterData.CharacterSlotButtonSelected
struct UUI_ListCharacterData_CharacterSlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MainMenu.TotalConversionSelected
struct UUI_MainMenu_TotalConversionSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MainMenu.SettingsOverlayIsOpen
struct UUI_MainMenu_SettingsOverlayIsOpen_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MainMenu.SetMainJoinedButtonVisibility
struct UUI_MainMenu_SetMainJoinedButtonVisibility_Params
{
public:
	enum class ESlateVisibility                  NewVisibilty;                                      // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_MainMenu.OverrideBGImage
struct UUI_MainMenu_OverrideBGImage_Params
{
public:
	class UTexture2D*                            BGOverrideTexture;                                 // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         InstantChange;                                     // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4916[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MainMenu.OpenModShop
struct UUI_MainMenu_OpenModShop_Params
{
public:
	int64                                        OptionalModID;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MainMenu.OnGamepadSelectionChanged
struct UUI_MainMenu_OnGamepadSelectionChanged_Params
{
public:
	class UWidget*                               Widget;                                            // 0x0(0x8)(ConstParm, EditFixedSize, Parm, ReturnParm, Transient, DisableEditOnInstance, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_MapMarkersEntry.OnTextCommitted
struct UUI_MapMarkersEntry_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_491A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_MapMarkersEntry.OnTextChanged
struct UUI_MapMarkersEntry_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_MapMarkersEntry.OnColorSliderValueChanged
struct UUI_MapMarkersEntry_OnColorSliderValueChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MapMarkersEntry.MarkerButtonSelected
struct UUI_MapMarkersEntry_MarkerButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnNavForward
struct UUI_MenuCarousel_OnNavForward_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnNavBack
struct UUI_MenuCarousel_OnNavBack_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnMainClick
struct UUI_MenuCarousel_OnMainClick_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnImageDownloadSuccess
struct UUI_MenuCarousel_OnImageDownloadSuccess_Params
{
public:
	class UTexture2DDynamic*                     NewTexture;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnImageDownloadFailure
struct UUI_MenuCarousel_OnImageDownloadFailure_Params
{
public:
	class UTexture2DDynamic*                     NewTexture;                                        // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MenuCarousel.OnClickPip
struct UUI_MenuCarousel_OnClickPip_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_MenuCarousel.DoFocusActionStart
struct UUI_MenuCarousel_DoFocusActionStart_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ActionValue;                                       // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_MenuCarousel.DoFocusActionEnd
struct UUI_MenuCarousel_DoFocusActionEnd_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ActionValue;                                       // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_MenuCarousel.DoClickAction
struct UUI_MenuCarousel_DoClickAction_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ActionValue;                                       // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.Init
struct UUI_MenuCarouselEntryWidget_Init_Params
{
public:
	class FString                                RawExtraData;                                      // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.EntryFocusTick
struct UUI_MenuCarouselEntryWidget_EntryFocusTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.EntryFocusStart
struct UUI_MenuCarouselEntryWidget_EntryFocusStart_Params
{
public:
	bool                                         bInstigatedByAutoRollover;                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.EntryFocusEnd
struct UUI_MenuCarouselEntryWidget_EntryFocusEnd_Params
{
public:
	bool                                         bInstigatedByAutoRollover;                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.EntryDoClickAction
struct UUI_MenuCarouselEntryWidget_EntryDoClickAction_Params
{
public:
	class FString                                ActionKey;                                         // 0x0(0x10)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ActionValue;                                       // 0x10(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Config, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.BlueprintInit
struct UUI_MenuCarouselEntryWidget_BlueprintInit_Params
{
public:
	class FString                                RawExtraData;                                      // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselEntryWidget.AllowAutoscrollNavTo
struct UUI_MenuCarouselEntryWidget_AllowAutoscrollNavTo_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.SetPip
struct UUI_MenuCarouselPipWidget_SetPip_Params
{
public:
	bool                                         bNewState;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.PipStateChanged
struct UUI_MenuCarouselPipWidget_PipStateChanged_Params
{
public:
	bool                                         NewState;                                          // 0x0(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, DisableEditOnInstance, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.IsPipActive
struct UUI_MenuCarouselPipWidget_IsPipActive_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.Init
struct UUI_MenuCarouselPipWidget_Init_Params
{
public:
	class FString                                RawExtraData;                                      // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.EntryFocusTick
struct UUI_MenuCarouselPipWidget_EntryFocusTick_Params
{
public:
	float                                        DeltaTime;                                         // 0x0(0x4)(BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.EntryFocusStart
struct UUI_MenuCarouselPipWidget_EntryFocusStart_Params
{
public:
	bool                                         bInstigatedByAutoRollover;                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.EntryFocusEnd
struct UUI_MenuCarouselPipWidget_EntryFocusEnd_Params
{
public:
	bool                                         bInstigatedByAutoRollover;                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_MenuCarouselPipWidget.BlueprintInit
struct UUI_MenuCarouselPipWidget_BlueprintInit_Params
{
public:
	class FString                                RawExtraData;                                      // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_MissionList.OnMissionFilterChanged
struct UUI_MissionList_OnMissionFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_MultiUse.ClickedEntry
struct UUI_MultiUse_ClickedEntry_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_OptionsMenu.ResetTutorials
struct UUI_OptionsMenu_ResetTutorials_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_OptionsMenu.ResetCinematics
struct UUI_OptionsMenu_ResetCinematics_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_OptionsMenu.OpenModShop
struct UUI_OptionsMenu_OpenModShop_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_OptionsMenu.OnGraphicsQualityComboBoxChanged
struct UUI_OptionsMenu_OnGraphicsQualityComboBoxChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
};

// 0x3C (0x3C - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OptionsGraphTick
struct UUI_OptionsMenu_UWP_OptionsGraphTick_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InDeltaTime;                                       // 0x38(0x4)(ConstParm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnWidthChanged
struct UUI_OptionsMenu_UWP_OnWidthChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnViewDistanceComboBoxSelectionChanged
struct UUI_OptionsMenu_UWP_OnViewDistanceComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4927[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionsComboBoxSelectionChanged
struct UUI_OptionsMenu_UWP_OnResolutionsComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4928[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionScaleChanged
struct UUI_OptionsMenu_UWP_OnResolutionScaleChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnHeightChanged
struct UUI_OptionsMenu_UWP_OnHeightChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_OptionsMenu_UWP.OnGraphicsQualityComboBoxChanged
struct UUI_OptionsMenu_UWP_OnGraphicsQualityComboBoxChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.UI_PaintingsList.SetUploadingTribeFlag
struct UUI_PaintingsList_SetUploadingTribeFlag_Params
{
public:
	bool                                         AutoUploadLastPainting;                            // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bCloseParentUIAfterFinished;                       // 0x1(0x1)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_PauseMenu.UpdatePlayerList
struct UUI_PauseMenu_UpdatePlayerList_Params
{
public:
	class FString                                PlayerList;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.UseConsoleVideoOptions
struct UUI_PCOptionsMenu_UseConsoleVideoOptions_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.UseAutoDetectSettingsCheckboxChanged
struct UUI_PCOptionsMenu_UseAutoDetectSettingsCheckboxChanged_Params
{
public:
	bool                                         bIsChecked;                                        // 0x0(0x1)(Edit, ConstParm, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.UnblockAllModsCallback
struct UUI_PCOptionsMenu_UnblockAllModsCallback_Params
{
public:
	bool                                         Accepted;                                          // 0x0(0x1)(Edit, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x3C (0x3C - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OptionsGraphTick
struct UUI_PCOptionsMenu_OptionsGraphTick_Params
{
public:
	struct FGeometry                             MyGeometry;                                        // 0x0(0x38)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, SubobjectReference)
	float                                        InDeltaTime;                                       // 0x38(0x4)(ConstParm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OpenModShop
struct UUI_PCOptionsMenu_OpenModShop_Params
{
public:
	class UWidget*                               ClickedWidget;                                     // 0x0(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnWidthChanged
struct UUI_PCOptionsMenu_OnWidthChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnViewDistanceComboBoxSelectionChanged
struct UUI_PCOptionsMenu_OnViewDistanceComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_492E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnResolutionsComboBoxSelectionChanged
struct UUI_PCOptionsMenu_OnResolutionsComboBoxSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_492F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnHeightChanged
struct UUI_PCOptionsMenu_OnHeightChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnGraphicsQualityComboBoxChanged
struct UUI_PCOptionsMenu_OnGraphicsQualityComboBoxChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnFPSCapChanged
struct UUI_PCOptionsMenu_OnFPSCapChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.OnComboBoxGenericChanged
struct UUI_PCOptionsMenu_OnComboBoxGenericChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4930[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.IsPC
struct UUI_PCOptionsMenu_IsPC_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.IsNvidiaGraphicCard
struct UUI_PCOptionsMenu_IsNvidiaGraphicCard_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.GetLivePCOptionsMenu
struct UUI_PCOptionsMenu_GetLivePCOptionsMenu_Params
{
public:
	class UUI_PCOptionsMenu*                     ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_PCOptionsMenu.CancelUnblockAllMods
struct UUI_PCOptionsMenu_CancelUnblockAllMods_Params
{
public:
	bool                                         bAccept;                                           // 0x0(0x1)(ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_PreviewWidget.SetTargetZoomMultiplier
struct UUI_PreviewWidget_SetTargetZoomMultiplier_Params
{
public:
	float                                        Mult;                                              // 0x0(0x4)(Edit, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_PreviewWidget.ResetZoomTo
struct UUI_PreviewWidget_ResetZoomTo_Params
{
public:
	float                                        Zoom;                                              // 0x0(0x4)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_PreviewWidget.GetPreviewMesh
struct UUI_PreviewWidget_GetPreviewMesh_Params
{
public:
	class UMeshComponent*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_PreviewWidget.GetMeshComponent
struct UUI_PreviewWidget_GetMeshComponent_Params
{
public:
	class UMeshComponent*                        ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_PreviewWidget.GetCaptureComponent
struct UUI_PreviewWidget_GetCaptureComponent_Params
{
public:
	class USceneCaptureComponent2D*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_ProceduralSettings.OnTextCommitted
struct UUI_ProceduralSettings_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4943[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_ProceduralSettings.OnPresetSelectionChanged
struct UUI_ProceduralSettings_OnPresetSelectionChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4944[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_SavePainting.HandleFilterStringTextCommitted
struct UUI_SavePainting_HandleFilterStringTextCommitted_Params
{
public:
	class FText                                  NewText;                                           // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4946[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_SavePainting.HandleFilterStringTextChanged
struct UUI_SavePainting_HandleFilterStringTextChanged_Params
{
public:
	class FText                                  NewText;                                           // 0x0(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Spawn.UpdateCharacterFirstSpawnBP
struct UUI_Spawn_UpdateCharacterFirstSpawnBP_Params
{
public:
	bool                                         Active;                                            // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Spawn.UpdateCharacterFirstSpawn
struct UUI_Spawn_UpdateCharacterFirstSpawn_Params
{
public:
	bool                                         Active;                                            // 0x0(0x1)(Edit, ConstParm, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Spawn.SwitchTheButton
struct UUI_Spawn_SwitchTheButton_Params
{
public:
	bool                                         Next;                                              // 0x0(0x1)(ConstParm, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Spawn.SpawnPointSelected
struct UUI_Spawn_SpawnPointSelected_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_494D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UUI_SpawnPoint*                        SpawnPoint;                                        // 0x8(0x8)(BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.SlotButtonSelected
struct UUI_Spawn_SlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.SavedPresetListButtonSelected
struct UUI_Spawn_SavedPresetListButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.SavedBonePresetListButtonSelected
struct UUI_Spawn_SavedBonePresetListButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.RespawnSlotButtonSelected
struct UUI_Spawn_RespawnSlotButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Spawn.ResetToDefault
struct UUI_Spawn_ResetToDefault_Params
{
public:
	bool                                         Recall;                                            // 0x0(0x1)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_Spawn.OnSaveToFileEditableCommitted
struct UUI_Spawn_OnSaveToFileEditableCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_494E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_SPDownload
struct UUI_Spawn_OnMoviePlaybackFinished_SPDownload_Params
{
public:
	class FString                                MoviePath;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlaybackWasCancelled;                             // 0x10(0x1)(OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_494F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_SpawnAtPoint
struct UUI_Spawn_OnMoviePlaybackFinished_SpawnAtPoint_Params
{
public:
	class FString                                MoviePath;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlaybackWasCancelled;                             // 0x10(0x1)(OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4950[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_Download
struct UUI_Spawn_OnMoviePlaybackFinished_Download_Params
{
public:
	class FString                                MoviePath;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlaybackWasCancelled;                             // 0x10(0x1)(OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4951[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished
struct UUI_Spawn_OnMoviePlaybackFinished_Params
{
public:
	class FString                                MoviePath;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlaybackWasCancelled;                             // 0x10(0x1)(OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4952[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Spawn.OnMaterialSliderChanged
struct UUI_Spawn_OnMaterialSliderChanged_Params
{
public:
	float                                        SliderValue;                                       // 0x0(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Spawn.OnGenderChange
struct UUI_Spawn_OnGenderChange_Params
{
public:
	bool                                         IsFemale;                                          // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.OnBedFilterChanged
struct UUI_Spawn_OnBedFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.MultiSelectSpawnPointButtonSelected
struct UUI_Spawn_MultiSelectSpawnPointButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.GetSpawnPointName
struct UUI_Spawn_GetSpawnPointName_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_4953[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.GetRespawnPanelMap
struct UUI_Spawn_GetRespawnPanelMap_Params
{
public:
	class USpawnMapWidget*                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.GetRealBedName
struct UUI_Spawn_GetRealBedName_Params
{
public:
	int32                                        ChachedID;                                         // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4954[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_Spawn.GetIsSpawnPointIDDefaultDestination
struct UUI_Spawn_GetIsSpawnPointIDDefaultDestination_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4955[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Spawn.GetDifficultRegionString
struct UUI_Spawn_GetDifficultRegionString_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	uint8                                        Pad_4956[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xD8 (0xD8 - 0x0)
// Function ShooterGame.UI_Spawn.GetCurrentCharacterSetting
struct UUI_Spawn_GetCurrentCharacterSetting_Params
{
public:
	struct FCharacterPreset                      ReturnValue;                                       // 0x0(0xD8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.UI_Spawn.GetCanvasLocationForRegionPoint
struct UUI_Spawn_GetCanvasLocationForRegionPoint_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.UI_Spawn.GetCanvasLocationForMinimapPoint
struct UUI_Spawn_GetCanvasLocationForMinimapPoint_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.UI_Spawn.GetCameraSettingsForTab
struct UUI_Spawn_GetCameraSettingsForTab_Params
{
public:
	int32                                        TabIndex;                                          // 0x0(0x4)(ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4957[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FCameraLocationSetting                ReturnValue;                                       // 0x8(0x40)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Spawn.GetAllVectorSliders
struct UUI_Spawn_GetAllVectorSliders_Params
{
public:
	TArray<class UDataListValueGeneric*>         ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Spawn.GetAllFloatSliders
struct UUI_Spawn_GetAllFloatSliders_Params
{
public:
	TArray<class UDataListValueGeneric*>         ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Spawn.GetAllColorSliders
struct UUI_Spawn_GetAllColorSliders_Params
{
public:
	TArray<class UDataListValueGeneric*>         ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.UI_Spawn.BPSetupButtonDataForSpawnRegion
struct UUI_Spawn_BPSetupButtonDataForSpawnRegion_Params
{
public:
	int32                                        SpawnRegionIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4958[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Text;                                              // 0x8(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	class FString                                SecondText;                                        // 0x18(0x10)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.UI_Spawn.BPSetupBed
struct UUI_Spawn_BPSetupBed_Params
{
public:
	int32                                        BedIndex;                                          // 0x0(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SpawnPointID;                                      // 0x4(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                BedName;                                           // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x18(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       NextAllowedUseTime;                                // 0x30(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAllowedUse;                                       // 0x38(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4959[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumBeds;                                           // 0x3C(0x4)(ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_Spawn.BPSetSelectedSpawnRegion
struct UUI_Spawn_BPSetSelectedSpawnRegion_Params
{
public:
	int32                                        SpawnRegionIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Spawn.BPRemoveBed
struct UUI_Spawn_BPRemoveBed_Params
{
public:
	int32                                        SpawnPointID;                                      // 0x0(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.UI_Spawn.BPCreatedSpawnRegionWidget
struct UUI_Spawn_BPCreatedSpawnRegionWidget_Params
{
public:
	int32                                        SpawnRegionIndex;                                  // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495B[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        Difficult;                                         // 0x20(0x4)(ConstParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_495C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x220 (0x220 - 0x0)
// Function ShooterGame.UI_Spawn.BP_FinalAdjustPlayerCharacterConfigBeforeSpawn
struct UUI_Spawn_BP_FinalAdjustPlayerCharacterConfigBeforeSpawn_Params
{
public:
	struct FPrimalPlayerCharacterConfigStruct    InPlayerCharacterConfig;                           // 0x0(0x110)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalPlayerCharacterConfigStruct    ReturnValue;                                       // 0x110(0x110)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xD8 (0xD8 - 0x0)
// Function ShooterGame.UI_Spawn.ApplyCharacterPreset
struct UUI_Spawn_ApplyCharacterPreset_Params
{
public:
	struct FCharacterPreset                      CharacterPreset;                                   // 0x0(0xD8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.UI_Spawn.ApplyBodyBonePreset
struct UUI_Spawn_ApplyBodyBonePreset_Params
{
public:
	struct FPlayerBoneBodyPreset                 BodyPreset;                                        // 0x0(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Subtitles.SetSubtitleFromText
struct UUI_Subtitles_SetSubtitleFromText_Params
{
public:
	class FText                                  SubtitleTextLine;                                  // 0x0(0x18)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_Subtitles.SetSubtitleFromStringWithDurationAndIcon
struct UUI_Subtitles_SetSubtitleFromStringWithDurationAndIcon_Params
{
public:
	class FString                                SubtitleTextLine;                                  // 0x0(0x10)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoHideAfterSeconds;                              // 0x10(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4972[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIcon;                                      // 0x18(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Subtitles.SetSubtitleFromString
struct UUI_Subtitles_SetSubtitleFromString_Params
{
public:
	class FString                                SubtitleTextLine;                                  // 0x0(0x10)(ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundWave
struct UUI_Subtitles_SetSubtitleFromSoundWave_Params
{
public:
	class USoundWave*                            SoundWave;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, DuplicateTransient)
	float                                        AutoHideAfterSeconds;                              // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4973[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIcon;                                      // 0x10(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundCue
struct UUI_Subtitles_SetSubtitleFromSoundCue_Params
{
public:
	class USoundCue*                             SoundCueWithSubtitles;                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AutoHideAfterSeconds;                              // 0x8(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4974[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIcon;                                      // 0x10(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.UI_Subtitles.SetIconMaterialParams
struct UUI_Subtitles_SetIconMaterialParams_Params
{
public:
	TArray<struct FNameScalarPair>               ScalarParams;                                      // 0x0(0x10)(BlueprintVisible, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FNameColorPair>                ColorParams;                                       // 0x10(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UTexture2D*                            CurrentAT;                                         // 0x20(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_Subtitles.IsIconVisible
struct UUI_Subtitles_IsIconVisible_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.UI_Subtitles.IsCurrentIconEqualToGivenIcon
struct UUI_Subtitles_IsCurrentIconEqualToGivenIcon_Params
{
public:
	class UMaterialInterface*                    DialogueIcon;                                      // 0x0(0x8)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4975[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_Subtitles.ForceSetSubtitlesManualTime
struct UUI_Subtitles_ForceSetSubtitlesManualTime_Params
{
public:
	float                                        ManualGlobalStartTime;                             // 0x0(0x4)(BlueprintVisible, Net, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_SurvivorProfile.ShowExplorerNoteEntry
struct UUI_SurvivorProfile_ShowExplorerNoteEntry_Params
{
public:
	int32                                        ExplorerNoteIndex;                                 // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bFromMainPanel;                                    // 0x4(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4978[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_SurvivorProfile.SetFirstFitDisplay
struct UUI_SurvivorProfile_SetFirstFitDisplay_Params
{
public:
	int32                                        ID;                                                // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.UI_SurvivorProfile.OnSubtitlesCheckboxChanged
struct UUI_SurvivorProfile_OnSubtitlesCheckboxChanged_Params
{
public:
	bool                                         InNewState;                                        // 0x0(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_SurvivorProfile.OnNoteNameFilterChanged
struct UUI_SurvivorProfile_OnNoteNameFilterChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_SurvivorProfile.OnMoviePlaybackFinished
struct UUI_SurvivorProfile_OnMoviePlaybackFinished_Params
{
public:
	class FString                                MoviePath;                                         // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bPlaybackWasCancelled;                             // 0x10(0x1)(OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4979[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_TamingList.SearchTextChanged
struct UUI_TamingList_SearchTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_TextEntry.OnTextCommitted
struct UUI_TextEntry_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4981[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_TextEntry.OnTextChanged
struct UUI_TextEntry_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_TribeManager.TribeWarEntryButtonSelected
struct UUI_TribeManager_TribeWarEntryButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_TribeManager.TribeAllianceMemberButtonSelected
struct UUI_TribeManager_TribeAllianceMemberButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_TribeManager.TribeAllianceEntryButtonSelected
struct UUI_TribeManager_TribeAllianceEntryButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_TribeManager.RankGroupButtonSelected
struct UUI_TribeManager_RankGroupButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.UI_TribeManager.PlayerEntryButtonSelected
struct UUI_TribeManager_PlayerEntryButtonSelected_Params
{
public:
	class UWidget*                               TheWidget;                                         // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_TribeManager.OnGroupRankSelectedSelector
struct UUI_TribeManager_OnGroupRankSelectedSelector_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4984[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_TribeManager.OnGroupRankSelected
struct UUI_TribeManager_OnGroupRankSelected_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4985[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_TribeManager.BPRankGroupIndexSelected
struct UUI_TribeManager_BPRankGroupIndexSelected_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.UI_TribeManager.BPRankGroupIndexApplied
struct UUI_TribeManager_BPRankGroupIndexApplied_Params
{
public:
	int32                                        Index;                                             // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.UI_TribeWarEntry.OnTextCommitted
struct UUI_TribeWarEntry_OnTextCommitted_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	enum class ETextCommit                       CommitMethod;                                      // 0x18(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4987[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.UI_TribeWarEntry.OnTextChanged
struct UUI_TribeWarEntry_OnTextChanged_Params
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
};

// 0x168 (0x168 - 0x0)
// Function ShooterGame.VictoryCore.VTraceSphereBP_IgnoreActorsArray
struct UVictoryCore_VTraceSphereBP_IgnoreActorsArray_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FHitResult                            HitOut;                                            // 0x38(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x128(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_498C[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ExtraIgnoreActors;                                 // 0x130(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x140(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x148(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_498D[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x14C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x150(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x151(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_498E[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0x154(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x15C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x160(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_498F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x168 (0x168 - 0x0)
// Function ShooterGame.VictoryCore.VTraceSphereBP
struct UVictoryCore_VTraceSphereBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FHitResult                            HitOut;                                            // 0x38(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x128(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4990[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorToIgnore;                                     // 0x130(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x138(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_4991[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x13C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x140(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x141(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4992[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0x144(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4993[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                OtherActorToIgnore;                                // 0x150(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                AnotherActorToIgnore;                              // 0x158(0x8)(BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x160(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x164(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4994[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x160 (0x160 - 0x0)
// Function ShooterGame.VictoryCore.VTraceSingleBP_IgnoreActorsArray
struct UVictoryCore_VTraceSingleBP_IgnoreActorsArray_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0xF8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x110(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class AActor*>                        ExtraIgnoreActors;                                 // 0x128(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x138(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x140(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4995[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x144(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraceTag;                                          // 0x148(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x150(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x151(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4996[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x154(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x158(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4997[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x150 (0x150 - 0x0)
// Function ShooterGame.VictoryCore.VTraceSingleBP
struct UVictoryCore_VTraceSingleBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0xF8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x110(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x128(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4998[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x12C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraceTag;                                          // 0x130(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x138(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4999[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorToIgnore;                                     // 0x140(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x148(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_499A[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB8 (0xB8 - 0x0)
// Function ShooterGame.VictoryCore.VTraceShapeMultiBP
struct UVictoryCore_VTraceShapeMultiBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutHits;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x18(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class AActor*>                        ExtraIgnoreActors;                                 // 0x48(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x58(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShapeRadius;                                       // 0x60(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShapeHalfHeight;                                   // 0x64(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShapeBoxExtent;                                    // 0x68(0x18)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ShapeRotation;                                     // 0x80(0x18)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x98(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_499B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x9C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0xA0(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0xA1(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_499C[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0xA4(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0xAC(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xB0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_499D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x198 (0x198 - 0x0)
// Function ShooterGame.VictoryCore.VTraceShapeBP
struct UVictoryCore_VTraceShapeBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FHitResult                            HitOut;                                            // 0x38(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ExtraIgnoreActors;                                 // 0x128(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x138(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShapeRadius;                                       // 0x140(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ShapeHalfHeight;                                   // 0x144(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ShapeBoxExtent;                                    // 0x148(0x18)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ShapeRotation;                                     // 0x160(0x18)(BlueprintVisible, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x178(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_499E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        CollisionGroups;                                   // 0x17C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x180(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x181(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_499F[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0x184(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x18C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x190(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49A0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.VictoryCore.VTraceMultiBP_IgnoreActorsArray
struct UVictoryCore_VTraceMultiBP_IgnoreActorsArray_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutHits;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x18(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	TArray<class AActor*>                        ExtraIgnoreActors;                                 // 0x48(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x58(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CollisionGroups;                                   // 0x60(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SphereRadius;                                      // 0x64(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x68(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x80(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x81(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x82(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_49A1[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0x84(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceChannelForceOverlap;                         // 0x8C(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoSort;                                           // 0x8D(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bJustDoSphereOverlapAtStartLoc;                    // 0x8E(0x1)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49A2[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x90(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x94(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49A3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.VictoryCore.VTraceMultiBP
struct UVictoryCore_VTraceMultiBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutHits;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x18(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class AActor*                                InIgnoreActor;                                     // 0x48(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        CollisionGroups;                                   // 0x50(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SphereRadius;                                      // 0x54(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x58(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x71(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x72(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_49A4[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  TraceTag;                                          // 0x74(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceChannelForceOverlap;                         // 0x7C(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoSort;                                           // 0x7D(0x1)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49A5[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                AdditionalIgnoreActor;                             // 0x80(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                AnotherIgnoreActor;                                // 0x88(0x8)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bJustDoSphereOverlapAtStartLoc;                    // 0x90(0x1)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49A6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x94(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x98(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49A7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x170 (0x170 - 0x0)
// Function ShooterGame.VictoryCore.VTraceAgainstActorExpensive
struct UVictoryCore_VTraceAgainstActorExpensive_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FHitResult                            HitOut;                                            // 0x38(0xF0)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ActorToTraceAgainst;                               // 0x128(0x8)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x130(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_49A8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	int64                                        CollisionGroups;                                   // 0x138(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SphereRadius;                                      // 0x140(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	bool                                         bReturnPhysMaterial;                               // 0x144(0x1)(Edit, ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x145(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_49A9[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BoxExtent;                                         // 0x148(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	class FName                                  TraceTag;                                          // 0x160(0x8)(ConstParm, Net, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSort;                                             // 0x168(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x169(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49AA[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.VNewObjectTransient
struct UVictoryCore_VNewObjectTransient_Params
{
public:
	class UClass*                                ClassToUse;                                        // 0x0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.VNewObjectFromBlueprintOuter
struct UVictoryCore_VNewObjectFromBlueprintOuter_Params
{
public:
	class UObject*                               OuterObject;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ClassToUse;                                        // 0x8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.VNewObjectFromBlueprint
struct UVictoryCore_VNewObjectFromBlueprint_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                ClassToUse;                                        // 0x8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.VisualLog_Print
struct UVictoryCore_VisualLog_Print_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	bool                                         bIsError;                                          // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_49AB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.VisualLog_Location
struct UVictoryCore_VisualLog_Location_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	bool                                         bIsError;                                          // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_49AC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x20(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          PointColor;                                        // 0x38(0x10)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	float                                        Size;                                              // 0x48(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config)
	bool                                         bAlsoPrintMessage;                                 // 0x4C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49AD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.VisualLog_LineSegment
struct UVictoryCore_VisualLog_LineSegment_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	bool                                         bIsError;                                          // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_49AE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Start;                                             // 0x20(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x38(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FLinearColor                          LineColor;                                         // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Thickness;                                         // 0x60(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bAlsoPrintMessage;                                 // 0x64(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49AF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.VisualLog_Histogram
struct UVictoryCore_VisualLog_Histogram_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	struct FVector2D                             DataSample;                                        // 0x8(0x10)(Edit, ConstParm, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GraphName;                                         // 0x18(0x8)(Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  DataName;                                          // 0x20(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.VisualLog_AxisAlignedBox
struct UVictoryCore_VisualLog_AxisAlignedBox_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	bool                                         bIsError;                                          // 0x18(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               BoxMin;                                            // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxMax;                                            // 0x38(0x18)(Edit, ConstParm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          BoxColor;                                          // 0x50(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlsoPrintMessage;                                 // 0x60(0x1)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.VictoryCore.ViewTrailer
struct UVictoryCore_ViewTrailer_Params
{
public:
	bool                                         bAnimatedSeriesTrailer;                            // 0x0(0x1)(ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bARK2Trailer;                                      // 0x1(0x1)(Edit, Net, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.ViewDirectionAngleOffset
struct UVictoryCore_ViewDirectionAngleOffset_Params
{
public:
	struct FVector                               ViewDirection;                                     // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               RightVector;                                       // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AngleOffsetDegrees;                                // 0x30(0x4)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxAngleDegreesBeforeInterpToUp;                   // 0x34(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.VectorDistance
struct UVictoryCore_VectorDistance_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        ReturnValue;                                       // 0x30(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49B2[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.UseCooldown
struct UVictoryCore_UseCooldown_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       CooldownClock;                                     // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.UnRegisterComponentBP
struct UVictoryCore_UnRegisterComponentBP_Params
{
public:
	class UActorComponent*                       Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.TrimArray_Vector
struct UVictoryCore_TrimArray_Vector_Params
{
public:
	TArray<struct FVector>                       Array;                                             // 0x0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor)
	int32                                        MaxLength;                                         // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRemoveFromEnd;                                    // 0x14(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.TrimArray_Float
struct UVictoryCore_TrimArray_Float_Params
{
public:
	TArray<float>                                Array;                                             // 0x0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor)
	int32                                        MaxLength;                                         // 0x10(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRemoveFromEnd;                                    // 0x14(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.TransformVectorByScreenProjectionGlobalTransform
struct UVictoryCore_TransformVectorByScreenProjectionGlobalTransform_Params
{
public:
	struct FVector2D                             OutVec;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1B0 (0x1B0 - 0x0)
// Function ShooterGame.VictoryCore.TraceProjectileArc
struct UVictoryCore_TraceProjectileArc_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FProjectileArc                        Arc;                                               // 0x8(0x58)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FHitResult                            HitResult;                                         // 0x60(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	struct FVector                               EndLocation;                                       // 0x150(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        EndArcTime;                                        // 0x168(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ArcPeakLocation;                                   // 0x170(0x18)(ExportObject, Net, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxArcLength;                                      // 0x188(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49B6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x190(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        ArcTimeStep;                                       // 0x1A0(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x1A4(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceObjectTypeOnly;                              // 0x1A5(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x1A6(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_49B7[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x1A8(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1AC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49B8[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.ToggleFreezeLevelStreaming
struct UVictoryCore_ToggleFreezeLevelStreaming_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.TimeSince_Utc
struct UVictoryCore_TimeSince_Utc_Params
{
public:
	double                                       OldTime;                                           // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49B9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.TimeSince_Network
struct UVictoryCore_TimeSince_Network_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       OldTime;                                           // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49BA[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.TimeSince
struct UVictoryCore_TimeSince_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       OldTime;                                           // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49BB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.TimeSeconds
struct UVictoryCore_TimeSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49BC[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.SupportsShaderModel5
struct UVictoryCore_SupportsShaderModel5_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.StringToIntAscii
struct UVictoryCore_StringToIntAscii_Params
{
public:
	class FString                                SourceString;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        StringIndex;                                       // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.StringReferenceToClass
struct UVictoryCore_StringReferenceToClass_Params
{
public:
	class FString                                StringReference;                                   // 0x0(0x10)(ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.StopMusic
struct UVictoryCore_StopMusic_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                TrackToStop;                                       // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CrossFadeOutDuration;                              // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49BD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.StopCompanionEventForPlayer
struct UVictoryCore_StopCompanionEventForPlayer_Params
{
public:
	class APrimalCharacter*                      Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.StopAllMusicTracks
struct UVictoryCore_StopAllMusicTracks_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SteamOverlayOpenURL
struct UVictoryCore_SteamOverlayOpenURL_Params
{
public:
	class FString                                ToURL;                                             // 0x0(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.VictoryCore.StaticPlaySoundAtLocation
struct UVictoryCore_StaticPlaySoundAtLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class USoundBase*                            Sound;                                             // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        VolumeMultiplier;                                  // 0x40(0x4)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        PitchMultiplier;                                   // 0x44(0x4)(ConstParm, BlueprintVisible, OutParm, Config, EditConst, InstancedReference)
	float                                        StartTime;                                         // 0x48(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49BE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundAttenuation*                     AttenuationSettings;                               // 0x50(0x8)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	class USoundConcurrency*                     ConcurrencySettings;                               // 0x58(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class AActor*                                OwningActor;                                       // 0x60(0x8)(Edit, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	class UInitialActiveSoundParams*             InitialParams;                                     // 0x68(0x8)(ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAlwaysPlay;                                       // 0x70(0x1)(Edit, EditFixedSize, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49BF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.StaticGetTimeSince
struct UVictoryCore_StaticGetTimeSince_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       Time;                                              // 0x8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49C0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.StaticCheckForCommand
struct UVictoryCore_StaticCheckForCommand_Params
{
public:
	class FString                                CommandName;                                       // 0x0(0x10)(Edit, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49C1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.StartCompanionEventForPlayer
struct UVictoryCore_StartCompanionEventForPlayer_Params
{
public:
	class APrimalCharacter*                      Player;                                            // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FCompanionEventData                   EventData;                                         // 0x8(0x50)(ConstParm, Net, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                EventActor;                                        // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.SplineLineTrace
struct UVictoryCore_SplineLineTrace_Params
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x0(0x8)(BlueprintVisible, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x8(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutHits;                                           // 0x18(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	int32                                        NumTracesPerSegment;                               // 0x28(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x2C(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         bStopOnBlockingHit;                                // 0x2D(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C2[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x30(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49C3[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.SphereOverlapFast
struct UVictoryCore_SphereOverlapFast_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Loc;                                               // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49C4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.SpawnSaddleAttachedStructure
struct UVictoryCore_SpawnSaddleAttachedStructure_Params
{
public:
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                StructureToSpawn;                                  // 0x8(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class APrimalStructure*                      ParentStructure;                                   // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bLinkToParent;                                     // 0x48(0x1)(ConstParm, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ConfigIndex;                                       // 0x4C(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  SKAttachmentSocketOrBoneName;                      // 0x50(0x8)(BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalStructure*                      ReturnValue;                                       // 0x58(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.VictoryCore.SpawnFollowerBasedOnRNG
struct UVictoryCore_SpawnFollowerBasedOnRNG_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                WeightedChanceArray;                               // 0x10(0x10)(Edit, Net, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalDinoCharacter>    FollowerClass;                                     // 0x20(0x30)(ConstParm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnChanceMultiplier;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpawnCountMultiplier;                              // 0x54(0x4)(ConstParm, ExportObject, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsChild;                                          // 0x58(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AgeMin;                                            // 0x5C(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AgeMax;                                            // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x68(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.SpawnFollower
struct UVictoryCore_SpawnFollower_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TSoftClassPtr<class APrimalDinoCharacter>    FollowerClass;                                     // 0x10(0x30)(ConstParm, OutParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsChild;                                          // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        AgeMin;                                            // 0x44(0x4)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        AgeMax;                                            // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49C9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x50(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x180 (0x180 - 0x0)
// Function ShooterGame.VictoryCore.SpawnCustomDino
struct UVictoryCore_SpawnCustomDino_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x38(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	class AShooterPlayerController*              OwnerPlayerController;                             // 0x158(0x8)(Edit, ExportObject, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x160(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyRotationToSpawnOffset;                       // 0x164(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bUseExactSpawnLocation;                            // 0x165(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSkipAddingTamedLevels;                            // 0x166(0x1)(ConstParm, ExportObject, Net, Parm, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bSuppressTamingNotifications;                      // 0x167(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AMissionType*                          Mission;                                           // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class UClass*                                ColorSet;                                          // 0x170(0x8)(ConstParm, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x178(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.VictoryCore.SpawnBoxBrushActorFast
struct UVictoryCore_SpawnBoxBrushActorFast_Params
{
public:
	class UClass*                                BrushType;                                         // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CA[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            BrushTransform;                                    // 0x10(0x60)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x70(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	class ABrush*                                ReturnValue;                                       // 0x88(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.VictoryCore.SpawnBoxBrushActor
struct UVictoryCore_SpawnBoxBrushActor_Params
{
public:
	class UClass*                                BrushType;                                         // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CB[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            BrushTransform;                                    // 0x10(0x60)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x70(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	class ABrush*                                ReturnValue;                                       // 0x88(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.SpawnActorInWorld
struct UVictoryCore_SpawnActorInWorld_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                AnActorClass;                                      // 0x8(0x8)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               AtLocation;                                        // 0x10(0x18)(Edit, ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              AtRotation;                                        // 0x28(0x18)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class USceneComponent*                       AttachToComponent;                                 // 0x40(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        DataIndex;                                         // 0x48(0x4)(Edit, Net, OutParm, ZeroConstructor, Transient, Config, GlobalConfig, SubobjectReference)
	class FName                                  AttachSocketName;                                  // 0x4C(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49CC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                OwnerActor;                                        // 0x58(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class APawn*                                 InstigatorPawn;                                    // 0x60(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.SpawnActorDeferred
struct UVictoryCore_SpawnActorDeferred_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UObject*                               WorldContextObject;                                // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	class AActor*                                Owner;                                             // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor)
	class APawn*                                 Instigator;                                        // 0x48(0x8)(ConstParm, BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bNoCollisionFail;                                  // 0x50(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CD[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x58(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.SortPointsByDistance
struct UVictoryCore_SortPointsByDistance_Params
{
public:
	struct FVector                               FromLoc;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       Points;                                            // 0x18(0x10)(Edit, Parm, OutParm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	TArray<struct FVector>                       ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.SortActorsByType
struct UVictoryCore_SortActorsByType_Params
{
public:
	TArray<class AActor*>                        Actors;                                            // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.SortActorsByTag
struct UVictoryCore_SortActorsByTag_Params
{
public:
	int32                                        TagIndex;                                          // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        Actors;                                            // 0x8(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.SortActorsByDistanceReturnNearest
struct UVictoryCore_SortActorsByDistanceReturnNearest_Params
{
public:
	struct FVector                               FromLoc;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        Actors;                                            // 0x18(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bRemoveNullEntries;                                // 0x28(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49CF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x30(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.SortActorsByDistance
struct UVictoryCore_SortActorsByDistance_Params
{
public:
	struct FVector                               FromLoc;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        Actors;                                            // 0x18(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.SimpleReplaceUnicodeWithSupportedAlternatives
struct UVictoryCore_SimpleReplaceUnicodeWithSupportedAlternatives_Params
{
public:
	class FString                                OriginalString;                                    // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.SimpleFloatString
struct UVictoryCore_SimpleFloatString_Params
{
public:
	float                                        InputVal;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D0[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedVector
struct UVictoryCore_SimpleCurveInterpClampedVector_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0x34(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedTransform
struct UVictoryCore_SimpleCurveInterpClampedTransform_Params
{
public:
	struct FTransform                            A;                                                 // 0x0(0x60)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FTransform                            B;                                                 // 0x60(0x60)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0xC0(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0xC4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D2[0xB];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            ReturnValue;                                       // 0xD0(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedRotator
struct UVictoryCore_SimpleCurveInterpClampedRotator_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bShortestPath;                                     // 0x34(0x1)(ConstParm, BlueprintVisible, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0x35(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveInterpClampedLinearColor
struct UVictoryCore_SimpleCurveInterpClampedLinearColor_Params
{
public:
	struct FLinearColor                          A;                                                 // 0x0(0x10)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FLinearColor                          B;                                                 // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x20(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0x24(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D4[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveInterpClamped
struct UVictoryCore_SimpleCurveInterpClamped_Params
{
public:
	float                                        A;                                                 // 0x0(0x4)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	float                                        B;                                                 // 0x4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x8(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0xC(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.VictoryCore.SimpleCurveEval
struct UVictoryCore_SimpleCurveEval_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	enum class ESimpleCurve                      CurveType;                                         // 0x4(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49D6[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.ShowEditorNotification
struct UVictoryCore_ShowEditorNotification_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	enum class EEditorMessageLogLevel            LogLevel;                                          // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D7[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        Duration;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         bServerOnly;                                       // 0x20(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_49D8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetTickGroupBP
struct UVictoryCore_SetTickGroupBP_Params
{
public:
	class UActorComponent*                       Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	enum class ETickingGroup                     TickGroup;                                         // 0x8(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, Config, EditConst, SubobjectReference)
	uint8                                        Pad_49D9[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetSessionPrefix
struct UVictoryCore_SetSessionPrefix_Params
{
public:
	class FString                                InPrefix;                                          // 0x0(0x10)(Edit, Net, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.SetSelectedLevelActors
struct UVictoryCore_SetSelectedLevelActors_Params
{
public:
	TArray<class AActor*>                        ActorsToSelect;                                    // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClearPreviousSelection;                           // 0x10(0x1)(BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DA[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.SetMultiUseEntryPriority
struct UVictoryCore_SetMultiUseEntryPriority_Params
{
public:
	TArray<struct FMultiUseEntry>                Entries;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	bool                                         bFindByUseIndexInsteadOfArrayIndex;                // 0x10(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Index;                                             // 0x14(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	int32                                        NewPriority;                                       // 0x18(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1C(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49DC[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetMousePosition
struct UVictoryCore_SetMousePosition_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        X;                                                 // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Y;                                                 // 0xC(0x4)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetMaterialColorizationFromItemColors
struct UVictoryCore_SetMaterialColorizationFromItemColors_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class UMaterialInstanceDynamic*              DynamicMic;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetLevelActorFolderPath
struct UVictoryCore_SetLevelActorFolderPath_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class FName                                  FolderPath;                                        // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetLastMapPlayed
struct UVictoryCore_SetLastMapPlayed_Params
{
public:
	class FString                                NewLastMapPlayed;                                  // 0x0(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.SetGrassEnable
struct UVictoryCore_SetGrassEnable_Params
{
public:
	bool                                         bGrassEnable;                                      // 0x0(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.VictoryCore.SetDinoSetupPointsPerStat
struct UVictoryCore_SetDinoSetupPointsPerStat_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	enum class EPrimalCharacterStatusValue       StatusType;                                        // 0x120(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        Value;                                             // 0x124(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	bool                                         bIsPlayerAdded;                                    // 0x128(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAddInsteadOfSet;                                  // 0x129(0x1)(Edit, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DE[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.SetComponentCustomNavigableGeometry
struct UVictoryCore_SetComponentCustomNavigableGeometry_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        CustomNavigableGeometryType;                       // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49DF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.SetBoolArrayElemTrue
struct UVictoryCore_SetBoolArrayElemTrue_Params
{
public:
	TArray<bool>                                 TheArray;                                          // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheIndex;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E0[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.SetBoolArrayElemFalse
struct UVictoryCore_SetBoolArrayElemFalse_Params
{
public:
	TArray<bool>                                 TheArray;                                          // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        TheIndex;                                          // 0x10(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xA0 (0xA0 - 0x0)
// Function ShooterGame.VictoryCore.SetAnimBPOffsets
struct UVictoryCore_SetAnimBPOffsets_Params
{
public:
	class UAnimInstance*                         ForAnimInstance;                                   // 0x0(0x8)(BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               RootLocationOffset;                                // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FRotator                              RootRotationOffset;                                // 0x20(0x18)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49E2[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            RootOffsetTransform;                               // 0x40(0x60)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.SetAllowControllerInputWithCursor
struct UVictoryCore_SetAllowControllerInputWithCursor_Params
{
public:
	bool                                         bAllow;                                            // 0x0(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, Transient, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.ServerSearchFoliageByResource
struct UVictoryCore_ServerSearchFoliageByResource_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_49E3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOverlappedFoliageElement>     OutFoliage;                                        // 0x28(0x10)(Edit, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        HarvestResources;                                  // 0x38(0x10)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bVisibleAndActiveOnly;                             // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeUsableFoliage;                             // 0x49(0x1)(Edit, ExportObject, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeMeshFoliage;                               // 0x4A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSortByDistance;                                   // 0x4B(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x4C(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.ServerSearchFoliage
struct UVictoryCore_ServerSearchFoliage_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Origin;                                            // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_49E5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FOverlappedFoliageElement>     OutFoliage;                                        // 0x28(0x10)(Edit, Net, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bVisibleAndActiveOnly;                             // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeUsableFoliage;                             // 0x39(0x1)(Edit, ExportObject, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIncludeMeshFoliage;                               // 0x3A(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSortByDistance;                                   // 0x3B(0x1)(ConstParm, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bReverseSort;                                      // 0x3C(0x1)(Edit, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E6[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClassBitMask
struct UVictoryCore_ServerOctreeOverlapActorsClassBitMask_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        OctreeTypeBitMask;                                 // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ActorClass;                                        // 0x28(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceActorLocationDistanceCheck;                  // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E7[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClass
struct UVictoryCore_ServerOctreeOverlapActorsClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EServerOctreeGroup                OctreeType;                                        // 0x24(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E8[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ActorClass;                                        // 0x28(0x8)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bForceActorLocationDistanceCheck;                  // 0x30(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49E9[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsBitMask
struct UVictoryCore_ServerOctreeOverlapActorsBitMask_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        OctreeTypeBitMask;                                 // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceActorLocationDistanceCheck;                  // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49EA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.ServerOctreeOverlapActors
struct UVictoryCore_ServerOctreeOverlapActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class EServerOctreeGroup                OctreeType;                                        // 0x24(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceActorLocationDistanceCheck;                  // 0x25(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49EB[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ServerCheckMeshingOnActor
struct UVictoryCore_ServerCheckMeshingOnActor_Params
{
public:
	class AActor*                                OnActor;                                           // 0x0(0x8)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceUseActorCenterBounds;                        // 0x8(0x1)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x9(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49EC[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.SelectVectorIfWithinRange
struct UVictoryCore_SelectVectorIfWithinRange_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         PickedA;                                           // 0x30(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49ED[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        MaxDistance;                                       // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.SelectCloserVector
struct UVictoryCore_SelectCloserVector_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               A;                                                 // 0x18(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	bool                                         PickedA;                                           // 0x48(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49EE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.RotateDirToTargetWithAngleLimits
struct UVictoryCore_RotateDirToTargetWithAngleLimits_Params
{
public:
	struct FVector                               RotateDir;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TowardsDir;                                        // 0x18(0x18)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              WithAngleLimits;                                   // 0x30(0x18)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceZeroRoll;                                    // 0x48(0x1)(ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49EF[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ReupdateCaptures
struct UVictoryCore_ReupdateCaptures_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bReinitSkylights;                                  // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.ResetMousePositionToCenter
struct UVictoryCore_ResetMousePositionToCenter_Params
{
public:
	class APlayerController*                     Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.ResetCooldown
struct UVictoryCore_ResetCooldown_Params
{
public:
	double                                       CooldownClock;                                     // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.RemoveRollFromRotator
struct UVictoryCore_RemoveRollFromRotator_Params
{
public:
	struct FRotator                              FromRotator;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.RemovePitchAndRollFromRotator
struct UVictoryCore_RemovePitchAndRollFromRotator_Params
{
public:
	struct FRotator                              FromRotator;                                       // 0x0(0x18)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.RemoveLocalPlayer
struct UVictoryCore_RemoveLocalPlayer_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.RemoveInvalidObjectsInContainer
struct UVictoryCore_RemoveInvalidObjectsInContainer_Params
{
public:
	TArray<class APrimalDinoCharacter*>          FContainer;                                        // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.RemoveFromActorList
struct UVictoryCore_RemoveFromActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ActorListNum;                                      // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F1[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorRef;                                          // 0x10(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.RemoveActorFromCustomActorList
struct UVictoryCore_RemoveActorFromCustomActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  SearchCustomTag;                                   // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class AActor*                                ActorToRemove;                                     // 0x10(0x8)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49F2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.RegisterComponentBP
struct UVictoryCore_RegisterComponentBP_Params
{
public:
	class UActorComponent*                       Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.RecursivelyApplDynamicMaterialParamsToMeshAndChildren_Helper
struct UVictoryCore_RecursivelyApplDynamicMaterialParamsToMeshAndChildren_Helper_Params
{
public:
	class UMeshComponent*                        WithMesh;                                          // 0x0(0x8)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DynamicMaterialParams_Scalar_Names;                // 0x8(0x10)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<float>                                DynamicMaterialParams_Scalar;                      // 0x18(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DynamicMaterialParams_Vector_Names;                // 0x28(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       DynamicMaterialParams_Vector;                      // 0x38(0x10)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          DynamicMaterialParams_Texture_Names;               // 0x48(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UTexture*>                      DynamicMaterialParams_Texture;                     // 0x58(0x10)(ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.RecordMeshingMetrics
struct UVictoryCore_RecordMeshingMetrics_Params
{
public:
	class AActor*                                ForActor;                                          // 0x0(0x8)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         bWasDestroyed;                                     // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.ReallySupportsShaderModel5
struct UVictoryCore_ReallySupportsShaderModel5_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.RandomPointInBoundingBoxFromStream
struct UVictoryCore_RandomPointInBoundingBoxFromStream_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               BoxExtent;                                         // 0x18(0x18)(Edit, ConstParm, DisableEditOnInstance, SubobjectReference)
	struct FRandomStream                         Stream;                                            // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm)
	struct FVector                               ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PureDefaultObject
struct UVictoryCore_PureDefaultObject_Params
{
public:
	class UObject*                               FromObjectInstance;                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PureClassDefaultObject
struct UVictoryCore_PureClassDefaultObject_Params
{
public:
	class UClass*                                FromClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.ProjectWorldLocationToScreenOrScreenEdgePosition
struct UVictoryCore_ProjectWorldLocationToScreenOrScreenEdgePosition_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x20(0x10)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ScreenMarginPercent;                               // 0x30(0x4)(Edit, ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         WidgetSpace;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         OnScreen;                                          // 0x35(0x1)(Edit, ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAdjustWithScreenDPI;                              // 0x36(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x37(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.ProjectVectorOntoInsideOfSphere
struct UVictoryCore_ProjectVectorOntoInsideOfSphere_Params
{
public:
	struct FVector                               ProjectVector;                                     // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ProjectVectorLocation;                             // 0x18(0x18)(ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SphereOrigin;                                      // 0x30(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	bool                                         bOnlyProjectIfVectorIsLeavingSphere;               // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.ProjectScreenLocationIntoWorld
struct UVictoryCore_ProjectScreenLocationIntoWorld_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             ScreenLocation;                                    // 0x8(0x10)(BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        ProjectionDist;                                    // 0x18(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F5[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.ProjectLocationToEdgeOfSphere
struct UVictoryCore_ProjectLocationToEdgeOfSphere_Params
{
public:
	bool                                         bOutDidProject;                                    // 0x0(0x1)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F6[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ForLocation;                                       // 0x8(0x18)(Edit, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               SphereOrigin;                                      // 0x20(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Config, InstancedReference, SubobjectReference)
	float                                        SphereRadius;                                      // 0x38(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	bool                                         bOnlyProjectIfWithinRadius;                        // 0x3C(0x1)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceProjection2D;                                // 0x3D(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebug;                                            // 0x3E(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_49F7[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                DebugContextActor;                                 // 0x40(0x8)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDuration;                                     // 0x48(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PrintMessageInShippingBuild
struct UVictoryCore_PrintMessageInShippingBuild_Params
{
public:
	class FString                                Msg;                                               // 0x0(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.VictoryCore.PrecisionRound
struct UVictoryCore_PrecisionRound_Params
{
public:
	float                                        InputVal;                                          // 0x0(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        Precision;                                         // 0x4(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.PointsRandomDist
struct UVictoryCore_PointsRandomDist_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        NumPoints;                                         // 0x18(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x1C(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        PointRadius;                                       // 0x20(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49F9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FVector>                       ReturnValue;                                       // 0x28(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.PointsOnAGrid
struct UVictoryCore_PointsOnAGrid_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FRotator                              Rotation;                                          // 0x20(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        MinSize;                                           // 0x3C(0x4)(ExportObject, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumPoints;                                         // 0x40(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x44(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       ReturnValue;                                       // 0x48(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.PointsOnACircle
struct UVictoryCore_PointsOnACircle_Params
{
public:
	struct FVector                               Center;                                            // 0x0(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        NumPoints;                                         // 0x1C(0x4)(BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FVector>                       ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.PointOnSphere
struct UVictoryCore_PointOnSphere_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        DegreesI;                                          // 0x4(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DegreesJ;                                          // 0x8(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.PointOnCircle
struct UVictoryCore_PointOnCircle_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        AngleDegrees;                                      // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.PlayMusic
struct UVictoryCore_PlayMusic_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                MusicFile;                                         // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bLooping;                                          // 0x18(0x1)(ConstParm, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, EditConst)
	uint8                                        Pad_49FB[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        CrossfadeDuration;                                 // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bDontFadeInIfNoOtherTracks;                        // 0x20(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPlayEvenIfCurrentlyPlaying;                       // 0x21(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        OverrideVolume;                                    // 0x24(0x4)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.PlayMovie
struct UVictoryCore_PlayMovie_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                MoviePath;                                         // 0x8(0x10)(BlueprintVisible, ExportObject, OutParm, ReturnParm, Config, GlobalConfig, SubobjectReference)
	bool                                         bMovieIsSkippable;                                 // 0x18(0x1)(BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_49FD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	FDelegateProperty_                           OnMoviePlaybackFinishedDelegate;                   // 0x1C(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bPlayedOnClient;                                   // 0x2C(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class EPlayMovieVolumeType              VolumeType;                                        // 0x2D(0x1)(BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x2E(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49FE[0x1];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PlayerOwnsScorchedEarthServer
struct UVictoryCore_PlayerOwnsScorchedEarthServer_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_49FF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PlayerOwnsGenesisSeasonPassServer
struct UVictoryCore_PlayerOwnsGenesisSeasonPassServer_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A00[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PlayerOwnsExtinctionServer
struct UVictoryCore_PlayerOwnsExtinctionServer_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A01[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.PlayerOwnsAberrationServer
struct UVictoryCore_PlayerOwnsAberrationServer_Params
{
public:
	class AShooterPlayerController*              Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A02[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD8 (0xD8 - 0x0)
// Function ShooterGame.VictoryCore.PlayCompanionReactionToPlayers
struct UVictoryCore_PlayCompanionReactionToPlayers_Params
{
public:
	TArray<class APrimalCharacter*>              PlayersWhoGetReaction;                             // 0x0(0x10)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData;                                      // 0x10(0xB0)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ForcePlayNow;                                      // 0xC0(0x1)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A03[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIconOverride;                              // 0xC8(0x8)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         RestrictedEnvironmentalReaction;                   // 0xD0(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A04[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        UniqueID;                                          // 0xD4(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0xD0 (0xD0 - 0x0)
// Function ShooterGame.VictoryCore.PlayCompanionReactionOnSolePlayer
struct UVictoryCore_PlayCompanionReactionOnSolePlayer_Params
{
public:
	class APrimalCharacter*                      PlayersWhoGetReaction;                             // 0x0(0x8)(ConstParm, ExportObject, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FCompanionReactionData                ReactionData;                                      // 0x8(0xB0)(Edit, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ForcePlayNow;                                      // 0xB8(0x1)(Edit, ConstParm, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A05[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UMaterialInterface*                    DialogueIconOverride;                              // 0xC0(0x8)(ConstParm, ExportObject, Parm, OutParm, DisableEditOnTemplate, EditConst, InstancedReference, SubobjectReference)
	bool                                         RestrictedEnvironmentalReaction;                   // 0xC8(0x1)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A06[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        UniqueID;                                          // 0xCC(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.PlaceStructure
struct UVictoryCore_PlaceStructure_Params
{
public:
	class AShooterCharacter*                     PlacingPawn;                                       // 0x0(0x8)(Edit, ConstParm, ExportObject, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                StructureToPlace;                                  // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FItemNetID                            ItemID;                                            // 0x10(0x8)(BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         DisplayFailMessage;                                // 0x18(0x1)(Edit, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A07[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.OwnsSteamAppID
struct UVictoryCore_OwnsSteamAppID_Params
{
public:
	int32                                        AppID;                                             // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A08[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsScorchedEarth
struct UVictoryCore_OwnsScorchedEarth_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsGenesisSeasonPass
struct UVictoryCore_OwnsGenesisSeasonPass_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsGenesis
struct UVictoryCore_OwnsGenesis_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsExtinction
struct UVictoryCore_OwnsExtinction_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.OwnsDLC
struct UVictoryCore_OwnsDLC_Params
{
public:
	class FString                                DLCName;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A09[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsCrystalIsles
struct UVictoryCore_OwnsCrystalIsles_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.OwnsAberration
struct UVictoryCore_OwnsAberration_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.OverlappingStationaryObjectsTraceBP
struct UVictoryCore_OverlappingStationaryObjectsTraceBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class APrimalCharacter*                      SourceCharacter;                                   // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FOverlapResult>                Overlaps;                                          // 0x10(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x20(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x3C(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A0A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                InIgnoreActor;                                     // 0x40(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraceName;                                         // 0x48(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bComplexOverlapTest;                               // 0x50(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x51(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A0B[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.OverlappingActorsTraceBP
struct UVictoryCore_OverlappingActorsTraceBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FOverlapResult>                Overlaps;                                          // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x34(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A0C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                InIgnoreActor;                                     // 0x38(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraceName;                                         // 0x40(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bComplexOverlapTest;                               // 0x48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x49(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A0D[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.OverlappingActorsBP
struct UVictoryCore_OverlappingActorsBP_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FOverlapResult>                Overlaps;                                          // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	float                                        Radius;                                            // 0x30(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        CollisionGroups;                                   // 0x34(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                InIgnoreActor;                                     // 0x38(0x8)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  TraceName;                                         // 0x40(0x8)(Edit, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bComplexOverlapTest;                               // 0x48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x49(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A0E[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.OpenStorePageForDLC
struct UVictoryCore_OpenStorePageForDLC_Params
{
public:
	class FString                                DLCName;                                           // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.OpenMapEx
struct UVictoryCore_OpenMapEx_Params
{
public:
	class FString                                MapName;                                           // 0x0(0x10)(BlueprintVisible, ExportObject, Net, Parm, OutParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bHostNonDedicatedSession;                          // 0x10(0x1)(ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSeamlessTravel;                                   // 0x11(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A0F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                AdditionalParams;                                  // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHostNewSession;                                   // 0x28(0x1)(Edit, BlueprintVisible, ExportObject, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A10[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SessionName;                                       // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Config, EditConst, SubobjectReference)
	bool                                         bPrivateSession;                                   // 0x40(0x1)(BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A11[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SessionPassword;                                   // 0x48(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                AdminPassword;                                     // 0x58(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ObjectRefToClassRef
struct UVictoryCore_ObjectRefToClassRef_Params
{
public:
	class UObject*                               InObject;                                          // 0x0(0x8)(BlueprintVisible, ExportObject, Parm, ZeroConstructor, Config, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.ObjectIsChildOfSoftRef
struct UVictoryCore_ObjectIsChildOfSoftRef_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	TSoftClassPtr<class UObject>                 ParentClass;                                       // 0x8(0x30)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bExactMatch;                                       // 0x38(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x39(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A12[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.ObjectIsChildOf
struct UVictoryCore_ObjectIsChildOf_Params
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
	class UClass*                                ObjectType;                                        // 0x8(0x8)(BlueprintVisible, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bExactMatch;                                       // 0x10(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A13[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.NormalizeRotator
struct UVictoryCore_NormalizeRotator_Params
{
public:
	struct FRotator                              InRotator;                                         // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.NetworkTimeToRealWorldUtcTime
struct UVictoryCore_NetworkTimeToRealWorldUtcTime_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       NetworkTime;                                       // 0x8(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.MultiTraceProjectSphere
struct UVictoryCore_MultiTraceProjectSphere_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutResults;                                        // 0x8(0x10)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x30(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A14[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        HorizResolution;                                   // 0x34(0x4)(BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        VertResolution;                                    // 0x38(0x4)(BlueprintVisible, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        StartDistance;                                     // 0x3C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        EndDistance;                                       // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        NorthConeSubtractAngle;                            // 0x44(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SouthConeSubtractAngle;                            // 0x48(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        PctChanceToTrace;                                  // 0x4C(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTraceCount;                                     // 0x50(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDrawDebugLines;                                   // 0x54(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A15[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x58(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bStopOnFirstHit;                                   // 0x5C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A16[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.MultiLinePenetrationTraceByChannel
struct UVictoryCore_MultiLinePenetrationTraceByChannel_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FPenetrationTraceHit>          OutResults;                                        // 0x8(0x10)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Start;                                             // 0x18(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	enum class ECollisionChannel                 TraceChannel;                                      // 0x48(0x1)(BlueprintVisible, EditFixedSize, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A17[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x50(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x61(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDrawDebugLines;                                   // 0x62(0x1)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A18[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x64(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugString
struct UVictoryCore_MulticastDrawDebugString_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               TextLocation;                                      // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                Text;                                              // 0x20(0x10)(Edit, Net, OutParm, DisableEditOnTemplate, EditConst)
	class AActor*                                TestBaseActor;                                     // 0x30(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          TextColor;                                         // 0x38(0x10)(BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A19[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugSphere
struct UVictoryCore_MulticastDrawDebugSphere_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        Segments;                                          // 0x24(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A1A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugPoint
struct UVictoryCore_MulticastDrawDebugPoint_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Position;                                          // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Size;                                              // 0x20(0x4)(Edit, ConstParm, Parm, OutParm, ReturnParm, Transient, Config)
	struct FLinearColor                          PointColor;                                        // 0x24(0x10)(ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugLine
struct UVictoryCore_MulticastDrawDebugLine_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LineStart;                                         // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x20(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	float                                        Thickness;                                         // 0x4C(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	bool                                         AllowInShipping;                                   // 0x50(0x1)(ExportObject, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A1B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugCylinder
struct UVictoryCore_MulticastDrawDebugCylinder_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Start;                                             // 0x8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x20(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	int32                                        Segments;                                          // 0x3C(0x4)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A1C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugCoordinateSystem
struct UVictoryCore_MulticastDrawDebugCoordinateSystem_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AxisLoc;                                           // 0x8(0x18)(ConstParm, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FRotator                              AxisRot;                                           // 0x20(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Scale;                                             // 0x38(0x4)(Edit, ConstParm, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, Config)
	float                                        Duration;                                          // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	float                                        Thickness;                                         // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A1D[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugCapsuleWithExtents
struct UVictoryCore_MulticastDrawDebugCapsuleWithExtents_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Top;                                               // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                               Bottom;                                            // 0x20(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x3C(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x50(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A1E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugCapsule
struct UVictoryCore_MulticastDrawDebugCapsule_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	float                                        HalfHeight;                                        // 0x20(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	float                                        Radius;                                            // 0x24(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x28(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FLinearColor                          LineColor;                                         // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A1F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugCamera
struct UVictoryCore_MulticastDrawDebugCamera_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class ACameraActor*                          CameraActor;                                       // 0x8(0x8)(Edit, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	struct FLinearColor                          CameraColor;                                       // 0x10(0x10)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A20[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugBox
struct UVictoryCore_MulticastDrawDebugBox_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Center;                                            // 0x8(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	struct FVector                               Extent;                                            // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x38(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x48(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Duration;                                          // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	uint8                                        Pad_4A21[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.MulticastDrawDebugArrow
struct UVictoryCore_MulticastDrawDebugArrow_Params
{
public:
	class AActor*                                ReplicatedActor;                                   // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LineStart;                                         // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x20(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        ArrowSize;                                         // 0x38(0x4)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x3C(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
};

// 0x250 (0x250 - 0x0)
// Function ShooterGame.VictoryCore.ModifyDinoSetupTargetLevel
struct UVictoryCore_ModifyDinoSetupTargetLevel_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	float                                        LevelMultiplier;                                   // 0x120(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	int32                                        MinLevel;                                          // 0x124(0x4)(Edit, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        MaxLevel;                                          // 0x128(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnInstance, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A22[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FDinoSetup                            ReturnValue;                                       // 0x130(0x120)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.MarkGen2IntroAsSeen
struct UVictoryCore_MarkGen2IntroAsSeen_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function ShooterGame.VictoryCore.MapRangeToCurveClamped
struct UVictoryCore_MapRangeToCurveClamped_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	float                                        InRangeA;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InRangeB;                                          // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutRangeA;                                         // 0xC(0x4)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutRangeB;                                         // 0x10(0x4)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0x14(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A23[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C (0x1C - 0x0)
// Function ShooterGame.VictoryCore.MapAngleRangeToCurveClamped
struct UVictoryCore_MapAngleRangeToCurveClamped_Params
{
public:
	float                                        AngleDegrees;                                      // 0x0(0x4)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InRangeA;                                          // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InRangeB;                                          // 0x8(0x4)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutRangeA;                                         // 0xC(0x4)(ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OutRangeB;                                         // 0x10(0x4)(ConstParm, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ESimpleCurve                      CurveType;                                         // 0x14(0x1)(Edit, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A24[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.VictoryCore.MakePlayerCharacterConfigStructReplicated
struct UVictoryCore_MakePlayerCharacterConfigStructReplicated_Params
{
public:
	bool                                         bIsFemale;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A25[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  BodyColors;                                        // 0x8(0x10)(Edit, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerCharacterName;                               // 0x18(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<float>                                RawBoneModifiers;                                  // 0x28(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerSpawnRegionIndex;                            // 0x38(0x4)(ConstParm, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        HeadHairIndex;                                     // 0x3C(0x1)(Edit, BlueprintVisible, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        FacialHairIndex;                                   // 0x3D(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A26[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PercentOfFullHeadHairGrowth;                       // 0x40(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        PercentOfFullFacialHairGrowth;                     // 0x44(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                OverrideHeadHairColor;                             // 0x48(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                OverrideFacialHairColor;                           // 0x58(0x10)(Edit, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                DynamicMaterialBytes;                              // 0x68(0x10)(ConstParm, BlueprintVisible, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerVoiceCollectionIndex;                        // 0x78(0x4)(ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUsingCustomPlayerVoiceCollection;                 // 0x7C(0x1)(ConstParm, BlueprintVisible, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A27[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPrimalPlayerCharacterConfigStructReplicated ReturnValue;                                       // 0x80(0x110)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.MakePlaneWithPoints
struct UVictoryCore_MakePlaneWithPoints_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FVector                               C;                                                 // 0x30(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A28[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FPlane                                ReturnValue;                                       // 0x50(0x20)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x148 (0x148 - 0x0)
// Function ShooterGame.VictoryCore.MakeHitResult
struct UVictoryCore_MakeHitResult_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               Normal;                                            // 0x18(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, EditConst)
	class UPhysicalMaterial*                     PhysMat;                                           // 0x30(0x8)(ConstParm, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class AActor*                                HitActor;                                          // 0x38(0x8)(ConstParm, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UPrimitiveComponent*                   HitComponent;                                      // 0x40(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	class FName                                  HitBoneName;                                       // 0x48(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        HitItem;                                           // 0x50(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bBlockingHit;                                      // 0x54(0x1)(ConstParm, EditFixedSize, Parm, ZeroConstructor, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A29[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            ReturnValue;                                       // 0x58(0xF0)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.LeadTargetPosition
struct UVictoryCore_LeadTargetPosition_Params
{
public:
	struct FVector                               ProjLocation;                                      // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ProjSpeed;                                         // 0x18(0x4)(Edit, ExportObject, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2A[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               TargetLocation;                                    // 0x20(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TargetVelocity;                                    // 0x38(0x18)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x50(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.LeaderboardColumnNameToString
struct UVictoryCore_LeaderboardColumnNameToString_Params
{
public:
	enum class ELeaderboardColumnName            ColumnType;                                        // 0x0(0x1)(Edit, ConstParm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A2B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.KillTargetCharacterOrStructure
struct UVictoryCore_KillTargetCharacterOrStructure_Params
{
public:
	class AActor*                                ActorToKill;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                DamageCauser;                                      // 0x8(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, SubobjectReference)
	bool                                         bTryDestroyActor;                                  // 0x10(0x1)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x11(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A2C[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.JoinStringArrayWithNewlines
struct UVictoryCore_JoinStringArrayWithNewlines_Params
{
public:
	TArray<class FString>                        SourceArray;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsXboxOneBuild
struct UVictoryCore_IsXboxOneBuild_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsWorkshopIDSubscribed
struct UVictoryCore_IsWorkshopIDSubscribed_Params
{
public:
	class FString                                WorkshopID;                                        // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A2D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsVerboseDisplayEnabled
struct UVictoryCore_IsVerboseDisplayEnabled_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A2E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsValidItemForGrinding
struct UVictoryCore_IsValidItemForGrinding_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A2F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsUWPBuild
struct UVictoryCore_IsUWPBuild_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IsUndermesh
struct UVictoryCore_IsUndermesh_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	struct FVector                               CheckSevenHitLocation;                             // 0x8(0x18)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOverlapping;                                      // 0x20(0x1)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A30[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UActorComponent*                       CheckSevenResult;                                  // 0x28(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DebugDraw;                                         // 0x30(0x1)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, GlobalConfig, DuplicateTransient)
	uint8                                        Pad_4A31[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawSeconds;                                  // 0x34(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A32[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsTimeSince_Utc
struct UVictoryCore_IsTimeSince_Utc_Params
{
public:
	double                                       OldTime;                                           // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckTimeSince;                                    // 0x8(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bForceTrueAtZeroTime;                              // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xD(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A33[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsTimeSince_Network
struct UVictoryCore_IsTimeSince_Network_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       OldTime;                                           // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckTimeSince;                                    // 0x10(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bForceTrueAtZeroTime;                              // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A34[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsTimeSince
struct UVictoryCore_IsTimeSince_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       OldTime;                                           // 0x8(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CheckTimeSince;                                    // 0x10(0x4)(Edit, ExportObject, Net, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bForceTrueAtZeroTime;                              // 0x14(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x15(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A35[0x2];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.IsStringContainedInArray
struct UVictoryCore_IsStringContainedInArray_Params
{
public:
	class FString                                StringToFind;                                      // 0x0(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        ArrayOfStrings;                                    // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, Transient, DisableEditOnInstance, DuplicateTransient)
	int32                                        ReturnValue;                                       // 0x20(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A36[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsSplitscreen
struct UVictoryCore_IsSplitscreen_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsSOTFLobby
struct UVictoryCore_IsSOTFLobby_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsSOTF
struct UVictoryCore_IsSOTF_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsShipping
struct UVictoryCore_IsShipping_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsSavingSaveGame
struct UVictoryCore_IsSavingSaveGame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsRunningTotalConversion
struct UVictoryCore_IsRunningTotalConversion_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsPVEServer
struct UVictoryCore_IsPVEServer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A37[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsPS4Build
struct UVictoryCore_IsPS4Build_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IsPointStuckWithinMesh
struct UVictoryCore_IsPointStuckWithinMesh_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               TestPoint;                                         // 0x8(0x18)(ExportObject, BlueprintReadOnly, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        HemisphereSubdivisions;                            // 0x20(0x4)(BlueprintVisible, ExportObject, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        RayDistance;                                       // 0x24(0x4)(Edit, BlueprintVisible, Net, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PercentageConsideredStuck;                         // 0x28(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A38[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorToIgnore;                                     // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A39[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.IsPointInCone
struct UVictoryCore_IsPointInCone_Params
{
public:
	struct FVector                               Point;                                             // 0x0(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               ConeOrigin;                                        // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ConeDir;                                           // 0x30(0x18)(BlueprintVisible, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConeLength;                                        // 0x48(0x4)(ConstParm, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ConeHalfAngle;                                     // 0x4C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsPlayingMovie
struct UVictoryCore_IsPlayingMovie_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsPlayInEditor
struct UVictoryCore_IsPlayInEditor_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3B[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsOfficialServer
struct UVictoryCore_IsOfficialServer_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsNonHostPlayer
struct UVictoryCore_IsNonHostPlayer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class AController*                           PlayerController;                                  // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsMissionTagActiveAnywhere
struct UVictoryCore_IsMissionTagActiveAnywhere_Params
{
public:
	class AShooterPlayerController*              FromPC;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsMissionActiveAnywhere
struct UVictoryCore_IsMissionActiveAnywhere_Params
{
public:
	class UClass*                                MissionType;                                       // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsLowMemPlatform
struct UVictoryCore_IsLowMemPlatform_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsLockhart
struct UVictoryCore_IsLockhart_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IsLocationLikelyWithinAnIncorrectlyPlacedWaterVolume
struct UVictoryCore_IsLocationLikelyWithinAnIncorrectlyPlacedWaterVolume_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               ImpactLocation;                                    // 0x8(0x18)(BlueprintReadOnly, EditFixedSize, Config, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ImpactDirection;                                   // 0x20(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A3F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsLoadingSaveGame
struct UVictoryCore_IsLoadingSaveGame_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsLinuxOrMacBuild
struct UVictoryCore_IsLinuxOrMacBuild_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsJapanesePS5Build
struct UVictoryCore_IsJapanesePS5Build_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IsInsideOrIntersectsBox
struct UVictoryCore_IsInsideOrIntersectsBox_Params
{
public:
	struct FVector                               BoxOrigin;                                         // 0x0(0x18)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtents;                                        // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UShapeComponent*                       ShapeComponent;                                    // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A40[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IsInsideBox
struct UVictoryCore_IsInsideBox_Params
{
public:
	struct FVector                               BoxOrigin;                                         // 0x0(0x18)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtents;                                        // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UShapeComponent*                       ShapeComponent;                                    // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A41[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsGameWorld
struct UVictoryCore_IsGameWorld_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A42[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsGamePadConnected
struct UVictoryCore_IsGamePadConnected_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsFluidInteractionEnabled
struct UVictoryCore_IsFluidInteractionEnabled_Params
{
public:
	class UObject*                               WorldContext;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A43[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsEpicClient
struct UVictoryCore_IsEpicClient_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsEngramGroupAllowed
struct UVictoryCore_IsEngramGroupAllowed_Params
{
public:
	class AShooterPlayerController*              ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        EngramGroup;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A44[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsEditor
struct UVictoryCore_IsEditor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.IsDistanceLessThan
struct UVictoryCore_IsDistanceLessThan_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Distance;                                          // 0x30(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A45[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.IsDistanceGreaterThan
struct UVictoryCore_IsDistanceGreaterThan_Params
{
public:
	struct FVector                               A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FVector                               B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Distance;                                          // 0x30(0x4)(ConstParm, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A46[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsDinoDuped
struct UVictoryCore_IsDinoDuped_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ID1;                                               // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ID2;                                               // 0xC(0x4)(ConstParm, ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A47[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsCryopodNerfEnabled
struct UVictoryCore_IsCryopodNerfEnabled_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        DamageMult;                                        // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Duration;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	float                                        IncomingDamageMultPercent;                         // 0x10(0x4)(Edit, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A48[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IsCooldownComplete
struct UVictoryCore_IsCooldownComplete_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       CooldownClock;                                     // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CooldownDuration;                                  // 0x10(0x4)(BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x14(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A49[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsConsoleServerBuild
struct UVictoryCore_IsConsoleServerBuild_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.IsConsoleBuild
struct UVictoryCore_IsConsoleBuild_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.IsChildOfClassesSoftRef
struct UVictoryCore_IsChildOfClassesSoftRef_Params
{
public:
	class UClass*                                ChildClass;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<TSoftClassPtr<class UObject>>         ParentClassesArray;                                // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A4A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.IsChildOfClassesSoft
struct UVictoryCore_IsChildOfClassesSoft_Params
{
public:
	class UClass*                                ChildClass;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FString>                        ParentClassesArraySoft;                            // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A4B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.IsChildOfClasses
struct UVictoryCore_IsChildOfClasses_Params
{
public:
	class UClass*                                ChildClass;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UClass*>                        ParentClassesArray;                                // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A4C[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.IsBrainControllingDinoAttached
struct UVictoryCore_IsBrainControllingDinoAttached_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A4D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.InverseTransformVectorByScreenProjectionGlobalTransform
struct UVictoryCore_InverseTransformVectorByScreenProjectionGlobalTransform_Params
{
public:
	struct FVector2D                             OutVec;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC0 (0xC0 - 0x0)
// Function ShooterGame.VictoryCore.InverseTransform
struct UVictoryCore_InverseTransform_Params
{
public:
	struct FTransform                            TransformIn;                                       // 0x0(0x60)(ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, SubobjectReference)
	struct FTransform                            ReturnValue;                                       // 0x60(0x60)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.IntToStringAscii
struct UVictoryCore_IntToStringAscii_Params
{
public:
	int32                                        CharValue;                                         // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A4E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.IntersectsBox
struct UVictoryCore_IntersectsBox_Params
{
public:
	struct FVector                               BoxOrigin;                                         // 0x0(0x18)(Edit, EditFixedSize, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               BoxExtents;                                        // 0x18(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UShapeComponent*                       ShapeComponent;                                    // 0x30(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A4F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.InlineLoadLevels
struct UVictoryCore_InlineLoadLevels_Params
{
public:
	TArray<class FName>                          LevelNames;                                        // 0x0(0x10)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<class FName>                          LevelNamesToUnload;                                // 0x10(0x10)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDisableDistanceStreamingOnLevels;                 // 0x20(0x1)(Edit, BlueprintVisible, Net, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A50[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.Helix
struct UVictoryCore_Helix_Params
{
public:
	float                                        Radius;                                            // 0x0(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        Time;                                              // 0x4(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.HasPlayerSeenGen2Intro
struct UVictoryCore_HasPlayerSeenGen2Intro_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A51[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.HasCraftingRequirementsGreaterThanOne
struct UVictoryCore_HasCraftingRequirementsGreaterThanOne_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A52[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GrindItemIntoInventory
struct UVictoryCore_GrindItemIntoInventory_Params
{
public:
	class UPrimalItem*                           Item;                                              // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Config)
	class UPrimalInventoryComponent*             Inventory;                                         // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bGrindStack;                                       // 0x10(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A53[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxQuantityToGrind;                                // 0x14(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GrindGiveItemsPercent;                             // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemsToGivePerGrind;                            // 0x1C(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A54[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GrindAllItemsToInventory
struct UVictoryCore_GrindAllItemsToInventory_Params
{
public:
	class UPrimalInventoryComponent*             Inventory;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	bool                                         bGrindStack;                                       // 0x8(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A55[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        MaxQuantityToGrind;                                // 0xC(0x4)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	float                                        GrindGiveItemsPercent;                             // 0x10(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxItemsToGivePerGrind;                            // 0x14(0x4)(Edit, ConstParm, ExportObject, EditFixedSize, OutParm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VictoryCore.GridTraceAroundPoint
struct UVictoryCore_GridTraceAroundPoint_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutResults;                                        // 0x8(0x10)(ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x18(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              GridRotation;                                      // 0x30(0x18)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x48(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x58(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A56[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        NumTracesX;                                        // 0x5C(0x4)(ConstParm, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NumTracesY;                                        // 0x60(0x4)(BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SpacingX;                                          // 0x64(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        SpacingY;                                          // 0x68(0x4)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
	float                                        ZStartOffset;                                      // 0x6C(0x4)(Edit, BlueprintVisible, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ZEndOffset;                                        // 0x70(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x74(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x75(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A57[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x78(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A58[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.GiveItemToCharacter
struct UVictoryCore_GiveItemToCharacter_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class UClass*                                ItemType;                                          // 0x8(0x8)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
	int32                                        NumItems;                                          // 0x10(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Quality;                                           // 0x14(0x4)(BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bAutoEquip;                                        // 0x18(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A59[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class UPrimalItem*>                   ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetWorldSublevels
struct UVictoryCore_GetWorldSublevels_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class ULevelStreaming*>               ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetWorldLoadedAtTime
struct UVictoryCore_GetWorldLoadedAtTime_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetWeightedRandomIndexFromArray
struct UVictoryCore_GetWeightedRandomIndexFromArray_Params
{
public:
	TArray<float>                                PArray;                                            // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceRand;                                         // 0x10(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.VictoryCore.GetVolumeOfCapsule
struct UVictoryCore_GetVolumeOfCapsule_Params
{
public:
	float                                        CapsuleRadius;                                     // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CapsuleHalfHeight;                                 // 0x4(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetVelocityDeltaBetweenChars
struct UVictoryCore_GetVelocityDeltaBetweenChars_Params
{
public:
	class APrimalCharacter*                      CharA;                                             // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      CharB;                                             // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x10(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetUpsellIndex
struct UVictoryCore_GetUpsellIndex_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetTwoLetterISOLanguageName
struct UVictoryCore_GetTwoLetterISOLanguageName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetTimeSince
struct UVictoryCore_GetTimeSince_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	float                                        Time;                                              // 0x8(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetTimeSeconds
struct UVictoryCore_GetTimeSeconds_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A5A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.GetTeamColor
struct UVictoryCore_GetTeamColor_Params
{
public:
	int32                                        TargetingTeam;                                     // 0x0(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	struct FColor                                ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetStaticMeshBounds
struct UVictoryCore_GetStaticMeshBounds_Params
{
public:
	class UStaticMesh*                           ForMesh;                                           // 0x0(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FBoxSphereBounds                      ReturnValue;                                       // 0x8(0x38)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetSpecialActorList
struct UVictoryCore_GetSpecialActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	enum class EActorListsBP                     ActorListType;                                     // 0x8(0x1)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        OutActors;                                         // 0x10(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetSoundWaveLocalizedSpokenText
struct UVictoryCore_GetSoundWaveLocalizedSpokenText_Params
{
public:
	class USoundWave*                            InSound;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetSoundCueLocalizedSpokenText
struct UVictoryCore_GetSoundCueLocalizedSpokenText_Params
{
public:
	class USoundCue*                             InSound;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetSimpleMontageDuration
struct UVictoryCore_GetSimpleMontageDuration_Params
{
public:
	class UAnimMontage*                          GivenMontage;                                      // 0x0(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        GivenPlayRate;                                     // 0x8(0x4)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.GetShooterGameUserSettings
struct UVictoryCore_GetShooterGameUserSettings_Params
{
public:
	class UShooterGameUserSettings*              ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetShooterCharacterFromPawn
struct UVictoryCore_GetShooterCharacterFromPawn_Params
{
public:
	class APawn*                                 Pawn;                                              // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class AShooterCharacter*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetShooterCharacterFromController
struct UVictoryCore_GetShooterCharacterFromController_Params
{
public:
	class AController*                           Controller;                                        // 0x0(0x8)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class AShooterCharacter*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetSelectedLevelActors
struct UVictoryCore_GetSelectedLevelActors_Params
{
public:
	TArray<class AActor*>                        ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetSecondsIntoDay
struct UVictoryCore_GetSecondsIntoDay_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetScreenPercentLocation
struct UVictoryCore_GetScreenPercentLocation_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             ScreenPercentages;                                 // 0x8(0x10)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetScreenPercentage
struct UVictoryCore_GetScreenPercentage_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetScreenFramePerfScalar
struct UVictoryCore_GetScreenFramePerfScalar_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.GetRealWorldUtcTimeInSeconds
struct UVictoryCore_GetRealWorldUtcTimeInSeconds_Params
{
public:
	double                                       ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x138 (0x138 - 0x0)
// Function ShooterGame.VictoryCore.GetRandomWeightedDinoSetup
struct UVictoryCore_GetRandomWeightedDinoSetup_Params
{
public:
	TArray<struct FDinoSetup>                    DinoSetupEntries;                                  // 0x0(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x10(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	bool                                         ReturnValue;                                       // 0x130(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A5C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetRandomCircleCenterPointEncompassingPointWithinOuterCircle
struct UVictoryCore_GetRandomCircleCenterPointEncompassingPointWithinOuterCircle_Params
{
public:
	float                                        RandomCircleRadius;                                // 0x0(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A5D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector2D                             PointToEncompass;                                  // 0x8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             OuterCircleCenterPoint;                            // 0x18(0x10)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        OuterCircleRadius;                                 // 0x28(0x4)(ConstParm, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxRetries;                                        // 0x2C(0x4)(Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x30(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.GetProjectileArcPeakTime
struct UVictoryCore_GetProjectileArcPeakTime_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FProjectileArc                        Arc;                                               // 0x8(0x58)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x60(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A5E[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.GetPrimaryWorld
struct UVictoryCore_GetPrimaryWorld_Params
{
public:
	class UWorld*                                ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetPrimaryCameraLocationDistanceFromPoint
struct UVictoryCore_GetPrimaryCameraLocationDistanceFromPoint_Params
{
public:
	struct FVector                               WorldPoint;                                        // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x18(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A5F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetPrimaryCameraLocation
struct UVictoryCore_GetPrimaryCameraLocation_Params
{
public:
	struct FVector                               ReturnValue;                                       // 0x0(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.VictoryCore.GetPreviousTrackedActorLinkedEntry
struct UVictoryCore_GetPreviousTrackedActorLinkedEntry_Params
{
public:
	TMap<int32, struct FTrackedActorOverallContainer> GivenTMap;                                         // 0x0(0x50)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ID;                                                // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        Category;                                          // 0x54(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	int32                                        NextLinkedEntryID;                                 // 0x58(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NextLinkedEntryCategory;                           // 0x5C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTrackedActorPlusInfoStruct           FoundTrackedActorPlusInfoStruct;                   // 0x60(0x128)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x188(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A60[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetPlayerCharacterByIndex
struct UVictoryCore_GetPlayerCharacterByIndex_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        PlayerIndex;                                       // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A61[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterCharacter*                     ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetPlayerCharacterByController
struct UVictoryCore_GetPlayerCharacterByController_Params
{
public:
	class APlayerController*                     PC;                                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AShooterCharacter*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetPlatformName
struct UVictoryCore_GetPlatformName_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetPlaneNormal
struct UVictoryCore_GetPlaneNormal_Params
{
public:
	struct FPlane                                ForPlane;                                          // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A62[0x8];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.GetOverlappedHarvestActors
struct UVictoryCore_GetOverlappedHarvestActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        AtRadius;                                          // 0x20(0x4)(BlueprintReadOnly, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A63[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class AActor*>                        OutHarvestActors;                                  // 0x28(0x10)(Edit, ExportObject, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UActorComponent*>               OutHarvestComponents;                              // 0x38(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FVector>                       OutHarvestLocations;                               // 0x48(0x10)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<int32>                                OutHitBodyIndices;                                 // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x68(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A64[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetObjectString
struct UVictoryCore_GetObjectString_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetObjectsReferencedBy
struct UVictoryCore_GetObjectsReferencedBy_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UObject*>                       OutReferencedObjects;                              // 0x8(0x10)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreTransient;                                  // 0x18(0x1)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A65[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetObjectPathName
struct UVictoryCore_GetObjectPathName_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetObjectName
struct UVictoryCore_GetObjectName_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetObjectFName
struct UVictoryCore_GetObjectFName_Params
{
public:
	class UObject*                               ForObject;                                         // 0x0(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.VictoryCore.GetNextTrackedActorLinkedEntry
struct UVictoryCore_GetNextTrackedActorLinkedEntry_Params
{
public:
	TMap<int32, struct FTrackedActorOverallContainer> GivenTMap;                                         // 0x0(0x50)(Edit, ConstParm, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ID;                                                // 0x50(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor)
	int32                                        Category;                                          // 0x54(0x4)(ConstParm, BlueprintReadOnly, OutParm, Transient)
	int32                                        NextLinkedEntryID;                                 // 0x58(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        NextLinkedEntryCategory;                           // 0x5C(0x4)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTrackedActorPlusInfoStruct           FoundTrackedActorPlusInfoStruct;                   // 0x60(0x128)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x188(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A66[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetNewlineCharacter
struct UVictoryCore_GetNewlineCharacter_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetNetworkTimeInSeconds
struct UVictoryCore_GetNetworkTimeInSeconds_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetNearestAnimSequenceFromBlendSpace
struct UVictoryCore_GetNearestAnimSequenceFromBlendSpace_Params
{
public:
	struct FVector                               BlendSpaceInput;                                   // 0x0(0x18)(ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBlendSpace*                           BlendSpace;                                        // 0x18(0x8)(ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DuplicateTransient)
	class UAnimSequence*                         ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetNearestAlliedPlayer
struct UVictoryCore_GetNearestAlliedPlayer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        TargetingTeam;                                     // 0x8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A67[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetNearestAlliedDinoElsePlayer
struct UVictoryCore_GetNearestAlliedDinoElsePlayer_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        TargetingTeam;                                     // 0x8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A68[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetNearestAllieDDino
struct UVictoryCore_GetNearestAllieDDino_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        TargetingTeam;                                     // 0x8(0x4)(Edit, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A69[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Location;                                          // 0x10(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                        IgnoreActors;                                      // 0x28(0x10)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x38(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetMontageGroupName
struct UVictoryCore_GetMontageGroupName_Params
{
public:
	class UAnimMontage*                          GivenMontage;                                      // 0x0(0x8)(BlueprintVisible, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetMontageFromAnimAsset
struct UVictoryCore_GetMontageFromAnimAsset_Params
{
public:
	class UAnimationAsset*                       ForAnimAsset;                                      // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ForDirection;                                      // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetMissionNetworkStartTime
struct UVictoryCore_GetMissionNetworkStartTime_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	double                                       ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetMissionActorOfTypes
struct UVictoryCore_GetMissionActorOfTypes_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class UClass*>                        TheMissionTypes;                                   // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetMissionActorOfType
struct UVictoryCore_GetMissionActorOfType_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class UClass*                                TheMissionType;                                    // 0x8(0x8)(Edit, BlueprintVisible, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bExactMatch;                                       // 0x10(0x1)(Edit, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A6A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetMatineeLength
struct UVictoryCore_GetMatineeLength_Params
{
public:
	class AMatineeActor*                         MatineeActor;                                      // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A6B[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.GetLocaleSpecificSoundWaveAnimTexturePairArrays
struct UVictoryCore_GetLocaleSpecificSoundWaveAnimTexturePairArrays_Params
{
public:
	TArray<struct FLocalizedSoundWaveAnimTexturePairArrays> LocalizedSoundWaveAnimTextures;                    // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLocalizedSoundWaveAnimTexturePairArrays OutLocalizedAudio;                                 // 0x10(0x20)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         FoundLocalizedSoundWavesForThisLanguage;           // 0x30(0x1)(Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A6C[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                LanguageOverride;                                  // 0x38(0x10)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A6D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.GetLocaleSpecificAudio
struct UVictoryCore_GetLocaleSpecificAudio_Params
{
public:
	TArray<struct FLocalizedSoundCueEntry>       LocalizedSoundCues;                                // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLocalizedSoundCueEntry               OutLocalizedAudio;                                 // 0x10(0x30)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                LanguageOverride;                                  // 0x40(0x10)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x50(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A6E[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetLoadedStreamingLevelNames
struct UVictoryCore_GetLoadedStreamingLevelNames_Params
{
public:
	TArray<class FName>                          ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.GetLaunchVelocityAndGravity
struct UVictoryCore_GetLaunchVelocityAndGravity_Params
{
public:
	struct FVector                               StartLocation;                                     // 0x0(0x18)(Edit, ConstParm, ExportObject, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TargetLocation;                                    // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        LateralSpeed;                                      // 0x30(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        PeakHeightZ;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               LaunchVelocity;                                    // 0x38(0x18)(Edit, ConstParm, ExportObject, Net, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Gravity;                                           // 0x50(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A6F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetLastMapPlayed
struct UVictoryCore_GetLastMapPlayed_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetLastHostedMapPlayed
struct UVictoryCore_GetLastHostedMapPlayed_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetKeyNameFromActionName
struct UVictoryCore_GetKeyNameFromActionName_Params
{
public:
	class FName                                  ActionName;                                        // 0x0(0x8)(EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetKeyName
struct UVictoryCore_GetKeyName_Params
{
public:
	struct FKey                                  Key;                                               // 0x0(0x18)(BlueprintReadOnly, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	class FString                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetKeybindName
struct UVictoryCore_GetKeybindName_Params
{
public:
	class FName                                  KeyBind;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetKeybindDisplayName
struct UVictoryCore_GetKeybindDisplayName_Params
{
public:
	class FName                                  KeyBind;                                           // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Config, EditConst)
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetKeybindByPredicate
struct UVictoryCore_GetKeybindByPredicate_Params
{
public:
	class FName                                  KeybindName;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FKey                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.GetItemClassFromItemSetup
struct UVictoryCore_GetItemClassFromItemSetup_Params
{
public:
	struct FItemSetup                            ItemSetup;                                         // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Net, Parm, Config)
	class UClass*                                ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x138 (0x138 - 0x0)
// Function ShooterGame.VictoryCore.GetHitBoneNameFromDamageEvent
struct UVictoryCore_GetHitBoneNameFromDamageEvent_Params
{
public:
	class APrimalCharacter*                      Character;                                         // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst)
	class AController*                           HitInstigator;                                     // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDamageEvent                          DamageEvent;                                       // 0x10(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	bool                                         bIsPointDamage;                                    // 0x30(0x1)(BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A70[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            PointHitResult;                                    // 0x38(0xF0)(Edit, BlueprintVisible, Net, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  MatchCollisionPresetName;                          // 0x128(0x8)(ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x130(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetHarvestingComponentFromHitBodyIndex
struct UVictoryCore_GetHarvestingComponentFromHitBodyIndex_Params
{
public:
	class UInstancedStaticMeshComponent*         FromISMC;                                          // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        WithHitBodyIndex;                                  // 0x8(0x4)(ConstParm, ExportObject, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A71[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UPrimalHarvestingComponent*            ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.GetGroundLocation
struct UVictoryCore_GetGroundLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               TheGroundLoc;                                      // 0x8(0x18)(Edit, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               StartLoc;                                          // 0x20(0x18)(Parm, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               OffsetUp;                                          // 0x38(0x18)(Edit, BlueprintVisible, Parm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OffsetDown;                                        // 0x50(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x68(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A72[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetGrinderReplacementItem
struct UVictoryCore_GetGrinderReplacementItem_Params
{
public:
	class UClass*                                Current;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetFirstDirectionalLight
struct UVictoryCore_GetFirstDirectionalLight_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class ADirectionalLight*                     ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetEditorBuildRevision
struct UVictoryCore_GetEditorBuildRevision_Params
{
public:
	int32                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetDLCNameFromSelector
struct UVictoryCore_GetDLCNameFromSelector_Params
{
public:
	enum class EDLCSelector                      SelectedDLC;                                       // 0x0(0x1)(Edit, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A73[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.GetDistanceToCollision
struct UVictoryCore_GetDistanceToCollision_Params
{
public:
	class UPrimitiveComponent*                   Comp;                                              // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Point;                                             // 0x8(0x18)(ConstParm, Parm, ReturnParm)
	struct FVector                               ClosestPoint;                                      // 0x20(0x18)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x38(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A74[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoStaticClass
struct UVictoryCore_GetDinoStaticClass_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	class UClass*                                ReturnValue;                                       // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoSetupPointsPerStat
struct UVictoryCore_GetDinoSetupPointsPerStat_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	enum class EPrimalCharacterStatusValue       StatusType;                                        // 0x120(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bGetPlayerAdded;                                   // 0x121(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A75[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x124(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoSetupGroup_WeightedRandom
struct UVictoryCore_GetDinoSetupGroup_WeightedRandom_Params
{
public:
	TArray<struct FDinoSetupGroup>               DinoSetupGroups;                                   // 0x0(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDinoSetupGroup                       Group;                                             // 0x10(0x30)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A76[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoSetupGroup_ByName
struct UVictoryCore_GetDinoSetupGroup_ByName_Params
{
public:
	class FName                                  GroupName;                                         // 0x0(0x8)(ExportObject, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	TArray<struct FDinoSetupGroup>               DinoSetupGroups;                                   // 0x8(0x10)(ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FDinoSetupGroup                       Group;                                             // 0x18(0x30)(Edit, ConstParm, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config)
	bool                                         ReturnValue;                                       // 0x48(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A77[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoSetupDinoType
struct UVictoryCore_GetDinoSetupDinoType_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	class UClass*                                ReturnValue;                                       // 0x120(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x130 (0x130 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoSetupCapsuleSize
struct UVictoryCore_GetDinoSetupCapsuleSize_Params
{
public:
	struct FDinoSetup                            DinoSetup;                                         // 0x0(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	float                                        CapsuleRadius;                                     // 0x120(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CapsuleHalfHeight;                                 // 0x124(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x128(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A78[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetDinoCharacterByID
struct UVictoryCore_GetDinoCharacterByID_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        DinoID1;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	int32                                        DinoID2;                                           // 0xC(0x4)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bSearchTamedOnly;                                  // 0x10(0x1)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A79[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalDinoCharacter*                  ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetDefaultObject
struct UVictoryCore_GetDefaultObject_Params
{
public:
	class UObject*                               FromObjectInstance;                                // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetDefaultCharacterName
struct UVictoryCore_GetDefaultCharacterName_Params
{
public:
	bool                                         bIsFemale;                                         // 0x0(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4A7A[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FText                                  ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x178 (0x178 - 0x0)
// Function ShooterGame.VictoryCore.GetCustomDinoSpawnLocation
struct UVictoryCore_GetCustomDinoSpawnLocation_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x8(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x38(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	float                                        DebugDrawDuration;                                 // 0x158(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bApplyRotationToSpawnOffset;                       // 0x15C(0x1)(ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7B[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x160(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetCustomActorList
struct UVictoryCore_GetCustomActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  SearchCustomTag;                                   // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class ACustomActorList*                      ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.GetCurrentCameraExposure
struct UVictoryCore_GetCurrentCameraExposure_Params
{
public:
	float                                        ReturnValue;                                       // 0x0(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetControllerMovementInputs
struct UVictoryCore_GetControllerMovementInputs_Params
{
public:
	class APlayerController*                     ForPC;                                             // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.GetClosestActorArray
struct UVictoryCore_GetClosestActorArray_Params
{
public:
	struct FVector                               ToPoint;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActorArray;                                        // 0x18(0x10)(ExportObject, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetClassString
struct UVictoryCore_GetClassString_Params
{
public:
	class UClass*                                ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetClassPathName
struct UVictoryCore_GetClassPathName_Params
{
public:
	class UObject*                               ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetClassFName
struct UVictoryCore_GetClassFName_Params
{
public:
	class UClass*                                ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.GetClassDefaultObjectFromAsset
struct UVictoryCore_GetClassDefaultObjectFromAsset_Params
{
public:
	struct FAssetData                            ForAsset;                                          // 0x0(0x68)(Edit, ConstParm, BlueprintVisible, ExportObject, ReturnParm, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x68(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GetClassDefaultObject
struct UVictoryCore_GetClassDefaultObject_Params
{
public:
	class UClass*                                FromClass;                                         // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetCharacterCapsuleSize
struct UVictoryCore_GetCharacterCapsuleSize_Params
{
public:
	class UClass*                                CharClass;                                         // 0x0(0x8)(ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CapsuleRadius;                                     // 0x8(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CapsuleHalfHeight;                                 // 0xC(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A7C[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetBlockingMissionTag
struct UVictoryCore_GetBlockingMissionTag_Params
{
public:
	class AShooterPlayerController*              FromPC;                                            // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  MissionTag;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.VictoryCore.GetBestHitInfoFromDamageEvent
struct UVictoryCore_GetBestHitInfoFromDamageEvent_Params
{
public:
	struct FDamageEvent                          DamageEvent;                                       // 0x0(0x20)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst)
	struct FHitResult                            OutHitInfo;                                        // 0x20(0xF0)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OutImpulseDir;                                     // 0x110(0x18)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Int
struct UVictoryCore_GetArrayIndicesSorted_Int_Params
{
public:
	TArray<int32>                                Array;                                             // 0x0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor)
	bool                                         bSortLowToHigh;                                    // 0x10(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7D[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Float
struct UVictoryCore_GetArrayIndicesSorted_Float_Params
{
public:
	TArray<float>                                Array;                                             // 0x0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor)
	bool                                         bSortLowToHigh;                                    // 0x10(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7E[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Double
struct UVictoryCore_GetArrayIndicesSorted_Double_Params
{
public:
	TArray<double>                               Array;                                             // 0x0(0x10)(ExportObject, Parm, OutParm, ZeroConstructor)
	bool                                         bSortLowToHigh;                                    // 0x10(0x1)(BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A7F[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<int32>                                ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.GetAngleBetweenVectorsPure
struct UVictoryCore_GetAngleBetweenVectorsPure_Params
{
public:
	struct FVector                               VectorA;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               VectorB;                                           // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AroundAxis;                                        // 0x30(0x18)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A80[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.GetAngleBetweenVectors
struct UVictoryCore_GetAngleBetweenVectors_Params
{
public:
	struct FVector                               VectorA;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               VectorB;                                           // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               AroundAxis;                                        // 0x30(0x18)(ConstParm, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x48(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A81[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllPlayerStarts
struct UVictoryCore_GetAllPlayerStarts_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllMissionDispatchers
struct UVictoryCore_GetAllMissionDispatchers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllMissionDispatcherPoints
struct UVictoryCore_GetAllMissionDispatcherPoints_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllMissionActors
struct UVictoryCore_GetAllMissionActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllLocalPlayerControllers
struct UVictoryCore_GetAllLocalPlayerControllers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AShooterPlayerController*>      ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllLocalPlayerCharacters
struct UVictoryCore_GetAllLocalPlayerCharacters_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AShooterCharacter*>             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllLocalPlayerCameraManagers
struct UVictoryCore_GetAllLocalPlayerCameraManagers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APlayerCameraManager*>          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllKeybindsByPredicate
struct UVictoryCore_GetAllKeybindsByPredicate_Params
{
public:
	class FName                                  KeybindName;                                       // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FKey>                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.GetAllClassesOfType
struct UVictoryCore_GetAllClassesOfType_Params
{
public:
	TArray<class UClass*>                        Subclasses;                                        // 0x0(0x10)(Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ParentClass;                                       // 0x10(0x8)(Edit, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	bool                                         bAllowAbstract;                                    // 0x18(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A82[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                Path;                                              // 0x20(0x10)(ConstParm, ExportObject, Net, OutParm, DisableEditOnTemplate, Config, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetAllBlueprintAssetsOfNativeClass
struct UVictoryCore_GetAllBlueprintAssetsOfNativeClass_Params
{
public:
	class UClass*                                InNativeClass;                                     // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FAssetData>                    FoundAssets;                                       // 0x8(0x10)(ConstParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A83[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllAvailableMissionsAsTags
struct UVictoryCore_GetAllAvailableMissionsAsTags_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class FName>                          ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetAllAvailableMissions
struct UVictoryCore_GetAllAvailableMissions_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FAvailableMission>             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GetAllAnimationSequencesFromMontage
struct UVictoryCore_GetAllAnimationSequencesFromMontage_Params
{
public:
	class UAnimMontage*                          InMontage;                                         // 0x0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class UAnimationAsset*>               AnimationAssets;                                   // 0x8(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x18(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A84[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.GetAllActorsOfClassSoft
struct UVictoryCore_GetAllActorsOfClassSoft_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TSoftClassPtr<class AActor>                  ActorClass;                                        // 0x8(0x30)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<class AActor*>                        OutActors;                                         // 0x38(0x10)(Edit, BlueprintVisible, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.GetActuallyTrulyLocalPlayerControllers
struct UVictoryCore_GetActuallyTrulyLocalPlayerControllers_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class APlayerController*>             ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.GetActorFromOverlapResult
struct UVictoryCore_GetActorFromOverlapResult_Params
{
public:
	struct FOverlapResult                        OverlapResult;                                     // 0x0(0x28)(ConstParm, ExportObject, EditFixedSize, ReturnParm, DisableEditOnTemplate, EditConst)
	class AActor*                                ReturnValue;                                       // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.GenerateRandomLootItemFromLootTable
struct UVictoryCore_GenerateRandomLootItemFromLootTable_Params
{
public:
	TArray<struct FLootTableEntry>               Entries;                                           // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, SubobjectReference)
	int32                                        ItemQuantity;                                      // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Config, GlobalConfig, SubobjectReference)
	float                                        ItemQuality;                                       // 0x14(0x4)(Edit, ExportObject, EditFixedSize, OutParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.GenerateRandomLootItem
struct UVictoryCore_GenerateRandomLootItem_Params
{
public:
	enum class ELootItemType                     LootItemType;                                      // 0x0(0x1)(ConstParm, BlueprintVisible, Net, EditFixedSize, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A85[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.GenerateDeathBlendSpacesForDino
struct UVictoryCore_GenerateDeathBlendSpacesForDino_Params
{
public:
	class APrimalDinoCharacter*                  Dino;                                              // 0x0(0x8)(BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.Generate_UUID
struct UVictoryCore_Generate_UUID_Params
{
public:
	class FString                                ReturnValue;                                       // 0x0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.FuseChunkedFString
struct UVictoryCore_FuseChunkedFString_Params
{
public:
	TArray<class FString>                        InputStringArray;                                  // 0x0(0x10)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x10(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.FormatAsTimeLong
struct UVictoryCore_FormatAsTimeLong_Params
{
public:
	int32                                        InTime;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A86[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.FormatAsTime
struct UVictoryCore_FormatAsTime_Params
{
public:
	int32                                        InTime;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	bool                                         UseLeadingZero;                                    // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceLeadingZeroHour;                             // 0x5(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowSeconds;                                      // 0x6(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A87[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.ForceScreenColorFade
struct UVictoryCore_ForceScreenColorFade_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FLinearColor                          FadeColor;                                         // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	float                                        FullOpacityInterval;                               // 0x18(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        TheFadeOutInterval;                                // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ForceLevelStreamingToBlock
struct UVictoryCore_ForceLevelStreamingToBlock_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	float                                        ForTime;                                           // 0x8(0x4)(Edit, ExportObject, Parm, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A88[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.FloatToDouble
struct UVictoryCore_FloatToDouble_Params
{
public:
	float                                        Value;                                             // 0x0(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Config)
	uint8                                        Pad_4A89[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.FlattenDirectionVectorInLocalSpace
struct UVictoryCore_FlattenDirectionVectorInLocalSpace_Params
{
public:
	struct FVector                               Direction;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              Rotation;                                          // 0x18(0x18)(BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.FlattenDirectionVector
struct UVictoryCore_FlattenDirectionVector_Params
{
public:
	struct FVector                               Direction;                                         // 0x0(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.FinishSpawning
struct UVictoryCore_FinishSpawning_Params
{
public:
	class AActor*                                Actor;                                             // 0x0(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.FindWorldActors
struct UVictoryCore_FindWorldActors_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        FContainer;                                        // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                FType;                                             // 0x18(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  FTag;                                              // 0x20(0x8)(ExportObject, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x28(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A8A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.FindValidLocationNextToTarget
struct UVictoryCore_FindValidLocationNextToTarget_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               OutLocation;                                       // 0x8(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      SourceCharacter;                                   // 0x20(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      TargetCharacter;                                   // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DistanceMargin;                                    // 0x30(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        MaxTraceCount;                                     // 0x34(0x4)(EditFixedSize, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                ActorToIgnore;                                     // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x40(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x41(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A8B[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x44(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         SkipCloseDistanceRestriction;                      // 0x48(0x1)(Edit, BlueprintReadOnly, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         AllowLocationInAir;                                // 0x49(0x1)(Edit, ConstParm, BlueprintVisible, Net, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A8C[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.FindValidLocationInFrontOfTarget
struct UVictoryCore_FindValidLocationInFrontOfTarget_Params
{
public:
	struct FVector                               OutLocation;                                       // 0x0(0x18)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      SourceCharacter;                                   // 0x18(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class APrimalCharacter*                      TargetCharacter;                                   // 0x20(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	float                                        DistanceMargin;                                    // 0x28(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x2C(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bFailIfLocationNotOnGround;                        // 0x2D(0x1)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A8D[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorToIgnore;                                     // 0x30(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x38(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A8E[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x3C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x40(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A8F[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.FindSocketClosestToDirection
struct UVictoryCore_FindSocketClosestToDirection_Params
{
public:
	class USkeletalMeshComponent*                Mesh;                                              // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               TargetDirection;                                   // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class FName>                          Sockets;                                           // 0x20(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst)
	TArray<float>                                DotProducts;                                       // 0x30(0x10)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bOnlySocketsWithPrefix;                            // 0x40(0x1)(BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A90[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                SocketPrefix;                                      // 0x48(0x10)(Edit, BlueprintVisible, Net, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  ReturnValue;                                       // 0x58(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.FindNearbyCharactersOfClass
struct UVictoryCore_FindNearbyCharactersOfClass_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               AtLoc;                                             // 0x8(0x18)(BlueprintVisible, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A91[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UClass*                                CharacterClass;                                    // 0x28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTamedDinosOnly;                                   // 0x30(0x1)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWildDinosOnly;                                    // 0x31(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A92[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class APrimalCharacter*>              ReturnValue;                                       // 0x38(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.FindLocalizedVersionOfFilename
struct UVictoryCore_FindLocalizedVersionOfFilename_Params
{
public:
	struct FSoftObjectPath                       OriginalFile;                                      // 0x0(0x20)(Edit, BlueprintVisible, EditFixedSize, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.FindActorAIState
struct UVictoryCore_FindActorAIState_Params
{
public:
	class UClass*                                FStateType;                                        // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<struct FDinoAttackInfo>               FContainerOfStates;                                // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UPrimalAIState*                        ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VictoryCore.EvalProjectileArc
struct UVictoryCore_EvalProjectileArc_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FProjectileArc                        Arc;                                               // 0x8(0x58)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Time;                                              // 0x60(0x4)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4A93[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x68(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.ECC_TO_BITFIELD_BP
struct UVictoryCore_ECC_TO_BITFIELD_BP_Params
{
public:
	enum class ECollisionChannel                 ConvertChannel;                                    // 0x0(0x1)(Edit, BlueprintVisible, ExportObject, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A94[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	int32                                        ReturnValue;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x58 (0x58 - 0x0)
// Function ShooterGame.VictoryCore.DrawDebugCapsuleWithExtents
struct UVictoryCore_DrawDebugCapsuleWithExtents_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Top;                                               // 0x8(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                               Bottom;                                            // 0x20(0x18)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x3C(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        Duration;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, EditConst, DuplicateTransient)
	bool                                         bPersistent;                                       // 0x50(0x1)(BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4A95[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.DrawDebugCapsule
struct UVictoryCore_DrawDebugCapsule_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               CapsuleTop;                                        // 0x8(0x18)(Edit, ConstParm, BlueprintVisible, Net, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CapsuleBottom;                                     // 0x20(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	struct FColor                                Color;                                             // 0x3C(0x4)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm)
	bool                                         bPersistentLines;                                  // 0x40(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A96[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        LifeTime;                                          // 0x44(0x4)(Edit, BlueprintReadOnly, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        DepthPriority;                                     // 0x48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4A97[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.DoForceStreamComponents
struct UVictoryCore_DoForceStreamComponents_Params
{
public:
	TArray<class UMeshComponent*>                ComponentsArray;                                   // 0x0(0x10)(ExportObject, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFirstPerson;                                    // 0x10(0x1)(Edit, ConstParm, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceMaxTexturesOnConsole;                        // 0x11(0x1)(ConstParm, ExportObject, Net, Parm, ZeroConstructor, Config, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A98[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x2 (0x2 - 0x0)
// Function ShooterGame.VictoryCore.DoesOwnSelectedDLC
struct UVictoryCore_DoesOwnSelectedDLC_Params
{
public:
	enum class EDLCSelector                      SelectedDLC;                                       // 0x0(0x1)(Edit, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.DisableGCM
struct UVictoryCore_DisableGCM_Params
{
public:
	class AActor*                                ShooterCharacter;                                  // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.DestroyAllCharactersWithinMissionTileVolumes
struct UVictoryCore_DestroyAllCharactersWithinMissionTileVolumes_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bOnlyCheckForDeadCharacters;                       // 0x8(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A99[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class FName                                  ForceOnTileStreamVolumeCustomTag;                  // 0xC(0x8)(Edit, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9A[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xB0 (0xB0 - 0x0)
// Function ShooterGame.VictoryCore.DeferredSpawnAndFireProjectile_Start
struct UVictoryCore_DeferredSpawnAndFireProjectile_Start_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               ShootDir;                                          // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class UClass*                                ProjectileClass;                                   // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class APrimalCharacter*                      ForCharacter;                                      // 0x38(0x8)(BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, GlobalConfig, SubobjectReference)
	struct FTransform                            SpawnTransform;                                    // 0x40(0x60)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bNoCollisionFail;                                  // 0xA0(0x1)(ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	class AShooterProjectile*                    ReturnValue;                                       // 0xA8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.DeferredSpawnAndFireProjectile_Finish
struct UVictoryCore_DeferredSpawnAndFireProjectile_Finish_Params
{
public:
	class AShooterProjectile*                    TheProjectile;                                     // 0x0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9C[0x8];                                     // Fixing Size After Last Property  > TateDumper <
	struct FTransform                            SpawnTransform;                                    // 0x10(0x60)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VictoryCore.DebugDrawProjectileArc
struct UVictoryCore_DebugDrawProjectileArc_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FProjectileArc                        Arc;                                               // 0x8(0x58)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxArcTime;                                        // 0x60(0x4)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ArcTimeStep;                                       // 0x64(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          LineColor;                                         // 0x68(0x10)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        LineThickness;                                     // 0x78(0x4)(Edit, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x7C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.DeactivateMissionForPlayerCharacter
struct UVictoryCore_DeactivateMissionForPlayerCharacter_Params
{
public:
	class AShooterCharacter*                     PlayerPawn;                                        // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bOverrideForcePreventLeavingMissions;              // 0x8(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9D[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.DateTimeToSeconds
struct UVictoryCore_DateTimeToSeconds_Params
{
public:
	struct FDateTime                             DateTimeValue;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.CreateBlendSpaceFromAnimationNameSubstring
struct UVictoryCore_CreateBlendSpaceFromAnimationNameSubstring_Params
{
public:
	class FString                                SubString;                                         // 0x0(0x10)(Edit, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USkeletalMesh*                         Mesh;                                              // 0x10(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, Transient, EditConst, GlobalConfig, SubobjectReference)
	float                                        CardinalBlendSpaceXYOffset;                        // 0x18(0x4)(Edit, ConstParm, Net, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CardinalBlendSpaceYOffset;                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UBlendSpace*                           ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.CopyDinoColorSetIndicies
struct UVictoryCore_CopyDinoColorSetIndicies_Params
{
public:
	class APrimalDinoCharacter*                  Src;                                               // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, InstancedReference, SubobjectReference)
	class APrimalDinoCharacter*                  Dest;                                              // 0x8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Transient, InstancedReference, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.CooldownTimeRemaining
struct UVictoryCore_CooldownTimeRemaining_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	double                                       CooldownClock;                                     // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CooldownDuration;                                  // 0x10(0x4)(BlueprintVisible, Parm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.ConvertRotatorFromWorldToLocal
struct UVictoryCore_ConvertRotatorFromWorldToLocal_Params
{
public:
	struct FRotator                              ConvertRot;                                        // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ToParentRotation;                                  // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.ConvertRotatorFromLocalToWorld
struct UVictoryCore_ConvertRotatorFromLocalToWorld_Params
{
public:
	struct FRotator                              ConvertRot;                                        // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              FromParentRotation;                                // 0x18(0x18)(Edit, ConstParm, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x220 (0x220 - 0x0)
// Function ShooterGame.VictoryCore.ConvertPlayerCharacterConfigStructReplicated
struct UVictoryCore_ConvertPlayerCharacterConfigStructReplicated_Params
{
public:
	struct FPrimalPlayerCharacterConfigStruct    Structdata;                                        // 0x0(0x110)(Edit, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FPrimalPlayerCharacterConfigStructReplicated ReturnValue;                                       // 0x110(0x110)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.ConvertIntToStringWithCommas
struct UVictoryCore_ConvertIntToStringWithCommas_Params
{
public:
	int32                                        GivenNumber;                                       // 0x0(0x4)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4A9E[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantizeNormal
struct UVictoryCore_Conv_VectorToVectorNetQuantizeNormal_Params
{
public:
	struct FVector                               InVector;                                          // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector_NetQuantizeNormal             ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantize
struct UVictoryCore_Conv_VectorToVectorNetQuantize_Params
{
public:
	struct FVector                               InVector;                                          // 0x0(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector_NetQuantize                   ReturnValue;                                       // 0x18(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.ConstructObjectBP
struct UVictoryCore_ConstructObjectBP_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UObject*                               Outer;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	class FName                                  Name;                                              // 0x10(0x8)(ConstParm, Net, OutParm)
	class UObject*                               ReturnValue;                                       // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.ConstructObjectAutoNameBP
struct UVictoryCore_ConstructObjectAutoNameBP_Params
{
public:
	class UClass*                                Class;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, ZeroConstructor)
	class UObject*                               Outer;                                             // 0x8(0x8)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ComponentGetBoundsSphereRadius
struct UVictoryCore_ComponentGetBoundsSphereRadius_Params
{
public:
	class UPrimitiveComponent*                   Comp;                                              // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4A9F[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.ComponentBoundsEncompassesPoint
struct UVictoryCore_ComponentBoundsEncompassesPoint_Params
{
public:
	class UPrimitiveComponent*                   Comp;                                              // 0x0(0x8)(Edit, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	struct FVector                               Point;                                             // 0x8(0x18)(ConstParm, Parm, ReturnParm)
	float                                        BoundsMultiplier;                                  // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AA0[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.VictoryCore.ClipLineInsideBox
struct UVictoryCore_ClipLineInsideBox_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               Extent;                                            // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               LineStart;                                         // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               LineEnd;                                           // 0x48(0x18)(Edit, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               OutLineStart;                                      // 0x60(0x18)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OutLineEnd;                                        // 0x78(0x18)(ExportObject, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x90(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AA1[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.ClassToStringReference
struct UVictoryCore_ClassToStringReference_Params
{
public:
	class UClass*                                ForClass;                                          // 0x0(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ClassRefToObjectRef
struct UVictoryCore_ClassRefToObjectRef_Params
{
public:
	class UClass*                                InClass;                                           // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.ClampRotAxis
struct UVictoryCore_ClampRotAxis_Params
{
public:
	float                                        BaseAxis;                                          // 0x0(0x4)(Edit, ConstParm, EditFixedSize, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DesiredAxis;                                       // 0x4(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDiff;                                           // 0x8(0x4)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x70 (0x70 - 0x0)
// Function ShooterGame.VictoryCore.ClampLocation
struct UVictoryCore_ClampLocation_Params
{
public:
	struct FVector                               BaseLocation;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               DesiredLocation;                                   // 0x18(0x18)(BlueprintVisible, ExportObject, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxDiff;                                           // 0x30(0x4)(Edit, ConstParm, BlueprintVisible, Net, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceClampLocation;                               // 0x34(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA2[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	class UObject*                               WorldContextObject;                                // 0x38(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               TraceFromLocation;                                 // 0x40(0x18)(ConstParm, BlueprintReadOnly, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x58(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.ChunkFStringIntoArray
struct UVictoryCore_ChunkFStringIntoArray_Params
{
public:
	class FString                                InputString;                                       // 0x0(0x10)(Edit, ConstParm, ExportObject, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ChunkSize;                                         // 0x10(0x4)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AA3[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<class FString>                        ReturnValue;                                       // 0x18(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x24 (0x24 - 0x0)
// Function ShooterGame.VictoryCore.ChangeSaturation
struct UVictoryCore_ChangeSaturation_Params
{
public:
	struct FLinearColor                          InColor;                                           // 0x0(0x10)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	float                                        NewSaturation;                                     // 0x10(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          ReturnValue;                                       // 0x14(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1C0 (0x1C0 - 0x0)
// Function ShooterGame.VictoryCore.CapsuleSweepProjectileArc
struct UVictoryCore_CapsuleSweepProjectileArc_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FProjectileArc                        Arc;                                               // 0x8(0x58)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              CapsuleRotation;                                   // 0x60(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        CapsuleRadius;                                     // 0x78(0x4)(Edit, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        CapsuleHalfHeight;                                 // 0x7C(0x4)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	bool                                         bRotateCapsuleAlongPath;                           // 0x80(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x81(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4AA4[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FHitResult                            HitResult;                                         // 0x88(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, Transient, EditConst)
	struct FVector                               EndLocation;                                       // 0x178(0x18)(Edit, ConstParm, BlueprintVisible, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, InstancedReference, SubobjectReference)
	float                                        EndArcTime;                                        // 0x190(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        MaxArcLength;                                      // 0x194(0x4)(Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x198(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x1A8(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4AA5[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ArcTimeStep;                                       // 0x1AC(0x4)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x1B0(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bDrawDebug;                                        // 0x1B1(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AA6[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x1B4(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x1B8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AA7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x88 (0x88 - 0x0)
// Function ShooterGame.VictoryCore.CapsuleSweepMulti
struct UVictoryCore_CapsuleSweepMulti_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	TArray<struct FHitResult>                    OutHits;                                           // 0x8(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0x18(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x30(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              CapsuleRot;                                        // 0x48(0x18)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x60(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        HalfHeight;                                        // 0x64(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	TArray<class AActor*>                        ActorsToIgnore;                                    // 0x68(0x10)(Edit, ConstParm, ExportObject, Parm, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x78(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x79(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x7A(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x7B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x7C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bFindInitialOverlaps;                              // 0x80(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x81(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AA8[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x168 (0x168 - 0x0)
// Function ShooterGame.VictoryCore.CapsuleSweepFast
struct UVictoryCore_CapsuleSweepFast_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0xF8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x110(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	struct FRotator                              CapsuleRot;                                        // 0x128(0x18)(ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x140(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        HalfHeight;                                        // 0x144(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x148(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x149(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x14A(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4AA9[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                IgnoreActor;                                       // 0x150(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAA[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x15C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x160(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AAB[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VictoryCore.CapsuleOverlapFast
struct UVictoryCore_CapsuleOverlapFast_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class AActor*                                FirstOverlappedActor;                              // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Origin;                                            // 0x10(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FRotator                              CapsuleRotation;                                   // 0x28(0x18)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x40(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        HalfHeight;                                        // 0x44(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	enum class ECollisionChannel                 CollisionChannel;                                  // 0x48(0x1)(BlueprintVisible, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x49(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         bIgnoreSelf;                                       // 0x4A(0x1)(ExportObject, EditFixedSize, Transient, Config, EditConst, SubobjectReference)
	uint8                                        Pad_4AAC[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                IgnoreActor;                                       // 0x50(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDebugDraw;                                        // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AAD[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x5C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bBlockingOnly;                                     // 0x60(0x1)(BlueprintVisible, ExportObject, Net, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x61(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AAE[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.CanTeleport
struct UVictoryCore_CanTeleport_Params
{
public:
	class APrimalDinoCharacter*                  Target;                                            // 0x0(0x8)(Edit, ConstParm, ReturnParm, Transient, Config)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AAF[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1A0 (0x1A0 - 0x0)
// Function ShooterGame.VictoryCore.CanSpawnCustomDino
struct UVictoryCore_CanSpawnCustomDino_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               OutCalculatedSpawnLocation;                        // 0x8(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               PlayerLocation;                                    // 0x20(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               SpawnLocation;                                     // 0x38(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, InstancedReference, SubobjectReference)
	struct FRotator                              SpawnRotation;                                     // 0x50(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FDinoSetup                            DinoSetup;                                         // 0x68(0x120)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, Config)
	float                                        DebugDrawDuration;                                 // 0x188(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoLosCheck;                                       // 0x18C(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         bDoExtraSafetyChecks;                              // 0x18D(0x1)(Edit, ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AB0[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	class APrimalCharacter*                      SpawningCharacter;                                 // 0x190(0x8)(Edit, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDoOverlapCheck;                                   // 0x198(0x1)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x199(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AB1[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.CallGlobalLevelEvent
struct UVictoryCore_CallGlobalLevelEvent_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  EventName;                                         // 0x8(0x8)(ExportObject, Net, OutParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.CalculateGPSCoordinates
struct UVictoryCore_CalculateGPSCoordinates_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               WorldPos;                                          // 0x8(0x18)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FIntPoint                             ReturnValue;                                       // 0x20(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x190 (0x190 - 0x0)
// Function ShooterGame.VictoryCore.BreakPlayerCharacterConfigStructReplicated
struct UVictoryCore_BreakPlayerCharacterConfigStructReplicated_Params
{
public:
	struct FPrimalPlayerCharacterConfigStructReplicated FromStruct;                                        // 0x0(0x110)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIsFemale;                                         // 0x110(0x1)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
	uint8                                        Pad_4AB2[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	TArray<struct FLinearColor>                  BodyColors;                                        // 0x118(0x10)(Edit, Net, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class FString                                PlayerCharacterName;                               // 0x128(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<float>                                RawBoneModifiers;                                  // 0x138(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerSpawnRegionIndex;                            // 0x148(0x4)(ConstParm, ExportObject, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        HeadHairIndex;                                     // 0x14C(0x1)(Edit, BlueprintVisible, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        FacialHairIndex;                                   // 0x14D(0x1)(Edit, BlueprintVisible, ExportObject, Parm, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AB3[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        PercentOfFullHeadHairGrowth;                       // 0x150(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        PercentOfFullFacialHairGrowth;                     // 0x154(0x4)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                OverrideHeadHairColor;                             // 0x158(0x10)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                OverrideFacialHairColor;                           // 0x168(0x10)(Edit, BlueprintReadOnly, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	TArray<uint8>                                DynamicMaterialBytes;                              // 0x178(0x10)(ConstParm, BlueprintVisible, Net, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	int32                                        PlayerVoiceCollectionIndex;                        // 0x188(0x4)(ExportObject, BlueprintReadOnly, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bUsingCustomPlayerVoiceCollection;                 // 0x18C(0x1)(ConstParm, BlueprintVisible, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AB4[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x150 (0x150 - 0x0)
// Function ShooterGame.VictoryCore.BPSweepComponent
struct UVictoryCore_BPSweepComponent_Params
{
public:
	class UPrimitiveComponent*                   Component;                                         // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Transient, EditConst, SubobjectReference)
	struct FHitResult                            OutHit;                                            // 0x8(0xF0)(Edit, ConstParm, ExportObject, Net, EditFixedSize, Parm, ReturnParm, Config, EditConst, SubobjectReference)
	struct FVector                               Start;                                             // 0xF8(0x18)(Edit, BlueprintVisible, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Config, DisableEditOnInstance, EditConst)
	struct FVector                               End;                                               // 0x110(0x18)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, DisableEditOnInstance)
	float                                        Radius;                                            // 0x128(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	float                                        HalfHeight;                                        // 0x12C(0x4)(Edit, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, EditConst, SubobjectReference)
	struct FVector                               Extent;                                            // 0x130(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	bool                                         bTraceComplex;                                     // 0x148(0x1)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, Transient, Config, EditConst, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x149(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AB5[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.BPRTransformInverse
struct UVictoryCore_BPRTransformInverse_Params
{
public:
	struct FRotator                              R;                                                 // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FRotator                              RBasis;                                            // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.BPRTransform
struct UVictoryCore_BPRTransform_Params
{
public:
	struct FRotator                              R;                                                 // 0x0(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	struct FRotator                              RBasis;                                            // 0x18(0x18)(ConstParm, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              ReturnValue;                                       // 0x30(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.BPRotatorLerp
struct UVictoryCore_BPRotatorLerp_Params
{
public:
	struct FRotator                              A;                                                 // 0x0(0x18)(Edit, Parm, OutParm, ReturnParm, Transient, Config)
	struct FRotator                              B;                                                 // 0x18(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ReturnParm, Transient, Config)
	float                                        Alpha;                                             // 0x30(0x4)(ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, Config, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AB6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FRotator                              ReturnValue;                                       // 0x38(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPRequestRenameTribe
struct UVictoryCore_BPRequestRenameTribe_Params
{
public:
	class AShooterPlayerState*                   PlayerState;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                TribeName;                                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VictoryCore.BPRequestLeaveTribe
struct UVictoryCore_BPRequestLeaveTribe_Params
{
public:
	class AShooterPlayerState*                   PlayerState;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPRequestCreateTribe
struct UVictoryCore_BPRequestCreateTribe_Params
{
public:
	class AShooterPlayerState*                   PlayerState;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	class FString                                TribeName;                                         // 0x8(0x10)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance)
};

// 0x50 (0x50 - 0x0)
// Function ShooterGame.VictoryCore.BPProjectWorldToScreenPositionRaw
struct UVictoryCore_BPProjectWorldToScreenPositionRaw_Params
{
public:
	class APlayerController*                     ThePC;                                             // 0x0(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector                               WorldLocation;                                     // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	struct FVector2D                             Out_ScreenLocation;                                // 0x20(0x10)(ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               Out_ViewLocation;                                  // 0x30(0x18)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         Out_bIsScreenLocationInsideViewRect;               // 0x48(0x1)(BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bIgnoreScreenProjectionGlobalTransform;            // 0x49(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x4A(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AB7[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.BPProjectWorldToScreenPosition
struct UVictoryCore_BPProjectWorldToScreenPosition_Params
{
public:
	struct FVector                               WorldLocation;                                     // 0x0(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, SubobjectReference)
	class APlayerController*                     ThePC;                                             // 0x18(0x8)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	struct FVector2D                             ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPLoadObject
struct UVictoryCore_BPLoadObject_Params
{
public:
	class FString                                PathName;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UObject*                               ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPLoadClass
struct UVictoryCore_BPLoadClass_Params
{
public:
	class FString                                PathName;                                          // 0x0(0x10)(Edit, ConstParm, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ReturnValue;                                       // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.BPIsTemplate
struct UVictoryCore_BPIsTemplate_Params
{
public:
	class UObject*                               AnObject;                                          // 0x0(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AB8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.VictoryCore.BPIsDinoIDEqual
struct UVictoryCore_BPIsDinoIDEqual_Params
{
public:
	int32                                        FirstDinoID1;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        FirstDinoID2;                                      // 0x4(0x4)(Net, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SecondDinoID1;                                     // 0x8(0x4)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        SecondDinoID2;                                     // 0xC(0x4)(BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AB9[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPGetWeightedRandomIndex
struct UVictoryCore_BPGetWeightedRandomIndex_Params
{
public:
	TArray<float>                                PArray;                                            // 0x0(0x10)(BlueprintVisible, ExportObject, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ForceRand;                                         // 0x10(0x4)(ConstParm, BlueprintVisible, OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ReturnValue;                                       // 0x14(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPGetPrimaryMapName
struct UVictoryCore_BPGetPrimaryMapName_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.BPGetBiomeWind
struct UVictoryCore_BPGetBiomeWind_Params
{
public:
	class ABiomeZoneVolume*                      BiomeZoneVolume;                                   // 0x0(0x8)(ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        GlobalWind;                                        // 0x8(0x4)(OutParm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.BPGetBiomeTemperature
struct UVictoryCore_BPGetBiomeTemperature_Params
{
public:
	class ABiomeZoneVolume*                      BiomeZoneVolume;                                   // 0x0(0x8)(ExportObject, ReturnParm, DisableEditOnTemplate, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	float                                        GlobalTemperature;                                 // 0x8(0x4)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPFormatAsTimeLong
struct UVictoryCore_BPFormatAsTimeLong_Params
{
public:
	int32                                        InTime;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4ABA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.BPFormatAsTime
struct UVictoryCore_BPFormatAsTime_Params
{
public:
	int32                                        InTime;                                            // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	bool                                         UseLeadingZero;                                    // 0x4(0x1)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bForceLeadingZeroHour;                             // 0x5(0x1)(ConstParm, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShowSeconds;                                      // 0x6(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ABB[0x1];                                     // Fixing Size After Last Property  > TateDumper <
	class FString                                ReturnValue;                                       // 0x8(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.BPFLerpFastPure
struct UVictoryCore_BPFLerpFastPure_Params
{
public:
	float                                        InMin;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InMax;                                             // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InPercent;                                         // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VictoryCore.BPFLerpFast
struct UVictoryCore_BPFLerpFast_Params
{
public:
	float                                        InMin;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InMax;                                             // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InPercent;                                         // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        ReturnValue;                                       // 0xC(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x14 (0x14 - 0x0)
// Function ShooterGame.VictoryCore.BPFLerp
struct UVictoryCore_BPFLerp_Params
{
public:
	float                                        InMin;                                             // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InMax;                                             // 0x4(0x4)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        InPercent;                                         // 0x8(0x4)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClampToMin;                                       // 0xC(0x1)(ConstParm, BlueprintVisible, EditFixedSize, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bClampToMax;                                       // 0xD(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ABC[0x2];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        ReturnValue;                                       // 0x10(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.BPFastTrace
struct UVictoryCore_BPFastTrace_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               TraceEnd;                                          // 0x8(0x18)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	struct FVector                               TraceStart;                                        // 0x20(0x18)(ConstParm, Net, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, SubobjectReference)
	class AActor*                                ActorToIgnore;                                     // 0x38(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        DebugDrawDuration;                                 // 0x40(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x44(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4ABD[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.BoxFromOriginAndExtent
struct UVictoryCore_BoxFromOriginAndExtent_Params
{
public:
	struct FVector                               Origin;                                            // 0x0(0x18)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, SubobjectReference)
	struct FVector                               Extent;                                            // 0x18(0x18)(Edit, BlueprintVisible, ExportObject, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               OutBoxMin;                                         // 0x30(0x18)(Edit, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               OutBoxMax;                                         // 0x48(0x18)(Edit, ConstParm, ExportObject, Net, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.AttemptToSpawnAWildFollower
struct UVictoryCore_AttemptToSpawnAWildFollower_Params
{
public:
	class UWorld*                                World;                                             // 0x0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance)
	class APrimalDinoCharacter*                  ParentDino;                                        // 0x8(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, Parm, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	TArray<float>                                WeightedChanceArrayMultipliers;                    // 0x10(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class APrimalDinoCharacter*>          ReturnValue;                                       // 0x20(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.AreVectorsNearlyEqual
struct UVictoryCore_AreVectorsNearlyEqual_Params
{
public:
	struct FVector                               VectorA;                                           // 0x0(0x18)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               VectorB;                                           // 0x18(0x18)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WithinError;                                       // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4ABE[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.AreVector2DsNearlyEqual
struct UVictoryCore_AreVector2DsNearlyEqual_Params
{
public:
	struct FVector2D                             VectorA;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             VectorB;                                           // 0x10(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WithinError;                                       // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x24(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4ABF[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.VictoryCore.AreVector2DsEqual
struct UVictoryCore_AreVector2DsEqual_Params
{
public:
	struct FVector2D                             VectorA;                                           // 0x0(0x10)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector2D                             VectorB;                                           // 0x10(0x10)(Edit, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AC0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xD0 (0xD0 - 0x0)
// Function ShooterGame.VictoryCore.AreTransformsNearlyEqual
struct UVictoryCore_AreTransformsNearlyEqual_Params
{
public:
	struct FTransform                            TransformA;                                        // 0x0(0x60)(Edit, ConstParm, ExportObject, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTransform                            TransformB;                                        // 0x60(0x60)(Edit, BlueprintVisible, Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WithinError;                                       // 0xC0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0xC4(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AC1[0xB];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.AreRotatorsNearlyEqual
struct UVictoryCore_AreRotatorsNearlyEqual_Params
{
public:
	struct FRotator                              RotatorA;                                          // 0x0(0x18)(Parm, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FRotator                              RotatorB;                                          // 0x18(0x18)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        WithinError;                                       // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x34(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AC2[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.AreAllSublevelsForDataLayerLoaded
struct UVictoryCore_AreAllSublevelsForDataLayerLoaded_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  DataLayerName;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, OutParm, Transient, Config, EditConst, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x10(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AC3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x128 (0x128 - 0x0)
// Function ShooterGame.VictoryCore.ApplyEnvironmentalInteractionShotHit_Universal
struct UVictoryCore_ApplyEnvironmentalInteractionShotHit_Universal_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FHitResult                            ImpactHitInfo;                                     // 0x8(0xF0)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               VelocityOrShootDirection;                          // 0xF8(0x18)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x110(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC4[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x118(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	float                                        Radius;                                            // 0x120(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AC5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x30 (0x30 - 0x0)
// Function ShooterGame.VictoryCore.ApplyEnvironmentalInteractionExplosion_Universal
struct UVictoryCore_ApplyEnvironmentalInteractionExplosion_Universal_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        ExplosionRadius;                                   // 0x20(0x4)(ConstParm, BlueprintReadOnly, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        FluidSimSplashStrength;                            // 0x24(0x4)(EditFixedSize, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x28(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VictoryCore.AmbientInsectsVFXEnabled
struct UVictoryCore_AmbientInsectsVFXEnabled_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.AdjustScreenPositionWithScreenDPI
struct UVictoryCore_AdjustScreenPositionWithScreenDPI_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector2D                             ScreenPosition;                                    // 0x8(0x10)(ExportObject, Parm, OutParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.AddToEditorMessageLog
struct UVictoryCore_AddToEditorMessageLog_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FString                                Message;                                           // 0x8(0x10)(BlueprintVisible, EditFixedSize, Parm, OutParm, Transient, EditConst, SubobjectReference)
	enum class EEditorMessageLogLevel            LogLevel;                                          // 0x18(0x1)(ConstParm, Net, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bServerOnly;                                       // 0x19(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ReturnParm, Transient, DisableEditOnInstance, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC6[0x6];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.AddToActorList
struct UVictoryCore_AddToActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	int32                                        ActorListNum;                                      // 0x8(0x4)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AC7[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class AActor*                                ActorRef;                                          // 0x10(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.VictoryCore.AddLocalPlayer
struct UVictoryCore_AddLocalPlayer_Params
{
public:
	int32                                        ControllerId;                                      // 0x0(0x4)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, Transient, Config, EditConst, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VictoryCore.AddFoliageInteraction
struct UVictoryCore_AddFoliageInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AC8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x40(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Plasticity;                                        // 0x44(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x60 (0x60 - 0x0)
// Function ShooterGame.VictoryCore.AddFoliageCapsuleInteractionEffect
struct UVictoryCore_AddFoliageCapsuleInteractionEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AC9[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x58(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoliagePlasticity;                                 // 0x5C(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.VictoryCore.AddFluidInteraction
struct UVictoryCore_AddFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4ACA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	bool                                         bSplash;                                           // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x41(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x48(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x50(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x58(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x70(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VictoryCore.AddEnvironmentInteractionEffect
struct UVictoryCore_AddEnvironmentInteractionEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4ACE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x40(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoliagePlasticity;                                 // 0x44(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFoliageInteraction;                               // 0x48(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSplash;                                           // 0x49(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x4A(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ACF[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x50(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x78(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.VictoryCore.AddEnvironmentCapsuleInteractionEffect
struct UVictoryCore_AddEnvironmentCapsuleInteractionEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AD2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x58(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoliagePlasticity;                                 // 0x5C(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bFoliageInteraction;                               // 0x60(0x1)(Edit, ConstParm, ExportObject, EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSplash;                                           // 0x61(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x62(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD3[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x68(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         DontAddIfOverLimits;                               // 0x71(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD4[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x78(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x90(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VictoryCore.AddCombinedFoliageFluidInteraction
struct UVictoryCore_AddCombinedFoliageFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AD6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x40(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        Plasticity;                                        // 0x44(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSplash;                                           // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x49(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD7[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x50(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD8[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x78(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AD9[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.VictoryCore.AddCombinedFoliageFluidCapsuleInteractionEffect
struct UVictoryCore_AddCombinedFoliageFluidCapsuleInteractionEffect_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4ADA[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        FoliageInteractionStrength;                        // 0x58(0x4)(ConstParm, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        FoliagePlasticity;                                 // 0x5C(0x4)(Edit, ConstParm, Net, Parm, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
	bool                                         bSplash;                                           // 0x60(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x61(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADB[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x68(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADC[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x78(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x90(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADD[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VictoryCore.AddAnimSlotToSkeleton
struct UVictoryCore_AddAnimSlotToSkeleton_Params
{
public:
	class USkeleton*                             Skeleton;                                          // 0x0(0x8)(ExportObject, Net, EditFixedSize, Transient, EditConst, GlobalConfig, DuplicateTransient)
	class FName                                  SlotName;                                          // 0x8(0x8)(Edit, ConstParm, BlueprintReadOnly, ReturnParm, Config, EditConst, GlobalConfig, SubobjectReference)
	class FName                                  SlotGroup;                                         // 0x10(0x8)(ConstParm, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.VictoryCore.AddActorToCustomActorList
struct UVictoryCore_AddActorToCustomActorList_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	class FName                                  SearchCustomTag;                                   // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, ReturnParm, Transient, Config, InstancedReference, SubobjectReference)
	class AActor*                                ActorToAdd;                                        // 0x10(0x8)(BlueprintVisible, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         CreateListIfMissing;                               // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4ADE[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.VictoryCore.ActorHasLineOfSightToWorldLocation
struct UVictoryCore_ActorHasLineOfSightToWorldLocation_Params
{
public:
	class AActor*                                FromActor;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	struct FVector                               ToLocation;                                        // 0x8(0x18)(Edit, ConstParm, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                OutBlockingActor;                                  // 0x20(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x28(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_4ADF[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x2C(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x30(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AE0[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x40 (0x40 - 0x0)
// Function ShooterGame.VictoryCore.ActorHasLineOfSight
struct UVictoryCore_ActorHasLineOfSight_Params
{
public:
	class AActor*                                FromActor;                                         // 0x0(0x8)(Edit, BlueprintReadOnly, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	class AActor*                                ToActor;                                           // 0x8(0x8)(ExportObject, Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	class AActor*                                OutBlockingActor;                                  // 0x10(0x8)(ConstParm, ExportObject, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ToActorOffset;                                     // 0x18(0x18)(ConstParm, Net, EditFixedSize, Parm, OutParm, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class ECollisionChannel                 Channel;                                           // 0x30(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_4AE1[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	float                                        DebugDrawDuration;                                 // 0x34(0x4)(Edit, ExportObject, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)
	bool                                         ReturnValue;                                       // 0x38(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AE2[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VirtualCursor.IsVirtualCursorEnabled
struct UVirtualCursor_IsVirtualCursorEnabled_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AE3[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VirtualCursor.IsOverInteractableWidget
struct UVirtualCursor_IsOverInteractableWidget_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4AE4[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.VirtualCursor.Enable
struct UVirtualCursor_Enable_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
	bool                                         bUseLeftStick;                                     // 0x8(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AE5[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VirtualCursor.Disable
struct UVirtualCursor_Disable_Params
{
public:
	class APlayerController*                     PlayerController;                                  // 0x0(0x8)(Edit, ConstParm, BlueprintReadOnly, Net, Parm, OutParm, Config, EditConst, GlobalConfig, InstancedReference, DuplicateTransient)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VirtualCursorManager.IsCursorValid
struct UVirtualCursorManager_IsCursorValid_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VirtualCursorManager.IsCursorOverInteractableWidget
struct UVirtualCursorManager_IsCursorOverInteractableWidget_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VirtualCursorManager.EnableAnalogCursor
struct UVirtualCursorManager_EnableAnalogCursor_Params
{
public:
	bool                                         bUseLeftStick;                                     // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VirtualCursorManager.ContainsGamepadCursorInputProcessor
struct UVirtualCursorManager_ContainsGamepadCursorInputProcessor_Params
{
public:
	bool                                         ReturnValue;                                       // 0x0(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VisualSettingsUI.OnOcioSettingUpdated
struct UVisualSettingsUI_OnOcioSettingUpdated_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AE7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x18 (0x18 - 0x0)
// Function ShooterGame.VisualSettingsUI.OnOcioSettingChanged
struct UVisualSettingsUI_OnOcioSettingChanged_Params
{
public:
	class FString                                SelectedItem;                                      // 0x0(0x10)(ConstParm, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	enum class ESelectInfo                       SelectionType;                                     // 0x10(0x1)(Edit, ConstParm, BlueprintVisible, Parm, OutParm, ZeroConstructor, GlobalConfig, SubobjectReference)
	uint8                                        Pad_4AE8[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VolumetricDispatcher.UnRegisterWindSource
struct AVolumetricDispatcher_UnRegisterWindSource_Params
{
public:
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.VolumetricDispatcher.SetEnabled
struct AVolumetricDispatcher_SetEnabled_Params
{
public:
	bool                                         bEnable;                                           // 0x0(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, EditConst, GlobalConfig, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.VolumetricDispatcher.RegisterWindSource
struct AVolumetricDispatcher_RegisterWindSource_Params
{
public:
	class UPrimalWindSourceComponent*            WindSource;                                        // 0x0(0x8)(Edit, ExportObject, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, Transient, EditConst, InstancedReference, SubobjectReference)
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VolumetricDispatcher.FluidSpash
struct AVolumetricDispatcher_FluidSpash_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x18(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AEB[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x20(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x38(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x40(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AEC[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x48 (0x48 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddFoliageInteraction
struct AVolumetricDispatcher_AddFoliageInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AED[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        InteractionStrength;                               // 0x40(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Plasticity;                                        // 0x44(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
};

// 0x78 (0x78 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddFluidInteraction
struct AVolumetricDispatcher_AddFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AEE[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	bool                                         bSplash;                                           // 0x40(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x41(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AEF[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x48(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x50(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF0[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x58(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x70(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF1[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x80 (0x80 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddCombinedFoliageFluidInteraction
struct AVolumetricDispatcher_AddCombinedFoliageFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	float                                        Radius;                                            // 0x20(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AF2[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x28(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        InteractionStrength;                               // 0x40(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Plasticity;                                        // 0x44(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSplash;                                           // 0x48(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x49(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF3[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x50(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x58(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF4[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x60(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x78(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF5[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x68 (0x68 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddCapsuleFoliageInteraction
struct AVolumetricDispatcher_AddCapsuleFoliageInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AF6[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        InteractionStrength;                               // 0x58(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Plasticity;                                        // 0x5C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         DontAddIfOverLimits;                               // 0x60(0x1)(EditFixedSize, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF7[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x90 (0x90 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddCapsuleFluidInteraction
struct AVolumetricDispatcher_AddCapsuleFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AF8[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	bool                                         bSplash;                                           // 0x58(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x59(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AF9[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x60(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x68(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFA[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x70(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x88(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFB[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x98 (0x98 - 0x0)
// Function ShooterGame.VolumetricDispatcher.AddCapsuleCombinedFoliageFluidInteraction
struct AVolumetricDispatcher_AddCapsuleCombinedFoliageFluidInteraction_Params
{
public:
	class UObject*                               WorldContextObject;                                // 0x0(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Config, EditConst, SubobjectReference)
	struct FVector                               Location;                                          // 0x8(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FVector                               ExtraCapsuleLocation;                              // 0x20(0x18)(ConstParm, Net, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Radius;                                            // 0x38(0x4)(ConstParm, ExportObject, Parm, OutParm, Transient, DisableEditOnInstance, SubobjectReference)
	uint8                                        Pad_4AFC[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               Velocity;                                          // 0x40(0x18)(Edit, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, Config, SubobjectReference)
	float                                        InteractionStrength;                               // 0x58(0x4)(Edit, ConstParm, ExportObject, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	float                                        Plasticity;                                        // 0x5C(0x4)(BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, Config, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	bool                                         bSplash;                                           // 0x60(0x1)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bRipple;                                           // 0x61(0x1)(ExportObject, Net, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFD[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	class UNiagaraSystem*                        FluidSimSplashTemplateOverride;                    // 0x68(0x8)(BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, EditConst, InstancedReference, SubobjectReference)
	bool                                         PlaySplashSound;                                   // 0x70(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFE[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               SplashLocation;                                    // 0x78(0x18)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	float                                        SplashRadius;                                      // 0x90(0x4)(BlueprintReadOnly, ZeroConstructor, ReturnParm, Transient, Config, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4AFF[0x4];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.SetStrengthFromSplineActor
struct AWaterVolumeWithFlow_SetStrengthFromSplineActor_Params
{
public:
	class AActor*                                InSplineActor;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x10 (0x10 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.SetPaintValueAtGridIndex
struct AWaterVolumeWithFlow_SetPaintValueAtGridIndex_Params
{
public:
	struct FGridIndex                            Grid;                                              // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference)
	struct FColor                                InColor;                                           // 0x8(0x4)(ExportObject, EditFixedSize, OutParm, ZeroConstructor, Transient, Config, InstancedReference, SubobjectReference)
	enum class EColorChannelTarget               Channel;                                           // 0xC(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, Config, DisableEditOnInstance, EditConst)
	uint8                                        Pad_4B08[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.SetDestinationsFromSplineActor
struct AWaterVolumeWithFlow_SetDestinationsFromSplineActor_Params
{
public:
	class AActor*                                InSplineActor;                                     // 0x0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0x4 (0x4 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.SetCellSize
struct AWaterVolumeWithFlow_SetCellSize_Params
{
public:
	float                                        NewCellSize;                                       // 0x0(0x4)(ExportObject, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

// 0xC (0xC - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.IsGridIndexValid
struct AWaterVolumeWithFlow_IsGridIndexValid_Params
{
public:
	struct FGridIndex                            Grid;                                              // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference)
	bool                                         ReturnValue;                                       // 0x8(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4B09[0x3];                                     // Fixing Size Of Struct > TateDumper <
};

// 0xC (0xC - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.GetPaintValueAtGridIndex
struct AWaterVolumeWithFlow_GetPaintValueAtGridIndex_Params
{
public:
	struct FGridIndex                            Grid;                                              // 0x0(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference)
	struct FColor                                ReturnValue;                                       // 0x8(0x4)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.GetLocationForGridIndex
struct AWaterVolumeWithFlow_GetLocationForGridIndex_Params
{
public:
	struct FGridIndex                            ForIndex;                                          // 0x0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               ReturnValue;                                       // 0x8(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x8 (0x8 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.GetGridSize
struct AWaterVolumeWithFlow_GetGridSize_Params
{
public:
	struct FGridIndex                            ReturnValue;                                       // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x28 (0x28 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.GetGridIndexForLocation
struct AWaterVolumeWithFlow_GetGridIndexForLocation_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	struct FGridIndex                            Grid;                                              // 0x18(0x8)(ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, Transient, InstancedReference)
	bool                                         ReturnValue;                                       // 0x20(0x1)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
	uint8                                        Pad_4B0A[0x7];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x38 (0x38 - 0x0)
// Function ShooterGame.WaterVolumeWithFlow.GetFlowVectorAtLocation
struct AWaterVolumeWithFlow_GetFlowVectorAtLocation_Params
{
public:
	struct FVector                               Location;                                          // 0x0(0x18)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor)
	bool                                         bInterpFlowVector;                                 // 0x18(0x1)(Edit, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B0B[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	struct FVector                               ReturnValue;                                       // 0x20(0x18)(BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, SubobjectReference)
};

// 0x20 (0x20 - 0x0)
// Function ShooterGame.WorldBuffEntryWidget.SyncData
struct UWorldBuffEntryWidget_SyncData_Params
{
public:
	struct FWorldBuffPersistantData              WorldBuffPersistantData;                           // 0x0(0x18)(Edit, BlueprintReadOnly, EditFixedSize, OutParm, ReturnParm, DisableEditOnTemplate, Transient, Config)
	bool                                         bIsListEntry;                                      // 0x18(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldReinit;                                     // 0x19(0x1)(Edit, ConstParm, Net, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDurationIsStopped;                                // 0x1A(0x1)(Edit, ExportObject, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_4B11[0x5];                                     // Fixing Size Of Struct > TateDumper <
};

// 0x1 (0x1 - 0x0)
// Function ShooterGame.WorldBuffEntryWidget.InitializeMe
struct UWorldBuffEntryWidget_InitializeMe_Params
{
public:
	bool                                         bIsListEntry;                                      // 0x0(0x1)(ConstParm, BlueprintReadOnly, Parm, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
};

}
}


