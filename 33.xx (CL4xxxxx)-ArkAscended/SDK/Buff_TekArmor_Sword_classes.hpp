#pragma once

// Dumped with TateDumper!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x368 (0x1008 - 0xCA0)
// BlueprintGeneratedClass Buff_TekArmor_Sword.Buff_TekArmor_Sword_C
class ABuff_TekArmor_Sword_C : public ABuff_TekArmor_C
{
public:
	struct FPointerToUberGraphFrame              UberGraphFrame;                                    // 0xCA0(0x8)(Edit, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, Transient, SubobjectReference)
	class UParticleSystemComponent*              TPV_ChargeFX;                                      // 0xCA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystemComponent*              FPV_ChargeFX;                                      // 0xCB0(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       Sound_ChargedLoop;                                 // 0xCB8(0x8)(ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       Sound_Discharged;                                  // 0xCC0(0x8)(Edit, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAudioComponent*                       Sound_Charged;                                     // 0xCC8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class E_TekGlovePunchState              CurrentTekPunchState;                              // 0xCD0(0x1)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B79[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       TakePercentDamageFromHittingStructs;               // 0xCD8(0x8)(BlueprintVisible, ExportObject, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bMultiplyDamageByMeleeMultiplier;                  // 0xCE0(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseChargeLevel2;                                  // 0xCE1(0x1)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bWantsToCharge;                                    // 0xCE2(0x1)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B7E[0x5];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       ChargeStartTime;                                   // 0xCE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       CooldownStartTime;                                 // 0xCF0(0x8)(ExportObject, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchCooldown;                                     // 0xCF8(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchRadius;                                       // 0xD00(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchDamage;                                       // 0xD08(0x8)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchImpulse;                                      // 0xD10(0x8)(Edit, BlueprintVisible, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchImpulseDragWeightLimit;                       // 0xD18(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchImpulse_current;                              // 0xD20(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchImpulseDragWeightLimit_current;               // 0xD28(0x8)(ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                CurrentPunchDamageType;                            // 0xD30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        PunchIgnoreActors;                                 // 0xD38(0x10)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RocketPunchDistance_Max;                           // 0xD48(0x8)(Edit, ConstParm, EditFixedSize, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FVector                               CurrentRocketFistVelocity;                         // 0xD50(0x18)(Edit, ConstParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RocketPunchDuration_Max;                           // 0xD68(0x8)(Edit, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RocketPunchDuration_current;                       // 0xD70(0x8)(Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RocketPunchStartTime;                              // 0xD78(0x8)(ConstParm, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ChargingSound;                                     // 0xD80(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       ChargedParticle;                                   // 0xD88(0x8)(BlueprintVisible, BlueprintReadOnly, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ChargedSound_One;                                  // 0xD90(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            ChargedSound_Two;                                  // 0xD98(0x8)(Edit, ConstParm, BlueprintVisible, Net, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       PunchImpactParticle;                               // 0xDA0(0x8)(Edit, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PunchImpactSound;                                  // 0xDA8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ElementCost_Punch;                                 // 0xDB0(0x4)(Edit, BlueprintVisible, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ElementCost_ChargeLoop;                            // 0xDB4(0x4)(BlueprintVisible, BlueprintReadOnly, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ChargingElementCostInterval;                       // 0xDB8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterial*                             SwordTargetingCrosshairType;                       // 0xDC0(0x8)(Edit, ConstParm, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UMaterialInstanceDynamic*              CurrentSwordTargetingCrosshair;                    // 0xDC8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UParticleSystem*                       PunchImpactGroundParticle;                         // 0xDD0(0x8)(Edit, BlueprintVisible, ExportObject, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bDebug;                                            // 0xDD8(0x1)(ExportObject, BlueprintReadOnly, Net, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, GlobalConfig, SubobjectReference)
	uint8                                        Pad_5B86[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       CrosshairSize;                                     // 0xDE0(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            FullyChargedPeriodicSound;                         // 0xDE8(0x8)(BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchExplosionDamage;                              // 0xDF0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchExplosionRadius;                              // 0xDF8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                PunchExplosionDamageType;                          // 0xE00(0x8)(Edit, ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchExplosionImpulse;                             // 0xE08(0x8)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class USoundBase*                            PunchChargeCancelSound;                            // 0xE10(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	TArray<class AActor*>                        AlreadyHitActorsArray;                             // 0xE18(0x10)(Edit, ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchAnimLength;                                   // 0xE28(0x8)(ExportObject, BlueprintReadOnly, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchTraceHalfSize;                                // 0xE30(0x8)(BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TekPunch_FoliageDamageType;                        // 0xE38(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                TekPunchCameraShake;                               // 0xE40(0x8)(Edit, EditFixedSize, Parm, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bHasValidTarget;                                   // 0xE48(0x1)(ConstParm, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B8C[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	struct FLinearColor                          HUD_NoPawnTargetColor;                             // 0xE4C(0x10)(ExportObject, Net, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FLinearColor                          HUD_ValidPawnTargetColor;                          // 0xE5C(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B8D[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class USoundBase*                            MidAirSound;                                       // 0xE70(0x8)(Edit, ConstParm, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastChargeConsumeElementTime;                      // 0xE78(0x8)(Edit, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bTargetingPressed;                                 // 0xE80(0x1)(ExportObject, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	enum class E_TekGlovePunchState              PreviousTekPunchState;                             // 0xE81(0x1)(BlueprintVisible, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B8F[0x6];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PlayerWalkSpeed_Charging;                          // 0xE88(0x8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TimeToCharge;                                      // 0xE90(0x8)(ConstParm, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ElementCost_RocketPunch;                           // 0xE98(0x4)(Net, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B91[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	class UAnimMontage*                          Anim_ChargeCancel_TPV;                             // 0xEA0(0x8)(ConstParm, ExportObject, BlueprintReadOnly, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_ChargeCancel_FPV;                             // 0xEA8(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, OutParm, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_ChargeStart_TPV_Ground;                       // 0xEB0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_ChargeStart_TPV_Air;                          // 0xEB8(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_ChargeStart_FPV;                              // 0xEC0(0x8)(Edit, ConstParm, EditFixedSize, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_RocketPunch_TPV;                              // 0xEC8(0x8)(Edit, BlueprintVisible, ExportObject, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_Punch_TPV_Ground;                             // 0xED0(0x8)(Edit, ConstParm, BlueprintVisible, ExportObject, Net, EditFixedSize, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_Punch_TPV_Air;                                // 0xED8(0x8)(Edit, ConstParm, EditFixedSize, Parm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UAnimMontage*                          Anim_Punch_FPV;                                    // 0xEE0(0x8)(ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	int32                                        ElementCost_Charged;                               // 0xEE8(0x4)(BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B94[0x4];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       PunchDuration;                                     // 0xEF0(0x8)(Edit, ConstParm, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, ReturnParm, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GloveFXSocketName_FPV;                             // 0xEF8(0x8)(Edit, BlueprintVisible, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class FName                                  GloveFXSocketName_TPV;                             // 0xF00(0x8)(Edit, BlueprintVisible, ExportObject, Net, EditFixedSize, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAllowAutoStart;                                   // 0xF08(0x1)(ConstParm, BlueprintReadOnly, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B95[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       RocketPunchLastUpdateTime;                         // 0xF10(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bShouldPunchNow;                                   // 0xF18(0x1)(Net, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B96[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       InstaPunchDistance;                                // 0xF20(0x8)(EditFixedSize, OutParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       RocketPunchTickCheckDistance;                      // 0xF28(0x8)(Edit, Parm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       GroundCheckDistance;                               // 0xF30(0x8)(Edit, ConstParm, EditFixedSize, OutParm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class UClass*                                ChargedCameraShake;                                // 0xF38(0x8)(BlueprintVisible, BlueprintReadOnly, Net, EditFixedSize, Parm, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       MeleeDamageMultiplierScale;                        // 0xF40(0x8)(ConstParm, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bAltFirePressed;                                   // 0xF48(0x1)(BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B99[0x7];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       LastPunchTime;                                     // 0xF50(0x8)(Edit, ExportObject, BlueprintReadOnly, Parm, OutParm, ReturnParm, DisableEditOnTemplate, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       PunchDurationMax;                                  // 0xF58(0x8)(ConstParm, ExportObject, EditFixedSize, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AShooterWeapon*                        Ref_TekSword;                                      // 0xF60(0x8)(ConstParm, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	class AActor*                                RefRocketPunchTargActor;                           // 0xF68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       ExtraStructureDamageMultiplier;                    // 0xF70(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       MaxFallZSpeed;                                     // 0xF78(0x8)(ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastPunchedTime;                                   // 0xF80(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, Parm, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       LastRocketPunchedTime;                             // 0xF88(0x8)(ConstParm, ExportObject, EditFixedSize, OutParm, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseInputActionFireHoldSecondary;                  // 0xF90(0x1)(ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseInputActionAltFireHoldSecondary;               // 0xF91(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseGamepadRightTriggerHoldSecondary;              // 0xF92(0x1)(ConstParm, BlueprintVisible, ExportObject, Parm, OutParm, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseInputActionTargetingHoldSecondary;             // 0xF93(0x1)(Edit, ConstParm, BlueprintVisible, ExportObject, EditFixedSize, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	bool                                         bUseGamepadLeftTriggerHoldSecondary;               // 0xF94(0x1)(Edit, ConstParm, Parm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	uint8                                        Pad_5B9A[0x3];                                     // Fixing Size After Last Property  > TateDumper <
	double                                       HoldActionThreshold;                               // 0xF98(0x8)(ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	struct FTransform                            OverrideFPVChargeVFXTransform;                     // 0xFA0(0x60)(Edit, ExportObject, Net, EditFixedSize, Parm, OutParm, ZeroConstructor, ReturnParm, DisableEditOnTemplate, Transient, DisableEditOnInstance, EditConst, InstancedReference, SubobjectReference)
	double                                       TimeValue;                                         // 0x1000(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, EditFixedSize, Parm, DisableEditOnTemplate, Config, DisableEditOnInstance, InstancedReference, SubobjectReference)

	static class UClass* StaticClass();
	static class ABuff_TekArmor_Sword_C* GetDefaultObj();

	bool ValidatePunchState(bool bValidState, int32 CallFunc_Conv_ByteToInt_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
	bool IsTekSword(bool IsTekSword, bool CallFunc_ObjectIsChildOfSoftRef_ReturnValue);
	bool AllowTekPunch();
	bool PreventBlockingWithShield();
	class AShooterCharacter* ShieldActive(bool* CallFunc_IsBlockingWithShield_ReturnValue);
	bool HasShield(bool IsMiniHLNA, bool* RetVal);
	class UPrimalItemArmor_Base_Tek_C* GetRelatedTekArmorRef();
	bool Can_Decrease_Element_Ammo(bool* CanDecrease, bool* ReturnVal, bool* CallFunc_EqualEqual_IntInt_ReturnValue, bool* CallFunc_Greater_IntInt_ReturnValue, bool* CallFunc_GreaterEqual_IntInt_ReturnValue);
	int32 TryDecreaseElementAmmo(int32 LocalAmmoClip, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease, bool* CallFunc_EqualEqual_IntInt_ReturnValue, int32* Temp_int_Variable, int32* Temp_int_Variable_1, bool CallFunc_LessEqual_IntInt_ReturnValue, bool* CallFunc_EqualEqual_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Max_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_1, bool* CallFunc_EqualEqual_IntInt_ReturnValue_2);
	bool BPCheckPreventInput(enum class EPrimalCharacterInputType* InputType, bool CallFunc_ShieldActive_ReturnValue);
	bool CanPhysicallyTekPunch(bool Result, bool* RetVal, bool CallFunc_IsPlayerGrounded_result, bool CallFunc_IsPlayerInWaterVolume_result, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool* CallFunc_IsTekArmorUsingAbility__result);
	bool Should_Damage_Actor(class AActor* Victim, bool Result, bool CallFunc_Should_Damage_Actor_result, bool* CallFunc_IsDead_ReturnValue);
	bool Has_Line_Of_SightToActor(class AActor** Actor, bool Result, struct FVector* CallFunc_GetActorBounds_BoxExtent, TArray<class AActor*>* K2Node_MakeArray_Array, const struct FVector& CallFunc_GetRelativeCenterOfMass_ReturnValue);
	class UAnimMontage* ArePunchChargeAnimsPlaying(bool* CleanUpAnims, bool Result, bool* RetVal, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue_1, bool* CallFunc_Montage_IsPlaying_ReturnValue, bool* CallFunc_Montage_IsPlaying_ReturnValue_1, bool* CallFunc_Montage_IsPlaying_ReturnValue_2, bool* CallFunc_Montage_IsPlaying_ReturnValue_3);
	float PlayPunchAnimsByState(enum class E_TekGlovePunchState State, bool K2Node_SwitchEnum_CmpSuccess, bool* CallFunc_HasShield_ReturnValue, const struct FWeaponAnim& K2Node_MakeStruct_WeaponAnim, bool CallFunc_IsPlayerAboveGround_result, bool CallFunc_IsPlayerAboveGround_result_1, float* CallFunc_PlayWeaponAnimation_ReturnValue);
	bool IsPlayerAboveGround(bool Result, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue);
	class APrimalBuff* AreTekPantsEquipped(bool Result, bool* RetVal, class UPrimalItemArmor_TekPants_C* K2Node_DynamicCast_AsPrimal_Item_Armor_Tek_Pants, bool* K2Node_DynamicCast_bSuccess, class ABuff_TekArmor_Pants_C** K2Node_DynamicCast_AsBuff_Tek_Armor_Pants, bool* K2Node_DynamicCast_bSuccess_1);
	float GetBuffPostprocessIntensity(double CurrentIntensity, double CallFunc_SelectFloat_ReturnValue, double CallFunc_FClamp_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, double CallFunc_SelectFloat_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue, double CallFunc_FClamp_ReturnValue_1);
	void BPDeactivated(class AActor** ForInstigator);
	float Update_Local_Vars_by_State(bool K2Node_SwitchEnum_CmpSuccess, const struct FVector& CallFunc_Get_Punch_Location_Location, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool* CallFunc_IsFirstPerson_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, bool* CallFunc_IsLocallyControlled_ReturnValue);
	double GetPlayerCameraLocation(struct FVector* Location, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue);
	bool BPSetupForInstigator(class AActor** ForInstigator);
	class AShooterCharacter* RocketPunchEnd();
	bool ResetOwningPlayerVariables(bool* CallFunc_IsLocallyControlled_ReturnValue);
	bool PreventJump();
	float NetSetTekPunchState(bool Temp_bool_Variable, enum class E_TekGlovePunchState Temp_byte_Variable, float* CallFunc_StaticGetTimeSince_ReturnValue, float* CallFunc_StaticGetTimeSince_ReturnValue_1, enum class E_TekGlovePunchState K2Node_Select_Default, bool K2Node_SwitchEnum_CmpSuccess);
	double BuffTickServer(bool* CallFunc_CanPhysicallyTekPunch_result, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1);
	bool Client_SetTekPunchState(bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease_1, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease_2, bool CallFunc_Can_Decrease_Element_Ammo_CanDecrease_3);
	double GetTimeToRocketPunchTarget(const struct FVector& TargetLocation, const struct FVector& CallFunc_GetPlayerCameraLocation_location, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue);
	double CheckForTargetsWhileRocketPunching(bool* RetVal, struct FVector* CallFunc_ScanForRocketFistTargets_hitLocation, const struct FVector& CallFunc_GetPlayerCameraLocation_location, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_Less_DoubleDouble_ReturnValue);
	double Set_AudioParams_and_Play(class UAudioComponent* Audio, bool* PlaySound, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, float CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast, float* CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast);
	struct FVector OnRep_CurrentPunchState(bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1);
	struct FVector GetRelativeCenterOfMass(class APrimalCharacter* Character, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	float DrawBuffFloatingHUD(int32* BuffIndex, float* DrawScale, double* CallFunc_Add_DoubleDouble_ReturnValue, float* CallFunc_DrawMaterial_ScreenX_ImplicitCast);
	struct FVector ScanForRocketFistTargets(struct FVector* Location, bool WasHit, bool Temp_bool_True_if_break_was_hit_Variable, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, bool Temp_bool_True_if_break_was_hit_Variable_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, TArray<enum class EObjectTypeQuery>* K2Node_MakeArray_Array, const struct FVector& CallFunc_GetPlayerCameraLocation_location, TArray<class AActor*>* K2Node_MakeArray_Array_1, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, float* CallFunc_BreakRotator_Roll, float* CallFunc_BreakRotator_Pitch, float* CallFunc_BreakRotator_Yaw, struct FVector* CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, TArray<struct FHitResult>* CallFunc_BoxTraceMultiForObjects_OutHits, bool CallFunc_BoxTraceMultiForObjects_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, bool CallFunc_Should_Damage_Actor_result, bool* K2Node_DynamicCast_bSuccess, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess_1, bool CallFunc_BreakHitResult_bBlockingHit_1, bool* CallFunc_BreakHitResult_bInitialOverlap_1, float* CallFunc_BreakHitResult_Distance_1, struct FVector* CallFunc_BreakHitResult_Location_1, struct FVector* CallFunc_BreakHitResult_ImpactPoint_1, struct FVector* CallFunc_BreakHitResult_Normal_1, struct FVector* CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat_1, class AActor** CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent_1, class FName* CallFunc_BreakHitResult_HitBoneName_1, class FName* CallFunc_BreakHitResult_BoneName_1, int32* CallFunc_BreakHitResult_HitItem_1, int32* CallFunc_BreakHitResult_ElementIndex_1, int32* CallFunc_BreakHitResult_FaceIndex_1, int32 Temp_int_Array_Index_Variable_1, class APrimalBuff* CallFunc_Array_Get_Item_1, bool CallFunc_PreventActorTargeting_ReturnValue);
	struct FVector AccurateSphereCheck(bool* HitPawnOrStructure, int32 Temp_int_Loop_Counter_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_MakeVector_ReturnValue, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, float CallFunc_VTraceMultiBP_SphereRadius_ImplicitCast, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast);
	class USoundBase* Spawn_Sound_at_Fist_Location(double* VolumeMultiplier, double PitchMultiplier, const struct FVector& CallFunc_Get_Punch_Location_Location, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	bool BuffTickClient(bool CallFunc_ShieldActive_ReturnValue, bool CallFunc_CanUseTekAbility_bResult, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, bool* CallFunc_HasShield_ReturnValue, bool* CallFunc_IsAbilityValid_OutValid, bool CallFunc_CanUseTekAbility_bResult_1, bool CallFunc_IsPlayerGrounded_result, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue, bool* CallFunc_IsLocallyControlled_ReturnValue, const struct FWeaponAnim& K2Node_MakeStruct_WeaponAnim, bool* CallFunc_ArePunchChargeAnimsPlaying_result, float* CallFunc_PlayWeaponAnimation_ReturnValue, class UAnimInstance** CallFunc_GetAnimInstance_ReturnValue_1, bool CallFunc_IsPlayerGrounded_result_1, bool* CallFunc_Montage_IsPlaying_ReturnValue, bool CallFunc_IsPlacingActive_ReturnValue, double* CallFunc_Add_DoubleDouble_ReturnValue, struct FVector* CallFunc_ScanForRocketFistTargets_hitLocation, bool* CallFunc_IsFirstPerson_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, double CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast);
	struct FVector Get_Punch_Location(struct FVector* Location, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue);
	bool RocketPunchStart(struct FVector* PunchDir, const struct FVector& HitLoc, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, struct FVector* CallFunc_GetActorForwardVector_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, struct FVector* CallFunc_Conv_RotatorToVector_ReturnValue, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, struct FVector* CallFunc_ScanForRocketFistTargets_hitLocation, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue);
	float Punch(int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_GetRelativeCenterOfMass_ReturnValue, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetRelativeCenterOfMass_ReturnValue_1, float* CallFunc_GetMeleeDamageModifier_ReturnValue, class AWeapBaseClub_C* K2Node_DynamicCast_AsWeap_Base_Club, bool* K2Node_DynamicCast_bSuccess, double CallFunc_Multiply_DoubleDouble_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, double* CallFunc_Add_DoubleDouble_ReturnValue, const struct FVector& CallFunc_Get_Punch_Location_Location, double CallFunc_Multiply_DoubleDouble_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_2, TArray<class AActor*>* Temp_object_Variable, int32 Temp_int_Array_Index_Variable_1, TArray<struct FHitResult>* CallFunc_SphereTraceMulti_OutHits, bool* CallFunc_SphereTraceMulti_ReturnValue, const struct FVector& CallFunc_Get_Punch_Location_Location_1, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, bool CallFunc_BreakHitResult_bBlockingHit, bool* CallFunc_BreakHitResult_bInitialOverlap, float* CallFunc_BreakHitResult_Distance, struct FVector* CallFunc_BreakHitResult_Location, struct FVector* CallFunc_BreakHitResult_ImpactPoint, struct FVector* CallFunc_BreakHitResult_Normal, struct FVector* CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat, class AActor** CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent, class FName* CallFunc_BreakHitResult_HitBoneName, class FName* CallFunc_BreakHitResult_BoneName, int32* CallFunc_BreakHitResult_HitItem, int32* CallFunc_BreakHitResult_ElementIndex, int32* CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character, bool* K2Node_DynamicCast_bSuccess_1, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, double CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, float* CallFunc_ApplyPointDamage_ReturnValue, bool CallFunc_Should_Damage_Actor_result, bool* CallFunc_EqualEqual_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, double CallFunc_SelectFloat_ReturnValue_1, double CallFunc_Multiply_DoubleDouble_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_1, const struct FHitResult& CallFunc_Array_Get_Item_1, bool CallFunc_BreakHitResult_bBlockingHit_1, bool* CallFunc_BreakHitResult_bInitialOverlap_1, float* CallFunc_BreakHitResult_Distance_1, struct FVector* CallFunc_BreakHitResult_Location_1, struct FVector* CallFunc_BreakHitResult_ImpactPoint_1, struct FVector* CallFunc_BreakHitResult_Normal_1, struct FVector* CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial** CallFunc_BreakHitResult_PhysMat_1, class AActor** CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent** CallFunc_BreakHitResult_HitComponent_1, class FName* CallFunc_BreakHitResult_HitBoneName_1, class FName* CallFunc_BreakHitResult_BoneName_1, int32* CallFunc_BreakHitResult_HitItem_1, int32* CallFunc_BreakHitResult_ElementIndex_1, int32* CallFunc_BreakHitResult_FaceIndex_1, class UInstancedStaticMeshComponent* K2Node_DynamicCast_AsInstanced_Static_Mesh_Component, bool* K2Node_DynamicCast_bSuccess_2, class APrimalCharacter** K2Node_DynamicCast_AsPrimal_Character_1, bool* K2Node_DynamicCast_bSuccess_3, bool* CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_Should_Damage_Actor_result_1, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, double CallFunc_SelectFloat_ReturnValue_2, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue_2, bool* K2Node_DynamicCast_bSuccess_4, const struct FVector& CallFunc_Normal_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, class AInstancedFoliageActor** K2Node_DynamicCast_AsInstanced_Foliage_Actor, bool* K2Node_DynamicCast_bSuccess_5, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, struct FVector* CallFunc_Subtract_VectorVector_ReturnValue_3, bool Temp_bool_Variable, const struct FVector& CallFunc_Normal_ReturnValue_3, double K2Node_Select_Default, float* CallFunc_ApplyPointDamage_ReturnValue_1, float CallFunc_PlayWorldCameraShake_InnerRadius_ImplicitCast, float CallFunc_DealDirectDamage_DamageAmount_ImplicitCast, float CallFunc_ApplyPointDamage_Impulse_ImplicitCast, float CallFunc_VTraceMultiBP_SphereRadius_ImplicitCast, float* CallFunc_SphereTraceMulti_Radius_ImplicitCast, float CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast, float CallFunc_VTraceMultiBP_SphereRadius_ImplicitCast_1, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, float CallFunc_ApplyPointDamage_Impulse_ImplicitCast_1, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1, float CallFunc_ApplyPointDamage_BaseDamage_ImplicitCast_1);
	bool CanUseTekAbility(bool* bNotifyIfOutOfElement, bool* RetVal, bool* CallFunc_Greater_IntInt_ReturnValue, class ABiomeZoneVolume* CallFunc_GetMyBiomeZoneVolume_ReturnValue, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsTekBuffDisabled_bIsDisabled, bool* CallFunc_CanPhysicallyTekPunch_result, bool CallFunc_IsPlacingActive_ReturnValue);
	bool SetCastedArmorPieceRef(bool* K2Node_DynamicCast_bSuccess);
	void InpActEvt_AltFire_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_AltFire_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Targeting_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Targeting_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void Proxy_Gamepad_Left_Trigger_Hold(bool bPressed);
	void Proxy_InputAction_Targeting_Hold(bool bPressed);
	void Proxy_InputAction_Fire_Hold(bool bPressed);
	void Proxy_Gamepad_Right_Trigger_Hold(bool bPressed);
	void Proxy_InputAction_AltFire_Hold(bool bPressed);
	void Proxy_Fire_HoldTimer();
	void Proxy_Targeting_HoldTimer();
	void Proxy_AltFire_HoldTimer();
	void Proxy_LeftTrigger_HoldTimer();
	void Proxy_RightTrigger_HoldTimer();
	void OnSuperPunch_Pressed();
	void OnSuperPunch_Released();
	enum class E_TekGlovePunchState Server_SetPunchChargeState();
	void ResetCanLandAfterDelay();
	class APrimalCharacter* UpdateClientHasValidRocketPunchTarget(bool NewHasTarget);
	void ResetPunchStateAfterDelay();
	void Sword_AltFirePressed();
	void Sword_AltFireReleased();
	void Proxy_InputAction_Fire(bool bPressed);
	void Proxy_Gamepad_Right_Trigger(bool bPressed);
	void Proxy_InputAction_AltFire(bool bPressed);
	void Proxy_InputAction_Targeting(bool bPressed);
	void Proxy_Gamepad_Left_Trigger(bool bPressed);
	void Skill_SuperPunch_Pressed();
	void Skill_SuperPunch_Released();
	void Skill_SuperPunch_Mod_Released();
	void Skill_SuperPunch_Mod_Pressed();
	float ExecuteUbergraph_Buff_TekArmor_Sword(int32* EntryPoint, struct FKey* K2Node_InputActionEvent_Key_5, struct FKey* K2Node_InputActionEvent_Key_2, struct FKey* K2Node_InputActionEvent_Key_3, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool K2Node_CustomEvent_bPressed_9, bool K2Node_CustomEvent_bPressed_8, bool K2Node_CustomEvent_bPressed_7, bool K2Node_CustomEvent_bPressed_6, bool K2Node_CustomEvent_bPressed_5, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_3, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_4, bool CallFunc_CanUseTekAbility_bResult, bool K2Node_SwitchEnum_CmpSuccess, struct FKey* K2Node_InputActionEvent_Key_4, bool CallFunc_CanUseTekAbility_bResult_1, bool CallFunc_ValidatePunchState_bValidState, bool K2Node_SwitchEnum_CmpSuccess_1, bool K2Node_SwitchEnum_CmpSuccess_2, class APrimalCharacter** K2Node_CustomEvent_newTargetPawn, bool CallFunc_GreaterEqual_DoubleDouble_ReturnValue, struct FKey* K2Node_InputActionEvent_Key, struct FKey* K2Node_InputActionEvent_Key_1, bool* CallFunc_HasShield_ReturnValue, bool* CallFunc_HasShield_ReturnValue_1, bool CallFunc_ShieldActive_ReturnValue, bool CallFunc_ShieldActive_ReturnValue_1, bool CallFunc_IsPlacingActive_ReturnValue, bool CallFunc_IsPlacingActive_ReturnValue_1, bool CallFunc_IsPlacingActive_ReturnValue_2, bool CallFunc_IsPlacingActive_ReturnValue_3, bool K2Node_CustomEvent_bPressed_4, bool K2Node_CustomEvent_bPressed_3, bool K2Node_CustomEvent_bPressed_2, bool K2Node_CustomEvent_bPressed_1, bool K2Node_CustomEvent_bPressed, float CallFunc_K2_SetTimer_Time_ImplicitCast, float CallFunc_K2_SetTimer_Time_ImplicitCast_1, float CallFunc_K2_SetTimer_Time_ImplicitCast_2, float CallFunc_K2_SetTimer_Time_ImplicitCast_3, float CallFunc_K2_SetTimer_Time_ImplicitCast_4, double CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast, float* CallFunc_RetriggerableDelay_Duration_ImplicitCast);
};

}


